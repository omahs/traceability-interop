{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d26ceb0b-3adf-438f-a9b9-ed663e9c5c20",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fbcf603c-c51f-4096-9400-bc9c4becbd07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4f62046-5116-449f-b7a3-a3fb96f5bdfa",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19f8750a-fabf-4898-8736-46267c01ba40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b89fc967-a44c-4ece-89d3-abc937b28c8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "90789fbb-4237-4d02-8dd0-450f089b7cc3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "07a37537-9fdf-4e58-83e6-e2e71c50f97a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95c367d2-136b-4dd2-8752-91f15ad87a39",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30e8628e-d27f-4c8c-8738-1086ed6683c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f378be5e-ab28-4a87-93fd-6ca361a9634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b52ac960-bc16-45d6-8e49-07b1362d1cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e1ae69-4635-45bf-885b-137bd3b844ec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cb15ed-cbb9-4e73-a7fb-80df992aea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f5071e-2dcf-4dc5-a814-3dc87d5be8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6956699-d575-4128-8d0d-4882710a7751",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe68c866-50c2-4068-8cdc-e691496fbd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aafbb414-e748-4a37-8c06-64ebead3fa31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9921c857-027f-4a74-991e-54e26c5ef230",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86de344d-2b93-4cf7-b41d-c12bd6cb0dbe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315aedeb-695e-4758-9115-3090ee5a1620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7acde7bf-7b0e-4bb4-a771-77edd242b759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085e1617-90a8-459f-bf6e-fd3a7b162c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c110d4f8-92e7-41ce-a2ed-43c2478d173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf384b-b7b4-4c5b-849a-557b7733e1ca",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29981003-a6d5-4334-9791-7dd8ada57395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88d2b715-c807-4381-9c3e-550dd9759111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabd39c6-25c4-45b0-85c7-f82e300052b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6264fb35-a540-4b7c-80b2-4f63030ba944"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d487593-0f82-4bf4-8bd0-b8f8ff65dc48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a66efc9-e1c1-4e34-b54a-e6fe8eb8cdee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8adcdcc3-e362-408e-9bf9-b656fec9780d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "89a59f0f-1434-4695-ab38-dec079b9fdb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b13f908b-b304-4e37-9609-629f25469095",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d32bfbaf-9513-41d3-a8f3-f579148e06b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cae5e6bd-e868-4d57-929e-1b6ae95d99b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af4d8906-fdfe-4758-b8d5-29ee18e07486"
            }
          }
        ]
      },
      {
        "id": "62534bbc-9b2d-4667-ab28-57cf7e318f1d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "29c0a61a-ebf9-41e2-9beb-8747fd73bbde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd9a22eb-5153-4ddd-864c-aea14cc33403",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d594f27-cbd8-48ff-b073-a33f9fffc069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc585630-0fa3-464d-894b-2bef8437116d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7940962-b168-4b5b-bc09-1283f9e77607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916e2389-2421-466e-9504-a318d0a5fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459202f8-6243-4133-b117-ce45fa3bb9e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d9ed4-80a6-4432-9bb9-8c26fb8949a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4499e205-c722-44f1-8b0c-917520999216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c1b7a2-7847-47e7-a819-f98dd730566a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b1b84f-60b7-45c1-b6d3-e339e27e91f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47bcd85-2e1c-4107-b0cc-3e95dc2817af",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323ac998-ab56-406a-aef7-44ee7dadb67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bae2f78-da67-48d1-8ad5-1ddcfe9625fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4588fd-ef09-4695-ab89-d1df560eb0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8875d61e-3a66-459c-b3b1-732c93b29bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661614f3-099d-4c8c-b936-f5f865986278",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ef303c-23cf-44e6-9194-ed5e8f2d9f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a1b388-b050-4bbc-bbf1-58c6d44b94d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fef631-77bf-425e-8b71-c126e8a006d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ac9c5c-1d2a-4431-a3ce-e6613a702fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb92490-525b-4b56-9ea4-8b583a48f921",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543b1152-413a-433a-b720-011d6cc0042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ad3f01-92fd-4901-a1d5-65d9afe814c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fa77f9-8adc-4190-8da7-557224e85e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c365f56-dc86-4f91-b55e-b574c7da80d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671be0e8-e6bd-4419-b6e9-ec9dac6013be",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e98850-9352-4905-bfb3-a6b4b1dde95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a53f82-729f-430e-be69-71045fc5d708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eba6dbd-386c-4328-ad2c-4683cf40f725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc2a30e-0b1a-42d9-ae7a-cb93d519f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace814ee-d47d-4366-8833-70c4cae103c2",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b4a7c4-c22c-44eb-a7ae-bd14d10df392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dbc111-dd67-40ec-be9f-df5b3484c342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce0ade1-6282-4de7-9304-645172c6f8d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a173ff5-1d57-426c-9a37-bf1310378911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d75f56-face-4b0b-8f1c-30e1b4e21d82",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa235c11-ac4d-4a51-a938-5716e4b69232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f73ac5-d730-4790-a74b-f90093a96546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dce143-7b9d-454b-9e4c-a47df16f10e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ddfd26-4ebb-4559-bffc-d4e5b34a6c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f7e0e0-ff95-48dd-9470-b91735203ff3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51544a3-f40c-413d-a965-86635f895179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464ea592-aea7-48f8-9129-94831e962487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119e0cc5-98df-46b9-aa15-6a9c81f36d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc4f390-3a98-47e3-9531-c229d1c8929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2c1ba5-f471-40a1-8411-58e235e949e9",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6e6ab3-6064-43fa-b714-3042bdd1c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f3f1a8-5bc7-4abf-bc80-34320ff679a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82152d6-ba27-4c47-893a-88ac665249ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53af19d-ca8d-4b6c-b266-4db835fcf0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf29ae-4f79-47e4-a617-11bbed8edc47",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ff4d4-85fa-424b-97aa-4a81e1f930d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57e94d5-cb68-46ef-83d7-b138482de528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63245134-138c-4314-ada7-4006009053ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "da7f799d-6649-4644-ad3a-b5d5f702616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4bbb70-fbd2-4efb-a636-83d584361db4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4343d4-08b4-4de6-9513-2b94066819cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9244ca04-f3fd-40b2-8a5e-9259a495656c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61de271f-d534-444f-9e83-36d101e275e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "495adfcc-944f-4f89-b8d3-9633e56a7b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089456a4-c1d8-4923-a9b7-e169cfe3f5ee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa3ecc1-ec9a-4f63-9ba9-baa4d9a08a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b4058-6ebc-4411-89c8-1501dc9d3928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c59bbf2-1a8b-426e-a5bc-7e9ca2934d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a261058-965a-4859-ac71-1138d292c7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c6f81b-ed75-4689-a9a2-84229654dd04",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12779e5-0160-4500-b59c-da5a77ba5a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8970d3cd-f714-4572-9b87-53e3fe0868ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493e596b-0e6b-481f-bfd8-206eff7eab14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a4f652-9786-48f2-a35b-8cf1ae4ae7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c54e270-5978-4c5c-8c50-e2e0ea8ef7b1",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6c5518-2d83-4967-a827-d170d53567ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145c44cc-7b99-4590-9e1a-9aa08e5e4b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736a4ffc-e281-416f-b4e1-45d026fa28bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "a33f2621-3cea-4141-8b78-a2399ae46101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a395d01-bb98-4cab-a648-c42181663e8b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19babf7f-e94e-4c02-af7a-f15bf68185e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e99744c-f62f-457b-9f9c-f1b9a162c7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf4142-0271-4502-82f0-2e776a919119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "58cc78a9-3ba9-4ff1-9892-0f3d461a5eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d009ab4-2614-4892-8b57-f2e376cd83f3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0525b3-15fd-44e6-bbdc-b1e86419abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1e74b1-f0bb-4432-aaad-652d3a591129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cd5ddf-fc45-430f-833c-0a7d0aecb3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd4ac15-c5b9-4a89-a483-d50eab0bbf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244dedce-2427-4a84-a4e9-9857a9e9d587",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e205a85-b013-4eb0-bc0f-bfc04feb1fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db83658b-8904-4104-b1a6-bf05bdbd8959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2bb560-72f6-49c5-9458-7807aef00120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91fa6526-f17d-4078-aa1e-c6d89ac1da1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2869197d-047a-4c0b-8852-0dd9ca444071",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ed1b4f-eade-45c8-8dea-916563fdf505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19413f82-39c9-4d2e-8200-1abdc07fe13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8228e5f9-13f1-4e54-8994-a59fb85fe445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79735a8-d913-4a9a-b135-694f7cbb86fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeb91ce-6258-4b29-ad9d-1c38cabb6649",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe15c24-0cf1-44a3-9d1a-f83c1112072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93cd2dc-8f05-4ee7-b4ce-a57f9a5fc107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe14ccc-b582-4ad0-8fa4-0704a4fd0cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d047f053-9a76-44c4-80e4-696e9d2f7a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98774136-24f9-4e10-b558-ebc44e247d42",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a06ccf-adb7-428f-8049-1efe03676bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba726db3-d5d5-4059-bea6-348e3a4faacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d859d0a-c5dc-4bd7-9c7d-736b604476a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338819c6-e8d6-4970-9569-f33643374ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907e87e2-1b1c-402c-965e-1d7fc488c89d",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6314b274-8148-4f16-9c1f-d13f50080a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfd2915-9473-485d-9e7b-7a10849a25b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f82a183-77ca-4c37-bdf5-b5d8b0b050e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798a0410-859d-4a8c-9662-966638573690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b6269-ad37-46e1-875d-d6f5ee276417",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40acce78-2d25-43ab-a878-658c046734b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9804f5-e2af-49bf-9d8a-1aea85ee376d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a602242-58c5-4bef-8ae2-dec20e65f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175c974c-2854-4a5b-8b37-ba4658ef9751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b699308-72f2-4b24-9c78-83ed578602f5",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f7f6fe-fa65-4224-8dab-5090cc832fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5195e3-8a39-402e-9696-a731c4c066aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc447ffc-ca21-4bc6-adfd-7484b42d313b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002dd0ff-e974-4bf3-904f-6181ebe2add2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e376fb-047b-4b3b-b62a-6b0df7e83277",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70ff03b-9334-4a36-bbc9-9551d2dbce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8f7a2d-7c84-4566-ba27-b145b5f1391f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd53e9-df12-45f8-8f3b-632995b7df93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9031cfca-8a4a-4eac-966c-5de7e41a57b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ac0b03-0c80-4e3f-b5da-b63c87c9862f",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab14895a-71fb-4ea7-a08b-34d8f0c00a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ead5c1-6697-4305-bf7e-55b5a9b16f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec250dd-251c-45f0-8d9f-f18235f19c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5d75d8-c66d-4375-a096-c2c89f1b262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f668cb-a2cf-426b-b40c-569ae019e456",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecf4848-761e-4a89-9ced-b68cdf3dbffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7790c33b-e90d-4d6c-b249-3269ba26bfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c490c1-b413-4c6e-881f-c9cd9a8d69bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b29fd54-f68b-4408-8a21-36236b4d1dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a10f29-97c2-4517-8268-d48dbd999676",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0cb88f-c157-459c-a29b-d7e00b59d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e575885b-4270-462d-8832-62cd49d8817e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad514b1-3125-4c69-86f0-e071abf17706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e413b7ef-6a9e-4f0a-92a2-682d6ac2d825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c8d24d-7062-451c-9db4-cf115e0a1b3c",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b20813-fa2a-4dbf-b45e-3056ced233eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d500c5f-bbd8-48e0-b437-13b5f9e59095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0509a5d5-d58b-4560-8177-51bb0057e772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b298f5-28c8-438e-8a8d-7fa38c8831d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfa5297-22c8-4b93-ac33-cad5efab5950",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8124570-0cc4-4697-b62c-6040e2a158c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847d398f-d83d-46a7-95c7-fbf0c261efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e43c17-5ac7-40f5-89b0-6cef85f1ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8c887b-4f3f-420e-9d77-15e593734843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d5360-f305-4b0d-8691-9ccccbabfb0e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16b86f-ab75-49c8-8720-2c817d832945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1de1ec9a-a0ea-47f6-93af-fdac4356ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed65304-0250-40f8-b7a6-969ce42eabde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27fd305-1a2d-459b-87d5-b51f9207e6cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a7c253f-8ec4-430b-8b1a-c365bdf3f44d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6ef2420-b536-4c5a-952b-62d4b64ab218",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28e068-0660-49a8-ad91-b331ac0ea4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd70085c-0961-4918-a9b2-ebe5eb8f83bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce944060-c8c0-4103-a372-833c8f773bd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c56dbd40-70eb-47bd-a395-3ad5f929efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643f4747-5c46-42ab-ba5b-02fd366d1c67",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b8981a-b700-4313-972c-d7e9e47e04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50265fbd-ecb1-4f23-98df-e34d72cac9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523b91be-aa72-4105-815e-d6e72a46686b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fc22dc33-4db8-4106-804b-a8216804eb82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6f08ce8-523c-4f6c-8d26-ef3c0d80daf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10fdff52-642d-4433-bd3b-db4aa6e503bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea398d60-fef4-435f-8821-ffd344a80b2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f931032-89a2-4e22-91fa-bfe0c70a6795"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caed0f47-fb04-495b-a844-6c6158f9b542",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19bb83b5-9487-47e0-85a6-93ac1bb04135"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c9d33b6-5ffa-41df-881d-c59a1843f622",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1da77053-1545-45fe-a27e-6d9e9c54f28b"
                }
              }
            ]
          },
          {
            "id": "0d7b07b3-2675-4192-bbe7-e8294b032b96",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37a1bba4-2f7b-4a8e-a12a-05953abd73ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8de63bc8-d001-4a24-b9c9-ed4e706a3477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfae5a7b-acdc-49d2-a9ce-6dd55cd428bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7883261-75ef-49a3-b5dd-7b54d4633dd6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "9a4f5557-df97-45c7-9121-6e2e1cbe18eb"
                    }
                  }
                ]
              },
              {
                "id": "3ac1ca6f-291f-447c-be89-54a8f8a8c34c",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17af7329-cf91-4365-bd50-9715bc107629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e84e48de-1774-4775-8445-d1df11ccb546"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be732ece-87bb-49eb-8170-5994edeb3d66",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d0222749-36ad-4eec-9dd2-498e42c6ef6d"
                    }
                  }
                ]
              },
              {
                "id": "53eb0276-2f6a-4a99-9521-a07e3b6baa0d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3543b6f-4a10-497e-9ad6-3679f30da12c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c15c0ea1-289b-47cc-9014-d9caa2c63089"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95fd20c7-ce03-40ec-b539-004e0d2b452d",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "cb9599a4-d19c-4464-8235-b4531363759b"
                    }
                  }
                ]
              },
              {
                "id": "ecc29deb-0103-4020-ab46-35c91c19493e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68a89d45-c2ba-449f-a794-9b0ebb0b930f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac3d1cbf-b077-41c6-b8bd-f227bc801be9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6666c913-3e58-4239-8d4d-1ffc3c30d488",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "41e3d778-0268-4c27-a71c-15fd1cf5e065"
                    }
                  }
                ]
              },
              {
                "id": "1ef661c5-dbd2-4652-a6ed-7000d66e8ba7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "645ac837-eb21-4a43-86be-868b9236fd0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "432dd1de-8819-4d62-9032-9c6c247f320f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49d71d31-20c4-4520-bbb2-dc85d876bb04",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "9c2f02e7-0b92-402b-83c3-2ea836ed18eb"
                    }
                  }
                ]
              },
              {
                "id": "a303c6b6-a14f-4ec2-8aee-1b29c5877f09",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfa7826-6eb1-4783-a216-d847ddb2b267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d63583ff-6d0c-40e9-9214-62c1c06fd39e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c231e2-1c8a-424b-be7d-cee8c8754ffb",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "727ab637-1ee3-4581-9c9c-bb54d62a80c1"
                    }
                  }
                ]
              },
              {
                "id": "f356ede3-ad2c-4f4a-abff-fa375a7261eb",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "718fcdf4-4bd9-4b1c-8162-de9eb0b5d66e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8358860-8d64-46df-85d1-617ee24c3b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7965798b-6c11-4bf9-9509-f0c967f4887c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "6526e2d3-97ce-4864-9427-0b083b31e70a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5dee12c-f716-4bf7-b8c7-6d21fee82cc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b7cdf75-5241-4e14-9209-334660c3e4bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a092f3d9-7474-4d55-b4fb-5ddd6b34b39d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74d83c52-2567-4eb4-b41c-4aaedbc1efbd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05c834c1-5460-4ebc-b301-18ad4226c671",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "e7637e43-942c-4d83-9c5c-75ec7f0c1640"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6714774c-c16d-4267-9c54-89bec1fa487f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "626724e1-8c6f-474e-ac7d-e99fbf49dcb9"
            }
          }
        ]
      },
      {
        "id": "2de912da-cbea-479c-9d54-0b64495cc831",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "97517cc2-78c7-4c6e-8ddc-97ebe90eaa16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b53a9507-6da5-4917-bfee-3d730b4fe342",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9ce702c-f13c-45aa-bd0e-d07e392a4cf2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c844b02-21f2-49cf-8a91-cc301e56a095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185267a1-6e7f-4ed1-926e-669de2d92504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c868d3e-cd37-407e-a2b4-90285d8c265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2092020a-5f8c-4c4d-ab1e-99d89d0258d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fbce9b-a4f1-4c55-af17-ce789a4b9e04",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efb8f51-8bc6-44b6-8b67-faac9e1f9cfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "454c7e96-8336-4718-b7de-c6c9b0ae6ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48027f4c-2ca2-45fe-9af5-f368bcac9864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f7e5d5-8bee-482e-b395-e3913644af14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9101424-7eab-465b-a402-914583b8259e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "733f8638-7bef-4243-8544-4850a72dcd29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64654483-6aaf-4027-957e-b532b4de1d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bd47241-60f1-43fb-9681-efd73a3d1a7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2fbaaa8-846e-4420-b903-33f6b33f8d54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "935a02e7-6249-49ca-8d7a-8bdee60511a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "838dad44-1bd7-46f9-b7ea-cd30dac7669c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9200f52-73e9-45b4-a705-c0aee190dfd9"
            }
          }
        ]
      },
      {
        "id": "fe70785b-a63c-485c-b240-6496a3f2d0a6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c51c2bcf-e9f8-4b54-be18-e1189a765fbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1675f144-1615-45e5-bd8c-b05bf3fa404b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38f7f2c8-6b74-47b6-9b6f-c231b7f68649",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d147e2fd-a565-497c-a4e2-b0f054b2d9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64244d8-a858-443e-ace6-cd973f3b7637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ecf87-c794-4a9f-afcd-f452d27cbcd6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82864ed2-520e-4c99-a4b4-0ade245d4ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb07617-8d93-4f71-8f04-da7809a4a48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a793b7c-3a57-486e-bc75-38bf1d918cfe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185cc19b-7bd2-4d0e-a03c-d4b41b9901ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75d7c77-7f05-40b2-8358-910ecf24d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456692a3-49bc-4ccb-b69c-ca845fc034b2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4a6d48-b8a8-4e26-b1cd-e5cd78b5fb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6aa2b0-00ee-4f25-b8cd-180f416e2c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed28dd8a-8a81-4365-b551-2d3adb0a87c6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12936401-8d03-4e86-8c99-580032480442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de798c07-bf90-4790-a82d-aa9fecf100f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e14058-47cb-420e-83b6-b6995447bf01",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1860e034-a984-4d6b-8e1a-66aae429b8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc15bfb9-93af-4644-991b-b07ea6c9dbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7015dc-5c89-4649-839f-7b535266c7f0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1260b8d3-8bf8-41d2-be1e-984e47ae64e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c348c58-0d6c-47c8-b1da-5feaf636e48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0109fae1-d9de-465e-aff3-c706dc8c7c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0149fdfe-8970-4689-afb3-e82ab8d81dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57c89ad-aa46-47b0-b89e-ce2d0019cb79",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2d13a2-40c2-435c-998d-cd3e50f964ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d35347-9f84-492b-ac4c-618734eb71d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4b0707-6dfd-4dbb-bdf4-2e7aa9c798c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9544ea85-7b4d-4ff1-a6b2-c19b2a699d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbbb6c4-24d1-45d2-baef-821a3c2708f7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d77a17-cfe7-454e-bfea-809a24105b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e190b71-aae0-474b-9cf8-f9247763769a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8516a32e-9fd0-4a2a-9102-1b44893af489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7255d652-0f30-4c7c-9ad9-5c4fb7a2210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74cb74a-286a-43d1-a047-0415f8151af7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4087b98-1844-443b-8c32-29101c1c6eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9dc02d0-baf5-4da6-903e-bc22d8da4785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6074b-a20d-45dd-a96a-437c10a8d44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fdb5af-7802-41a9-8f5a-734d5e8ff3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b23800-b12d-4e74-8a90-aeab1f4723ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf0bf0e-6902-4c18-b788-75cb2aa4a3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc0bb61-d3ab-4382-94eb-0a44929f0c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be88b428-e687-46c8-88f6-72decec8336a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f348aa21-ea46-4c3d-8a1f-6ece8ccd4c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12444bda-0090-45ba-9481-9a43788f36ec",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f57b2e-6a39-4db9-99e4-1c355bc9c946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620f67cb-bbd4-4dd8-8a07-e733834dd347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e85f39-5b00-460e-9824-ac2f1507466e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbd9d1e-2a8d-44f0-aa6b-daed8f945705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f05b9d-e5ff-47e9-82ed-56e068a2debe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7c17a4-b246-477c-a12d-b11c85703d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607be447-430d-46a3-9aa9-84d3f040d322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf83c5fe-9600-4040-9aa4-c1575acad581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41405fc4-2be6-4914-9b99-4a346dc9a4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874f37b9-2376-4b9b-a363-ef5e3e05da9a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdb9db-ec00-402b-9614-a1a608ff508b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6528e5c9-f922-4d6e-93d2-962e27ba150e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dc2b67-24e4-4c8d-9ad1-41cda0a71982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a0d861-b5b7-433f-b31e-b86f0d4aadc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c4685b-dcf3-4010-b28f-5a3df273cd33",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eed8cb6-82bf-4893-89f7-68df85cfa481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8abbaeb-d759-4ba6-a277-f1ab3d2aa205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b3c682-e923-458a-91df-8217e2829d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8739e3-dc40-4d57-a8c1-1e8382421eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9e7f1-b97a-46b4-a9da-24deec211b2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98ab774-04d8-43a1-8fb6-365488deb454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18df0d24-f4ae-408c-b9db-8934b22bc5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ae9236-9662-4984-a718-612391a653da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112e79a8-7076-49f1-a6d0-06c4f28651c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf7dda-7d82-48e8-bbcf-a5e73746cfa4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36163bd2-a5bc-41f1-96ba-cbb73651a795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0766c1b8-5449-4dbb-aee1-57c30aa45c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb46dd4-1a20-4e2c-80d2-f600d002ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d82b98-5bb6-4c63-89e0-ff00a4982e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fef02b6-b1be-4c9a-b60d-c27ac32b45c4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f914a-32a5-4db2-a2e7-e75fa7ab900b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c92e0e-dc07-4291-aec0-3e30158d66c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8048c2b-1c2d-4ca3-b15c-4e6172f94a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c86fc4-9e7a-4062-8a82-42c6e919cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b97452b-7446-4c45-82d4-9f52b05f8a6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c6e24d-39dd-49c0-81fe-3729c54a0e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1a71fa-75d9-47bf-8942-f9eecd11e73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d126a4f-6667-42c2-823b-4c8eb04cbb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b532021b-9c0a-4a94-8219-db56b7120c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4401627f-d5df-4350-9071-fb594e4ece10",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59db99ac-ccb0-4bc8-af84-769102279fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba09dbd3-cbe7-48f1-9203-0390970dc962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb33120-0f84-4dce-98da-ccfa6c2ad242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3558fb-05ed-454a-b8f1-09b3c6063ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7454c8-707f-4b7e-8370-d18a31f9fe0d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14def56-c261-43ab-8c2a-7fb7151c987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71529fb-25e5-46aa-8d36-3e47f7fc67c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6d0e37-21fb-4ba2-9d7f-455a51595118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be61485d-aa8d-4293-9843-8590c1fd97e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5356065e-5b02-4f67-8b4c-298dae7cc46f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60824772-837c-44f5-b72d-9574061d08f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf897a5-1034-4ab7-9721-34f9baff6526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70dc644-79d7-4ee1-b817-c238ff41311d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0043cfd-e87f-4cbd-a11e-98e0a58b3091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e79837f-29ce-4d74-9a03-f71eebc9a7d2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed6c26-c0af-4bcf-bbf4-a983cdceeaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e64506-f39e-4215-8488-c28a11a6f668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0c40d5-2075-44e2-af79-b453e25da52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2340bb4e-67c8-46fe-83e5-7582cfed6316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde4207-b7a3-478b-a41a-0bb141d4e419",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a342a9f1-48f0-431a-9798-8889c83c0dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9a3e7a-c836-427d-8a25-25d1903c91c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c0a798-d4cf-4887-9fcd-423cfa5d1b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1b1f38-44ec-4613-863a-93ef43ff020e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02ca931-66cc-489f-b425-e0989c167a48",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58970f6-93f4-4880-bd6c-615986b097c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6abdcda-64e1-4f02-b571-9dcbae93082c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f57f5-18cb-4211-bb95-9de05c1488a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0fbc58-e538-46c1-a4e8-97a57557d676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb92b57-3439-43d0-a938-f7185c84060a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa8a23-cb14-46b4-8d44-b13058f12352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82e46de-ab17-4a87-8d44-21c29568c51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc5fa3-2e51-4769-8470-55aff3ef6737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9df5a60-6663-4f09-b99c-18a5653eb2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f12ec-2cd0-40da-bada-8fb1fa61e9fd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b3934d-8431-418e-bade-f79a3a170060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e790b7-cfb1-4961-b925-bde7b82978f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd18824b-a153-4f2e-9284-a4085a100e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc6aeac-d6b4-48c3-a4da-7a847e38e823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c7cd20-c358-4990-86e4-799dc289ca5a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f230eee-7469-471f-a362-9a191c60a577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cc8487-7493-4b0e-936c-f2c4004abb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba844c-6d2c-4ac8-a6dd-146b517177a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35424147-702d-4701-9e55-692c560057c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ae668c-2a3a-4174-8d92-6ddf4ab6d594",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4881cf5b-7ef4-4f36-ad96-2d286a01b8e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574b025d-c30e-41f5-b530-0be4bd7f5f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f263df20-8bdf-41a2-8253-a7c2169910d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef996e0-f877-43cb-8a30-61a0c59281a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc994e-f23b-4c99-a740-85e7bcad85bd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e17add-937f-4370-b454-564f017e1c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c19c6d4-6ae8-427c-bf5b-a25fe2d70b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c51a90-7113-41ff-b415-eaeadfb70be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8c8ce2-852f-4397-8c0d-da9bb16cae4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224e9c95-1e9f-4143-a826-d602b0656f58",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba5d6db-b152-4a33-beb7-a8911baa6290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52d9bac-a8e8-440f-9d70-403b0cdbb5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d194efb-d890-43b2-a50a-291459fd9450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d441bd28-ea3a-44bd-b806-b0a9257e87ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fbda56-8010-4c0c-b8f8-b16a55e3ebb0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b7031c-516e-4d41-a985-bc13256e9a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758dcad1-5a24-4314-a9e9-0495c009d70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee5094-4628-4759-98c2-7a308707c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac43d87-8cc0-4694-9820-6c8b28c8dd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b91c79d-3b2c-4969-9ac8-fbfb514da62a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d15cf8-510a-4cbf-8349-044eb85099fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1efe34a-981f-4eb3-b7ea-134cd4820563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae77d38-c567-4d07-bed3-3a3a7ccc2b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3634af5e-f477-4099-942c-a1712e09ccf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4765fc64-0753-4f1b-98e8-cebac4b2c00c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49282f63-e741-4a5b-ad51-7aa24d805de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347622de-47c4-4405-b132-e708af256226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741afd55-f3dd-4d22-8891-6bc14fbb92dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232a55c8-c36d-4433-ad9b-569009a4f3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b89543-f125-4a14-b44a-035c9ab9a90d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b4fb2d-1fe3-49f5-8351-f37e50e60882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9498d3-6387-4157-89b7-cd82b63f873c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7857b8eb-ab60-4d49-b2f4-203698b3f3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84530d10-3fe7-48e7-9588-6192b1aff905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bb0005-e0a6-4d28-b3ed-9b0cce89a14f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89653ef4-050a-4019-84b7-2348afc443ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cd3313-daf0-4793-a343-ac8a443a1ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41fada6-c8d5-4828-b4f6-3d5269d50287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e3b8d6-1235-46ca-a4ed-f3cbfb608447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f641d021-8ee6-43c4-8c14-82d3d5836b87",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d144b7a-98d5-40ad-8002-79b0ab4c4c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85e466f-a929-4d91-bad9-675b9e127d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7253e92-2476-4b88-af0d-f3b9579139cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962e49f8-fa42-4b3c-8e0b-de00c0c7caf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c4102d-447b-4477-8c65-807b50fc3391",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2845f50c-d5fb-4dda-ba23-7ce70f0d5779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687d4480-a0ca-4e6b-a30f-9ac12be03b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f603b25-a550-4e7c-a078-dab15243fbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaef6fce-c6e2-4e60-a209-0cb31a70b7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ba48ee-1f16-4c47-a120-88bd0a72f4f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bef46ba-d664-429d-89b5-b6f6b7f8c78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0137acff-885f-4ed0-9f45-ade6331edcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08a7abb-17c0-42b1-af3c-ca1a32190de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6cf83d-3e72-44b1-a942-8702772597ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c53a6-6377-43d7-b436-85d9b1553574",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9082f5c-5886-4b74-9193-713e2854ae53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ab330c-a5fd-41f4-9f35-98cc043e63fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e90415-d93b-4172-80fd-53906ab49d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8965c2-4d01-4c3d-9905-7452e123827c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d54dc71-9754-425b-83fc-7831037717af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a283d6f-d277-4977-8a1d-128999e6ec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ca1f3-a55c-4440-b3c7-d75b43ba70df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291b142-fad7-45db-a37c-2aef86d74932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714da0bb-1e00-4e84-91a4-12080cc34e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5d0668-ec5d-41d1-9e6e-14afcde4a05b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01fe3c0-0d4a-44dc-9d04-73cd7c5e3a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79750f4e-835c-4a03-8d37-f5059e717826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede231aa-3198-41c1-8964-16de628a88e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcb4cc3-b56d-45c2-ac91-ce00bde4e015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bb6ace-355c-4baa-a5c8-c19e1ae4ebb0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07007de1-5e7d-41f7-829b-b6ad5576a9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856fe218-dbd3-4549-98ad-9907e26fe90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9e0020-c4b4-41d7-b2a8-5d7cf72937b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f5f174-df7c-40e1-9819-630bf2955fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67350c64-28f5-44b1-848e-8f616eb23197",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b7b74d-cb31-4138-a752-1b0b7689da99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40445d3-e8e9-4fbc-86be-97a84053f506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a6689b-b258-490d-b12e-020cecc821c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796f05f2-e838-4c87-984b-7a41b328baf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9999a46d-e766-4b5a-baf0-e8796032e88f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d994645-8cb8-49f3-9a27-4547ea5bd083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c8fbe8-c4db-4470-9b5c-a3c5763cbd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3117e62d-3b8f-4d1f-8fc0-4a4cdbe25292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d3ce5d-553e-4b46-98fa-96e0d7934096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c19e77-0e01-43af-8242-1d6c9be54509",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce7faaa-9799-4b35-bd33-f54494ca462a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab098f0-b5f6-42df-9b69-f6c19279fc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0192aed-1700-4077-8e95-cb9f5e2b0725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baece20-4f99-4861-86b9-f5256e8e2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c039ca-a6b9-4109-95a4-6647847e744c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0ff19c-7d11-4d02-980a-a47b4998b77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642ea87a-671c-4a29-85dc-2bdc1862a985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091bd8b8-960c-4e08-8205-6cee9e821da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9aa67a-d7b9-4d51-93ed-8102a53987fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d6bd85-4a83-4a6b-a1f3-92334b66f3d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f1288e-4314-4734-9c8f-9f6b5f8e182d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c11e09-dd2e-411e-a7c4-a22f727a0cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1152f6-bd2a-46f8-b277-5095c01d5382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6ca39a-8999-474e-bd40-95d75c0dcc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b03eae-92a9-422f-8a82-c4894b87e748",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfede09-e36a-4061-99bb-f12fc1272bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4778d8-4200-43df-9095-85a74054784c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984e693d-e704-4780-a5bd-b675774dd9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d06dec-069f-4971-84bb-c73b87d8178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f06ef-ede5-4dcb-ad20-c81242c3c7d2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a0144-e9df-41a6-829d-d831bd98b623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f08dd5-e47c-4e49-aea3-cba92e0605c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2901891a-8e4d-41cf-8386-e2fd6b1ea729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f872db-ae14-46dd-8d97-5250aeefe083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d86a7d3-d1bc-406f-88a1-8a6f41e760b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9051b0-633d-4b07-99e1-0890e85a4c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be84773-a7cb-46cf-a95d-605363e4dda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382af51-cee8-435c-8405-9a053bddd93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b769d66-ac34-4c0e-9370-a28ae6e9d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ead6c45-e08d-4ffe-ac70-75c3feca3655",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c9f943-6f0e-440e-a5df-99c1ac832a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796c839d-4bb7-4e42-81e8-e60b6f1530fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c673be-0741-4e3e-9bd1-3e71af33790b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dbc0a2-cd06-43eb-87df-65637e54237e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cef630-66d5-4f47-a5ad-65a5ff1e377e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b7369a-6e5c-4c6a-a771-0aed9df3e0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4432ce3d-975d-4017-802b-7669da27c53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cb9db1-06ee-4bdb-b21a-586b66e115c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24706d70-38ef-43d7-bb99-b29440e4f1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b9abb-acfe-499a-b0c5-d2a0a57b6298",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a4d206-9c54-4fdc-9a44-5f49a52838b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35bfcc9-5808-4c4e-9d47-3dde6099cacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609e7b3a-383b-44a7-bdc4-fe2bb929c25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e35d3a-5608-417f-a056-c131abd68e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb1c09d-48d9-4739-a2f9-cb175ff84736",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204808f0-3c64-49a8-b44b-ef300c0f3aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f047af-1789-459f-a954-46e1bcb0fbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d32d53-58a5-4dab-9496-9c2e2060f254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894e8ae9-0b42-457b-89fa-1bc6961420a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5201ff-95c5-4a3d-85e2-8d3f43a782a2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ba46d5-b4d5-40f3-a5d0-7eaccffb888e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526ac20f-b5dc-46d7-a2c0-6a7cfc7600df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f62b0-6fe0-44d6-99f1-2620ea7f9aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca64e05-6799-45bd-999c-4e2410b98622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d063426c-be4f-4d8b-8f08-3b73232a7f54",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24cc413-01b6-410e-8a41-d5f84a9dae94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec746f5-977f-4b3b-b558-7f3f47fc03fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fc9261-791b-43b0-be5f-8d4603f87078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f43c1af-af17-42c1-803c-2a978e48f548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5183f35f-aeff-430e-821c-368b49fac4d8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d8d4ca-87a8-4de9-af72-bb52ff73fe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef08022b-45fb-46f9-ac94-e57bcf37e455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d5302e-6893-48e5-b157-a02e3aaa730f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05afd102-cd66-4aa2-860e-c6df3cb8c5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa5c1a-7b59-4686-a188-78ba2c64efdf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9018bc-c1f5-40ad-886e-74656b7b30b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4019c056-755b-4a41-8bd9-1498e7166991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7db91-719a-406c-9b7d-357d46ed06e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf160814-9f3b-4c8a-8226-cf1260629454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ad0609-89b9-4e64-8a63-b04bef283198",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c6d5b-31a3-41a7-8519-1e95d8bcb111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6addb780-62e0-47f5-8865-ccfe384dd3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b81dd87-2cff-48ec-bfcb-e95d5f95886c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f4b262-0ba8-44a3-a8b7-0c12b2fb6af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60281a2-05e8-4f41-b436-63fc954f1fb2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d7260b-583a-4068-8768-4d0786fec241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf84ece-2cdb-4e95-9a79-d2637207c119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c986c3-5ef0-4194-9d7a-42269e3c6937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f265f38-61bf-4862-834e-8f4cd57ce76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e1eb2-b8fa-4d07-8c87-c553a39aeb85",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6186f6-c7e3-429d-a8fc-74910f384d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334a4751-a837-4e00-acab-1b79cc9fd52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80210ab-0364-471f-8bb8-315334485e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53848e5b-bb50-40d0-86e9-a2d3457c1049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1236336b-4d13-4871-bfd6-4fe07b0227e9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f050906-1819-4938-9064-e0113a61e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7af6ff2-0998-46ce-98e5-379dae8acf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6aaaf0-d2f5-4dfc-a6ff-0e913ad0d147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c107005-2457-43d2-9ee5-5113b62658c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38aa2ef6-e226-4560-a51b-d721a3a75f0e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a71fdb-0a26-4aba-856d-e9c3cf10ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3397c40-881c-4762-be64-1d3811d502d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e526f4b1-706a-4757-be0c-08371b4a486a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894cb4f8-0e0a-42ab-be13-1cb11f1e1458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a25e46-7d08-404f-8dc9-6ebbb0608ac5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da227f-03c2-48c0-a283-41026715e0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bf1a57-ace0-40dc-aa59-26fbd053758c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a4c840-cef0-4883-bf00-39871462140a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2f8ade-6f29-4144-bcdf-e0550b174937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d43676-eb33-441a-a341-4a0486006c96",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da74cb5-2621-4736-a41b-9e57e23b103d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c795751b-5112-4658-b78e-88e3826a7654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afceb326-48d7-4ac7-b4ff-3e5272aafe3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a035878-970c-43a9-86a1-8b4d3da11b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1235cfa-f320-4752-8a6f-2da9b9bd22a9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465cb260-4446-419e-8cc5-537c5838871b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555c07e9-d603-4cfe-9279-91750e04d390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07f96a2-6cfd-4668-bd31-ec661a4f5d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b26b43-6e7c-4c4f-8703-b673a06226fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f39f02-68fa-4f13-b2cf-1e85cd18b382",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9977910e-5824-45fd-a441-4541aa4b79ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3fc442a-ec0d-4b3b-8d0e-1740957ceecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708289e-4f8f-448f-8056-e45ddf5e1dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13139768-2f7f-4d39-b516-fc99706fe5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3068c24-c5cf-417d-8645-4133d737b899",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fcb3a2-d0f3-4244-aaa6-7d18e7f5ad27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdadd98e-a935-4e9d-9785-b5ef90801463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6e7fd4-eefc-4d68-af7b-0d761b2565f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c53b8ef-2e2c-4fb3-a81f-e601f4979723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e13ad2-36f8-4bd2-853c-f3742256bda8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0932a93-8610-4e90-ab59-6e410db088a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28c1047-855d-4385-84c7-33a7b8be1934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5335529c-cdb3-4ef4-a945-706f358f1ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70701166-98f0-460b-be1e-7589242f866a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf130f0-eaa0-47d2-b2e6-a47f6a3b2c64",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdf27aa-265d-4951-b498-57810cbd29ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a40a818-5d0b-4e7d-81c4-3f638c6e4c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b24f5ee-8be3-4668-a578-153c859b82fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bef16c-adf4-4c0f-85ad-fcc43ea25e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b52f081-72c9-4c49-9c86-c9f03c8fe2a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff256323-525b-4a94-a061-b1c2741ce234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8f5b1b-0707-4f3a-bef4-e81e6618fa4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfe86c5-da49-4334-a95f-539d9c6a9c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850f1d23-40e1-452b-8d6a-385079e7c999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c8530d-8326-4b42-a52d-356cd1a99518",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4725992d-2f58-44c6-9131-bced79a0e74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15b1623-852a-4be7-bf05-909f8fb620e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8753a81a-7a28-4cd0-8036-33a582bd9664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc84e3b5-dd0f-41ec-9756-7e1a0b3c2944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c0087-f1b0-4b32-8428-7ecce33c637c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111685a-0cce-412c-a505-09a7f12194e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9428d45-7d9e-4aef-8818-f515909ee8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45007bbe-cae0-4980-9c0c-341e3127b0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dd3b84-e654-43d7-b67a-0ecd8deeaac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c16cc-6c52-4311-b019-73485d2a51fd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1c75be-cd1b-4095-849e-7764d7a8ff48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882f53d0-d6b9-45c3-ab6b-fec22c6a1682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a46e2f6-50a7-410b-81f3-a827b194df92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b045f604-07af-4fff-84f9-64fd9bc7ff23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bde96f-3dfa-4494-a237-668bd11ca518",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f986df9a-d9ca-4c99-8b3f-22a975feb984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9aa5c2-be54-4df4-ac8f-bbabbdce92f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8676d44-cbe7-49be-9298-5a4083348f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb723264-e1a4-4358-a848-9171d19293cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2577769e-f246-4ecd-a55b-eb5be2934ed9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a61aa5c-db9e-4404-9fae-460cd7380c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9359cb31-b095-48c3-afca-662d61d24ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdae71b-86d0-4544-a4b3-6babb7347ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d3d9fb-7d46-42c2-8ae0-b5cb3fd7ebc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9c24ad-5670-47d9-b2f7-d927c7a0ac9b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c982e984-ae16-4982-86e2-c8a5530d051a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6312e92-9bdc-4949-9ebd-c1faa17eddb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e673c9c-d629-401c-a896-0d803e63659d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5451ef8-b063-4ecc-b045-996d7f4ecb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9d3167-58d2-443d-b153-6f6db7fc12e8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eba16f-607f-4ccf-8420-1a05937bc1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bbaf33-77da-43b0-910c-3b137d57e3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2406235-1e13-46ee-8f1f-1d41877039e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1851104-5460-42ae-95e5-a62e30ff767f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77422243-1549-485f-b5ff-8ab1fab228fd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b5188a-d7bd-4769-a9b3-4f8d8e14804f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b61638f2-f319-4674-acfc-a3292a9b09d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e9167-2d2b-4690-87ff-de11d1f2f8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bb6f7f-1520-48aa-b66a-7d0c15d24ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076c67d3-dc5e-4968-a539-f316c181ffb8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accdccf4-d90c-449e-99c6-071745743d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50d5a81-6ac3-430d-aa0d-c3c33162ef52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b42543-b9fc-4fe8-9743-33ea4b5eb2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3548138e-822a-402c-8323-2b0cf3132aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adba5c6-a152-409a-83eb-b0fb9165e068",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d24578-91ba-492a-baa5-3e27a84442b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e9cf4c-6cee-4485-bff3-5d045a8eba5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc5f263-ca70-486a-ad5c-0874ce40dc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6162073-282b-4b40-b5fc-d80de0e07bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195f17a-f066-43d0-a275-c5e38fb08604",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ffad22-69e3-416a-97fb-c71e17c79730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ede640-2f58-41e9-a744-f014fe90fb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bca6e4-61c1-47b2-8e8c-0accd6835590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd70e7c-33a0-49c0-8298-a6285c0ca3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2827da62-2d96-49d7-8bf9-5632748e262b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c8869a-4e34-4b29-ac93-0e5f430c70c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2588b17e-a279-4381-a765-7f797507acf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cbcc3f-c9b6-447c-a4b2-bbfe5e7238c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d8418e-9f77-4bec-b0a3-c1ec488a8174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560febc6-cabc-4028-90c8-4085b7bb2b2e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68c2c1a-6278-4f01-9e67-3baac7c6faec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f315d6e3-d090-4390-984d-991b6a76149a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd48726-4771-4681-abbc-808c648ff362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e795f55-07c0-4f62-b60d-bd64063f9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f61307-98ac-4cb5-91cc-8a6f5f976755",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c635368-3b9d-4936-ae3e-129414585e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5805c975-4b5a-41e9-a302-4a54dbfef5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db13a0a4-d036-47b1-93b7-4ae4815a66eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfc1199-0470-4203-9604-db2c58dce518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47813cdd-a639-4920-8027-cd0152c389d2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0f844a-9781-4ea7-a9a9-230e6dd7f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eef9ffe-cfe0-4f6e-9309-98688939a600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ba03ed-42a7-4938-8377-9fb89dba9a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1c6a66-bcdb-44a5-b92e-c36e22ab6079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16236731-1866-48ed-8502-dcbbda2ea0d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c06e4a-1590-4eee-afac-8fb7accc00e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f9837d-7692-45e9-9875-f6f76745c87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d7af1-3e63-4b32-90b5-6908e9afea2b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f360a4e-a8a1-4a05-ba69-8111d072b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ae62cf-09ed-40e5-9205-ec80e365b13d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ef6389-98c4-4357-83d2-f596a59d5996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6badaa-31f2-428a-b5b7-1a7b275c07ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054a1d61-dca8-4031-8f23-3ff330a71e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f4ef77-cce7-4127-8fca-7011d3564c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5add32d8-a50c-49ce-bdfa-3a2b32d357a0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba77977-e017-48cf-a13d-e89eb1e120ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d87005d-f344-4ed4-a026-1a49a93865c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62452212-dac4-41ac-9fa6-5cc61155eb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88c7e96-3882-4977-a200-31efca3867e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c50bc5-8056-4797-aad8-49f592c98ba2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a090f7-f6e8-43ea-aa8b-f205f6b19244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95df9501-7565-4f79-b436-36e3f6e53b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efef41b0-2ee4-4030-b360-f15fe5c06c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5d1ac3-d82c-43ab-b39b-986f81c92b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac6201f-d037-4a29-a98f-05ea90bea706",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc34877e-287d-46db-81a0-9fbe3f423a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3b5880a-d1e0-4fc6-a154-d0fe588d2622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c197cb-2a78-4fcd-864b-85bb5cb6e7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14907071-f594-4fd2-89d5-ec7628b81492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3071aae-be18-4f46-a629-8ddfa298381f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cdc72f-e5d5-4065-abcb-68c88f3dcf4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf80aec-a35b-4434-a2bd-4b61f28fe411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a9d54b-dffb-45be-920d-e2b13762150e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e857c21-40af-4249-ad7c-97df5fe9285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dfd0ca-6dbf-4774-97c4-0ec73974b1eb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e71911c-0482-4e4f-a93c-58c63a35d938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e40352c-ac72-4bd4-853d-34c78986d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98dceaa-cc8f-461c-a2bf-386deff7342d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69962816-c710-4c19-80c4-e882b2407346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dea0f15-d3ad-47a2-b036-449cf8d24c9c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7169ffa0-18ab-4d9b-b212-3df90022255e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8fb810-c465-4b32-916b-de3a6d003efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a36b4a-c256-4efd-9dab-d79ebc3af23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda8f1cc-a446-4bde-a9fe-4d6a3b743619"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7db8433d-329c-4aa3-9ec2-14a42a75de94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50fb6541-6a3f-495a-a161-43f5c9a9e6f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "129a435b-6dd4-4b81-a8b5-742b236dc545",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c8c58d3-39b2-47d2-8f7a-d666c69ed241"
                    }
                  }
                ]
              },
              {
                "id": "b0443b0f-4ce6-45da-8de9-b82a67df08a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec93338-a8d0-456f-8738-41f8ca909dc4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f60aa2-c327-429b-a43c-2703d9d49f70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c821a400-7341-4e19-adc2-a48e6ace65d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239f81c5-6d72-4137-b88c-3669a08adb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0519b48b-e4e2-4271-ac8e-30c2e529b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaabf39a-2710-4534-b7b2-ae4d8b561f54",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a34993-ab5b-4823-9ee5-f1bc578f29fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "766c20ac-63ac-44e5-a244-360a38f663ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd063cea-dd2d-498b-b4bd-17685f4a8df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8763c9a6-a80f-4fca-b885-dc280dccb78c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "026b9159-3a3f-4799-972d-40f28ad96ba8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2355841c-125a-46f9-9b60-c11ed863a949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb5a5d26-1193-4b91-9591-65d7897046fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2bcc3b5-c09e-4791-9d82-3ec3a1f505b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4432774-f0e9-428f-9951-9b1a822669e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "629a2785-2be5-49c6-9e09-c158eb771e51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02b4b30a-67c8-4e84-889d-d5aa5725653f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b801f032-dbb1-4e39-8005-fd1ebbf3da0a"
            }
          }
        ]
      },
      {
        "id": "74b01407-c822-4d89-9af0-5b11555758af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "95c60e6e-53ed-413e-b6f7-f47493cbb218",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58866bb1-1283-407b-849f-7ab73aeb0112",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ede7407e-7180-40df-ab1d-53838a08b8fd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb850d34-3dee-4e74-ba70-e2277d2b7327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a41d5a1-cfe2-486e-8840-396d8627172c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c800b1-c22e-4ed8-8b12-d9517d8d190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38e0aa52-33c4-485d-86fa-56e7b2ea02bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7514f111-415b-49ce-923d-b45e5e90f4ea",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4f3d37-f9b4-4175-80c0-3396398ec535",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "dd8df2df-5385-4e86-bd7d-a2fb1b3dcb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c59e9b-6c90-4206-822d-5c368fa696f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70a246a9-3f71-4e30-ade2-572bb1f6c8ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d7f278-ee30-4bd2-9df2-4f13a2d84bdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44f1c6ae-df2a-4538-8f56-aef8ed657c31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e85df334-aec4-4493-bf8f-f3a0127d27d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae5ff6ae-1403-4961-be8e-bc695e592cb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a87247c-24c5-4e75-bed5-f8a48a330c0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "ce6bf954-2de5-49e7-9120-6dda773d9bba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "860679b0-96c4-45be-8a55-e2309ddfcf50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f56abb1-6559-44be-be6e-854f97d2a384"
            }
          }
        ]
      },
      {
        "id": "40670cd2-449f-4253-8e85-5b1b6fb61a3e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2d218d28-897d-4ad3-a6aa-3999aa238616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf8cfcf3-663b-4d48-ad52-ecc6adfc5eb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d4118ef-15ec-4bf8-8311-84f89689526e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313f7c8e-4680-4cc0-9cb9-c8e2a852fd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e16693-291f-4140-ae76-96d09baff5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34983398-2e7d-40e1-95da-5c6c91169141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2107f1f4-2857-484c-a741-511927b7dddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2e3ea2-39f5-4571-b562-17b26a07389e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4ae473-8a23-4e31-87b4-b4bb36229df1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "596eeb3d-ef1f-4c2e-bfd3-55ac6caae643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5615f2-b120-47c6-a16e-8afd8deb0774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04fc6a02-8233-4cc0-92ff-ea665245f1d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04663eae-dcfc-4d29-9436-82ad2dbbd211",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc81c0a-cbe6-432f-9267-e5360aa465a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fcbaba5-e8f5-4626-8c25-dc859dfa0f26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62973eca-bbdd-40b3-9afb-2f308f28e658"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71820091-e1a7-4fe3-a1bc-d62b31009d6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "a5c5e1ae-6caa-44f3-8504-e4b1c80092c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8867f1db-a6f0-4e40-9b7e-caaf737a1ed0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73cd326e-3687-4499-b6f2-fbab15d08bfd"
            }
          }
        ]
      },
      {
        "id": "ffee490d-5996-469a-8751-7a6c82f0c4cc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3ff1618b-de43-4dee-bb82-bd09f18cfbe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f8b32a1-5e91-4cc0-bb34-a3594923c94d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df7d4129-47a3-447f-b736-4a4af21b5d07",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27596987-b278-479f-b4b4-635ac15976fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70e5507-7d35-4534-9201-6f02906963e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcc47cf-6b4f-4e69-a387-e98906d48556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ee9204-a9b6-471e-afc6-bbae25b2d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e76ec6c-ad63-4758-bbfd-74f616b888a9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9285ed16-3ac5-4549-a155-4e3b8ce8b663",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6199de6d-648d-44e9-a97a-e02d3b1a6922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127c3b11-579d-4ce0-9eec-032833bc67e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be7dbc53-2df0-4c3a-bff7-dc4e8aa288c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec1c3ad8-d6ff-4490-83dc-27b0639eb64c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93a13f98-aca7-4bd3-b5d0-052857ae90ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce178be3-dff0-4e1f-9949-1d6486161e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72d5d55f-c80b-440f-aa81-460f0b7c9b59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "672378f9-bf35-4186-88f5-b4dc5f65a1ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "2ce77636-6bc9-4b62-bafb-d28b59f25bc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c5cfd96-b258-4215-9b15-357e927c1607",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7eb8d9a1-b613-4f39-9f0e-26ab6bb2e691"
            }
          }
        ]
      },
      {
        "id": "14cd5761-f748-4e19-9563-7d2b278560ae",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "2131d416-b90b-49e4-b407-a9a3f1dc32ad",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 85.40999999999997,
      "responseMin": 30,
      "responseMax": 770,
      "responseSd": 108.30157847418478,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664240237509,
      "completed": 1664240261337
    },
    "executions": [
      {
        "id": "c4f62046-5116-449f-b7a3-a3fb96f5bdfa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "98c423c8-186b-4e24-b8dc-fc65d6a7e22d",
          "httpRequestId": "0bbfa9ba-8d07-403d-a0c1-c6120c6031c5"
        },
        "item": {
          "id": "c4f62046-5116-449f-b7a3-a3fb96f5bdfa",
          "name": "did_json"
        },
        "response": {
          "id": "a633ba6b-0951-4df4-9894-a1e9a59bcb7b",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "30e8628e-d27f-4c8c-8738-1086ed6683c6",
        "cursor": {
          "ref": "c1e2a24d-341d-42eb-94d2-2cf257e97c17",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dea61ab4-df11-4a71-b55a-d4e76feb5f7a"
        },
        "item": {
          "id": "30e8628e-d27f-4c8c-8738-1086ed6683c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "a9360419-b719-44ac-b8d7-3453a470d222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e8628e-d27f-4c8c-8738-1086ed6683c6",
        "cursor": {
          "ref": "c1e2a24d-341d-42eb-94d2-2cf257e97c17",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dea61ab4-df11-4a71-b55a-d4e76feb5f7a"
        },
        "item": {
          "id": "30e8628e-d27f-4c8c-8738-1086ed6683c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "a9360419-b719-44ac-b8d7-3453a470d222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e1ae69-4635-45bf-885b-137bd3b844ec",
        "cursor": {
          "ref": "7a3f7451-47f0-42a9-ba54-655d0a8dcbff",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ccbe8e61-7f2f-478f-8c49-ab417c5477bf"
        },
        "item": {
          "id": "85e1ae69-4635-45bf-885b-137bd3b844ec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "45fa0389-f528-4388-bb56-51b6be878a39",
          "status": "Not Found",
          "code": 404,
          "responseTime": 129,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6956699-d575-4128-8d0d-4882710a7751",
        "cursor": {
          "ref": "205f58a2-8e64-4c73-a1ca-69dfd87153a7",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c826b30a-0300-4670-b676-aacc59780104"
        },
        "item": {
          "id": "d6956699-d575-4128-8d0d-4882710a7751",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e81ef4ba-36b7-4154-bbee-455f2eb93d59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de344d-2b93-4cf7-b41d-c12bd6cb0dbe",
        "cursor": {
          "ref": "5478698b-bb65-4f2c-ae26-7fe4d6751494",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c0275c6-d44c-4b2b-82e7-c892b1e96334"
        },
        "item": {
          "id": "86de344d-2b93-4cf7-b41d-c12bd6cb0dbe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "acaf842b-2b3e-4640-b5f3-27184a811e63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf384b-b7b4-4c5b-849a-557b7733e1ca",
        "cursor": {
          "ref": "e4a7c9f9-a959-4b13-bca0-affbb4fe5397",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff33600e-29f1-4c6f-aea2-676b30e9935d"
        },
        "item": {
          "id": "0bcf384b-b7b4-4c5b-849a-557b7733e1ca",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a75fa5bf-1559-4385-9706-68a4f61c968f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf384b-b7b4-4c5b-849a-557b7733e1ca",
        "cursor": {
          "ref": "e4a7c9f9-a959-4b13-bca0-affbb4fe5397",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff33600e-29f1-4c6f-aea2-676b30e9935d"
        },
        "item": {
          "id": "0bcf384b-b7b4-4c5b-849a-557b7733e1ca",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a75fa5bf-1559-4385-9706-68a4f61c968f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a66efc9-e1c1-4e34-b54a-e6fe8eb8cdee",
        "cursor": {
          "ref": "972a6b17-5274-420b-b8be-417dd84da9eb",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7a8f3f5-7434-4a0d-82c0-f5ec2e271bf1"
        },
        "item": {
          "id": "6a66efc9-e1c1-4e34-b54a-e6fe8eb8cdee",
          "name": "identifiers"
        },
        "response": {
          "id": "51f2dc14-2a93-471b-be0e-f3f3d6f296a1",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
        "cursor": {
          "ref": "ca466611-8a4f-4bd5-8d8f-c29822e2da46",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ab6b49f-40da-4e1f-b9a5-30baa8896ba9"
        },
        "item": {
          "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ced3efe6-688b-4d64-a2e2-0fe5352e5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
        "cursor": {
          "ref": "ca466611-8a4f-4bd5-8d8f-c29822e2da46",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ab6b49f-40da-4e1f-b9a5-30baa8896ba9"
        },
        "item": {
          "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ced3efe6-688b-4d64-a2e2-0fe5352e5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
        "cursor": {
          "ref": "ca466611-8a4f-4bd5-8d8f-c29822e2da46",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ab6b49f-40da-4e1f-b9a5-30baa8896ba9"
        },
        "item": {
          "id": "7ef47920-3318-4443-bdb6-6c4e3281b18e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ced3efe6-688b-4d64-a2e2-0fe5352e5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459202f8-6243-4133-b117-ce45fa3bb9e2",
        "cursor": {
          "ref": "5b0c79b6-3fa8-45ae-8cdc-be0b2ea5efa5",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "478baaeb-6b10-40cb-8098-b03ccc89c137"
        },
        "item": {
          "id": "459202f8-6243-4133-b117-ce45fa3bb9e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be8ac195-965e-4c8f-aaea-a59f10648170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459202f8-6243-4133-b117-ce45fa3bb9e2",
        "cursor": {
          "ref": "5b0c79b6-3fa8-45ae-8cdc-be0b2ea5efa5",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "478baaeb-6b10-40cb-8098-b03ccc89c137"
        },
        "item": {
          "id": "459202f8-6243-4133-b117-ce45fa3bb9e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be8ac195-965e-4c8f-aaea-a59f10648170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47bcd85-2e1c-4107-b0cc-3e95dc2817af",
        "cursor": {
          "ref": "261bed13-e234-4346-8019-6c51fe70180f",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "121ca92c-66f7-4a3d-a0b0-1aa2bdf501cd"
        },
        "item": {
          "id": "e47bcd85-2e1c-4107-b0cc-3e95dc2817af",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "93ce86a7-1cf2-4e6a-9419-920213130d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47bcd85-2e1c-4107-b0cc-3e95dc2817af",
        "cursor": {
          "ref": "261bed13-e234-4346-8019-6c51fe70180f",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "121ca92c-66f7-4a3d-a0b0-1aa2bdf501cd"
        },
        "item": {
          "id": "e47bcd85-2e1c-4107-b0cc-3e95dc2817af",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "93ce86a7-1cf2-4e6a-9419-920213130d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661614f3-099d-4c8c-b936-f5f865986278",
        "cursor": {
          "ref": "fd2e788d-a984-49bb-9964-aa1cd9792832",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e2e07f86-eed3-439d-8a65-4fb428bf0724"
        },
        "item": {
          "id": "661614f3-099d-4c8c-b936-f5f865986278",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "584d4706-5bbf-4e7e-b5dd-631c4903812c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661614f3-099d-4c8c-b936-f5f865986278",
        "cursor": {
          "ref": "fd2e788d-a984-49bb-9964-aa1cd9792832",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e2e07f86-eed3-439d-8a65-4fb428bf0724"
        },
        "item": {
          "id": "661614f3-099d-4c8c-b936-f5f865986278",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "584d4706-5bbf-4e7e-b5dd-631c4903812c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb92490-525b-4b56-9ea4-8b583a48f921",
        "cursor": {
          "ref": "c22efce0-06c5-4b9b-82e6-46bad77f6c3f",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9d0cca32-5ad9-4f3e-be2f-8614a0628039"
        },
        "item": {
          "id": "8cb92490-525b-4b56-9ea4-8b583a48f921",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "b4c27ad7-69c3-4b78-9595-ef0996ea3f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb92490-525b-4b56-9ea4-8b583a48f921",
        "cursor": {
          "ref": "c22efce0-06c5-4b9b-82e6-46bad77f6c3f",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9d0cca32-5ad9-4f3e-be2f-8614a0628039"
        },
        "item": {
          "id": "8cb92490-525b-4b56-9ea4-8b583a48f921",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "b4c27ad7-69c3-4b78-9595-ef0996ea3f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671be0e8-e6bd-4419-b6e9-ec9dac6013be",
        "cursor": {
          "ref": "d22d52b4-9ee7-49b2-9359-225b03ec41b2",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aab12903-edd0-4c7e-9845-5383e856bbea"
        },
        "item": {
          "id": "671be0e8-e6bd-4419-b6e9-ec9dac6013be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32cd7665-3711-4b43-a849-4e0acfba5974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671be0e8-e6bd-4419-b6e9-ec9dac6013be",
        "cursor": {
          "ref": "d22d52b4-9ee7-49b2-9359-225b03ec41b2",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aab12903-edd0-4c7e-9845-5383e856bbea"
        },
        "item": {
          "id": "671be0e8-e6bd-4419-b6e9-ec9dac6013be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32cd7665-3711-4b43-a849-4e0acfba5974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace814ee-d47d-4366-8833-70c4cae103c2",
        "cursor": {
          "ref": "cf9794b0-d616-4125-bff5-3b6f3abe10e0",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86472e86-61e9-4c30-8c5f-7b8d349c18b9"
        },
        "item": {
          "id": "ace814ee-d47d-4366-8833-70c4cae103c2",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "a1bf9f9f-d055-486f-ad37-41c76dc411d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace814ee-d47d-4366-8833-70c4cae103c2",
        "cursor": {
          "ref": "cf9794b0-d616-4125-bff5-3b6f3abe10e0",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86472e86-61e9-4c30-8c5f-7b8d349c18b9"
        },
        "item": {
          "id": "ace814ee-d47d-4366-8833-70c4cae103c2",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "a1bf9f9f-d055-486f-ad37-41c76dc411d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d75f56-face-4b0b-8f1c-30e1b4e21d82",
        "cursor": {
          "ref": "f1b5e5d4-cbb2-435b-b7f7-183f9776aef9",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c5181109-8f8d-48ab-9eb1-64b589cef25c"
        },
        "item": {
          "id": "59d75f56-face-4b0b-8f1c-30e1b4e21d82",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "0712ea4c-34db-42f0-8af3-f5fdf2d1aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d75f56-face-4b0b-8f1c-30e1b4e21d82",
        "cursor": {
          "ref": "f1b5e5d4-cbb2-435b-b7f7-183f9776aef9",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c5181109-8f8d-48ab-9eb1-64b589cef25c"
        },
        "item": {
          "id": "59d75f56-face-4b0b-8f1c-30e1b4e21d82",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "0712ea4c-34db-42f0-8af3-f5fdf2d1aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f7e0e0-ff95-48dd-9470-b91735203ff3",
        "cursor": {
          "ref": "ab8f3ff7-5213-4e81-9e9e-42adfcca4db2",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3e0b257-dd8e-41da-8826-9c34c040c507"
        },
        "item": {
          "id": "14f7e0e0-ff95-48dd-9470-b91735203ff3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1952a925-7bc1-45f8-a4be-d91255d75131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f7e0e0-ff95-48dd-9470-b91735203ff3",
        "cursor": {
          "ref": "ab8f3ff7-5213-4e81-9e9e-42adfcca4db2",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3e0b257-dd8e-41da-8826-9c34c040c507"
        },
        "item": {
          "id": "14f7e0e0-ff95-48dd-9470-b91735203ff3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1952a925-7bc1-45f8-a4be-d91255d75131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c1ba5-f471-40a1-8411-58e235e949e9",
        "cursor": {
          "ref": "1a7fdc1f-505c-4402-b4e4-ea4075309917",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f6428b89-1443-46ae-97d2-c1d4f4931fe2"
        },
        "item": {
          "id": "af2c1ba5-f471-40a1-8411-58e235e949e9",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "e1397a50-c928-4c82-812c-61b849ec8dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c1ba5-f471-40a1-8411-58e235e949e9",
        "cursor": {
          "ref": "1a7fdc1f-505c-4402-b4e4-ea4075309917",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f6428b89-1443-46ae-97d2-c1d4f4931fe2"
        },
        "item": {
          "id": "af2c1ba5-f471-40a1-8411-58e235e949e9",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "e1397a50-c928-4c82-812c-61b849ec8dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf29ae-4f79-47e4-a617-11bbed8edc47",
        "cursor": {
          "ref": "93196ffe-e945-4820-8150-faca279cdb9c",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "55e7a5c4-c659-4223-9f93-fbee4bca4e3b"
        },
        "item": {
          "id": "40bf29ae-4f79-47e4-a617-11bbed8edc47",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a0f43037-189a-497d-b4b0-523a55f929ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf29ae-4f79-47e4-a617-11bbed8edc47",
        "cursor": {
          "ref": "93196ffe-e945-4820-8150-faca279cdb9c",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "55e7a5c4-c659-4223-9f93-fbee4bca4e3b"
        },
        "item": {
          "id": "40bf29ae-4f79-47e4-a617-11bbed8edc47",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a0f43037-189a-497d-b4b0-523a55f929ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4bbb70-fbd2-4efb-a636-83d584361db4",
        "cursor": {
          "ref": "0132a3b9-4b17-406f-9c95-1dc4ac53ec5d",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cfdb158-e46e-4497-8167-8b71fd48aab3"
        },
        "item": {
          "id": "0c4bbb70-fbd2-4efb-a636-83d584361db4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f86ce9c4-cec9-44f1-bea9-5ac05250327f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4bbb70-fbd2-4efb-a636-83d584361db4",
        "cursor": {
          "ref": "0132a3b9-4b17-406f-9c95-1dc4ac53ec5d",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cfdb158-e46e-4497-8167-8b71fd48aab3"
        },
        "item": {
          "id": "0c4bbb70-fbd2-4efb-a636-83d584361db4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f86ce9c4-cec9-44f1-bea9-5ac05250327f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089456a4-c1d8-4923-a9b7-e169cfe3f5ee",
        "cursor": {
          "ref": "21392191-1751-4d35-b7cc-0e7a5943d00a",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fe18d027-3805-4d37-bd65-90ad447b0c57"
        },
        "item": {
          "id": "089456a4-c1d8-4923-a9b7-e169cfe3f5ee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e103e82c-4b3c-4f30-bace-2a722e5fd377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089456a4-c1d8-4923-a9b7-e169cfe3f5ee",
        "cursor": {
          "ref": "21392191-1751-4d35-b7cc-0e7a5943d00a",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fe18d027-3805-4d37-bd65-90ad447b0c57"
        },
        "item": {
          "id": "089456a4-c1d8-4923-a9b7-e169cfe3f5ee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e103e82c-4b3c-4f30-bace-2a722e5fd377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c6f81b-ed75-4689-a9a2-84229654dd04",
        "cursor": {
          "ref": "7b8a349f-1826-4f9e-a628-3d38dcebb379",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4a18cf2-d8c5-4e45-82a1-d6a468ef777a"
        },
        "item": {
          "id": "70c6f81b-ed75-4689-a9a2-84229654dd04",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "afa4f97a-1331-44c4-9839-0e896e593700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c6f81b-ed75-4689-a9a2-84229654dd04",
        "cursor": {
          "ref": "7b8a349f-1826-4f9e-a628-3d38dcebb379",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4a18cf2-d8c5-4e45-82a1-d6a468ef777a"
        },
        "item": {
          "id": "70c6f81b-ed75-4689-a9a2-84229654dd04",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "afa4f97a-1331-44c4-9839-0e896e593700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c54e270-5978-4c5c-8c50-e2e0ea8ef7b1",
        "cursor": {
          "ref": "2231519c-d96a-4f3f-83c5-58ccd0e852a1",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2846db1-e15a-4fb4-8f7c-7e1f0300f9fa"
        },
        "item": {
          "id": "0c54e270-5978-4c5c-8c50-e2e0ea8ef7b1",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "7c3d873e-82da-4edd-a993-99dc5301f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c54e270-5978-4c5c-8c50-e2e0ea8ef7b1",
        "cursor": {
          "ref": "2231519c-d96a-4f3f-83c5-58ccd0e852a1",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2846db1-e15a-4fb4-8f7c-7e1f0300f9fa"
        },
        "item": {
          "id": "0c54e270-5978-4c5c-8c50-e2e0ea8ef7b1",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "7c3d873e-82da-4edd-a993-99dc5301f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a395d01-bb98-4cab-a648-c42181663e8b",
        "cursor": {
          "ref": "957d366c-a641-4917-9b75-22191d3d16f5",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c5d35643-687a-4cf1-9abd-f3874f783e10"
        },
        "item": {
          "id": "5a395d01-bb98-4cab-a648-c42181663e8b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b9c038f3-f00b-46d6-96eb-aab6579e3dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a395d01-bb98-4cab-a648-c42181663e8b",
        "cursor": {
          "ref": "957d366c-a641-4917-9b75-22191d3d16f5",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c5d35643-687a-4cf1-9abd-f3874f783e10"
        },
        "item": {
          "id": "5a395d01-bb98-4cab-a648-c42181663e8b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b9c038f3-f00b-46d6-96eb-aab6579e3dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d009ab4-2614-4892-8b57-f2e376cd83f3",
        "cursor": {
          "ref": "9786d776-91dc-41c8-91b3-177659caa23a",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c4f6b95-2743-45ce-82f4-9e46c1f57e16"
        },
        "item": {
          "id": "6d009ab4-2614-4892-8b57-f2e376cd83f3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f2034d9c-68df-4469-a3d6-efc80fa3a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d009ab4-2614-4892-8b57-f2e376cd83f3",
        "cursor": {
          "ref": "9786d776-91dc-41c8-91b3-177659caa23a",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c4f6b95-2743-45ce-82f4-9e46c1f57e16"
        },
        "item": {
          "id": "6d009ab4-2614-4892-8b57-f2e376cd83f3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f2034d9c-68df-4469-a3d6-efc80fa3a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244dedce-2427-4a84-a4e9-9857a9e9d587",
        "cursor": {
          "ref": "79112881-8cc7-47bb-98cb-4fdbcf23751c",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d75028b7-0762-4987-8e11-cc5ab9f9d9af"
        },
        "item": {
          "id": "244dedce-2427-4a84-a4e9-9857a9e9d587",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "416f14d6-f09f-42d0-8fc4-ad789e54cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244dedce-2427-4a84-a4e9-9857a9e9d587",
        "cursor": {
          "ref": "79112881-8cc7-47bb-98cb-4fdbcf23751c",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d75028b7-0762-4987-8e11-cc5ab9f9d9af"
        },
        "item": {
          "id": "244dedce-2427-4a84-a4e9-9857a9e9d587",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "416f14d6-f09f-42d0-8fc4-ad789e54cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2869197d-047a-4c0b-8852-0dd9ca444071",
        "cursor": {
          "ref": "13fa8826-fece-40a4-abfa-cb2c495a2d73",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ac67afd6-497f-4ca2-ab29-68177ff0d095"
        },
        "item": {
          "id": "2869197d-047a-4c0b-8852-0dd9ca444071",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "402bb4a2-2d3f-43e8-a5b7-155dff55dfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2869197d-047a-4c0b-8852-0dd9ca444071",
        "cursor": {
          "ref": "13fa8826-fece-40a4-abfa-cb2c495a2d73",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ac67afd6-497f-4ca2-ab29-68177ff0d095"
        },
        "item": {
          "id": "2869197d-047a-4c0b-8852-0dd9ca444071",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "402bb4a2-2d3f-43e8-a5b7-155dff55dfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb91ce-6258-4b29-ad9d-1c38cabb6649",
        "cursor": {
          "ref": "eeacbad9-e633-495a-9f10-0aa77d9f3471",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6a86d06a-b2e4-4b70-9854-42a5c8a1716b"
        },
        "item": {
          "id": "1aeb91ce-6258-4b29-ad9d-1c38cabb6649",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd55e07e-ba18-410f-855b-6ebc54e1057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb91ce-6258-4b29-ad9d-1c38cabb6649",
        "cursor": {
          "ref": "eeacbad9-e633-495a-9f10-0aa77d9f3471",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6a86d06a-b2e4-4b70-9854-42a5c8a1716b"
        },
        "item": {
          "id": "1aeb91ce-6258-4b29-ad9d-1c38cabb6649",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cd55e07e-ba18-410f-855b-6ebc54e1057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98774136-24f9-4e10-b558-ebc44e247d42",
        "cursor": {
          "ref": "f6dd56a0-c606-4dde-a5c5-313d60804d37",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "80845dd0-5ba6-4495-b2ac-b73fcfde4b1a"
        },
        "item": {
          "id": "98774136-24f9-4e10-b558-ebc44e247d42",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "6a7a28d2-cf61-456b-92e5-4a10f14af8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98774136-24f9-4e10-b558-ebc44e247d42",
        "cursor": {
          "ref": "f6dd56a0-c606-4dde-a5c5-313d60804d37",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "80845dd0-5ba6-4495-b2ac-b73fcfde4b1a"
        },
        "item": {
          "id": "98774136-24f9-4e10-b558-ebc44e247d42",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "6a7a28d2-cf61-456b-92e5-4a10f14af8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e87e2-1b1c-402c-965e-1d7fc488c89d",
        "cursor": {
          "ref": "3b2f3c1e-7b4d-4d1c-8d68-6caa1492e915",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2728afb-fcae-4759-ac3a-c06fd13650c1"
        },
        "item": {
          "id": "907e87e2-1b1c-402c-965e-1d7fc488c89d",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "2e2273f7-feff-40ed-9b01-38c47095ce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e87e2-1b1c-402c-965e-1d7fc488c89d",
        "cursor": {
          "ref": "3b2f3c1e-7b4d-4d1c-8d68-6caa1492e915",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2728afb-fcae-4759-ac3a-c06fd13650c1"
        },
        "item": {
          "id": "907e87e2-1b1c-402c-965e-1d7fc488c89d",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "2e2273f7-feff-40ed-9b01-38c47095ce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b6269-ad37-46e1-875d-d6f5ee276417",
        "cursor": {
          "ref": "5af78e20-ce68-4d88-ae6f-38653f944b37",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "53072fa8-5c0d-405b-8f26-1a8db6aad4fd"
        },
        "item": {
          "id": "807b6269-ad37-46e1-875d-d6f5ee276417",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2bacc7ea-09fa-4ccc-8312-cdd47e3b4c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b6269-ad37-46e1-875d-d6f5ee276417",
        "cursor": {
          "ref": "5af78e20-ce68-4d88-ae6f-38653f944b37",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "53072fa8-5c0d-405b-8f26-1a8db6aad4fd"
        },
        "item": {
          "id": "807b6269-ad37-46e1-875d-d6f5ee276417",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2bacc7ea-09fa-4ccc-8312-cdd47e3b4c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b699308-72f2-4b24-9c78-83ed578602f5",
        "cursor": {
          "ref": "10f5c6ef-43a4-4191-b465-fd2ad6991b1e",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8da8710-b744-4194-aad2-d06023c160ff"
        },
        "item": {
          "id": "7b699308-72f2-4b24-9c78-83ed578602f5",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "a2b78aca-4ae4-40c9-a716-487da19e5021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b699308-72f2-4b24-9c78-83ed578602f5",
        "cursor": {
          "ref": "10f5c6ef-43a4-4191-b465-fd2ad6991b1e",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8da8710-b744-4194-aad2-d06023c160ff"
        },
        "item": {
          "id": "7b699308-72f2-4b24-9c78-83ed578602f5",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "a2b78aca-4ae4-40c9-a716-487da19e5021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e376fb-047b-4b3b-b62a-6b0df7e83277",
        "cursor": {
          "ref": "35f27dcd-87bf-4828-96e7-28bb03462799",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "738e5f2d-1756-4780-b164-87d117c44a9b"
        },
        "item": {
          "id": "54e376fb-047b-4b3b-b62a-6b0df7e83277",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62aa652f-d8b6-485d-aa3d-33c0493308c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e376fb-047b-4b3b-b62a-6b0df7e83277",
        "cursor": {
          "ref": "35f27dcd-87bf-4828-96e7-28bb03462799",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "738e5f2d-1756-4780-b164-87d117c44a9b"
        },
        "item": {
          "id": "54e376fb-047b-4b3b-b62a-6b0df7e83277",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62aa652f-d8b6-485d-aa3d-33c0493308c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ac0b03-0c80-4e3f-b5da-b63c87c9862f",
        "cursor": {
          "ref": "7ddf463c-ff2b-4059-9a11-48592fccab40",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ab1502e3-1d1a-401c-b7aa-cfeeb1b0a4de"
        },
        "item": {
          "id": "04ac0b03-0c80-4e3f-b5da-b63c87c9862f",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "e689e5c2-9e94-48f5-ba66-1813d0d29fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ac0b03-0c80-4e3f-b5da-b63c87c9862f",
        "cursor": {
          "ref": "7ddf463c-ff2b-4059-9a11-48592fccab40",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ab1502e3-1d1a-401c-b7aa-cfeeb1b0a4de"
        },
        "item": {
          "id": "04ac0b03-0c80-4e3f-b5da-b63c87c9862f",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "e689e5c2-9e94-48f5-ba66-1813d0d29fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f668cb-a2cf-426b-b40c-569ae019e456",
        "cursor": {
          "ref": "0086849f-0d8a-4762-b6e0-b18c5159306b",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c395d2f-4f59-4cda-ac8d-24c104e7a962"
        },
        "item": {
          "id": "f3f668cb-a2cf-426b-b40c-569ae019e456",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91c40042-c68d-4e65-a304-8c8f7e93196a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f668cb-a2cf-426b-b40c-569ae019e456",
        "cursor": {
          "ref": "0086849f-0d8a-4762-b6e0-b18c5159306b",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c395d2f-4f59-4cda-ac8d-24c104e7a962"
        },
        "item": {
          "id": "f3f668cb-a2cf-426b-b40c-569ae019e456",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91c40042-c68d-4e65-a304-8c8f7e93196a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a10f29-97c2-4517-8268-d48dbd999676",
        "cursor": {
          "ref": "69ffb454-7bf5-45b2-a001-49d00f15cc3a",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "27bfb634-9cd1-4670-bcfd-01938652ccb7"
        },
        "item": {
          "id": "52a10f29-97c2-4517-8268-d48dbd999676",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "492c29c4-a348-4923-918f-8ea6a4dff6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a10f29-97c2-4517-8268-d48dbd999676",
        "cursor": {
          "ref": "69ffb454-7bf5-45b2-a001-49d00f15cc3a",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "27bfb634-9cd1-4670-bcfd-01938652ccb7"
        },
        "item": {
          "id": "52a10f29-97c2-4517-8268-d48dbd999676",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "492c29c4-a348-4923-918f-8ea6a4dff6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8d24d-7062-451c-9db4-cf115e0a1b3c",
        "cursor": {
          "ref": "f582f12b-c3a8-4cb6-b597-5c3b7aefe74e",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e26ff048-f9e0-4b73-8823-164f8d1c8d1b"
        },
        "item": {
          "id": "f9c8d24d-7062-451c-9db4-cf115e0a1b3c",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "13f474a7-5722-462d-a797-6206af9d8849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8d24d-7062-451c-9db4-cf115e0a1b3c",
        "cursor": {
          "ref": "f582f12b-c3a8-4cb6-b597-5c3b7aefe74e",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e26ff048-f9e0-4b73-8823-164f8d1c8d1b"
        },
        "item": {
          "id": "f9c8d24d-7062-451c-9db4-cf115e0a1b3c",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "13f474a7-5722-462d-a797-6206af9d8849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfa5297-22c8-4b93-ac33-cad5efab5950",
        "cursor": {
          "ref": "873a514e-e95e-4347-9751-021f118d81c5",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11070241-043f-4f27-9cdb-a7d8b01f22a2"
        },
        "item": {
          "id": "fdfa5297-22c8-4b93-ac33-cad5efab5950",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "e6ff648a-2e5a-4123-bc76-e2a3591b7fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfa5297-22c8-4b93-ac33-cad5efab5950",
        "cursor": {
          "ref": "873a514e-e95e-4347-9751-021f118d81c5",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11070241-043f-4f27-9cdb-a7d8b01f22a2"
        },
        "item": {
          "id": "fdfa5297-22c8-4b93-ac33-cad5efab5950",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "e6ff648a-2e5a-4123-bc76-e2a3591b7fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d5360-f305-4b0d-8691-9ccccbabfb0e",
        "cursor": {
          "ref": "8baad172-0daf-4cda-8275-7061126c0731",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3705fb90-47e1-4751-8905-6364bd62c7fc"
        },
        "item": {
          "id": "409d5360-f305-4b0d-8691-9ccccbabfb0e",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "7cd1dd6b-a7d5-44f7-add9-ff70817225b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d5360-f305-4b0d-8691-9ccccbabfb0e",
        "cursor": {
          "ref": "8baad172-0daf-4cda-8275-7061126c0731",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3705fb90-47e1-4751-8905-6364bd62c7fc"
        },
        "item": {
          "id": "409d5360-f305-4b0d-8691-9ccccbabfb0e",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "7cd1dd6b-a7d5-44f7-add9-ff70817225b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ef2420-b536-4c5a-952b-62d4b64ab218",
        "cursor": {
          "ref": "ca9faee6-6cd8-4696-acec-169a14a440a9",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2195f9a5-5a91-4aba-962a-26ce2a3d8076"
        },
        "item": {
          "id": "a6ef2420-b536-4c5a-952b-62d4b64ab218",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1f102456-65af-4f30-a738-fa244ad83719",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ef2420-b536-4c5a-952b-62d4b64ab218",
        "cursor": {
          "ref": "ca9faee6-6cd8-4696-acec-169a14a440a9",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2195f9a5-5a91-4aba-962a-26ce2a3d8076"
        },
        "item": {
          "id": "a6ef2420-b536-4c5a-952b-62d4b64ab218",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1f102456-65af-4f30-a738-fa244ad83719",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643f4747-5c46-42ab-ba5b-02fd366d1c67",
        "cursor": {
          "ref": "442bee87-7fdd-41f6-8e07-5e750b813243",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ccf0bc4a-f8ad-4a16-a619-bae049df8b70"
        },
        "item": {
          "id": "643f4747-5c46-42ab-ba5b-02fd366d1c67",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ff2c77ae-d1de-4b30-9017-ae2693c91c11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643f4747-5c46-42ab-ba5b-02fd366d1c67",
        "cursor": {
          "ref": "442bee87-7fdd-41f6-8e07-5e750b813243",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ccf0bc4a-f8ad-4a16-a619-bae049df8b70"
        },
        "item": {
          "id": "643f4747-5c46-42ab-ba5b-02fd366d1c67",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ff2c77ae-d1de-4b30-9017-ae2693c91c11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a1bba4-2f7b-4a8e-a12a-05953abd73ce",
        "cursor": {
          "ref": "a8580f69-9077-452b-8325-8ea01187875b",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f67a3d3c-e883-490c-adae-7b40ff9f2c91"
        },
        "item": {
          "id": "37a1bba4-2f7b-4a8e-a12a-05953abd73ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd75db73-cdfe-4922-a22f-17f58593bc9a",
          "status": "Created",
          "code": 201,
          "responseTime": 374,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a1bba4-2f7b-4a8e-a12a-05953abd73ce",
        "cursor": {
          "ref": "a8580f69-9077-452b-8325-8ea01187875b",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f67a3d3c-e883-490c-adae-7b40ff9f2c91"
        },
        "item": {
          "id": "37a1bba4-2f7b-4a8e-a12a-05953abd73ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd75db73-cdfe-4922-a22f-17f58593bc9a",
          "status": "Created",
          "code": 201,
          "responseTime": 374,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac1ca6f-291f-447c-be89-54a8f8a8c34c",
        "cursor": {
          "ref": "1fa04d63-4620-429e-980a-5485f20ca387",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed816d47-56f9-4875-9eb9-1d19fd2c3210"
        },
        "item": {
          "id": "3ac1ca6f-291f-447c-be89-54a8f8a8c34c",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "03e26ccb-b111-40c4-b872-4de20365c00b",
          "status": "Created",
          "code": 201,
          "responseTime": 303,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac1ca6f-291f-447c-be89-54a8f8a8c34c",
        "cursor": {
          "ref": "1fa04d63-4620-429e-980a-5485f20ca387",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed816d47-56f9-4875-9eb9-1d19fd2c3210"
        },
        "item": {
          "id": "3ac1ca6f-291f-447c-be89-54a8f8a8c34c",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "03e26ccb-b111-40c4-b872-4de20365c00b",
          "status": "Created",
          "code": 201,
          "responseTime": 303,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eb0276-2f6a-4a99-9521-a07e3b6baa0d",
        "cursor": {
          "ref": "6a9184e4-61af-4f61-8add-493a38704ae7",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf919cc5-4f4f-42be-8a71-e2a5ea408389"
        },
        "item": {
          "id": "53eb0276-2f6a-4a99-9521-a07e3b6baa0d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c53456b-45ce-492f-aad6-6fe4ef5795a8",
          "status": "Created",
          "code": 201,
          "responseTime": 314,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eb0276-2f6a-4a99-9521-a07e3b6baa0d",
        "cursor": {
          "ref": "6a9184e4-61af-4f61-8add-493a38704ae7",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf919cc5-4f4f-42be-8a71-e2a5ea408389"
        },
        "item": {
          "id": "53eb0276-2f6a-4a99-9521-a07e3b6baa0d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c53456b-45ce-492f-aad6-6fe4ef5795a8",
          "status": "Created",
          "code": 201,
          "responseTime": 314,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc29deb-0103-4020-ab46-35c91c19493e",
        "cursor": {
          "ref": "f7c294d2-97d9-4013-9b4b-fd3ec1981617",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6cfe578-4788-4de9-9200-2b8d06cbb16f"
        },
        "item": {
          "id": "ecc29deb-0103-4020-ab46-35c91c19493e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "12b254bc-da1e-4ede-b698-3c1ad9c86b11",
          "status": "Created",
          "code": 201,
          "responseTime": 304,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc29deb-0103-4020-ab46-35c91c19493e",
        "cursor": {
          "ref": "f7c294d2-97d9-4013-9b4b-fd3ec1981617",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6cfe578-4788-4de9-9200-2b8d06cbb16f"
        },
        "item": {
          "id": "ecc29deb-0103-4020-ab46-35c91c19493e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "12b254bc-da1e-4ede-b698-3c1ad9c86b11",
          "status": "Created",
          "code": 201,
          "responseTime": 304,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef661c5-dbd2-4652-a6ed-7000d66e8ba7",
        "cursor": {
          "ref": "90bb4c68-7303-4b48-b98e-5954826b62dc",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "35843f37-2571-4b49-b19e-b9ed49229d4b"
        },
        "item": {
          "id": "1ef661c5-dbd2-4652-a6ed-7000d66e8ba7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c0a411f1-3309-43c1-8ad6-cd17ec338c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "1ef661c5-dbd2-4652-a6ed-7000d66e8ba7",
        "cursor": {
          "ref": "90bb4c68-7303-4b48-b98e-5954826b62dc",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "35843f37-2571-4b49-b19e-b9ed49229d4b"
        },
        "item": {
          "id": "1ef661c5-dbd2-4652-a6ed-7000d66e8ba7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c0a411f1-3309-43c1-8ad6-cd17ec338c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "a303c6b6-a14f-4ec2-8aee-1b29c5877f09",
        "cursor": {
          "ref": "f3c1e9d4-8cc4-4925-8261-c1aa5d8873c8",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1662f74c-298a-4fd8-9435-079effe6e505"
        },
        "item": {
          "id": "a303c6b6-a14f-4ec2-8aee-1b29c5877f09",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "574d73bc-4e60-4851-83ea-5c1083d5b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "a303c6b6-a14f-4ec2-8aee-1b29c5877f09",
        "cursor": {
          "ref": "f3c1e9d4-8cc4-4925-8261-c1aa5d8873c8",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1662f74c-298a-4fd8-9435-079effe6e505"
        },
        "item": {
          "id": "a303c6b6-a14f-4ec2-8aee-1b29c5877f09",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "574d73bc-4e60-4851-83ea-5c1083d5b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "f356ede3-ad2c-4f4a-abff-fa375a7261eb",
        "cursor": {
          "ref": "65f25d89-c2a8-4ed0-a973-470f491d82af",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5a47a88e-0080-439a-bf03-1056ea6ca293"
        },
        "item": {
          "id": "f356ede3-ad2c-4f4a-abff-fa375a7261eb",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "3aac0923-382c-4ff3-9b97-b1b5ef54e06b",
          "status": "Created",
          "code": 201,
          "responseTime": 359,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f356ede3-ad2c-4f4a-abff-fa375a7261eb",
        "cursor": {
          "ref": "65f25d89-c2a8-4ed0-a973-470f491d82af",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5a47a88e-0080-439a-bf03-1056ea6ca293"
        },
        "item": {
          "id": "f356ede3-ad2c-4f4a-abff-fa375a7261eb",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "3aac0923-382c-4ff3-9b97-b1b5ef54e06b",
          "status": "Created",
          "code": 201,
          "responseTime": 359,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce702c-f13c-45aa-bd0e-d07e392a4cf2",
        "cursor": {
          "ref": "0c263898-197a-4ee7-ab77-dab1f59e9745",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78c9244d-8fbb-4634-9051-324d9ef90eaa"
        },
        "item": {
          "id": "d9ce702c-f13c-45aa-bd0e-d07e392a4cf2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61aa9a87-4eaf-49e9-995c-33e452d1e9ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce702c-f13c-45aa-bd0e-d07e392a4cf2",
        "cursor": {
          "ref": "0c263898-197a-4ee7-ab77-dab1f59e9745",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78c9244d-8fbb-4634-9051-324d9ef90eaa"
        },
        "item": {
          "id": "d9ce702c-f13c-45aa-bd0e-d07e392a4cf2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61aa9a87-4eaf-49e9-995c-33e452d1e9ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fbce9b-a4f1-4c55-af17-ce789a4b9e04",
        "cursor": {
          "ref": "bbfa8a04-dcf4-40b5-a8bc-83e3798f45a8",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9fa9986e-25fd-4f13-bb34-f928d98f8194"
        },
        "item": {
          "id": "d8fbce9b-a4f1-4c55-af17-ce789a4b9e04",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "68915c7a-2588-461d-a67f-95d107665a3d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f7f2c8-6b74-47b6-9b6f-c231b7f68649",
        "cursor": {
          "ref": "13fb78cd-ac7c-41db-aecd-772977f49b78",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf7c0ea0-eac4-4038-b424-9f83fdb4d41f"
        },
        "item": {
          "id": "38f7f2c8-6b74-47b6-9b6f-c231b7f68649",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6fed443a-d8c6-46ff-85cc-4b35704e95b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f7f2c8-6b74-47b6-9b6f-c231b7f68649",
        "cursor": {
          "ref": "13fb78cd-ac7c-41db-aecd-772977f49b78",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf7c0ea0-eac4-4038-b424-9f83fdb4d41f"
        },
        "item": {
          "id": "38f7f2c8-6b74-47b6-9b6f-c231b7f68649",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6fed443a-d8c6-46ff-85cc-4b35704e95b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ecf87-c794-4a9f-afcd-f452d27cbcd6",
        "cursor": {
          "ref": "e4bc254d-266f-4b50-95e6-268ab5cec34e",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c2eb5697-52aa-4df5-86a3-c70c13765728"
        },
        "item": {
          "id": "ba8ecf87-c794-4a9f-afcd-f452d27cbcd6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3cd5c057-f9eb-4f0c-b083-9c2e68a40d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a793b7c-3a57-486e-bc75-38bf1d918cfe",
        "cursor": {
          "ref": "0c6e3fe9-cd6a-477a-aa72-b4ffe6717b12",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0ab02c48-536e-4a52-96a2-cff9cc337749"
        },
        "item": {
          "id": "1a793b7c-3a57-486e-bc75-38bf1d918cfe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2d2b77e6-49b7-4667-b016-1b39712b5a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456692a3-49bc-4ccb-b69c-ca845fc034b2",
        "cursor": {
          "ref": "a8c90723-33b1-4562-8d10-5590cc2a1a4f",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c0d1965-1d69-46de-a751-03fd48ac8593"
        },
        "item": {
          "id": "456692a3-49bc-4ccb-b69c-ca845fc034b2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1442d996-249e-4cf6-bde3-fad72ecc8dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed28dd8a-8a81-4365-b551-2d3adb0a87c6",
        "cursor": {
          "ref": "8c5c8db7-35fd-414a-ada1-d44a92566f1f",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "56c92825-2edb-4b3d-84e8-9948832a8212"
        },
        "item": {
          "id": "ed28dd8a-8a81-4365-b551-2d3adb0a87c6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d0ac3c6b-d183-43bf-b03a-7438aeb3e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e14058-47cb-420e-83b6-b6995447bf01",
        "cursor": {
          "ref": "48cc5a46-43d8-499f-9f23-4549efa21134",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ba9b61fd-113c-4836-9ba2-c74942dcd4bb"
        },
        "item": {
          "id": "b5e14058-47cb-420e-83b6-b6995447bf01",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "509ef310-8af3-4411-907d-bcbf34883269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7015dc-5c89-4649-839f-7b535266c7f0",
        "cursor": {
          "ref": "dbd86472-3d39-4cdb-b1dc-27b70e2e8cf7",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0e57f3d2-6a16-442e-97c2-503d20999b80"
        },
        "item": {
          "id": "cb7015dc-5c89-4649-839f-7b535266c7f0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "585c1028-e918-4aa2-880f-e83ce60e6d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57c89ad-aa46-47b0-b89e-ce2d0019cb79",
        "cursor": {
          "ref": "4d11f610-4d9c-4be6-8111-aa63576f13b2",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9ac179fd-cfd5-43b6-8161-871e02be925e"
        },
        "item": {
          "id": "a57c89ad-aa46-47b0-b89e-ce2d0019cb79",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6b89871a-4183-4f00-97f8-2af92b9cef6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbbb6c4-24d1-45d2-baef-821a3c2708f7",
        "cursor": {
          "ref": "45c986c1-08b0-4452-b0f6-936f884a6218",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4995fa28-ca28-4bb0-b1cf-6b5f19fdbe50"
        },
        "item": {
          "id": "2fbbb6c4-24d1-45d2-baef-821a3c2708f7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7c8fd614-927e-4f51-9cd0-c92355eec028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74cb74a-286a-43d1-a047-0415f8151af7",
        "cursor": {
          "ref": "feac11ef-5205-4bbd-ad38-ac36ea847d58",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ecdcb9b0-76ec-4517-8d49-f06ab0609a2d"
        },
        "item": {
          "id": "e74cb74a-286a-43d1-a047-0415f8151af7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "90840857-e6b9-45c2-84eb-d9d4451e7259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b23800-b12d-4e74-8a90-aeab1f4723ad",
        "cursor": {
          "ref": "e731bc7a-b6c7-489c-baa4-92029027aa97",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c4551896-4503-473f-a012-0ab286cd171e"
        },
        "item": {
          "id": "77b23800-b12d-4e74-8a90-aeab1f4723ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1be1a38c-6d56-4dca-bea5-33a4e166972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12444bda-0090-45ba-9481-9a43788f36ec",
        "cursor": {
          "ref": "d3008f8f-dfce-414e-9ce5-e61ac5cd2a01",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "05c2a51f-f884-4f8d-aaf2-c66a2f76ac8c"
        },
        "item": {
          "id": "12444bda-0090-45ba-9481-9a43788f36ec",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d1f2e9c2-b216-43cb-a123-dff65d94834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f05b9d-e5ff-47e9-82ed-56e068a2debe",
        "cursor": {
          "ref": "9a87336a-cd4f-4edc-ab75-9dc66203bc88",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8264ca7e-369a-472b-8446-7f82a99c30d6"
        },
        "item": {
          "id": "61f05b9d-e5ff-47e9-82ed-56e068a2debe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "928f32c1-eae8-4425-a276-bf4840fb0d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874f37b9-2376-4b9b-a363-ef5e3e05da9a",
        "cursor": {
          "ref": "57fb5070-7452-4a9c-b5e7-9e76249ef9c6",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a6f494ec-511c-4afe-ba84-f9e5415245f3"
        },
        "item": {
          "id": "874f37b9-2376-4b9b-a363-ef5e3e05da9a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca300e7c-0132-4b8d-92d6-3322a021fd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c4685b-dcf3-4010-b28f-5a3df273cd33",
        "cursor": {
          "ref": "09bdced1-9fda-473c-9805-2873f6a6bea3",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f9f48a64-865a-4ebc-bd3a-fde6b32a5995"
        },
        "item": {
          "id": "20c4685b-dcf3-4010-b28f-5a3df273cd33",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dc682903-340d-4dea-8987-065a07aa2fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd9e7f1-b97a-46b4-a9da-24deec211b2b",
        "cursor": {
          "ref": "e21b2c59-5876-4173-abbf-349c8b630ffa",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "15bfd641-8b3e-4192-95a8-ae64c654dbb0"
        },
        "item": {
          "id": "dcd9e7f1-b97a-46b4-a9da-24deec211b2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "db3e9b0f-7e09-44b4-b8f3-c9a98ea2566f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf7dda-7d82-48e8-bbcf-a5e73746cfa4",
        "cursor": {
          "ref": "ce3d8cf7-bf6e-4335-8ffc-3ba3d3225b16",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "76669dfc-ac42-4216-a430-ec66b945772b"
        },
        "item": {
          "id": "fddf7dda-7d82-48e8-bbcf-a5e73746cfa4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6b0eb87a-844e-40d6-b78f-eb90bbe45417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fef02b6-b1be-4c9a-b60d-c27ac32b45c4",
        "cursor": {
          "ref": "5a6cf8a1-ed31-4e2f-83ff-2cfe7fea841d",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5c600082-5bf5-47f0-b1d1-9624b6ee978e"
        },
        "item": {
          "id": "1fef02b6-b1be-4c9a-b60d-c27ac32b45c4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8d43baf6-6283-4ce4-ab33-cb86485a5b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b97452b-7446-4c45-82d4-9f52b05f8a6a",
        "cursor": {
          "ref": "b7318d5f-6b19-4fbc-95d0-72ceed53576a",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa0c89d3-084e-4162-9d15-2f01a29397f3"
        },
        "item": {
          "id": "4b97452b-7446-4c45-82d4-9f52b05f8a6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0eb7a326-9b07-45f0-be93-9f62a1ca28b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4401627f-d5df-4350-9071-fb594e4ece10",
        "cursor": {
          "ref": "490c3e5c-af74-4667-a29b-ad679793ac60",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "062aee9e-c9ab-4749-b610-153d37f7ac58"
        },
        "item": {
          "id": "4401627f-d5df-4350-9071-fb594e4ece10",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "29f93985-f6e2-4bc4-aaab-a4ad48e49036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7454c8-707f-4b7e-8370-d18a31f9fe0d",
        "cursor": {
          "ref": "263f4080-37ad-43ec-8215-e2e0b5531c55",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26ab4e02-8e26-4973-9067-bf4a5659ad6e"
        },
        "item": {
          "id": "eb7454c8-707f-4b7e-8370-d18a31f9fe0d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c79a32b1-ac97-4700-8d05-6870c1d81c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5356065e-5b02-4f67-8b4c-298dae7cc46f",
        "cursor": {
          "ref": "3a806310-573e-4400-844e-2a47781fa3b7",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b58779de-fee7-4b23-b2a7-511885488cc4"
        },
        "item": {
          "id": "5356065e-5b02-4f67-8b4c-298dae7cc46f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a5b43a1-ba4e-4982-9eb6-c135e801225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e79837f-29ce-4d74-9a03-f71eebc9a7d2",
        "cursor": {
          "ref": "f8081039-3bd3-4105-bab2-84891320f121",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "be1bc2c2-7637-4617-980b-ad154c1837c4"
        },
        "item": {
          "id": "4e79837f-29ce-4d74-9a03-f71eebc9a7d2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a17f298-d376-487e-8aeb-2fc81231216b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde4207-b7a3-478b-a41a-0bb141d4e419",
        "cursor": {
          "ref": "2f54459f-a36c-4270-a6db-cb462b245094",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "def58227-bb40-44ff-b7fa-abde5c986941"
        },
        "item": {
          "id": "5bde4207-b7a3-478b-a41a-0bb141d4e419",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "065b9fee-a436-4674-add1-ddd400d518fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02ca931-66cc-489f-b425-e0989c167a48",
        "cursor": {
          "ref": "3df6ca6d-d36f-4643-868e-a35d962326e2",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e594b0d0-b253-4937-a39d-458ca5a9d3f1"
        },
        "item": {
          "id": "a02ca931-66cc-489f-b425-e0989c167a48",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6547a38e-6ca3-4b19-8821-e2badea7ac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb92b57-3439-43d0-a938-f7185c84060a",
        "cursor": {
          "ref": "5c5be798-7014-49bb-8398-9d82b030763b",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d5066c52-2f58-45c0-b008-0299ed622e5c"
        },
        "item": {
          "id": "eeb92b57-3439-43d0-a938-f7185c84060a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "90005d7f-b10a-46f1-aa85-d00bb7bb1748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f12ec-2cd0-40da-bada-8fb1fa61e9fd",
        "cursor": {
          "ref": "cca1c608-1cf7-4474-b21f-76c6fae09dc3",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a514ded8-8e6a-4fa0-8819-178ab454a9a4"
        },
        "item": {
          "id": "9e1f12ec-2cd0-40da-bada-8fb1fa61e9fd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "af588f4b-802f-483b-8014-7be7a9026c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c7cd20-c358-4990-86e4-799dc289ca5a",
        "cursor": {
          "ref": "2fbebce7-dad6-43b2-965a-d97719d0da74",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "43863620-b81c-4cbe-bcc7-50b5420249b1"
        },
        "item": {
          "id": "61c7cd20-c358-4990-86e4-799dc289ca5a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dffc96fd-b2ce-48a1-81cd-60cd8ce4b10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ae668c-2a3a-4174-8d92-6ddf4ab6d594",
        "cursor": {
          "ref": "e023cf25-0cfd-4768-8839-5fb79a611d85",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "11c6d8a1-5623-4210-ae6b-3c6cd216f58d"
        },
        "item": {
          "id": "b3ae668c-2a3a-4174-8d92-6ddf4ab6d594",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58fb4db0-14df-407f-bca6-b1b781af1de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc994e-f23b-4c99-a740-85e7bcad85bd",
        "cursor": {
          "ref": "b12c1ce2-aa02-438b-8f1a-2e26e5e49bf1",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "758dcefd-8cce-4643-9074-f7899cdf4bb4"
        },
        "item": {
          "id": "01fc994e-f23b-4c99-a740-85e7bcad85bd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f09d3a42-2e10-420b-94b7-624c6d7ae30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224e9c95-1e9f-4143-a826-d602b0656f58",
        "cursor": {
          "ref": "6d1acc70-d2a0-463f-95e9-73cf0dbb43d4",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "765f12be-31ad-4614-a0cd-891342390318"
        },
        "item": {
          "id": "224e9c95-1e9f-4143-a826-d602b0656f58",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9ea87d97-e594-49cb-8ee4-5e504a44cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fbda56-8010-4c0c-b8f8-b16a55e3ebb0",
        "cursor": {
          "ref": "a23b1802-3566-4f69-9a63-bab020bed93d",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "427df237-20cc-4347-b4b3-3a50ac1cd9ae"
        },
        "item": {
          "id": "b1fbda56-8010-4c0c-b8f8-b16a55e3ebb0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "89df693a-50ae-43c3-850d-af379a3bf6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b91c79d-3b2c-4969-9ac8-fbfb514da62a",
        "cursor": {
          "ref": "95a84936-6ed2-40bf-8a3f-e0e2cf4bb16c",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4038594a-48fc-433c-9e67-9da76159260b"
        },
        "item": {
          "id": "6b91c79d-3b2c-4969-9ac8-fbfb514da62a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "61ddac16-be0f-4801-9293-0a7564c8c288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4765fc64-0753-4f1b-98e8-cebac4b2c00c",
        "cursor": {
          "ref": "09297345-1777-489d-8be8-f99b12ee4224",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6c64926e-2720-425c-95e8-5891d4f76bd7"
        },
        "item": {
          "id": "4765fc64-0753-4f1b-98e8-cebac4b2c00c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f368fae6-1e65-4a3d-85dd-9f19b378f87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b89543-f125-4a14-b44a-035c9ab9a90d",
        "cursor": {
          "ref": "5137beb3-c0b5-40a5-b5da-fa5d601ded02",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "970d138b-2133-4f65-9b59-0bea374348bf"
        },
        "item": {
          "id": "05b89543-f125-4a14-b44a-035c9ab9a90d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "00c72876-0726-40e7-aa06-ace555c6e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bb0005-e0a6-4d28-b3ed-9b0cce89a14f",
        "cursor": {
          "ref": "8087c801-c6c0-49fb-8e1f-d108067bc2e8",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "55dcedc0-fd5c-4ec0-aae9-7504fa76e7a5"
        },
        "item": {
          "id": "e5bb0005-e0a6-4d28-b3ed-9b0cce89a14f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "565fcf20-a958-4d0f-9b49-fafa94d2a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f641d021-8ee6-43c4-8c14-82d3d5836b87",
        "cursor": {
          "ref": "eea7cf86-8312-4b12-8ce2-ce0b71ac25e5",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "86b6a77f-f97d-49fd-9095-934b447000d3"
        },
        "item": {
          "id": "f641d021-8ee6-43c4-8c14-82d3d5836b87",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66bafc90-2dcb-46ec-96ee-0edbe1075ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c4102d-447b-4477-8c65-807b50fc3391",
        "cursor": {
          "ref": "c60d00d5-2f0e-4e21-a94c-2ff9c6b6904a",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d0c196cd-e571-4b47-8220-19d464ca386c"
        },
        "item": {
          "id": "71c4102d-447b-4477-8c65-807b50fc3391",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed27b040-2660-481a-8449-4a77f24a6ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ba48ee-1f16-4c47-a120-88bd0a72f4f6",
        "cursor": {
          "ref": "e8a12266-1ab2-4a23-addc-12c1888bc9c8",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "053d652b-e146-4c93-8800-6275f3566f7f"
        },
        "item": {
          "id": "11ba48ee-1f16-4c47-a120-88bd0a72f4f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "33219010-8620-41b6-8af8-1042b49f03c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c53a6-6377-43d7-b436-85d9b1553574",
        "cursor": {
          "ref": "976bf643-613f-46dd-9c8a-b53c62231e5b",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f5d56adb-4c1d-4316-98a8-ea2a5cf3c7e0"
        },
        "item": {
          "id": "ee3c53a6-6377-43d7-b436-85d9b1553574",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb1eb86b-16db-4a99-a1df-7b9d29cbbeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d54dc71-9754-425b-83fc-7831037717af",
        "cursor": {
          "ref": "4f89efa5-9784-41b1-ba96-f3efc707ed80",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "afdd39f4-cc5c-4274-b5ef-8a4bfc3220a3"
        },
        "item": {
          "id": "4d54dc71-9754-425b-83fc-7831037717af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9360785-380e-4b94-982c-529effe38d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5d0668-ec5d-41d1-9e6e-14afcde4a05b",
        "cursor": {
          "ref": "d39ba889-4734-4f0c-b1c8-7fc40882f277",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9c4420e8-9f1e-4a68-bf81-b36c7dbae2be"
        },
        "item": {
          "id": "bb5d0668-ec5d-41d1-9e6e-14afcde4a05b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1186de75-7ee3-40b3-b5f3-cfe3d40dbd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bb6ace-355c-4baa-a5c8-c19e1ae4ebb0",
        "cursor": {
          "ref": "0be137e3-d5dd-4c97-84d0-740676b6fb60",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9269dd9e-6534-46b8-a400-47f5143b3682"
        },
        "item": {
          "id": "88bb6ace-355c-4baa-a5c8-c19e1ae4ebb0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6d06a41-4369-4065-a6da-31634e600b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67350c64-28f5-44b1-848e-8f616eb23197",
        "cursor": {
          "ref": "8a5652fd-39ae-471b-a606-0ce8703fa3f5",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e44497e9-3c4d-40c0-80be-ba55c73d7cf7"
        },
        "item": {
          "id": "67350c64-28f5-44b1-848e-8f616eb23197",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b86639c-f436-488a-9128-b1b3b766df72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9999a46d-e766-4b5a-baf0-e8796032e88f",
        "cursor": {
          "ref": "819698a1-02be-4b63-8a9b-db2c7ebb2c4c",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1a89ee7-b1db-4fb4-982c-29ea9015a136"
        },
        "item": {
          "id": "9999a46d-e766-4b5a-baf0-e8796032e88f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "824955ea-7632-45b0-9feb-334b4552a034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c19e77-0e01-43af-8242-1d6c9be54509",
        "cursor": {
          "ref": "9c19552c-6b0d-411d-ab11-b0a333e59c0d",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7ea943fd-7d16-49e4-9dbb-fd7e6a4733d0"
        },
        "item": {
          "id": "e9c19e77-0e01-43af-8242-1d6c9be54509",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba134b3e-c102-4e04-ae55-2a421c1640ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c039ca-a6b9-4109-95a4-6647847e744c",
        "cursor": {
          "ref": "b3c1c570-e007-4888-ae79-d8a18cb585a1",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "46b46cb2-e1d2-4fcf-a61c-16043c81b9e2"
        },
        "item": {
          "id": "33c039ca-a6b9-4109-95a4-6647847e744c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe1f8586-be9e-4ed2-a40d-a4e32bd437be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d6bd85-4a83-4a6b-a1f3-92334b66f3d9",
        "cursor": {
          "ref": "8fa6d807-fee0-4d1e-9266-b39b4742916b",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4ee64e32-d903-4e74-9996-601194cf5067"
        },
        "item": {
          "id": "55d6bd85-4a83-4a6b-a1f3-92334b66f3d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cac77ed2-39a9-46d5-b07f-dee44f1b6b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b03eae-92a9-422f-8a82-c4894b87e748",
        "cursor": {
          "ref": "6cc08b25-ce3d-4664-ae7a-c32a7a11ba36",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2cf4a9d5-fbdf-4fc5-9826-ee38cee7ee11"
        },
        "item": {
          "id": "34b03eae-92a9-422f-8a82-c4894b87e748",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0dc138e4-8b04-4e06-a025-5102d3046f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f06ef-ede5-4dcb-ad20-c81242c3c7d2",
        "cursor": {
          "ref": "3572c41d-d6dc-4a42-b46d-383d00937349",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5646a645-c6f6-4780-9067-8f7d3e537957"
        },
        "item": {
          "id": "833f06ef-ede5-4dcb-ad20-c81242c3c7d2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e23e1191-6280-4f55-a224-b58732a6da2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d86a7d3-d1bc-406f-88a1-8a6f41e760b6",
        "cursor": {
          "ref": "bcbd9eb6-e9ff-4a26-b4dd-f31e07d67b6d",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "31ee65c8-6f9f-4902-a412-dfd03cdd92d9"
        },
        "item": {
          "id": "8d86a7d3-d1bc-406f-88a1-8a6f41e760b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6fa6ce02-0795-40d1-ae8b-2671eddfd46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ead6c45-e08d-4ffe-ac70-75c3feca3655",
        "cursor": {
          "ref": "bf8f83d4-3151-4238-acd2-b521aa72fdf5",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "504ff605-1aec-4036-8494-af8f0995a093"
        },
        "item": {
          "id": "9ead6c45-e08d-4ffe-ac70-75c3feca3655",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "944bb0cd-e022-4b43-9262-0f654b22cb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cef630-66d5-4f47-a5ad-65a5ff1e377e",
        "cursor": {
          "ref": "d0146228-eae3-4fd3-8ceb-cd8dce08021f",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8b249ef2-80a5-445f-a541-cc07db54762f"
        },
        "item": {
          "id": "12cef630-66d5-4f47-a5ad-65a5ff1e377e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2f33c66d-9b77-4d56-b65f-6bb503beb303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b9abb-acfe-499a-b0c5-d2a0a57b6298",
        "cursor": {
          "ref": "bbfbc555-0247-44c1-8e2e-013db65182bd",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "40625131-ff16-4578-944d-8a5c72602a45"
        },
        "item": {
          "id": "414b9abb-acfe-499a-b0c5-d2a0a57b6298",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24e81b2d-6295-4333-815c-e1172665c6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb1c09d-48d9-4739-a2f9-cb175ff84736",
        "cursor": {
          "ref": "9e04e14d-b2b0-4ec5-8de6-aadd8b31e25b",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "28822944-ceed-4265-89f7-8ed191a1ae73"
        },
        "item": {
          "id": "7cb1c09d-48d9-4739-a2f9-cb175ff84736",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3715f42b-a744-499d-bd91-dce2f6b4d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5201ff-95c5-4a3d-85e2-8d3f43a782a2",
        "cursor": {
          "ref": "ce2f7815-8959-43b7-b769-04d84c3557e9",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "89223031-1e4d-43ed-87c5-c856ddd23d09"
        },
        "item": {
          "id": "7d5201ff-95c5-4a3d-85e2-8d3f43a782a2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dd9c2636-1b97-45d2-8140-468933c1be2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d063426c-be4f-4d8b-8f08-3b73232a7f54",
        "cursor": {
          "ref": "e887b2d8-290a-450e-a278-a7a8ce519bc0",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93e0a284-ecb1-4776-a9f5-b87b0c1c9af1"
        },
        "item": {
          "id": "d063426c-be4f-4d8b-8f08-3b73232a7f54",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "34599adb-3956-454f-af52-a2ee555f2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5183f35f-aeff-430e-821c-368b49fac4d8",
        "cursor": {
          "ref": "6ff8be34-1904-4f74-92a1-6a8699f53158",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "017ede6c-4e97-4f31-ac9b-ce03bbb0fb12"
        },
        "item": {
          "id": "5183f35f-aeff-430e-821c-368b49fac4d8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "adefb6b1-c616-404f-a8dd-064351277f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa5c1a-7b59-4686-a188-78ba2c64efdf",
        "cursor": {
          "ref": "8f7b0c30-1932-4311-8b78-90f596078142",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6079c1fe-ca52-4bf2-9334-fef25de7e606"
        },
        "item": {
          "id": "fbfa5c1a-7b59-4686-a188-78ba2c64efdf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8a833b73-bfdc-4928-9c53-0d4b8a95e10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ad0609-89b9-4e64-8a63-b04bef283198",
        "cursor": {
          "ref": "8a503fbb-d42f-49bc-aaff-e326623d61fd",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b1e8b614-912c-4989-81c8-184ee704e173"
        },
        "item": {
          "id": "52ad0609-89b9-4e64-8a63-b04bef283198",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4915ab7d-2a09-4b6f-afd6-e4ce72c656e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60281a2-05e8-4f41-b436-63fc954f1fb2",
        "cursor": {
          "ref": "0cf380d6-e5ca-43b8-be57-d86d0635afc5",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74ab4c5a-aa76-4b4d-aa21-09dbef70964b"
        },
        "item": {
          "id": "d60281a2-05e8-4f41-b436-63fc954f1fb2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "72061f15-a46a-47b3-ba8c-083e89c66fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e1eb2-b8fa-4d07-8c87-c553a39aeb85",
        "cursor": {
          "ref": "22953687-775e-463f-8e95-8c8b1d0e3769",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a589be7c-b53e-44dc-9331-33aca81a98f1"
        },
        "item": {
          "id": "887e1eb2-b8fa-4d07-8c87-c553a39aeb85",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e2bd1598-3b36-43e1-9fc9-d4f3c302d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1236336b-4d13-4871-bfd6-4fe07b0227e9",
        "cursor": {
          "ref": "e1ec56e5-6e20-4b12-9769-bdf493ca6a63",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9d974cf6-394e-45f5-b473-557e7e4fc24e"
        },
        "item": {
          "id": "1236336b-4d13-4871-bfd6-4fe07b0227e9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83561942-cc81-42f9-9738-c5af0e64a428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aa2ef6-e226-4560-a51b-d721a3a75f0e",
        "cursor": {
          "ref": "bb33371f-a8e2-45ee-be88-2dc068d8e4fd",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d289e0a4-49e8-4e30-9366-71a8052adedb"
        },
        "item": {
          "id": "38aa2ef6-e226-4560-a51b-d721a3a75f0e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "910e577d-0afc-48b0-bb33-09e54afa7841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a25e46-7d08-404f-8dc9-6ebbb0608ac5",
        "cursor": {
          "ref": "72cbe227-843a-4a12-a7bc-859faf372297",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5337dba-bc81-48e9-b4ce-69a9dfbfa14e"
        },
        "item": {
          "id": "89a25e46-7d08-404f-8dc9-6ebbb0608ac5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a622138a-37ac-4529-8faa-087a854279ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d43676-eb33-441a-a341-4a0486006c96",
        "cursor": {
          "ref": "18355132-f00b-42c5-8a1b-f43f4a914ed7",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7f00300e-9196-45d5-b0b5-96ad81502c1d"
        },
        "item": {
          "id": "d0d43676-eb33-441a-a341-4a0486006c96",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "317f5c32-0889-42e2-b39a-0378f10290a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1235cfa-f320-4752-8a6f-2da9b9bd22a9",
        "cursor": {
          "ref": "98c375e4-43d6-494f-b207-599665d312d4",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "19585370-5602-4671-b511-e9f29b20bb3a"
        },
        "item": {
          "id": "b1235cfa-f320-4752-8a6f-2da9b9bd22a9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e0b47e2c-a9bd-4834-8238-72df8f7ed813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f39f02-68fa-4f13-b2cf-1e85cd18b382",
        "cursor": {
          "ref": "78832c02-16a5-4725-a880-9d015f608160",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8aeddc5a-0297-4c5a-aefc-6c0b7cc6471e"
        },
        "item": {
          "id": "f8f39f02-68fa-4f13-b2cf-1e85cd18b382",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7e9f76f2-af5d-453a-99f9-c0993c978547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3068c24-c5cf-417d-8645-4133d737b899",
        "cursor": {
          "ref": "3c6151f9-1566-451b-9c48-6b386e7ac12a",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc4fbbfc-4a00-43c3-84ea-cd2e700e96d8"
        },
        "item": {
          "id": "c3068c24-c5cf-417d-8645-4133d737b899",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "efc69655-f1e3-467b-b815-372d2caaa642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e13ad2-36f8-4bd2-853c-f3742256bda8",
        "cursor": {
          "ref": "b0f900df-c5fe-4a04-ac1d-da4dac1cdeb9",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0fbad2f5-580c-47f4-9715-5a4f617c1669"
        },
        "item": {
          "id": "32e13ad2-36f8-4bd2-853c-f3742256bda8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "222c85f5-784a-4f26-b0c8-6e6c15ef90a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf130f0-eaa0-47d2-b2e6-a47f6a3b2c64",
        "cursor": {
          "ref": "c453a95c-305b-4d11-95fc-2a1b3ea678df",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb972d46-ace5-44b1-acff-913a5e28112e"
        },
        "item": {
          "id": "adf130f0-eaa0-47d2-b2e6-a47f6a3b2c64",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a3504d77-0d2f-4880-9c41-717d8636cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b52f081-72c9-4c49-9c86-c9f03c8fe2a6",
        "cursor": {
          "ref": "0e59dffd-984d-423a-8c14-dd3ec44c2445",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cb4fa4a1-4c52-4f90-86b0-a67fa63f523f"
        },
        "item": {
          "id": "3b52f081-72c9-4c49-9c86-c9f03c8fe2a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2ef9f04f-efa1-4117-bd64-9c2e65baad23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c8530d-8326-4b42-a52d-356cd1a99518",
        "cursor": {
          "ref": "9399fdcd-1624-4ec3-acbe-e05e0235926f",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6acd292a-5298-44e2-a9eb-f7df4edda10e"
        },
        "item": {
          "id": "a5c8530d-8326-4b42-a52d-356cd1a99518",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd1dfba8-390c-44bf-a8b1-2fe85c77d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c0087-f1b0-4b32-8428-7ecce33c637c",
        "cursor": {
          "ref": "a6f437df-83b9-492c-b55e-d7880191fedf",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "023b6bd3-cf08-4f7c-92d1-9550158d6aee"
        },
        "item": {
          "id": "7d1c0087-f1b0-4b32-8428-7ecce33c637c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d4bd0ee1-d3b3-4240-9b28-2ceb9463ece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c16cc-6c52-4311-b019-73485d2a51fd",
        "cursor": {
          "ref": "f3a93bce-189c-4567-b519-f125f0fb5aa7",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c21e6ee6-0711-401a-9a4e-c5982f25a98a"
        },
        "item": {
          "id": "e19c16cc-6c52-4311-b019-73485d2a51fd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1321307-41f6-4d71-9451-e73ab6f19978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bde96f-3dfa-4494-a237-668bd11ca518",
        "cursor": {
          "ref": "c651a1d7-cf34-4f79-889b-2c0808bbc3c1",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bba3b926-df4a-4a20-b00e-2b930f846036"
        },
        "item": {
          "id": "54bde96f-3dfa-4494-a237-668bd11ca518",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1b0204c6-b580-4ce1-86f6-18baa496b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2577769e-f246-4ecd-a55b-eb5be2934ed9",
        "cursor": {
          "ref": "1daa52e0-578b-40a9-96fe-6d5d994dbd86",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e7af03a0-5684-4392-980a-2de89fdb306d"
        },
        "item": {
          "id": "2577769e-f246-4ecd-a55b-eb5be2934ed9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7c9bad62-11f1-4bf0-83e0-6d0d927a769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9c24ad-5670-47d9-b2f7-d927c7a0ac9b",
        "cursor": {
          "ref": "ca9cb1a9-1d2a-42f8-81c7-57734e5be636",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9359464-b84e-45d8-ac94-d982157528ef"
        },
        "item": {
          "id": "cf9c24ad-5670-47d9-b2f7-d927c7a0ac9b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "151d445e-a63f-4114-9b60-9e5418dc83d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9d3167-58d2-443d-b153-6f6db7fc12e8",
        "cursor": {
          "ref": "126184ba-9856-458c-ac64-de6769da6998",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9ec8f454-9268-47af-9061-cb05629d823a"
        },
        "item": {
          "id": "ba9d3167-58d2-443d-b153-6f6db7fc12e8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "09c5191d-b206-4b89-9546-52f49a6e9779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77422243-1549-485f-b5ff-8ab1fab228fd",
        "cursor": {
          "ref": "9b34b80f-e571-4363-871e-52d798c9d8ca",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "66c4daec-0c1c-438d-876d-6cbcb1127735"
        },
        "item": {
          "id": "77422243-1549-485f-b5ff-8ab1fab228fd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "614467e4-942c-472b-a104-d663ba37b9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c67d3-dc5e-4968-a539-f316c181ffb8",
        "cursor": {
          "ref": "821042da-0dcf-48cf-9d84-5138296d7cdf",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "10592583-0794-4629-b685-3f524db87bd4"
        },
        "item": {
          "id": "076c67d3-dc5e-4968-a539-f316c181ffb8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1c5245c3-9f26-4f97-b1cb-9f4abd5f605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adba5c6-a152-409a-83eb-b0fb9165e068",
        "cursor": {
          "ref": "ec5f548d-9e85-4520-b1f7-ed3076a27196",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2015f5b1-f8b8-4145-bc1a-87cb8dea8b73"
        },
        "item": {
          "id": "9adba5c6-a152-409a-83eb-b0fb9165e068",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91df5084-9ca4-42da-9e30-8ac8cd952fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195f17a-f066-43d0-a275-c5e38fb08604",
        "cursor": {
          "ref": "97809b4e-7fe3-460a-bc75-528b48b14d88",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a26f349b-8072-4d31-8f52-c58863c7c5d5"
        },
        "item": {
          "id": "4195f17a-f066-43d0-a275-c5e38fb08604",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e525895b-7279-4611-98dc-cd3f3978996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2827da62-2d96-49d7-8bf9-5632748e262b",
        "cursor": {
          "ref": "d6b0e698-6e12-4d9d-9a03-e7c1e89d0486",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6a34aa0c-e7e8-4c18-a574-7a6673e29726"
        },
        "item": {
          "id": "2827da62-2d96-49d7-8bf9-5632748e262b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d7faf44a-5c3b-4ca7-b69b-780a400fbf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560febc6-cabc-4028-90c8-4085b7bb2b2e",
        "cursor": {
          "ref": "a818c332-41f9-495a-8277-5cbd9cbe4137",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "894ab07b-2df5-4d37-937a-6b03b035d44f"
        },
        "item": {
          "id": "560febc6-cabc-4028-90c8-4085b7bb2b2e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "58647a27-d61f-4d45-b9b1-403a95a136d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f61307-98ac-4cb5-91cc-8a6f5f976755",
        "cursor": {
          "ref": "525fd153-8530-4fb3-9ce6-7292b8bd9fc2",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "04ba799a-d237-425a-8520-cd92cef798d2"
        },
        "item": {
          "id": "e8f61307-98ac-4cb5-91cc-8a6f5f976755",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f35a4eb-2811-4af3-9c94-970e6cbd65c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47813cdd-a639-4920-8027-cd0152c389d2",
        "cursor": {
          "ref": "831a7d0f-6df1-4111-81e3-b9aad12f9458",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8d71ffa9-b506-474a-a246-0d185b0bdf6e"
        },
        "item": {
          "id": "47813cdd-a639-4920-8027-cd0152c389d2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0e06b0d4-5572-4aad-88b2-084aff410239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16236731-1866-48ed-8502-dcbbda2ea0d7",
        "cursor": {
          "ref": "55b3f099-66d2-4660-9e0a-eaaba342e515",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "97a70f09-ab23-400b-be7b-c7bdf0344f12"
        },
        "item": {
          "id": "16236731-1866-48ed-8502-dcbbda2ea0d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b43b0a3d-334b-4064-86ca-d12e21cbe3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ae62cf-09ed-40e5-9205-ec80e365b13d",
        "cursor": {
          "ref": "084124d2-c30d-451d-ad00-d43259167811",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1dc7b701-89dd-40fe-838d-c5ed8c6d7556"
        },
        "item": {
          "id": "86ae62cf-09ed-40e5-9205-ec80e365b13d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de99ae67-f9e0-4793-92bc-ed608315bb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5add32d8-a50c-49ce-bdfa-3a2b32d357a0",
        "cursor": {
          "ref": "417df7dc-6719-43a6-b18f-6cf9bfca11c7",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22b13f73-9014-463a-9805-2cd1290b13aa"
        },
        "item": {
          "id": "5add32d8-a50c-49ce-bdfa-3a2b32d357a0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a4643b27-d545-4e5b-a2f2-d45d0f3fa8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c50bc5-8056-4797-aad8-49f592c98ba2",
        "cursor": {
          "ref": "512a0f0e-84cf-4117-b38c-7fe30148e288",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cca2adb3-0301-484a-ad81-b00c71bea0b7"
        },
        "item": {
          "id": "84c50bc5-8056-4797-aad8-49f592c98ba2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ee86021b-2c2d-4361-9970-8669652bd4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac6201f-d037-4a29-a98f-05ea90bea706",
        "cursor": {
          "ref": "0ce2a6d5-c0ef-4a89-90c4-d6ea4f144fdd",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ca07aef0-50cf-4fc1-a7d8-b4c1af4e2e2a"
        },
        "item": {
          "id": "dac6201f-d037-4a29-a98f-05ea90bea706",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "36b87bd9-1e18-48b1-8bd1-f7b0ea75607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3071aae-be18-4f46-a629-8ddfa298381f",
        "cursor": {
          "ref": "35f1ef98-7082-43dd-ae87-a654e84c051a",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8dec325-2e1e-40d2-86b8-d9d06d427233"
        },
        "item": {
          "id": "d3071aae-be18-4f46-a629-8ddfa298381f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d3fb4ad-ae49-46d7-8e40-fe6fedff3737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dfd0ca-6dbf-4774-97c4-0ec73974b1eb",
        "cursor": {
          "ref": "fbfe47d9-8972-4b0e-b747-ef7ae77f4620",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "119d8516-05cc-47d3-9ff7-a82c3e301f71"
        },
        "item": {
          "id": "f5dfd0ca-6dbf-4774-97c4-0ec73974b1eb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "498a7fca-6ca7-4239-815c-ef6baec9c4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dea0f15-d3ad-47a2-b036-449cf8d24c9c",
        "cursor": {
          "ref": "754a8429-18c9-4516-b518-c1853fa2fac4",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7020f6c7-3623-4110-97f5-b05e2dda10e0"
        },
        "item": {
          "id": "5dea0f15-d3ad-47a2-b036-449cf8d24c9c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "11a52cbf-b80f-488e-a199-18c23e59d2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec93338-a8d0-456f-8738-41f8ca909dc4",
        "cursor": {
          "ref": "59de425c-08ca-4178-9fe0-c83b4dc896cb",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c06a0e37-e69b-4632-9d95-4b9112729227"
        },
        "item": {
          "id": "8ec93338-a8d0-456f-8738-41f8ca909dc4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89badb81-0e28-4087-afe1-160151d1cd9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaabf39a-2710-4534-b7b2-ae4d8b561f54",
        "cursor": {
          "ref": "90276486-0ba9-4523-859c-972f96c5d4e2",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5a621f43-0853-4089-8fd1-ff1df1605964"
        },
        "item": {
          "id": "aaabf39a-2710-4534-b7b2-ae4d8b561f54",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e6edd80d-6236-488c-8d2b-6012c38c8807",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede7407e-7180-40df-ab1d-53838a08b8fd",
        "cursor": {
          "ref": "2332ba52-91ec-45ea-927d-dc0bd6ba397e",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c7cb07be-6c14-4c7d-9e59-1308be611ece"
        },
        "item": {
          "id": "ede7407e-7180-40df-ab1d-53838a08b8fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ad9fe3c-38a1-4c0f-903d-85a12b63e2b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede7407e-7180-40df-ab1d-53838a08b8fd",
        "cursor": {
          "ref": "2332ba52-91ec-45ea-927d-dc0bd6ba397e",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c7cb07be-6c14-4c7d-9e59-1308be611ece"
        },
        "item": {
          "id": "ede7407e-7180-40df-ab1d-53838a08b8fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ad9fe3c-38a1-4c0f-903d-85a12b63e2b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7514f111-415b-49ce-923d-b45e5e90f4ea",
        "cursor": {
          "ref": "213002ce-463c-4d4e-9d4c-113b671aab82",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3e56f52d-13fb-42fb-bba6-7bae4102d4dc"
        },
        "item": {
          "id": "7514f111-415b-49ce-923d-b45e5e90f4ea",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "db47e61d-fc45-4230-b4ba-65fb8b6d80ea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4118ef-15ec-4bf8-8311-84f89689526e",
        "cursor": {
          "ref": "967f92ad-9a24-489e-adc2-1a0b8293811b",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f1a63b45-9f5e-44d2-a15b-8b207548b84a"
        },
        "item": {
          "id": "7d4118ef-15ec-4bf8-8311-84f89689526e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3957d6de-e81a-4922-b5e4-5994d67ac8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "7d4118ef-15ec-4bf8-8311-84f89689526e",
        "cursor": {
          "ref": "967f92ad-9a24-489e-adc2-1a0b8293811b",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f1a63b45-9f5e-44d2-a15b-8b207548b84a"
        },
        "item": {
          "id": "7d4118ef-15ec-4bf8-8311-84f89689526e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3957d6de-e81a-4922-b5e4-5994d67ac8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "3c2e3ea2-39f5-4571-b562-17b26a07389e",
        "cursor": {
          "ref": "dc2930fe-e2a7-4a89-be49-b2bab2dc6a0a",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ab5e9a04-a160-4001-a595-d438afcb5685"
        },
        "item": {
          "id": "3c2e3ea2-39f5-4571-b562-17b26a07389e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1e7d250c-5fe5-4024-811e-9fd9af2ea295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "df7d4129-47a3-447f-b736-4a4af21b5d07",
        "cursor": {
          "ref": "06945d6c-f457-405f-b29f-a4567850dd72",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d9ac10ec-e30a-4145-84e3-cf83ce4b72af"
        },
        "item": {
          "id": "df7d4129-47a3-447f-b736-4a4af21b5d07",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10cb6c31-ea91-4b26-84a5-59d6d35a3aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7d4129-47a3-447f-b736-4a4af21b5d07",
        "cursor": {
          "ref": "06945d6c-f457-405f-b29f-a4567850dd72",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d9ac10ec-e30a-4145-84e3-cf83ce4b72af"
        },
        "item": {
          "id": "df7d4129-47a3-447f-b736-4a4af21b5d07",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10cb6c31-ea91-4b26-84a5-59d6d35a3aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e76ec6c-ad63-4758-bbfd-74f616b888a9",
        "cursor": {
          "ref": "431a583a-a929-420a-90d2-8ce304131e10",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f33d5b38-ac86-4f7d-923c-fbe2fd41b546"
        },
        "item": {
          "id": "8e76ec6c-ad63-4758-bbfd-74f616b888a9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "287f688d-b486-4e1f-81fc-d55e3e0512a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}