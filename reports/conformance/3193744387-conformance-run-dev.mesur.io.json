{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3e690aa-dc2a-4799-b486-6c8b0ecfeeba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8196c7c2-e9c2-4506-bda7-d5e67a22ce11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e116b02-32b7-4f37-b90e-39423de25406",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b1095f4-9949-4079-9efc-1d6242ce583e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be9e6cf8-8148-4ddf-afd0-41bf3654d207"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "516da89e-e809-437d-b482-565c723af61f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f1ad8e3e-8e72-494a-8126-3eb68293742f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19b6d6c3-9b88-4a32-ad3b-91d8c76bfa93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61d5eee4-3541-48bd-8741-25909d3c9ee2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33acd5f7-d72a-44bf-a266-3109ddab03f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef9f0473-51d3-4031-821e-ff63d7266d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb2411f-860d-475a-85f8-e0e50b545a73",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf9f096-eef0-4483-93da-dfc2a0ac8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c9f1c76-5bc0-4c69-ab7a-6a01c302ebd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5288ce-0772-4e7a-9e43-62e338196835",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a007d30-3702-4972-9abf-123e0121a324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71cd96be-430a-42c0-9a53-eaf61fce53ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70e1f1ff-3662-480e-9982-0759ed7fa793",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3af4cf7-26e4-41f2-9e48-37b11dd2244f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc357aa-33b9-4397-b6e8-da6e01da2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cab52891-87f7-47bb-91de-066fc6182227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f73608b-2d71-4861-a8f5-6af94b2e4c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109b7af5-e18b-4f61-82d4-d0eab7baa335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce3a548-21e7-4b79-83f8-98db56b0a270",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c0e44-0d28-4f48-814e-e118b6b5e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec4c55d0-441f-4973-b177-613e25b1862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86988d41-4bf2-4ada-8960-18351d2a9e03",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "aaf14613-d44e-451d-816c-ca31a84885d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56e09e79-e1be-45ca-b85e-4d6dc1ef209c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "130f9072-d00d-4d4d-9150-2ad2c040d1b3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dabe7601-5862-492f-b231-79b3250fb758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "efdd2f5d-7fb3-4db3-8530-5834c10039f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92a9fa79-9911-401d-8052-f816a84ff0cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "674e3c21-7b89-4c30-9413-5639a56e1259"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e651ac-b537-4850-8af3-edf878e8855e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a25238a2-6258-4277-8b93-4fd95b15bac7"
            }
          }
        ]
      },
      {
        "id": "24a6ba10-dd5d-4047-a44e-b65613550ea2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bac92b4d-e60b-4fb1-88e1-611be2100330",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a718305-5521-449c-9fdb-b5a8322e1f34",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2c7f6133-748f-4483-a21e-821efd56b12f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4bed7d-1da4-4132-9699-6501dced5a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed217d0b-9354-4990-9932-053c366f68ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24766295-4d1d-4d0f-b542-d51e7cdf3048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e39b9b-2f93-45b6-bc82-c2ce469460ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff688019-272c-46ed-9f7f-9f0c369336e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f840a8f-ac79-4f45-80bd-6747ec174e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797fadd5-6f7f-4bc3-b314-a94f32e83501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44db7d8-3fa7-46a6-81e4-fb23afd96a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c368cf-be78-4b15-90e9-dd5729d5d69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5065be30-76b0-4341-833d-017dda82fb04",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee2fabc-1ecd-4f11-bb63-41d4a3a78178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e791b5e5-0a8a-4a40-8928-7ff75066b594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8255c0c8-4c91-4f7f-913f-c6ef636bec13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49319b6-6e0d-489a-b0da-87c5bce9313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea29b3b5-78e7-44a1-b6aa-2e819804f0b6",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf742d9-66f5-4a8a-8e6a-06dbc2197c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c274b6c8-3ae1-49ba-a5ad-a7f09be42158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6666efee-9cdd-4f39-9a57-93314344198e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffff349e-5746-4325-b13f-c6da8f7dfa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841258c2-000c-42ba-850c-d0196b1a05f5",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3af25-7be8-45bc-b918-5e5a217bdaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f630e3-bfd8-4d0d-b2cb-be9cde2184d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429184ef-c9bc-49d8-a03a-5e2fcb00cf40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc82e697-c9ac-4e65-85e1-4369191b6930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6540ca8e-7a47-489a-9098-4a46ffb05fad",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724b8257-6b62-45e8-ab1e-57bd7170895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf0ecba-3c00-49c1-bd1c-675bf27f8a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a0f141-40cb-4f9b-b5ed-46aa2cd8c603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ae394c-358c-491d-bbbb-c430fcf30703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f392a906-b5f7-4e34-b410-42e3e54d521f",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7375f464-d43b-4f17-b145-c660a633d4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f082a18-592d-429e-b071-b8cd2d58cf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdba96e-558d-452f-9194-cff8aecc9a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84806d3b-e26d-471a-87ed-282d4b3376ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d8f30-0dfc-486a-abc3-4b9bad9ab6c0",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8db05a-1ff7-4a60-b539-fab09b7ec010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a45770-5710-49fc-8fd6-5eda3d39fc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9ad414-bc50-4fd7-b135-f86317659708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c31880e-9c09-40bf-84ab-854954938eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a774a9-b6f8-4733-8bc3-2beb137bead5",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d186c058-11c0-4409-8b1c-05ca8763c069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b0a8f8-3c41-4c43-a2a5-05b72829984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69769cf5-72f9-447c-8754-5168ef004400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68221e32-793b-450c-81a9-1f3a48c9f7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c1cde9-835a-4635-8e24-a6b0ccd8632e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e70517c-a948-4c9b-b2bd-3cd7194ef48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d2c6e0-4082-4a76-ba5d-b3aea9967bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f388e7-6e12-4fdb-9c0d-df2a07fcdce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebb9d0d-2f90-4404-8f8c-0ba1d1f160dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263bee2a-8435-4746-b773-3f383ce54043",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f78e2bf-38cd-433b-ad38-c9c384b8ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7ddd07-e0ea-4e69-8dcc-1bda2854e258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8119bc-df98-4909-815e-fe17c7ad315d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08556bf2-37e0-4e95-bb47-70a4b0b920d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e110c049-2658-4d47-ae96-da0a45d1162b",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131fdc99-0a05-4870-aaf1-ddf0879cf197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0580ca8-7914-412f-8feb-53d6ef5974fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa4a8da-0dbe-40af-910a-5ee1c8a2e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b93bab57-62fe-434b-a2d2-d07f54836a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a4b2ce-5417-40be-acee-c7090cb86ee5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77957a30-deee-4c25-b0cf-a3335aa0e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93789b32-adb2-41c0-b7b3-59ef929f8091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee031514-dece-45a9-8451-7cc3a3088f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "adf21217-2e19-4eda-a79b-29839391d00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdecc82e-4447-44c7-bb3e-42dafb9ced6f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f20e27-48c8-49f7-907b-b1fec7408e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c512c1-68d4-4034-aefb-c08333778df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344c85cb-52b1-481f-8f29-cd633695db2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90789d0a-d97e-42eb-a691-3f603fda264f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bd0de4-3948-4e51-a0b9-2d17b89acc6d",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad0a754-ba66-496d-9858-09d3a4bc16f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2931fe8e-d0e4-4cae-928b-c8758dafd0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b989e335-ddc7-4ab9-816a-993ba0b3bee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5773c57-d7b1-427e-9a45-c74972edad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c947ac-1829-41a2-8c75-e67ddd04f63b",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be561ba-65ac-44e9-8415-0d181cdf8d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ff6722-c48d-46a3-8861-47a54dc900bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dfd61d-b7a3-4d37-be1a-e6c58cfb69e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "25cad4bd-55a7-4202-a219-ae75b5a2abb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11f3cfa-fa50-4457-984b-cb52af3b96e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9b55df-8920-4200-8281-a19fa30524d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed306ea-62e1-4138-af55-12366754e673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7552ed29-431d-44a9-95b0-704329bbaa78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "45f239b0-2d27-4797-aa5c-d9d4440d9868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6f9267-e184-492b-a86e-e1a66ed32755",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20688ef2-6512-4ff1-b30a-ccdc5578ba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635dd1cd-64e3-49e6-8f50-f4bcc9feca7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d99feb-d63e-4fe6-9a45-4f037790c224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8056718c-989d-48c8-b8e4-89e7f1b7ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0ed47a-46ae-4c11-bce2-c9e6e724d5da",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47232ec-4618-469d-ba4d-db34b60c3f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4daaab4a-c023-4be1-b9b7-d877e5c88409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90024fad-69bd-4205-97cc-3ed19d64e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cde3b48-14ba-4446-b63c-2756ce9daec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bd7201-0220-4c1e-b406-3c7a9f373305",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c76cb10-1f93-4756-b503-97b06cb291a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bed848-1719-4098-b864-dfeec620a62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ae5e8-7e48-4f9a-9248-582322386285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7e91cb-30eb-4993-81a8-aab3b5d79b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22c68ba-2182-48ce-86f8-a178612a46b5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba86ec0-0c55-46e9-a963-1f133e397bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d833272-7441-4f2b-8e85-ed6ad1829ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fec380e-4c08-424f-8609-02bfffd29100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1f2373-d279-4124-8e00-48a6fb6e5926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc53c034-9645-42b2-87ef-87c225245f61",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b93d45e-e946-4563-862c-676fc58877ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db5b524-943f-4e47-aaf0-41a691a76037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd91d499-c3ce-450d-891e-6ca11e87f511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b01a59-3a16-4d67-b7dd-80e0eb9ddaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb316967-5ebb-4eb8-bd93-35e5d3d22a2b",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0723b8d9-3313-48e8-aee7-f680c6c2db64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211bcb40-acc8-4179-a9eb-f4758156a121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b94f635-5457-4ecd-ab98-44a6a00882eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752f85f9-252f-4c32-a6df-f0348c1718a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba761860-9ebc-4f97-8898-bcbc7da24e0f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e001afe-18dd-4a4d-a16b-71529fe1f18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f737c3e-8cf0-4e3e-9010-2d70f0cbb109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a36c58-7e36-4989-ac8d-8acf45085968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25581256-de17-40e3-97d9-4c42abc6c14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bdc306-d7f1-4763-921f-5c68c5edb0b4",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f407f8-1ae1-47a1-be52-45e768f52c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a4ac2a-3945-4e48-b2c3-3d287c22bd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba6e6e-164a-4796-8f64-dd255aabd22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc516bb-816f-4853-986b-3d87c33c09a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651a5397-308f-4ab6-94e1-2da4a3fcc47e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff5602-9e81-464c-987a-cf91110e557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11734dab-69ef-41f2-bcda-f6d9dbd5b76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced0bbb9-ba9d-411f-b451-9063c31d0e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f99887c-e817-48a9-a8b7-13ce24a5e2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0905c8a6-988c-4509-b629-46ba86473764",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58548ad0-fb98-42b4-80cf-a481d1558546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d50452-8a7e-4d68-b895-90f68f88b4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096dbf5-f4bd-4c13-85ad-f6b036b7915f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30a9802-e71f-4ba5-96ce-a65659fd2b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de909a7-bc74-4278-b2f3-1f58b7fd0c28",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5152c2-a7b8-462f-a89c-6fd8eaa48d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f1bee2-fd1d-4ef9-abf5-0ef50fe515ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df0a31e-c237-40bf-ac1b-fde72afc5d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547f12a1-9416-4ed4-a0af-7c6c5517a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8abe3b2-3fba-4016-87ee-5024be5606fc",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be18183e-9b7e-4f45-8ad0-280d5ecba8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa61e70-30fb-48f3-9978-e5c41b8ba6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ebef7f-a4b3-401d-bc33-495050b23d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c868297c-2b1f-4508-a634-68471c848b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81badf20-512a-4994-b59b-6c286b8ad510",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c56406b-34f8-46f6-80a0-09a68b575d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7646d504-6f31-4912-b2cd-87d84a683fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f836a6c1-0a7f-4571-ba3a-2d0db66af2ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ef5b0f-098b-40d8-88f9-087ba36e41f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b583e6-0d96-4ddf-997e-88077dd30dbc",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961297b4-fe16-40ad-a29f-598a7dceec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879d8ec8-7026-409e-96eb-2fb0f3af0317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6469c8d1-41fb-48ef-b69a-fb50df036e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425001bf-8faf-483d-a8c3-f48a5094891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33918db9-afd9-4ad0-bd63-cffa51ee211c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ff4ff4-110c-411e-9cd6-0bcac951bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f08baf55-aed2-4435-b35b-375ccdd8d326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0e0006-41d9-4533-84af-c875bf9e5c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4417b45f-0033-40b5-9072-9c088c3d76a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15c21c32-fc4f-4f1c-84ad-93919af6a91a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aeb6e54-fea5-4727-a0b3-2252db778114",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a521e5e-3e0c-49dc-8047-c4749d939f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3201e3ff-662d-4409-b224-4afa47083a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abefc02-e3ec-41a9-ad1e-197f59326cbe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "17031d3a-e350-4f83-8262-5dea8903dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80565ffd-7196-4481-a386-445ed2c95db7",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b0036-70eb-4d9c-ac8d-e476f1550310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ee4325e-6229-4464-b68a-eac7b6413f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141bc2da-44a3-4ce9-af46-c04c308b1867",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d9591ef6-e709-43d0-a754-4f5ba1f558d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c39ee80c-4d99-48c5-b481-b2754b6031ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a56ab3-7717-4fc5-b570-3cb20f5b2d64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "169ae405-9d4d-4e7a-8332-e95e3189e2fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "971a2af7-7874-488d-876c-8524380d6d52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f4290ab-6e72-45ed-8d2d-536b01c6cbd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c0153e9-7bee-415b-8150-eeec5c558e18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5831f881-149b-416f-bec7-930f1ad5f710",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b33f5869-3eb2-4546-942f-2b5d2fae6053"
                }
              }
            ]
          },
          {
            "id": "f19355b6-06c8-4143-bfd8-993c86a1e824",
            "name": "Positive Testing",
            "item": [
              {
                "id": "525b07e0-1eca-4a5f-86c0-b405e741cf0c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c502d1a8-b811-4dd7-8a4d-b890260a659f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41ec1e86-f714-4058-bc0d-c64aa46b2de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "216a7768-69d6-473b-9815-7966a920ec75",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "5582d016-2d97-44ed-b320-8156ed0723b3"
                    }
                  }
                ]
              },
              {
                "id": "df00c611-c0c1-43ba-bc07-932e8eb7a4b3",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec8fa108-f9ca-430e-a98d-de88b2f10fa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d31c3090-a8e0-48be-82ee-04817fbab71c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53986f0-7784-4e90-ad2e-3c9e332120a8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f9f59b41-4bea-4005-9d9b-2a05167ef32a"
                    }
                  }
                ]
              },
              {
                "id": "0294f4df-bc53-4e53-95a3-69a5cf6f0c79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb20d73-3bbd-4d66-a757-516d8166f72d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f708d96-6b36-4f0f-98c5-73da58b47d8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48215def-ef16-49c0-a8bd-6d5aca1980cd",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2b5d7ad2-f4f2-4ad8-aa07-21f9afc6cd0c"
                    }
                  }
                ]
              },
              {
                "id": "57c6b53c-0ab4-4fa3-8180-8ab5a72bea4a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb761480-4345-43f3-b84c-2e79320e06c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25afb972-a7fa-49ea-90ca-265bde2d23d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f470be46-0a3d-4244-b8bb-6fb6eee933c9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "398c4939-9349-49b9-aabf-7c351d62c942"
                    }
                  }
                ]
              },
              {
                "id": "cee64a90-68d0-4853-8f97-f538e9c8f4e7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dd4608c-4a92-48dc-ab05-dbe47de21c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2935743a-3887-467d-8e66-eafc8c9d5ba7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2debcda4-3d1d-4325-9448-89592a900f5f",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ce23331b-9ca5-4fd4-9117-3d236fe2aa59"
                    }
                  }
                ]
              },
              {
                "id": "13342cfb-c06c-4be2-9209-b958924a33a1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd6d7d-dea3-45cf-bfc8-f0d28c528d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e8b80e7-ac09-45b8-ae1d-84eafcf1c121"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5befa5c0-5743-4cca-bd89-413b82e37dfc",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "08852454-6304-4abf-a118-5faa1cd309b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7aa40f30-43de-4fa2-a288-0adb8666e239",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "584c1784-46c3-47c3-be82-dedf166ca31e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e0b5cc6-b69f-4b52-a65e-c00870a49e2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33d7c7c7-94a7-41bf-81f4-b770d6a98cbf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bd29f75-8996-4d7e-b22d-2f197d82ff80",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "e34edcfc-1aa8-44bc-a307-70f92d4b9b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "142b4d4e-49d2-45b2-8fbd-dc56769be8c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9494e62d-205e-4229-8bb3-709ede694bc2"
            }
          }
        ]
      },
      {
        "id": "1b8193f3-6982-4c4b-aae2-0f12865dab16",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6194e34e-b45c-4e21-8259-4f6cb6eb470b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29b1c300-4d3d-41b5-b9ba-09faaf6c474f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f5a7142-95e7-4276-8157-5c9f3558a5b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a9518-7221-469a-88a5-bd61bc367d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7846ee-1928-44f3-8bf4-a92bee89961d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cde565-e8fe-4e96-9078-fea834f77160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19091467-81bb-423c-b7fe-558fdfbb13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd7c96c-90b1-4501-ba3d-f265fc0574a7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a2d5d-deaf-4575-a9ed-fd5134ea18e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ec7e6227-4a41-4f6d-968d-95bcbbcbc15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024beef7-30cb-44af-b26e-74fbfa261eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "652f09ce-3d32-4120-8a68-b5fc779b3959"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a89daa2-86b1-4393-a980-91d7df4e6846",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79a0cfab-432b-44c6-b883-a641b84690f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60d07ae3-7ae2-4d42-99a3-4c743d10fae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40174ea7-ecce-4ae9-b577-ced88ccc9565"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e68331e-4366-4470-b697-884f72d7b5fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "4276ef0a-6a41-4dce-8b6f-09662d75e0f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83e993c5-861d-4167-ae1a-ea07d3392ff1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d75144d-d273-4704-a5f2-c2dc58625f91"
            }
          }
        ]
      },
      {
        "id": "cd2c5552-03f1-477f-9d67-95414ad58e60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e0be07a4-5c3a-45fe-9ca5-d6e2d6c5b71c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d33f11b-73db-423c-b9c9-e5b59bbe7336",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f38de4f7-9c71-43a2-8ea3-949de2fd337e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9034ec3-6413-4522-b640-b1c632d35313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4c0af3-b66f-41d1-a1df-82ba0c8c1d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2be4c2-cd87-488e-83ef-7a0b8ddb32b5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724d548e-4b0e-43b8-8ee0-ea1da3e8d0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5136027-f0a6-4809-b106-a9153586f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e763c792-5a65-4cb1-a0ca-e5f3f0eeb2ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96e8032-3c21-4668-ab38-4fd90bf3d76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c551928-fb66-4219-8226-255d5d729c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa87782f-7326-4e0d-b3d9-3b0d4ef38051",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd8be59-c781-4bf0-ab9d-e11d8c054211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd443c6-6c32-460d-aeb9-666721dc9924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddb289a-25cf-40f3-9fb9-ab758f85dce4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d69afb-5049-4b3a-abbe-634649b1a85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae89e6e0-4b41-4bf6-a8fc-04e8d4c604f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823e8821-5cde-4486-a58c-ac6806a4fbed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02033ef-5168-49f5-8f53-9b56e0447ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208e3d26-56b4-4fce-8a27-120806bd802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e255d19-2a7b-4929-9482-5efc35a0280b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8573777f-1729-43ef-85ce-ebede0d5a8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7796fb-e9d4-4f3d-b243-9b1bf8fdb103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a89431-ea52-4a60-9620-948112ddb0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d946a04-df95-41ac-94a5-e1da5d9ffbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199002b3-6f1c-4dd6-acd3-f0c3438f3c7a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c994c0af-ef3f-48ad-a9dd-49281bf6c0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a879462d-6385-4c95-848c-23dad16b5780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d26b64-3aea-4f4c-a7f6-e08380e91030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aff275-88af-427a-8565-76484c20d4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902f0a2b-8b0e-4616-b9c2-25e6d1a627c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9584c9-f8a5-46dc-9e2c-a58612ba14c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bca57dd-0f1b-4910-b22a-530597b3778c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca0c1c9-4382-4c5a-8f07-151d598c78f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126b6958-6430-4da8-874a-08fcc79b34a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d116c21-7666-4776-acfa-5026ce23bc08",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c874e4c-e452-44e0-a32b-befa8552ffcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c37bfad-2089-4b6c-9b31-4f9f85d1f557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aa2fb8-1f9c-49b9-a144-1edd55f36e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6f26c4-d3b7-494d-a57e-f1b07c9e3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f3ecd3-04f9-4d81-87c7-a62b38371ee2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde6fb11-1def-4152-87f9-f75526cee0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8d9381-7beb-4c52-86ad-049c83f412aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4725d810-1446-4238-acea-fd9287a24e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afa4706-faa8-4961-808f-bfa3d477ea27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2839c34b-8806-437b-83e6-08828ad7039a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d464311-9957-44e1-ab4d-e603b30f4390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25b98e9-40be-4692-ae0d-8a2a541d5af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dcbf79-cc06-4931-896c-5a24e2ef6968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ffe3b8-40f0-4cb5-82ee-1ce2e5e5a74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c72c5cd-d482-4c96-afd8-eb8e2325c3e0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881da55e-d262-4133-ad5b-224ac8b3423f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bead5278-ca49-44a8-a4b3-c54cc32f8f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e9faae-efb7-4eba-88bd-60a97233d667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a977b13f-fe06-45cb-8839-9ad47733d555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2adf712-2cdb-4e47-a978-5eb5bd1d7d6b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43d0721-2cab-4d29-94bb-248918ac9738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad5286f-bb97-4544-885d-a1cb8784db6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a95dfd-ed49-4583-9f7d-8a410ed8c51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd923651-5c2e-4bc9-bc30-8f7c9ef45d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebacd2d-0f4f-4784-bce4-600420ad4d07",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e6de87-ed65-47fb-8458-7a13a7364124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ec2189-1acf-4c63-bd87-8cfa0e0af05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2751a77-fda1-4156-a6b2-7167a8d2cd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaeaaac-92ca-40fe-be8e-9442c7704954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3569531-a659-4f41-a6d1-631897c17957",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5be11e-7272-48ac-ba78-14130542cd83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c831e080-9313-46f8-95fc-1c71ada34015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a72caae-c0aa-4b02-8acb-7ea7716c8443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60acc60-6036-4eba-93e4-874f4d5dffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8928c2-d33e-4fe7-bc76-18027a660d11",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42287256-4381-4087-8b12-18b5a8864f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6f8802-512b-4648-a6dc-8c79a7ccb363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30987efe-f8c7-4124-8e16-db53bb687dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee84c3f8-917a-4938-b735-6311ca54afa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9946eb-b3b3-4b70-b27d-60120e5bcece",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f7732c-8cde-4ec2-9321-26ec16a37553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a6c0ae-71ef-40e9-8136-418ddca624ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cf9ee6-a311-425d-b430-6a9f99ddf083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b81387-5b59-4578-aca9-ca28cd2918db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36310def-b79a-4921-b830-6551f153f9bf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924d397-f623-4c04-b7d1-93ece63f01b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e75a44-7116-428c-9578-c9b5e19b7c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c264bf-f937-4495-880e-232b85d79a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6f6acb-b5ba-42a1-9069-d54574aa781a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3de773-7d17-4bf1-8e19-288352e7020f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7f3a70-5eea-46b0-8c64-e343ab285088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a7eda8-cd46-42c1-b7d7-660887edf578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6374e-2e46-4519-937b-42c9ab202370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c726d78-8b2d-43ec-93b8-81f0850514f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a63ec-cb97-40fb-a50d-870533a8b32c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7663f9a7-bdbc-4f07-ac41-b8afcafdf527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc05522-f245-42ba-87cf-c44554b55a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f3a387-5b24-40c5-93f0-cca27d9686cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5536efca-789d-4ea4-a2f2-36df3ba03d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca52767-fb38-4aec-828a-262ce952dba7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6ec21a-2f35-45cd-8760-64c4809a6d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6de238-2eb2-44d2-b671-5b2d66021451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d91ac47-b901-4936-a901-fbafbf1bc6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce20062d-f7c1-4b0e-992d-5b45204422a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02900899-31f9-4cf9-a74e-0680a01d0a69",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b51566-f053-4b0c-b53f-aceae24df2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a675d6a-ae8c-4e30-a13c-0ccf64e3965c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c84c709-4511-49a7-8563-0237b1dc167e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e657abc8-727e-41d9-bd4d-834143a0e951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a20dedd-e644-4d45-842b-d3a4a93f4c5e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7d90c-4286-448d-9151-00b2ac31de77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa8da82-c22a-461b-bab3-39afd27ae7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0326595f-d239-474c-9404-f0e92699f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e98584-7030-4269-9761-e72c933d21d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe81e3-18d4-4ad5-8057-1a117d5c327c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f5218d-6ee2-4a46-9ec3-d6d762faacc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feeea5bd-ced3-4f16-8a63-d8f609e7ab96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae25d9a-d6cb-4d0e-be33-d21139488026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c734aa74-5e8f-42b7-94f4-32dcd64319c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b5e30d-d625-41f2-8558-78908b4fb8bd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a92fdc9-3408-4c4b-8061-73b739580fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868057cd-c96b-4eb2-95b2-a7d6ae860a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44a7bee-fd06-4ef5-871f-d47a3325dc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe4aac3-6ff9-4f28-bf72-6515b251e83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b46688a-eee1-44c5-8df4-a0c4576149ef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eaf97d-52c9-430d-8b79-164374ad77fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713e1833-5fda-4de5-8f97-bd44f56cc522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3859066-4f33-4397-8527-91de8aca0988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d0e171-d49e-44e0-a030-83e1e0c35e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a66221-7820-4684-87f7-0f662d784421",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280bd55-95ca-4e86-a400-65f9fb37e64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e928dc-15d3-428a-8c6d-085458aba0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74bcb8a-1013-470c-9f93-9d17c8e0f86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2aa12e-585f-4505-b946-68226739ce9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d3c07e-7751-4cec-9c9f-caa7d8caf5c5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aa25fd-e8b0-430b-b1b7-4fac48f30420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38ad4f8-bc78-42b6-b8ac-eb9b94258ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0fd5b0-9794-49e9-8820-84276e63b94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddd137f-3b87-445e-a87b-799e5ae38dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1c688b-02ee-44e0-86c4-698c8d244ca9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0796099-627f-4a56-a6b7-8b342155e6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0ec963-9315-476f-8a28-70d24f4f1179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585a01b-c426-4475-bccf-d46b7d4e4579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e80932f-8e87-49e2-b34d-4ba811a6b59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b05c654-a4d6-44d4-b4fd-b52fc8dbaaee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c7e544-9a00-4904-b7fc-454baa96d86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af88a840-f010-4f4e-a454-d9dacc5c26e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3e5091-552b-4918-8a34-d43ea46e39c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd9c15a-e39a-4005-8f6d-4208174f29b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f13b9-542c-44f5-8306-de0afffb312b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d637e-c519-403f-902a-8b5496e1b347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c570b2-e8f0-4a34-a5db-0846c41195fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77503285-f1b6-417f-b995-a0835a8dd5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c690e2d-a677-41d0-8c7a-3cf2d71ae92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edd0b8a-daaa-4f35-8211-5a30c021b4de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cbdeb7-9c4d-4355-a26a-d2d894b90671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e08287-07cf-4185-a917-1db5d76fc0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bcec6a-49ba-4b00-88ea-a1db47d84dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad89492-33c3-47c5-b913-f994c88fe36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73a8d69-5a7f-476e-a749-0ea534e8c894",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5ec1ab-3087-46e3-a306-3ff695c3adf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da42c477-a11e-49cb-8dc9-51bc6d15ad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b7ca8-0730-4d59-97a7-02bbc6ef21d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80c2c34-074b-44e9-b287-981758aa7c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d591218b-ab6d-4671-8736-0c89171d19d9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a79e9f6-044d-4b7b-b829-7261137eb8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e62f5c-532d-4fe4-b842-eb30b0e2537e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25369c17-8cfe-4e5d-a19d-cd4d116971a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8e3758-c258-4a41-b6d0-710ce5bb5364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaa438f-4a69-4398-8dfe-34207662b897",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9b7a2-47b5-45bf-81a0-2c2d6d19cbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4504ffa-ec9a-4fc7-88d2-adc125af0309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3902e28-c6fe-4d5d-b965-ce421c732d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b72416-4561-443c-829e-584107282f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e50f100-6f3f-4ed9-a2a0-6b592b1f5a28",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12dcdd6-28b5-43c6-a921-6f6f42190efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b57d24-c8b5-45e7-9904-d3c09f1dea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6406dcf4-5316-4c4d-80ef-4cf82a55339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8cd3b7-ff0e-4e93-9e0d-b3cb6b40e235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ff16bb-b68f-4caa-b4cd-7e76201fbb19",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c12487-6465-4b83-b541-3d7e99635dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9025fa-2641-4d2e-8359-fd5e6201a7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f3e235-a16b-4923-ae64-715bfe7095ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29c50c1-ae64-4163-8020-8caddb6caab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca0288f-7d35-48d2-8caa-9479702b9ed1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc700356-7be3-4178-8d92-d0b2dc56063b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50845e92-e4bb-4704-a4a3-0736e9e6e808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50b3112-d82e-483f-9513-9c1589c77c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5114c8ca-a699-4e2c-ac1f-d8703b66053e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38980833-adbd-456c-8eb9-63115b1e3ec9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6cce40-f20f-43b0-99be-bcfcf3851643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70ea473-d167-43b0-892f-bde2b8820853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b8a8a2-ce9c-4af8-9250-caa79fdc5787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9547ed3-a53a-4f4b-a6d1-990ff68a732b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f964108f-db96-405d-ac8f-f275873001a8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c55429-783c-434c-87c5-ced423d0b135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189c0030-eb42-40b9-a0d1-d1285c6e5652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9778033-ab98-4693-91f9-8b58a14dedd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fff549-9477-4d7a-93f5-f62c00a9ac73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d17587c-13d1-43c6-88c1-0aabeaddb64c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2b5b52-b267-40cd-afc4-0d151d4d8619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e67897-b156-4cfe-b50f-414dd071b204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19d2002-9936-42df-9d72-85d472da2dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3381648-b1ac-41f6-b431-bfd8e565d615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5513e29c-e34f-4f7e-97c4-e9c63997640b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797c16a1-a082-4319-b31d-8430f3e4498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b7ea51-0453-4adf-8b1e-e55a2f8f6eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef081eb-b685-4543-bef7-c91410c59781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f815abf2-b46a-4a57-b23d-eb541faa0af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b7bf4-e887-49ad-bf9d-ec27ef4c73c3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445051f-ed82-4809-a492-9c81faf96e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0916c5b7-07fc-4242-9be8-c7ed9cce0917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8489d983-6a19-4354-a5b4-81ad2fd48b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1829062-7f09-47fb-a9ea-ac4a43ca8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9b0a49-a9ed-4bac-8ed4-58faa70556c0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d637f45-5e50-4931-bfea-aed8737f5a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecde6ea8-8b15-4c7d-b662-e1182eaaebc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2460e1-b4f7-437a-ad31-9b5ced42bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ddbb25-8fbf-4d84-bed2-30420514f5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732d3ae3-e4b9-4d20-a8fd-7d9ba9c66ac2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ce2ebb-439a-487f-b767-18cdd16fcbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2638b9df-d84f-4e8d-bb49-c9ae5b2fac11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f88b190-bb4f-4c32-b987-ccd856950abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea077f9-bd87-458d-ba98-26ca376239dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ae381-0255-4cb4-a984-7280e8ecc349",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc18f127-8742-43fb-b8fa-7ef165c21b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f395b3e-dc46-4ec9-85e8-b19aaa62dd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f9e43b-6008-4b5a-a7bc-2bc5d22bf01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cf3146-0310-4526-bf1b-ffc0154275e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fdd05d-5fc7-4d37-a435-f6311f7a64ea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0fad2-9bb1-48cb-a596-73b5e00366eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4af97a6-38be-434b-ad80-5efe690baba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3b7c42-5794-4067-a295-fb0c1d2887d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962e1a1c-c9b6-4af7-931f-6852dd767203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f735316-3823-44c0-aa39-2a6a83aaac0d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623597b8-ef8d-43a2-9658-d4bf4a3b06ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b379e1a-8909-47b7-b87d-2ed2aba86251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aa85fe-1ab1-4985-985f-4deb61a309d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b2a857-ee18-4221-b5e6-9abf34fb45ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb647ff-0463-4d18-810b-1f1e329c5f40",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8fe44e-e233-4558-9857-dc35269230c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfed860d-d6b0-49aa-893d-7e6f032cafc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72371c75-0772-44a3-a6ed-07a95d702aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8297198-13b2-49fb-9a69-a981ee5948b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef7b2a1-2fae-406c-8b78-c510db74d6e3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceebd91-175b-471d-b404-01f3be369a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce373c88-45ac-4d55-95eb-477046358a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea28214-9a6d-4719-b6ce-3d82706f30b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cd409d-4c9f-42e3-8189-2b27a4f61e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af18f34-1a3a-40f1-ac5e-c9146bf4a39b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef23625-f961-4db0-ad41-2e3a7a5ce96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649775d0-9460-4458-a456-2c6215b8dc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c172b5e-43fb-4cfd-8eda-1fb2cc2a4219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18aa68a1-8a84-44bd-a684-ee0500fcefbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05f2647-44a7-48c4-8c26-e8a3349ec36e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234bd1ac-2fb0-463c-b7f8-b9026f778241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50037e37-b843-458e-8bfc-de8e19e9823a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d86caad-c0b1-4afb-99d5-4fe056cd614c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c7cd87-b6d6-4551-af92-a1c560146c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529882fa-f7fc-4a21-887c-d3300c344da6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad6656f-90a8-4b38-ac6e-70b314574a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02c382e-bf25-4b48-b153-6e4e64406268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ac888-55c0-4961-9964-3d2343236d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9546532-d1c0-40aa-90a0-c68cbeec7033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73371b73-cd69-4145-b047-45356dee2b19",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39bd573-181f-4caa-8bfb-93932e2dbb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e1ab9-eb7d-427a-8082-d24fd91a84b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26e0d10-82d9-476b-8346-26e93e5b56b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d94f253-2b6b-4d93-994b-576df48f0a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a9cfd6-3710-4a87-8ab3-58f7c2e7f43f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4836a9c-1c99-4f98-a57d-4353f509a5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c9f7c7-2698-477a-8881-4f17ba4bb75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6639078c-0bf0-4cf7-9009-2b514720d606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa96f3e-8f45-447e-ba3f-6e5bf509881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d6f3d6-215d-443e-9e7e-f86aae96317a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af185f-7029-4638-97a0-aab05d9d3312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618fe9c3-5947-4609-b40c-c67e2fedc880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75e4a3a-7756-44c9-baf0-cd6d03970019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7603bbbc-0a4b-4c03-acf6-af9c4302df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac3f39-e281-4d69-a4fc-03445d987715",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d7039-9b9c-448e-8b37-eaf43d7c7061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ba7e1d-e051-4507-b79a-02b37916777e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5ce8d7-1ced-4b4e-a077-62bc441b9390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802a46c3-e9ae-4c3e-8472-39071ceccab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f3269c-79b4-485d-b094-ff21c2096edc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40adb379-908a-4d02-b21f-df41237b269c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d03b032-890f-419a-a1a6-21e41ed6d071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb848348-b04b-4207-a6bd-fd6591766af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b3b563-1cfb-456c-ac8a-d7910dc6dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0527c14-bcba-4441-8c60-f3f920c02d45",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc52071-1c8a-4ea6-8e5a-a806e8c5ef38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13c95ba-09ca-48f9-af27-f0e0be1a89b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581f819f-4823-442b-83b9-f272160260e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f97c790-7ff3-461c-9d0e-d3830276af8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8575bde-b81d-4f56-9404-db5384ea63a1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc6801d-6595-4507-aac3-2bc83b1eb75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341f856c-d922-4107-a4e9-dcf3bcaa8e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2f68b4-7cb5-44e4-ab99-f1ba3973ea6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1d2ca1-9ac5-40eb-ad7b-bbd8ae552411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b8e096-7786-4689-b078-50f832e19876",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56016d9f-3208-498f-8625-b2b081c54f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07290842-5267-43bf-8b6f-f037a4749606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff71c761-5abe-4e64-bbe0-2f571feb8911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1077d850-f20f-4ce2-aa6e-e94bf18dbc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15a4327-1b8b-40b5-96e5-8bb5468b0249",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32188c9a-1d57-4258-8998-9239cc1a5cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8883b1a-9a1f-499e-b6ed-b928e7f364ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057599f1-4003-4aa1-90bc-2fcece4a546f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df4f276-de59-4d4c-8f1f-4e375bd1db12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be55e2eb-ed70-4689-bb4d-6443d0613560",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a455db8d-1682-49d5-a35b-923f7b3ed62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0accff41-0211-4601-af3a-47a92253cc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64cb27a-5a30-44c7-9d54-e6b6ee184a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104e5587-29a4-4250-849a-d6785aa14ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefb464d-aa73-40f5-aedc-082ea8705e06",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436562db-9274-43e9-86f5-38d33585689d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7321d157-f525-4648-8fd8-510779eb068c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9098b9b3-1f2d-483e-8b3f-0354da8165e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55e3d04-d521-47eb-a1ea-3b0f1c7b2ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff5b1e4-c119-4b87-bdf0-0c089402a0e2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648d40e3-a4eb-49fb-b234-ccd2550fb49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b14713d-0e53-441e-8005-aae264e1061b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fc4a96-c9b6-4a57-b03f-5662cfc41bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31588489-495a-40d6-a6b2-eeb51213a120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26d09fb-b65a-41a9-9038-115f6587e495",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33cca0c-7903-4fa5-a835-496334350f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6053c029-6ee4-49eb-befc-ff91299c7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd94700-063f-458f-baf7-44022a55243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f23862-d98a-4abf-a22e-44341d50c646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30240d6c-dbcb-490c-ad5d-0c824c1cf1b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0250bc5-1ce0-4d5b-a77d-9340b7a27a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ee7319-aa65-4ff0-ab06-d45db4bea300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186a2853-dc66-49cf-801c-a98144016a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10782a38-454d-4bc8-b62d-685a287dbf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d7699d-bb34-4441-ae04-5fd12625b87b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b42f6f-86f7-4ccd-9af1-d44d52d6a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01134a04-1ce5-4194-8f45-f04eb154410a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091ebec6-e2f8-4443-a845-d7e0c0c42fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55823ad8-8233-4cda-a50a-58983d5b7ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eea7195-12ae-4be2-9ad2-afb32e8541fc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27bab9a-eba4-4a53-bacd-7a62bd48a287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9851a576-79c2-4135-8c13-4d099e8e7792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72febab0-3bf8-4f42-be26-16bf3fe63a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0e6229-5927-4561-bb92-a9d6a9344bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd3fff3-8a82-4835-80b8-724795da0ca0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885f7406-9837-4159-9fbe-69d175c84350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d848ee-b99a-4af6-ba76-8818a7907515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76871650-1da6-4d89-89ac-d69c0f639343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4569e5-8ffe-4116-9c87-9bb17f9fef33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5749f47e-c801-4c6f-af99-91e5102f24c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9d1bd7-d6b9-495d-8699-7da94bd80943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1ab0df-b223-4757-b497-d1c00269b308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f73434b-d1af-49c4-b3d0-2db658f18173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642ddf52-6181-48da-b00f-1cbec5ee8b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e625b35-e478-4e7a-aa94-e9562aa5e499",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676758ba-0f9a-4163-bdb3-6bb6ec8a6bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17664e03-8bda-4c02-a8e4-a63caab24583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d979b7f9-032d-4044-b94e-e56aad18edea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f26360-a1e9-4962-b5b5-b9fcbcc7241b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1402df-ef4c-4821-bd84-cf29612ccb63",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e1453d-4a96-4ba0-8dfa-a2c7d1ec4b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229634f9-c87f-4621-9cd5-8d2a262b0fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9905fb-e5d5-45ec-985a-1dc23b6c412c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24efba92-1a32-4b82-afcd-d905c9277cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7f5517-f912-406c-af77-a783dbabb18a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fdaa9-69be-4075-8cc8-94fd08938901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c792c164-926f-4025-8453-6f622a0ecdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c8481-231d-4623-9aa1-ea66728de3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec481678-639d-4642-961c-d1f8d08bf137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d99ada0-745b-415b-980c-cadc6e447908",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e8832-2372-44a3-bbe0-a5e853b475df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b7f41a-d2f9-4494-9b82-b80ee4a37917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d7f40-86e8-4127-b9a1-2bb0e654ce2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0e1ada-3c80-4402-b1c0-7736818b0888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82562c5d-62c6-4a28-a2b7-67569074f388",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0fec41-f0ff-40af-b9fa-711600b036f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6c3f13-70d5-4b07-baa7-0854dc52f86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307fd2af-9d4c-4e6c-a0c1-8f5040dd0e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cf3234-e520-4bae-8c57-53f880e6c278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4ae1ce-9b6e-4347-9b39-cad7a21d3f01",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a97e6-b7d1-4f6d-9d89-de74ad9c0372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806364a6-e26b-4eb1-8698-ec61709e645d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4bc3e-6795-4b5c-ab85-031d241770c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f7a174-1f15-41c0-8af8-b44f099e9ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709b7834-7712-4dbd-8479-60af93ee54e6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8341fd-bd7f-4d64-b331-cf92406ffa05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a579b2dc-593d-4316-aff3-9ff94b501da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c790440e-107e-4711-ac8c-6386ad038b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577a59b3-cc54-40e8-b139-2f42f056872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c674d1-88b3-47d2-835a-90218ae6694c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435fd845-ddf4-4705-bdcf-258f14ac51d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b39e88-7618-4504-ad3e-0daeed1ba8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed4ac7e-cdfa-47af-a39e-1037ba3c88cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238c124c-3d78-4758-a2cc-3506000b4c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f81843-52da-4cac-a436-ba766db9f6ad",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e63474-f4bc-48a5-9bb2-b0e4ded0d433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf4d3ee-686d-4d97-84cb-77e014078e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f105d5-e6bf-41e9-a839-da6ed5197594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b217fe20-b763-4c53-9869-b54c74ee802a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f562efe-7016-42ab-9fa0-d74482a1163d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a498de5b-c512-42b8-9c7d-6998226e736e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a462cf39-0cb9-490d-b58d-ea5ee4b55499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f336d33-c6bc-49b0-accf-788a06534b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eee1d5c-4166-41f4-ab62-c9bc8a9efcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af302c4e-b18e-425a-94a8-16a9f9e87764",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7595bd89-5edd-4082-a23e-012dd4a0f633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14c4ff76-ba49-417f-a297-a600ea8d01cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adebc86a-9810-4671-a336-2dcb299f4f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca85add-531c-419f-902a-1ad0ef2c0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108a57eb-a114-4091-b342-914361442595",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c5752d-0dc6-41fc-9f3b-98dd39579028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b20a9ae-c3b5-4da3-aeea-5cfd31f8b388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7356ed-501c-4e23-b78e-5dadaacb0335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66272006-12ad-47de-b087-bbf0af2b64b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7a2a8f-de8a-485c-b544-54781faf2baf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d6c2f4-624a-440b-bd98-e6ff781f3d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fc90c1-7735-4424-b195-17538e18b324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5964d32-68ac-4803-b95b-a89d2b4869c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169da6af-1dd2-4616-b5f9-339a37907122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075e691-ef1d-428c-993b-09f5ec944f32",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16652b0e-95b3-4062-8f56-cf98563f5612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e5ab864-c862-4a9e-8659-8978449f6d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba45668-f855-41a5-8760-f74f3430cd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70783121-698b-482a-b6c7-edb6eb47526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c850c4-a7b4-4b37-97bf-3c7e6593e5bd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a98a81-ec81-4999-b37c-814c8fbf492b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b77f8493-41ad-4fd7-a269-09bc84052b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c019206-6352-4e50-8954-5b122123a35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4645d5d2-d55e-4543-aa32-82749c8c1f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bd2a73-eca8-429b-b61f-ad43d2377302",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e31fefd-a0c2-485d-86d2-0f60b3f32f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761f3491-ec11-438e-9cae-2be0c9898ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ef6cda-dfa9-4cc6-b18f-0e0f51a6b54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d662178a-ec88-4a3e-91c2-780b55abb4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0738fa86-fe4b-447a-8bfb-fbb33b9e521a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c03b7b-1cda-4f98-93b3-452580d2f26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4669aa0-6d54-4476-9c06-b93b02927247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a673de92-381d-4af1-8f49-1e4103ce874e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2138615-b293-4ad4-a3dd-107bef951347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4537e3-3cbe-47b5-b932-2b7ffb93f305",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c8c72f-8f0f-44ab-b07e-7e6423ab0764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ee1d9a-667c-4977-bf01-a59e871dc448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4662a6-958f-4814-84aa-b98c6e936ab0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914c9a44-126c-4b0c-8647-12a9ea03ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60438467-da92-4393-a036-6ddc6f4356ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d539a1-9d0f-470f-bd3a-323f6af63490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f64bec-04b0-4fed-81d1-fd8f4419346f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eb4990-1f63-4449-ab6e-25f1416235ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e7a85-fc19-4b34-a3fc-3f7e17bd86dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de072612-9bdf-490d-9321-722b0a118a94",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8dd908-bb6e-4973-8f73-500f3077882f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1573fa53-f301-4ed5-b12c-2bae92a95856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0c0e89-aa00-4fe5-979d-62a4f942c605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b00f15-c880-406f-be30-539a20b0090a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163dc13c-f9b8-47bc-bb7b-faf74f5b50fd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bfe55e-a591-470e-95c4-efd7499d3fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a55463c-6212-4721-88ee-799b90ad0185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15dfbeb-8519-49ce-ab7e-c1d3180b103c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e7deca-4b6e-4489-b899-65b60d9056c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d926a8-57ee-4dc2-b588-211fd65ad3f6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0717e674-eff7-47df-9057-56222b469d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7076619-5a2d-4e0d-a9dd-0f8ac94aff2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6753b8f-2c3b-4e36-b3cc-df7444aa5555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4856ee64-4da1-4c3d-a803-aa917aff5ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186bf2cc-ed95-4c73-b101-41dee56121b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d1e450-daab-44ec-905c-cf60c67f27b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f4d48d-fbd8-4c18-a990-b5ba5f415ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093582bd-530b-474e-9375-4c7b646238a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37022ce-3dcd-46db-ad06-06e2de7a067c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4779665a-340f-4c55-a226-287caced75e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b5b33e-4384-4547-8542-611d29c85a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189c3239-b7dc-44e1-bbe9-b9d2b26e6959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304da0b8-938d-400f-b1e0-ee48a6f425db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086a91e4-83f4-4203-8a5f-c9e29fb8c4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f53b4e-ac10-4819-8981-d87bb4ba8d89",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a96bc34-1ace-4a33-885d-56d7594f2790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59114010-b09c-4623-9427-73c3b4d90908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8798418-71a2-47d7-a3d5-0049aad712b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a25f922-aa3e-4051-b688-c826b8bae579"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af2e54b3-797a-4ac1-b100-6099c1f13f68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abdf62d0-a675-4830-b57e-7b5d0f62a45f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bc93bf2-3dde-454b-a0c4-58be575975f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "646eba21-c21a-49a8-8994-7e88b05dbd7c"
                    }
                  }
                ]
              },
              {
                "id": "5f530b46-adf6-40d1-9503-0e306fa39971",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81726c11-0894-4ba2-94ff-7969e33c2b33",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ebb79a-f4dc-4397-929b-e42637b82dfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "58d89a1f-c8f8-4659-8a49-5e984871b8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbabea6e-e4b4-466f-8578-9b33ffe92482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc2f7a86-585b-4951-8e51-a242266c7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b7c4a7-cbd3-480d-9366-b632202fd67f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866227ed-241e-4a73-8f3b-7237c11d45f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "deebe563-5545-4a40-8c11-b1b1380e9b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77cb6b2-b3bb-442e-952b-82e7cf712f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16748d28-92f6-4383-8149-91a3982b1404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f88f7e16-28cc-44bf-b72b-c628090887db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed064888-c3ad-40af-9d7a-45a5e4893eee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ee8d9f2-6542-435c-9fce-e5d55567d7dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ab5713c-d759-495b-a1df-49c9d2312a92"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "599fd29d-fa2b-4ccc-975f-7b4953b1bf06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87a81f69-23c8-4153-9309-740cb6e3661c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbc61d68-06a6-4f32-912f-587e64292d6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f10fe71-4d40-43b1-a14e-749f3cc3f192"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a02d3c4e-a334-4141-9ea9-d506a90a872c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f3d9ab2-3ccc-4b89-be06-55d0da8f5ad2"
                    }
                  }
                ]
              },
              {
                "id": "a8839412-3868-4548-887e-e890b8b4174d",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10e8eb0c-3606-4d5d-a73f-a12df92a5cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb62ac1d-c7ac-443b-ba69-6dc02957ceed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59fd5685-f29d-4ade-979d-233c08882ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5e4ebe2-fbe4-4fd6-b79e-377bf1ae1f4a"
                    }
                  }
                ]
              },
              {
                "id": "cfa4f7ee-364e-436e-a9fe-9c503da95668",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0526ac34-3c7b-495e-9d3b-d5827654460c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3703cdca-d9ec-46b9-a0c9-bdadacb2ab25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc6b7d9d-fb92-4292-9a9c-6447d80492b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dbf5c17-ac82-4d54-902d-cb4cdec6262c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2efd296-a718-4ca3-b8de-ce0cdc55a2fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4bb44e1f-c091-41ea-988f-52358bf52972"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "002c9bda-146f-4097-8649-a9123e6a7549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90ed73b3-8886-4647-9433-f26a028aa3ba"
            }
          }
        ]
      },
      {
        "id": "76a2a526-0bd1-4923-bfb2-a439b472f168",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bbc53eb7-70ec-4fc6-9cc4-fdb69ae7225f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea170e3d-5200-4a2c-b362-792580231330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4556d12c-16fe-44bf-aa35-cbc96e4562e5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961f4c9b-cef7-4378-840e-c252ef74f4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5bee2-3b23-4cf2-8895-1faa5532d5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd2784-cd18-4244-a9a6-ca5b0f3b01d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c239aac-144e-40da-b6d2-9533cd6195f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c70df-af08-4428-ba2f-491be5e9b190",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28171840-83b0-4004-acec-01129b5a3582",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "16b85c98-cffb-42ad-963b-b890c7237826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0214b4-614f-4f5d-872e-1022eef212fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "832b0f23-ffb1-4919-ae68-1376560bde44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24f83981-c129-4c7c-b799-e0b6294d49c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32615e1e-54cd-41fc-98d7-cb769cb1922b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7fc73bd-509d-45d4-89c9-55ede28cf6e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1773358c-9419-4f4e-90be-b54e780e4383"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc6fd495-80e7-4cb0-9932-55859d6a4a74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "199620bb-2751-4ded-aacc-8dcb2010f51b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6b2cf62-9178-453b-837d-894b909f04de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89a17055-54ba-40f7-a78a-6246c52a08e6"
            }
          }
        ]
      },
      {
        "id": "0d85d395-84f5-407f-b89b-7913f3abdb21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5722ac82-86df-4efd-b09e-92a9e3b7952c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e3593ce-84c5-4a83-9bfd-bf59deb10c1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "752f34c2-119d-48fc-b3e8-6ac94f3c1aa1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82478930-02ef-4457-87b6-69b7f693b1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c00f0fc-5aa4-41b5-946d-797e37ca09d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f74958f-29d1-433a-858b-53e7cebc1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb02fa44-a1a5-466f-9883-8e0e3ec30a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568c5b26-e33f-42b7-9429-1feb0aa1bca8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c946459c-b0d1-48cc-b768-e444ddfc7dca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "d65a1d90-f696-45f5-9976-7504e6e23b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fcadae-d6cf-4e45-9e8b-b0e302e55e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61903e2b-cfbe-4f65-bfc9-396681992926"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a842a78d-e4bc-439d-90aa-e90e94b9fe0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3d2564-ad8c-4374-a0af-3d2ede3fb7fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0834e8bc-351f-4c91-865d-116af4b65e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "655285f4-a398-4faf-82ef-f304c877ec73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a96fc17c-3f7d-455f-97dc-cce78ef305d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "8496cfe5-6990-4824-910a-1956de4fbea6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c5839a6-6bab-449d-868b-160dd29bd56e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8294d916-07d5-499b-875e-7cad699d41f2"
            }
          }
        ]
      },
      {
        "id": "e71184b7-4d7e-4131-bcf1-72147327187f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "200ad6fc-2229-4e44-a170-28001092bf39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2667d40-e886-4eb2-a99b-ea43417d9a62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "492c884f-ac7b-482b-bc72-cb581c39559a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f879a43-a3f8-4ca8-8e70-2e0d43cbfdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f42fdba-0d60-413e-8e9b-6db03a87982d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e3fa5b-1893-49ab-b4b9-7d3dac7d1a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6844f980-2dc3-48bb-b582-e95581e2cae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0734c1-0ac2-40e5-a161-94169886f11f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7d035b-6743-4614-8c91-ae917faf908c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "436f3b12-b2ee-4d6f-aa84-a4984351e497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154da224-fe9d-4635-9166-0a2882e154cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df30d55e-a82d-465e-983d-55c0f69265c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5280a339-9f2d-468f-b9dd-bfd911b00833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a839bb1-c26f-49d0-b162-181ef15f9bac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28360cab-17d4-4c12-aa8f-ee2d86c501a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ae2115-a3d8-4c8d-9339-f6c34a4ca5ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb945570-f52f-426c-9eda-58fa516d7271",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "69eb8079-177b-4e62-abb4-db56a77749dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "254abe35-0097-40ea-b4bb-74ec7758216c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b070427-a779-4f8a-aa7d-d2834f58a87b"
            }
          }
        ]
      },
      {
        "id": "773cf227-bd9c-4ad4-97ce-be7b398b831c",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "8c139faa-1d4f-4c5d-8f26-a0017f48d016",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1227,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 165,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 619,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 608,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 179.84848484848487,
      "responseMin": 10,
      "responseMax": 1714,
      "responseSd": 283.5789154460943,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665017786223,
      "completed": 1665017822794
    },
    "executions": [
      {
        "id": "6e116b02-32b7-4f37-b90e-39423de25406",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c4d6229a-ded6-4805-a219-b33350dcc1d5",
          "httpRequestId": "d80bd688-e245-4c09-9315-a1451299a231"
        },
        "item": {
          "id": "6e116b02-32b7-4f37-b90e-39423de25406",
          "name": "did_json"
        },
        "response": {
          "id": "a4cab3af-f04e-410c-b73f-e57627215659",
          "status": "OK",
          "code": 200,
          "responseTime": 801,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d5eee4-3541-48bd-8741-25909d3c9ee2",
        "cursor": {
          "ref": "9b4b5526-bb08-4b9c-9359-7dc04bdea7d9",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "89866e7e-d418-479e-8a79-3f1287f5a9b6"
        },
        "item": {
          "id": "61d5eee4-3541-48bd-8741-25909d3c9ee2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9669d420-5fc2-4852-b774-5ec9f61fff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d5eee4-3541-48bd-8741-25909d3c9ee2",
        "cursor": {
          "ref": "9b4b5526-bb08-4b9c-9359-7dc04bdea7d9",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "89866e7e-d418-479e-8a79-3f1287f5a9b6"
        },
        "item": {
          "id": "61d5eee4-3541-48bd-8741-25909d3c9ee2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9669d420-5fc2-4852-b774-5ec9f61fff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb2411f-860d-475a-85f8-e0e50b545a73",
        "cursor": {
          "ref": "a5e87fc6-20f2-41d2-95e7-b5c514695dd8",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f61ec0a5-5277-45c7-b296-bbe091b326f0"
        },
        "item": {
          "id": "2cb2411f-860d-475a-85f8-e0e50b545a73",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9358dda-7a9c-46f9-926e-26079ee5ede2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 281,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5288ce-0772-4e7a-9e43-62e338196835",
        "cursor": {
          "ref": "540ecb66-68fa-48fb-a2de-60244aa56aef",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d58cf46-85ec-4629-bbd9-a4bc0dd1cfba"
        },
        "item": {
          "id": "ad5288ce-0772-4e7a-9e43-62e338196835",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3c3e5a84-c9c4-4a39-9327-3a5e2b1bc0e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af4cf7-26e4-41f2-9e48-37b11dd2244f",
        "cursor": {
          "ref": "fe575e1e-2da4-488b-b3a8-17d136583219",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8b0ffe7b-2808-48ac-9290-fbb266a08f4a"
        },
        "item": {
          "id": "b3af4cf7-26e4-41f2-9e48-37b11dd2244f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6c9d8654-e6dd-4108-8bf5-e879fc078c61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce3a548-21e7-4b79-83f8-98db56b0a270",
        "cursor": {
          "ref": "7f8280c5-8e7e-449d-b685-1e310eb293ff",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb301b5f-11dc-4bc1-99c9-39991e7304f7"
        },
        "item": {
          "id": "bce3a548-21e7-4b79-83f8-98db56b0a270",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9139efeb-795c-45c4-a496-6e5b6cfeebdc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce3a548-21e7-4b79-83f8-98db56b0a270",
        "cursor": {
          "ref": "7f8280c5-8e7e-449d-b685-1e310eb293ff",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb301b5f-11dc-4bc1-99c9-39991e7304f7"
        },
        "item": {
          "id": "bce3a548-21e7-4b79-83f8-98db56b0a270",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9139efeb-795c-45c4-a496-6e5b6cfeebdc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130f9072-d00d-4d4d-9150-2ad2c040d1b3",
        "cursor": {
          "ref": "daed0a85-6b5a-40ef-9469-65ad069166c3",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "780a264c-9394-4c69-a53c-5c1b8c6b0ee9"
        },
        "item": {
          "id": "130f9072-d00d-4d4d-9150-2ad2c040d1b3",
          "name": "identifiers"
        },
        "response": {
          "id": "4ab457c0-7c44-4ab4-8dec-f8ed5b8078b4",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7f6133-748f-4483-a21e-821efd56b12f",
        "cursor": {
          "ref": "29073c42-100c-457f-b0e9-fb0588f883ee",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bdfdec9f-0714-4756-9fe0-4f14314ac757"
        },
        "item": {
          "id": "2c7f6133-748f-4483-a21e-821efd56b12f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "00425f8c-e411-442e-adfd-4bbf9f94bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7f6133-748f-4483-a21e-821efd56b12f",
        "cursor": {
          "ref": "29073c42-100c-457f-b0e9-fb0588f883ee",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bdfdec9f-0714-4756-9fe0-4f14314ac757"
        },
        "item": {
          "id": "2c7f6133-748f-4483-a21e-821efd56b12f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "00425f8c-e411-442e-adfd-4bbf9f94bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff688019-272c-46ed-9f7f-9f0c369336e2",
        "cursor": {
          "ref": "31662d6e-6d80-4a52-9f6b-bceedae8c126",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4cac9bb0-4b33-4de9-9743-e9f4474ee674"
        },
        "item": {
          "id": "ff688019-272c-46ed-9f7f-9f0c369336e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "395f6d52-75ba-4dec-b395-5db81b8eb01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5065be30-76b0-4341-833d-017dda82fb04",
        "cursor": {
          "ref": "4cf87061-0427-445d-a8b5-43bb6fabe3e7",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b12f48a6-c72e-497b-88c1-434ae0550c6d"
        },
        "item": {
          "id": "5065be30-76b0-4341-833d-017dda82fb04",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "277437ad-0c37-498b-81ad-d1de7713194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea29b3b5-78e7-44a1-b6aa-2e819804f0b6",
        "cursor": {
          "ref": "5402c063-397f-4793-957c-fa60618a14b2",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "db3a3e34-6e6a-4c78-9499-47a4d14f49db"
        },
        "item": {
          "id": "ea29b3b5-78e7-44a1-b6aa-2e819804f0b6",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "22a4473f-2efe-4b22-b0e9-92ce0497eaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841258c2-000c-42ba-850c-d0196b1a05f5",
        "cursor": {
          "ref": "bab1b27e-6881-4e87-866c-0e1e234e6daf",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "30f22007-770e-4b52-9bf7-8aa0c115cff9"
        },
        "item": {
          "id": "841258c2-000c-42ba-850c-d0196b1a05f5",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "0bc26a8d-0dd0-4aa6-87b5-45e006f41d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6540ca8e-7a47-489a-9098-4a46ffb05fad",
        "cursor": {
          "ref": "04cf89ab-48d4-47c5-b2af-fff14041dd8d",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c2354ef0-0496-43cc-92e0-ae41aa91079f"
        },
        "item": {
          "id": "6540ca8e-7a47-489a-9098-4a46ffb05fad",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "531abd53-16d0-4570-a813-d897d1167c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f392a906-b5f7-4e34-b410-42e3e54d521f",
        "cursor": {
          "ref": "33d700fb-003f-4ff9-9d10-091589c727a4",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d65b7a15-bcb9-40b8-b97d-b5453093e466"
        },
        "item": {
          "id": "f392a906-b5f7-4e34-b410-42e3e54d521f",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "29f7d3eb-fef7-428b-88a6-27264d683517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d8f30-0dfc-486a-abc3-4b9bad9ab6c0",
        "cursor": {
          "ref": "66f2f7dd-b9b8-4629-9615-dba06db312f8",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "828da94a-dd36-4e11-9655-a5b2199f33bc"
        },
        "item": {
          "id": "316d8f30-0dfc-486a-abc3-4b9bad9ab6c0",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "ec5b32a1-79ac-4f43-a26c-903c24bf3c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a774a9-b6f8-4733-8bc3-2beb137bead5",
        "cursor": {
          "ref": "d1719bed-5cce-4ff2-84c7-666476c57abd",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "49129002-a061-4073-ad3f-d8de5b1f2eb8"
        },
        "item": {
          "id": "a5a774a9-b6f8-4733-8bc3-2beb137bead5",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "256d6447-0239-4cce-bdf4-b8f1efd90bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c1cde9-835a-4635-8e24-a6b0ccd8632e",
        "cursor": {
          "ref": "520e43f9-2499-43e9-b9d1-d467cc7ac08f",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1ff48b2b-831c-4472-969b-76a0e41f4a88"
        },
        "item": {
          "id": "52c1cde9-835a-4635-8e24-a6b0ccd8632e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fa17c326-01c0-4a5e-adff-6d5dbe2f7c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263bee2a-8435-4746-b773-3f383ce54043",
        "cursor": {
          "ref": "3e4f0ab0-19d3-454c-99bf-b4d80506797e",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "774f4467-6cd7-4fb5-921a-cff6c5356a25"
        },
        "item": {
          "id": "263bee2a-8435-4746-b773-3f383ce54043",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "df9d021f-6dbf-4807-b982-b93be6019d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e110c049-2658-4d47-ae96-da0a45d1162b",
        "cursor": {
          "ref": "0272a78c-99a6-4b17-bb5d-5489defd411a",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5ba6778e-aa02-41ae-b343-e1a089bc79d0"
        },
        "item": {
          "id": "e110c049-2658-4d47-ae96-da0a45d1162b",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "3e1ce9bc-f720-44fc-92bd-34bce9ae10c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a4b2ce-5417-40be-acee-c7090cb86ee5",
        "cursor": {
          "ref": "650c88b5-bb0c-4768-83df-86459652887b",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "64994c36-39e0-4a39-8115-f7b8cf53f34b"
        },
        "item": {
          "id": "e6a4b2ce-5417-40be-acee-c7090cb86ee5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1d83ee75-55e3-4f87-b64c-657f993e3785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdecc82e-4447-44c7-bb3e-42dafb9ced6f",
        "cursor": {
          "ref": "33dff429-9e9d-4b55-9398-d08083f189a5",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b544dc67-69a2-4b85-ab9d-d760e7698820"
        },
        "item": {
          "id": "fdecc82e-4447-44c7-bb3e-42dafb9ced6f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "37866f13-e18c-4f14-8904-37b0db38381d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bd0de4-3948-4e51-a0b9-2d17b89acc6d",
        "cursor": {
          "ref": "4466f0b8-7bdc-4009-b76e-2f897a3fa744",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2fcea24-a9a7-4024-8082-458ed0c8e9f2"
        },
        "item": {
          "id": "b5bd0de4-3948-4e51-a0b9-2d17b89acc6d",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7dd806f2-19fb-4f09-9185-0d95fd3d665a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c947ac-1829-41a2-8c75-e67ddd04f63b",
        "cursor": {
          "ref": "19583b39-e7b4-43ee-a79e-4d3a247442b8",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6110cb94-7b6e-4ec9-8966-1b4c28dbffac"
        },
        "item": {
          "id": "98c947ac-1829-41a2-8c75-e67ddd04f63b",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "b5a66956-3d0e-4e0f-b9be-2bd2150e358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11f3cfa-fa50-4457-984b-cb52af3b96e5",
        "cursor": {
          "ref": "a94942ef-fe74-464e-a41a-1f02dca2644e",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19484e1f-4c0a-499c-a3ec-e779ad7f8bfb"
        },
        "item": {
          "id": "a11f3cfa-fa50-4457-984b-cb52af3b96e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "58d90bcf-4c96-428b-a340-952f38582940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6f9267-e184-492b-a86e-e1a66ed32755",
        "cursor": {
          "ref": "eed5d39a-87dd-4575-a1eb-3092bfa7d0cf",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "74123d83-8afe-4798-b708-4d70fbaf5f02"
        },
        "item": {
          "id": "3e6f9267-e184-492b-a86e-e1a66ed32755",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "48a42390-3e1a-417a-a6bf-a13cff7c3fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0ed47a-46ae-4c11-bce2-c9e6e724d5da",
        "cursor": {
          "ref": "eb519190-e7d2-4039-8955-6be79b6a26f8",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6a1c51e5-242f-4679-8562-c4c00677e3d1"
        },
        "item": {
          "id": "9a0ed47a-46ae-4c11-bce2-c9e6e724d5da",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "3561c2a9-0253-46ef-8849-93b14e4e6baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bd7201-0220-4c1e-b406-3c7a9f373305",
        "cursor": {
          "ref": "c5b4baf8-5cd8-467a-801e-67b2a647775d",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3e535a26-7c1c-453f-902f-d03c8c823b65"
        },
        "item": {
          "id": "46bd7201-0220-4c1e-b406-3c7a9f373305",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d81e962f-33ff-40f6-aeaf-bcf0ac00c4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22c68ba-2182-48ce-86f8-a178612a46b5",
        "cursor": {
          "ref": "b8d1f241-0c7c-4486-9a12-f344818e725f",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08ee5ddf-601a-4305-8ae0-e0c2a19cb84f"
        },
        "item": {
          "id": "e22c68ba-2182-48ce-86f8-a178612a46b5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f3ae8967-2512-4f48-9d10-40b9bef291d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc53c034-9645-42b2-87ef-87c225245f61",
        "cursor": {
          "ref": "83c08d49-1ca8-4e5f-9f94-736ece875345",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5003b8c8-1345-4097-b8c0-6b8fec3d7578"
        },
        "item": {
          "id": "fc53c034-9645-42b2-87ef-87c225245f61",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "ce1d517d-e165-4d8c-8ab8-072b8ef68764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb316967-5ebb-4eb8-bd93-35e5d3d22a2b",
        "cursor": {
          "ref": "35e3585c-6796-4a52-8c3f-e96403da193d",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "554999a3-67af-4bc6-91f1-d59f15003274"
        },
        "item": {
          "id": "fb316967-5ebb-4eb8-bd93-35e5d3d22a2b",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "0948001e-6dfb-4c90-a493-e617845546ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba761860-9ebc-4f97-8898-bcbc7da24e0f",
        "cursor": {
          "ref": "3e9a432c-2c0c-4a12-a55f-0ee4ff7f6f48",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0380f4dc-9d37-4d89-9bfe-d4efcbe7cfd6"
        },
        "item": {
          "id": "ba761860-9ebc-4f97-8898-bcbc7da24e0f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "53f8eb25-5da1-49e3-87e3-e4ed2b230d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bdc306-d7f1-4763-921f-5c68c5edb0b4",
        "cursor": {
          "ref": "ae42203b-7c75-442e-8d87-568f3541ccb6",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b52c927-d7c0-420d-b7ff-b68641d50e30"
        },
        "item": {
          "id": "f8bdc306-d7f1-4763-921f-5c68c5edb0b4",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "22e60100-93da-46b0-9ba2-3de3d91f1289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651a5397-308f-4ab6-94e1-2da4a3fcc47e",
        "cursor": {
          "ref": "e2aff54d-506c-4d1d-96ef-c2dd35177e32",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "186ec939-ad1d-4c99-9063-abcf83a26057"
        },
        "item": {
          "id": "651a5397-308f-4ab6-94e1-2da4a3fcc47e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "31001bc0-2344-496e-8120-d84b57927da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0905c8a6-988c-4509-b629-46ba86473764",
        "cursor": {
          "ref": "8195e700-03df-49fd-ab88-76f19d921ad7",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fd96a63f-9f4b-426d-ba2f-5f24c8ff1c60"
        },
        "item": {
          "id": "0905c8a6-988c-4509-b629-46ba86473764",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "71abac2f-53bb-46be-bf80-2a224076387f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de909a7-bc74-4278-b2f3-1f58b7fd0c28",
        "cursor": {
          "ref": "e8c96f3a-03f0-4bbf-bcc4-3b09e8f21e9d",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "53c9418b-deab-44b5-90ba-b34507625bd8"
        },
        "item": {
          "id": "6de909a7-bc74-4278-b2f3-1f58b7fd0c28",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12aab095-0c05-4627-9649-b5d2dec28feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8abe3b2-3fba-4016-87ee-5024be5606fc",
        "cursor": {
          "ref": "f7715bbf-dc09-49a4-a88d-1a5d7a5a550a",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "53e9e006-488d-4a32-aa5a-351888c0f6b8"
        },
        "item": {
          "id": "e8abe3b2-3fba-4016-87ee-5024be5606fc",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "0256f76e-72d6-47a4-b01d-917f7c9d4bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81badf20-512a-4994-b59b-6c286b8ad510",
        "cursor": {
          "ref": "953ec9a4-06c4-4d23-9557-37bbec588f05",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b9a7ba19-f572-43de-a70a-3f9202bd6164"
        },
        "item": {
          "id": "81badf20-512a-4994-b59b-6c286b8ad510",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "331636f2-81cb-4ab1-90ab-2612d9570387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b583e6-0d96-4ddf-997e-88077dd30dbc",
        "cursor": {
          "ref": "cad7ee32-3eb4-4ced-ae5d-42c0b6d9ea10",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c58f3149-44f1-40fa-b72b-746d6664a5e0"
        },
        "item": {
          "id": "f1b583e6-0d96-4ddf-997e-88077dd30dbc",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "06b4a774-2973-4c93-bb5c-de757728a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33918db9-afd9-4ad0-bd63-cffa51ee211c",
        "cursor": {
          "ref": "fe2ab18e-5e05-4ffa-9b91-b4ab0239865b",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a358e068-e415-4ca0-b117-9f0654dbf87e"
        },
        "item": {
          "id": "33918db9-afd9-4ad0-bd63-cffa51ee211c",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "01c34536-fc8d-42de-8751-ae6a017180ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb6e54-fea5-4727-a0b3-2252db778114",
        "cursor": {
          "ref": "0e1b70ea-acb4-4dd6-990e-0e347645f1d7",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "843b4ab4-44ac-4e35-8f4f-38d1847b7fe4"
        },
        "item": {
          "id": "1aeb6e54-fea5-4727-a0b3-2252db778114",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c19a0610-82bf-4577-9b3a-67ac73ea8816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80565ffd-7196-4481-a386-445ed2c95db7",
        "cursor": {
          "ref": "e30ac7ce-31c4-4c63-ad2c-097831d18ee6",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed2ff310-1ab3-4499-84e5-96e37397c8fb"
        },
        "item": {
          "id": "80565ffd-7196-4481-a386-445ed2c95db7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "61225267-82fe-4824-88e3-1ce4690c18ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525b07e0-1eca-4a5f-86c0-b405e741cf0c",
        "cursor": {
          "ref": "ea281946-ebbe-4a9f-bde3-d128c78a6542",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "acfc5e4d-b7db-4273-970d-9007bf987200"
        },
        "item": {
          "id": "525b07e0-1eca-4a5f-86c0-b405e741cf0c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fb0d8ffe-b98f-4858-b38c-7a051477f992",
          "status": "Created",
          "code": 201,
          "responseTime": 1075,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "df00c611-c0c1-43ba-bc07-932e8eb7a4b3",
        "cursor": {
          "ref": "9eebdf97-65ec-4b72-beb6-914584a2775a",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c046bfb1-483d-4ebc-9fa9-f3cb27544f6d"
        },
        "item": {
          "id": "df00c611-c0c1-43ba-bc07-932e8eb7a4b3",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "3e3bb3aa-35ad-4fdd-be90-8938e258b7b4",
          "status": "Created",
          "code": 201,
          "responseTime": 1054,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294f4df-bc53-4e53-95a3-69a5cf6f0c79",
        "cursor": {
          "ref": "00e6192a-3176-4c8c-b443-04e5b914430f",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc502bbe-f7e7-4d29-b69a-c7399dd6fd76"
        },
        "item": {
          "id": "0294f4df-bc53-4e53-95a3-69a5cf6f0c79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eafc851c-0ba9-41ce-a016-f73a1e7e70dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "57c6b53c-0ab4-4fa3-8180-8ab5a72bea4a",
        "cursor": {
          "ref": "121c9c7e-5c04-4b20-9e01-e71326ee80dc",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f4a79a2e-6a11-4ae2-bc5d-826576951d20"
        },
        "item": {
          "id": "57c6b53c-0ab4-4fa3-8180-8ab5a72bea4a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e82a54de-901a-44f9-8ccd-62a2caa8d61e",
          "status": "Created",
          "code": 201,
          "responseTime": 663,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee64a90-68d0-4853-8f97-f538e9c8f4e7",
        "cursor": {
          "ref": "e4dbffd2-2855-48f5-a4c8-428df59950f7",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "95a3ce9e-d22d-4e1a-83ac-7308a68a3880"
        },
        "item": {
          "id": "cee64a90-68d0-4853-8f97-f538e9c8f4e7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5fb2b48b-48ca-4020-b360-5ed95af7458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "13342cfb-c06c-4be2-9209-b958924a33a1",
        "cursor": {
          "ref": "2cdb6cdc-3616-4302-99cd-c140c9bd0d62",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a2d4c011-1544-43b6-a9c0-9a11c18f7541"
        },
        "item": {
          "id": "13342cfb-c06c-4be2-9209-b958924a33a1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d77cf0da-63f3-4b9b-812c-e300c5a5840c",
          "status": "Created",
          "code": 201,
          "responseTime": 526,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a7142-95e7-4276-8157-5c9f3558a5b0",
        "cursor": {
          "ref": "e5aa6121-2d0e-46a3-ae3e-017bc58a1c7f",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9d01c497-41aa-4a55-b36e-f7be4852fc97"
        },
        "item": {
          "id": "1f5a7142-95e7-4276-8157-5c9f3558a5b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6dce638e-c685-408c-ad1b-c0b08f96072b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a7142-95e7-4276-8157-5c9f3558a5b0",
        "cursor": {
          "ref": "e5aa6121-2d0e-46a3-ae3e-017bc58a1c7f",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9d01c497-41aa-4a55-b36e-f7be4852fc97"
        },
        "item": {
          "id": "1f5a7142-95e7-4276-8157-5c9f3558a5b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6dce638e-c685-408c-ad1b-c0b08f96072b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd7c96c-90b1-4501-ba3d-f265fc0574a7",
        "cursor": {
          "ref": "914c4dd9-0c4f-412e-b9d2-4614a9bffb24",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "37999f27-ba41-40fe-ba2e-6989691a52f7"
        },
        "item": {
          "id": "abd7c96c-90b1-4501-ba3d-f265fc0574a7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "455c327f-f53b-4f45-9c32-a50ead59159e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 39,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38de4f7-9c71-43a2-8ea3-949de2fd337e",
        "cursor": {
          "ref": "f0610340-04cb-456c-a8e0-a41f669bfe2a",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6da622fa-0ded-4906-bf6f-2a15abfe891e"
        },
        "item": {
          "id": "f38de4f7-9c71-43a2-8ea3-949de2fd337e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f4515de7-3f06-418f-aec8-5fba1e03d0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38de4f7-9c71-43a2-8ea3-949de2fd337e",
        "cursor": {
          "ref": "f0610340-04cb-456c-a8e0-a41f669bfe2a",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6da622fa-0ded-4906-bf6f-2a15abfe891e"
        },
        "item": {
          "id": "f38de4f7-9c71-43a2-8ea3-949de2fd337e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f4515de7-3f06-418f-aec8-5fba1e03d0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2be4c2-cd87-488e-83ef-7a0b8ddb32b5",
        "cursor": {
          "ref": "40724e35-207b-47e2-b595-43cceaa163ab",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "47dd170a-8d45-4c8d-9b8a-b6cf18d01038"
        },
        "item": {
          "id": "da2be4c2-cd87-488e-83ef-7a0b8ddb32b5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dce9f8e4-1f13-4474-8b0a-85ec686f974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e763c792-5a65-4cb1-a0ca-e5f3f0eeb2ea",
        "cursor": {
          "ref": "b34d5f28-015b-4dbf-94a3-8059c08243d9",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2fa06e7c-2d45-4b76-a783-70b32eb5adcd"
        },
        "item": {
          "id": "e763c792-5a65-4cb1-a0ca-e5f3f0eeb2ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "506bf2cb-71b5-4606-a686-9a7a050944b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa87782f-7326-4e0d-b3d9-3b0d4ef38051",
        "cursor": {
          "ref": "170bcfd3-6a7b-4939-9f23-f6885d2e5feb",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ff75f599-aa9f-46c2-b94e-29012edc3ec9"
        },
        "item": {
          "id": "fa87782f-7326-4e0d-b3d9-3b0d4ef38051",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1042365a-70ca-4915-b492-20907c8b0395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddb289a-25cf-40f3-9fb9-ab758f85dce4",
        "cursor": {
          "ref": "81ee1a6b-4ef7-44e1-9070-e2690b7ebef2",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "507f83ef-3c21-4f96-9f7c-d28f630e8f6e"
        },
        "item": {
          "id": "9ddb289a-25cf-40f3-9fb9-ab758f85dce4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfee2c4d-380c-4b27-886a-0550e48648ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e8821-5cde-4486-a58c-ac6806a4fbed",
        "cursor": {
          "ref": "1f856a02-e849-406f-829a-89cdd9107eb3",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a4a20b8-b5e7-4989-953d-902a1941ca83"
        },
        "item": {
          "id": "823e8821-5cde-4486-a58c-ac6806a4fbed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b72a1d3-5f53-4753-a7ab-2bbae6c64cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e255d19-2a7b-4929-9482-5efc35a0280b",
        "cursor": {
          "ref": "63d1d0fc-cbca-4bda-bd67-a540c936cfd0",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d3eadbe8-4545-4337-9ee3-a39e1cd41760"
        },
        "item": {
          "id": "3e255d19-2a7b-4929-9482-5efc35a0280b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c10c3c25-693d-4a93-9b35-92096f166834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199002b3-6f1c-4dd6-acd3-f0c3438f3c7a",
        "cursor": {
          "ref": "3439100a-7af3-4c68-b688-1f6d52e2d579",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2cc8a99f-3887-4925-8c45-a2cb8d7fbd83"
        },
        "item": {
          "id": "199002b3-6f1c-4dd6-acd3-f0c3438f3c7a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2f077d9a-af87-44ed-afbe-8847b1d51fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902f0a2b-8b0e-4616-b9c2-25e6d1a627c0",
        "cursor": {
          "ref": "44152f55-da57-48a9-a19d-3aa66f238602",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c7995066-d38d-4e3d-ac68-5c7f7a58158c"
        },
        "item": {
          "id": "902f0a2b-8b0e-4616-b9c2-25e6d1a627c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a013b69-d953-4939-94a6-280af80bbe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d116c21-7666-4776-acfa-5026ce23bc08",
        "cursor": {
          "ref": "eec30e89-879c-4505-bcad-e1975772f6da",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c0bf6917-27d4-4561-a3ff-485fbf5680b5"
        },
        "item": {
          "id": "1d116c21-7666-4776-acfa-5026ce23bc08",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "348479d2-454f-4c52-b50b-279f3388c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f3ecd3-04f9-4d81-87c7-a62b38371ee2",
        "cursor": {
          "ref": "34e60003-af3c-414b-80a9-6eafbaf2e341",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f481a9b6-8c0b-4ef7-b302-66175bc22ba3"
        },
        "item": {
          "id": "e9f3ecd3-04f9-4d81-87c7-a62b38371ee2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f142a2a1-4004-4901-becd-c453652ef906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2839c34b-8806-437b-83e6-08828ad7039a",
        "cursor": {
          "ref": "ba002c62-359d-4ab8-b790-ed9d9a1900fa",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b4c7dd6-c57c-4548-9d84-5e002d3e1d7a"
        },
        "item": {
          "id": "2839c34b-8806-437b-83e6-08828ad7039a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "63c1e8a8-57a7-4ee8-aa58-65796b78c9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c72c5cd-d482-4c96-afd8-eb8e2325c3e0",
        "cursor": {
          "ref": "7dce3e2d-a11b-4433-bf64-3ec6d0e9f0ef",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bd07e80d-32f7-42ca-aa9e-5d3252c1c1c8"
        },
        "item": {
          "id": "0c72c5cd-d482-4c96-afd8-eb8e2325c3e0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2fd79ac2-487b-4b7c-8497-fbcd2ac9fc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2adf712-2cdb-4e47-a978-5eb5bd1d7d6b",
        "cursor": {
          "ref": "6ec26b50-0dcd-47e9-9b3f-ceaf90ccf518",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "82d1ef08-75ce-4978-a934-390fc43b5d35"
        },
        "item": {
          "id": "f2adf712-2cdb-4e47-a978-5eb5bd1d7d6b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "37e51af5-d0f5-499d-9b21-551995f2205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebacd2d-0f4f-4784-bce4-600420ad4d07",
        "cursor": {
          "ref": "06efc406-0f67-459c-9c79-f7c693e7daa9",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c9fca138-7ec3-48f9-a88a-0963c7503695"
        },
        "item": {
          "id": "6ebacd2d-0f4f-4784-bce4-600420ad4d07",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0af4e52-4edc-4e8f-99c6-89ae7828be97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3569531-a659-4f41-a6d1-631897c17957",
        "cursor": {
          "ref": "fd2eec2f-fb5a-4b94-a69a-462c56a026d5",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "59c4ca9d-3080-4f6a-bd2f-7cd7bc29bc08"
        },
        "item": {
          "id": "b3569531-a659-4f41-a6d1-631897c17957",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fbe0af7f-4537-4ea3-a102-5b5d0af7fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8928c2-d33e-4fe7-bc76-18027a660d11",
        "cursor": {
          "ref": "639e606a-909a-44aa-9e7e-74dff39ad23d",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1a6c791-5abd-4c31-81e3-5f7417873736"
        },
        "item": {
          "id": "2a8928c2-d33e-4fe7-bc76-18027a660d11",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db91f47a-1993-4f53-95cb-3a362ebc72eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9946eb-b3b3-4b70-b27d-60120e5bcece",
        "cursor": {
          "ref": "37ff4b02-c088-4167-99bc-9cb806bcef98",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "091ebd00-c00e-44a7-9688-ad93c1ba4a10"
        },
        "item": {
          "id": "5e9946eb-b3b3-4b70-b27d-60120e5bcece",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f665a1f-c208-4c14-a25e-6cc7a16e7da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36310def-b79a-4921-b830-6551f153f9bf",
        "cursor": {
          "ref": "742cdf4c-ec6c-4939-a165-2b31b3412659",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2b78ec98-9790-4d37-b931-56b828748503"
        },
        "item": {
          "id": "36310def-b79a-4921-b830-6551f153f9bf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0fa09593-8a62-4c52-8260-13a2f2f87ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3de773-7d17-4bf1-8e19-288352e7020f",
        "cursor": {
          "ref": "7d2fa7f9-152f-463e-9d41-63340428edbd",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2fca4f9f-4729-4932-8065-7ddbe3714a5d"
        },
        "item": {
          "id": "8f3de773-7d17-4bf1-8e19-288352e7020f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e2f00f27-7edb-4efc-a95b-aee5e65d9deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a63ec-cb97-40fb-a50d-870533a8b32c",
        "cursor": {
          "ref": "e7c8dbed-693b-4150-afea-fbb53d9c9039",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7f837c3a-83ab-438b-83e3-2d43468dbd6e"
        },
        "item": {
          "id": "ff1a63ec-cb97-40fb-a50d-870533a8b32c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a6d36dfc-e24b-4854-8cc4-483de0c6129f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca52767-fb38-4aec-828a-262ce952dba7",
        "cursor": {
          "ref": "8fe87bb9-a2b4-4d8f-97cf-12512a4c8fcc",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "db59a739-4053-4dd8-b8bb-5d3b7bfa0427"
        },
        "item": {
          "id": "3ca52767-fb38-4aec-828a-262ce952dba7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0becc6d3-004b-4fc0-967f-3c38f5bdd7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1714,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02900899-31f9-4cf9-a74e-0680a01d0a69",
        "cursor": {
          "ref": "c9c39023-5e63-498c-bff4-b515d10298a3",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c31b0a37-daa8-4672-b86d-18dc90f5f34d"
        },
        "item": {
          "id": "02900899-31f9-4cf9-a74e-0680a01d0a69",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "822d49f5-6579-4d25-a379-5754e3d58389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a20dedd-e644-4d45-842b-d3a4a93f4c5e",
        "cursor": {
          "ref": "96d5038e-64c0-40e3-ae7f-881ae9d8e637",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cc2c07a2-ed16-4a43-97f1-721ed464c4f8"
        },
        "item": {
          "id": "0a20dedd-e644-4d45-842b-d3a4a93f4c5e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a845d49b-ad53-4ba6-a994-4d8e13c5e20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe81e3-18d4-4ad5-8057-1a117d5c327c",
        "cursor": {
          "ref": "520fe4bd-b6b8-40c2-8047-9463aab4ac7d",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ca7656aa-0e1c-4dda-baa7-fec88843343a"
        },
        "item": {
          "id": "2efe81e3-18d4-4ad5-8057-1a117d5c327c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2a92fc1b-461f-4999-9e2f-6430fd11bc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b5e30d-d625-41f2-8558-78908b4fb8bd",
        "cursor": {
          "ref": "9f5379ea-22e1-4ef0-b46f-ee4efab0bc4b",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "55161cce-b65b-41ee-bfde-6b611508114c"
        },
        "item": {
          "id": "f8b5e30d-d625-41f2-8558-78908b4fb8bd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "09e9f7d5-62ae-4f8a-8f4c-46d2dc871deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b46688a-eee1-44c5-8df4-a0c4576149ef",
        "cursor": {
          "ref": "97b4506f-f010-4dc0-99e4-c3730898e379",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6f11ded-a7bd-424f-bd6f-80d2d074ddfa"
        },
        "item": {
          "id": "9b46688a-eee1-44c5-8df4-a0c4576149ef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "69c840b8-223b-45c8-b6b2-eed4936bc371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a66221-7820-4684-87f7-0f662d784421",
        "cursor": {
          "ref": "cd527cde-0d82-46da-afbf-f600140fb4f8",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c7253d6c-fc54-4c32-9a2e-044975ab4d56"
        },
        "item": {
          "id": "30a66221-7820-4684-87f7-0f662d784421",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6bf2307-c4d3-4e42-b93c-e27fd95d1c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d3c07e-7751-4cec-9c9f-caa7d8caf5c5",
        "cursor": {
          "ref": "0034e09a-1866-4741-88ec-cbbcf838324e",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0beefc13-da5e-4074-ab04-93b0c2c1d5df"
        },
        "item": {
          "id": "76d3c07e-7751-4cec-9c9f-caa7d8caf5c5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49b905a5-6e16-4963-90e2-566a696fa6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1c688b-02ee-44e0-86c4-698c8d244ca9",
        "cursor": {
          "ref": "e67eefce-38f4-4fcc-8031-a1b40f5a89c2",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bc34c147-121f-421c-9578-a1cd39a3ce1b"
        },
        "item": {
          "id": "0d1c688b-02ee-44e0-86c4-698c8d244ca9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5776aeda-8e77-4d7e-b4bd-42bf2231e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b05c654-a4d6-44d4-b4fd-b52fc8dbaaee",
        "cursor": {
          "ref": "4e8c405a-6b7d-4570-9d0f-1afdddce3511",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "95225d69-9b7c-4a4b-88a2-60081a7dcc92"
        },
        "item": {
          "id": "4b05c654-a4d6-44d4-b4fd-b52fc8dbaaee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b05c6578-5ccd-4419-98ee-47df088301f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f13b9-542c-44f5-8306-de0afffb312b",
        "cursor": {
          "ref": "0dbe49fd-55d3-482c-af43-59d66ecb369d",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3b2b3b7c-2c3b-450c-8fad-64d4537471ae"
        },
        "item": {
          "id": "780f13b9-542c-44f5-8306-de0afffb312b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "49b8a5e9-c906-4063-b523-0e3034000948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edd0b8a-daaa-4f35-8211-5a30c021b4de",
        "cursor": {
          "ref": "ba925e98-cdb5-4c21-bd81-bc15c60cb00c",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "28424e19-4ee6-4b6f-9449-059708f38544"
        },
        "item": {
          "id": "7edd0b8a-daaa-4f35-8211-5a30c021b4de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d2992a69-d7aa-47dd-a9c1-225318441f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a8d69-5a7f-476e-a749-0ea534e8c894",
        "cursor": {
          "ref": "6a4a2341-d657-47ce-bb50-0336362f3622",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99a692e9-594d-4de1-8c2e-f48ba697e6c7"
        },
        "item": {
          "id": "c73a8d69-5a7f-476e-a749-0ea534e8c894",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a6c02c36-c758-434e-abba-d7bbc2255348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d591218b-ab6d-4671-8736-0c89171d19d9",
        "cursor": {
          "ref": "427dc17f-2da4-49e9-8c6e-392b38072eea",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09240ffa-ea62-41ec-803d-0206581b05f7"
        },
        "item": {
          "id": "d591218b-ab6d-4671-8736-0c89171d19d9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "29d695df-5f6b-4bdf-a946-fb263db418de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaa438f-4a69-4398-8dfe-34207662b897",
        "cursor": {
          "ref": "9e8cb977-f917-4cfc-93b5-8fa86971665b",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d0b6e78-a220-40fa-80c3-d3b0170b38a6"
        },
        "item": {
          "id": "3eaa438f-4a69-4398-8dfe-34207662b897",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e6b05db6-92c9-4417-84d9-57a819a79395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e50f100-6f3f-4ed9-a2a0-6b592b1f5a28",
        "cursor": {
          "ref": "35568663-863f-40e6-8798-2eb61ab5a956",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8eacaed-cb89-434c-901e-9048dfb0df00"
        },
        "item": {
          "id": "9e50f100-6f3f-4ed9-a2a0-6b592b1f5a28",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d031923e-4ad8-48c6-acbb-d87263cf906e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ff16bb-b68f-4caa-b4cd-7e76201fbb19",
        "cursor": {
          "ref": "a9cbf3e7-c2e1-4946-8a7d-7b0af37da23a",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "674e9e66-0ae3-4d07-af8c-3550f64ba826"
        },
        "item": {
          "id": "44ff16bb-b68f-4caa-b4cd-7e76201fbb19",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8084315b-b3c9-47db-98c3-b2309f09c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca0288f-7d35-48d2-8caa-9479702b9ed1",
        "cursor": {
          "ref": "31d39df7-66c3-40bd-92eb-647684cd357f",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "625ba705-85e0-47c1-8419-cd9fef63e3dc"
        },
        "item": {
          "id": "aca0288f-7d35-48d2-8caa-9479702b9ed1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9526bf52-7d20-4afc-bdd4-b622a61916e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38980833-adbd-456c-8eb9-63115b1e3ec9",
        "cursor": {
          "ref": "8544f502-12cb-4bbf-9b37-c2e769f45dc0",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f321ef9f-f1eb-4728-b601-37add69751d8"
        },
        "item": {
          "id": "38980833-adbd-456c-8eb9-63115b1e3ec9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a563d9ff-222e-405e-98d6-1dbe0c40b8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f964108f-db96-405d-ac8f-f275873001a8",
        "cursor": {
          "ref": "3390f104-743b-4e96-b08e-ea4b8a3d0963",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0838d289-560d-4977-af4a-89fbb2409a0e"
        },
        "item": {
          "id": "f964108f-db96-405d-ac8f-f275873001a8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f6224489-ffcc-4cae-9661-f00774c1f846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d17587c-13d1-43c6-88c1-0aabeaddb64c",
        "cursor": {
          "ref": "0b620448-066e-492a-b897-e79b32d0fdfe",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ffd9ff8f-02f5-4c57-abb4-ec493b315d47"
        },
        "item": {
          "id": "6d17587c-13d1-43c6-88c1-0aabeaddb64c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fb447917-a904-43c4-b734-cf53d09942e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5513e29c-e34f-4f7e-97c4-e9c63997640b",
        "cursor": {
          "ref": "f7caac31-5cc4-422b-8f90-f04dc1807403",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7b2e5f19-4b59-4b77-8f30-ca68e1e3b6ca"
        },
        "item": {
          "id": "5513e29c-e34f-4f7e-97c4-e9c63997640b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "89f06fe6-2728-48d2-85ea-f8f1595c8055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b7bf4-e887-49ad-bf9d-ec27ef4c73c3",
        "cursor": {
          "ref": "6457a248-a326-41f7-80ca-2c33bcb6762f",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9a2bade7-6399-4cf8-8c9e-8561428b21ae"
        },
        "item": {
          "id": "895b7bf4-e887-49ad-bf9d-ec27ef4c73c3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42217745-f103-4883-80ad-1e96677e5b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9b0a49-a9ed-4bac-8ed4-58faa70556c0",
        "cursor": {
          "ref": "411fbb28-0a76-4bf3-9bfc-cdec38c95a6a",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c46c1f2-5b37-4f1b-a362-aafced7bd2e7"
        },
        "item": {
          "id": "aa9b0a49-a9ed-4bac-8ed4-58faa70556c0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dd35189d-5044-4e66-9c91-7695b2bfbe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732d3ae3-e4b9-4d20-a8fd-7d9ba9c66ac2",
        "cursor": {
          "ref": "8b5d29e9-2744-459c-ae40-47f9e5f65239",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "10369fb8-c6ed-4400-8180-85bdd8fd591b"
        },
        "item": {
          "id": "732d3ae3-e4b9-4d20-a8fd-7d9ba9c66ac2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72a58817-0c33-4fdd-a97a-e324c343b638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ae381-0255-4cb4-a984-7280e8ecc349",
        "cursor": {
          "ref": "815e14d4-a825-4879-86a3-666264f891c8",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fec38c83-5298-4758-bcc4-e8c82b5a7151"
        },
        "item": {
          "id": "0c0ae381-0255-4cb4-a984-7280e8ecc349",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45f050d1-a8f0-4145-9abc-a77544c1ee65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fdd05d-5fc7-4d37-a435-f6311f7a64ea",
        "cursor": {
          "ref": "9d5d7e9d-f317-4b25-b4cf-6ef63cbbcb13",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "87a38c0d-d16b-4efd-a93b-fce59a4f7fa3"
        },
        "item": {
          "id": "74fdd05d-5fc7-4d37-a435-f6311f7a64ea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "859a3e4a-4ab7-4729-9f33-4ec2cd979f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f735316-3823-44c0-aa39-2a6a83aaac0d",
        "cursor": {
          "ref": "3cbff7db-5efa-40b0-bd66-f2ae423619a0",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ffbbe29-458f-459e-8452-3f8405fec359"
        },
        "item": {
          "id": "7f735316-3823-44c0-aa39-2a6a83aaac0d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf473372-5933-4fa3-827b-63ce21157caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb647ff-0463-4d18-810b-1f1e329c5f40",
        "cursor": {
          "ref": "eceea054-5d9e-4693-99fe-d985d1fc4416",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d41300ce-e307-43d2-81a2-4d494ba5cd68"
        },
        "item": {
          "id": "0fb647ff-0463-4d18-810b-1f1e329c5f40",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d04c2fa2-d659-4e15-9c85-e9ab06753b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef7b2a1-2fae-406c-8b78-c510db74d6e3",
        "cursor": {
          "ref": "a3a20eaa-d9bf-4de4-9959-c3edb6066345",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5c7828d-ccde-4987-9826-98b35cf6e01d"
        },
        "item": {
          "id": "bef7b2a1-2fae-406c-8b78-c510db74d6e3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cc35f2f0-7a02-4da7-a9ac-a1c08318e2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af18f34-1a3a-40f1-ac5e-c9146bf4a39b",
        "cursor": {
          "ref": "b03d738c-875a-4863-9916-13b7c23b34ef",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c61c0714-3cf9-4632-a937-e78c11cc7ee3"
        },
        "item": {
          "id": "9af18f34-1a3a-40f1-ac5e-c9146bf4a39b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cf61c61e-20cb-49c1-9eeb-ac3b8030b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1441,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05f2647-44a7-48c4-8c26-e8a3349ec36e",
        "cursor": {
          "ref": "edd320fe-3b7a-4ca8-8043-b1b4313314d5",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e328fe27-8813-4538-b425-c4f12d294815"
        },
        "item": {
          "id": "b05f2647-44a7-48c4-8c26-e8a3349ec36e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "02b8873f-9a15-42fd-ad84-cffe18bb1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529882fa-f7fc-4a21-887c-d3300c344da6",
        "cursor": {
          "ref": "167ae443-3dc0-436d-89a3-ce9539da6480",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "147aebaf-520f-4b11-9be8-8856568ee9c4"
        },
        "item": {
          "id": "529882fa-f7fc-4a21-887c-d3300c344da6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e5115508-7a1b-482a-b908-97eee71b2c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73371b73-cd69-4145-b047-45356dee2b19",
        "cursor": {
          "ref": "6bf053fb-1534-451b-825e-6675b46837b5",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "54bb158e-3197-415d-9aa2-eee1b03d0942"
        },
        "item": {
          "id": "73371b73-cd69-4145-b047-45356dee2b19",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f90b35f-964f-47e6-b831-85284b52dbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a9cfd6-3710-4a87-8ab3-58f7c2e7f43f",
        "cursor": {
          "ref": "2a4d7873-8d73-427f-b78c-dd46d6bb6585",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cb1098b5-eb0b-40ce-8224-dff64769daf6"
        },
        "item": {
          "id": "26a9cfd6-3710-4a87-8ab3-58f7c2e7f43f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "964360e4-d87a-4022-9c28-12a38639cab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d6f3d6-215d-443e-9e7e-f86aae96317a",
        "cursor": {
          "ref": "0aa6711a-3f6a-4ec0-8daf-dad45e4fc814",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0290d357-b045-4a30-96e6-7798d0c178bd"
        },
        "item": {
          "id": "37d6f3d6-215d-443e-9e7e-f86aae96317a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "00f97db2-bad2-4380-8186-508f392990c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac3f39-e281-4d69-a4fc-03445d987715",
        "cursor": {
          "ref": "e015361b-75d8-4f3d-8270-ffd375972f12",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5332733d-bad7-455b-8e57-7fba762e7c1e"
        },
        "item": {
          "id": "f5ac3f39-e281-4d69-a4fc-03445d987715",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "22ae1563-8f23-44e7-95e7-47cc6a7ae0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f3269c-79b4-485d-b094-ff21c2096edc",
        "cursor": {
          "ref": "6d9f2e94-ce26-46cf-bb14-8f9d2ff2ede6",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "702a60f3-da2d-489a-a4d6-2913a44744a9"
        },
        "item": {
          "id": "93f3269c-79b4-485d-b094-ff21c2096edc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2d82e615-0cb7-48a6-adff-7fc6312c617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0527c14-bcba-4441-8c60-f3f920c02d45",
        "cursor": {
          "ref": "c9c6076d-c628-4c17-a1ec-b1c026457c1e",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "20ba9ee2-856e-4498-a5ef-c83e05fd03ac"
        },
        "item": {
          "id": "b0527c14-bcba-4441-8c60-f3f920c02d45",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ad21325f-77cf-4878-b3ad-61639f647203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8575bde-b81d-4f56-9404-db5384ea63a1",
        "cursor": {
          "ref": "528722fa-4336-4836-a7d8-562b9accf2fd",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cbbc05cb-a6d5-4911-a786-23ba3bfb6c9e"
        },
        "item": {
          "id": "d8575bde-b81d-4f56-9404-db5384ea63a1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed12efe7-3e81-45fe-9911-d2cbf78684a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b8e096-7786-4689-b078-50f832e19876",
        "cursor": {
          "ref": "ba287e6f-8931-4518-8d06-3348a86313bd",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5f3b37d6-ae85-41ba-9451-5b340feb83c6"
        },
        "item": {
          "id": "25b8e096-7786-4689-b078-50f832e19876",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8ac8629f-14ad-41e9-8eba-7fd2a8c7d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15a4327-1b8b-40b5-96e5-8bb5468b0249",
        "cursor": {
          "ref": "3daedf67-9bbc-4c17-9570-056369274b3d",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ad847cf-f8ca-4d95-bce8-542012e7efbf"
        },
        "item": {
          "id": "e15a4327-1b8b-40b5-96e5-8bb5468b0249",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4dbbc87-f323-46c7-a665-8603f3b9be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be55e2eb-ed70-4689-bb4d-6443d0613560",
        "cursor": {
          "ref": "76ad7b73-ad6a-46d7-ae19-1e4e52d0183b",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "62de1b8d-66c6-4115-a8f6-bbef2043b9f1"
        },
        "item": {
          "id": "be55e2eb-ed70-4689-bb4d-6443d0613560",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dd2bbfa2-08cf-4b7e-be67-e08511f4ef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefb464d-aa73-40f5-aedc-082ea8705e06",
        "cursor": {
          "ref": "4fc2d176-4fc7-40b9-9369-657f7aef58e1",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "54a7598c-ebc4-43fe-a3bf-b3385dccb6ca"
        },
        "item": {
          "id": "fefb464d-aa73-40f5-aedc-082ea8705e06",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f4f506f1-e9d5-46fc-a382-6beb49aea5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff5b1e4-c119-4b87-bdf0-0c089402a0e2",
        "cursor": {
          "ref": "df23a02b-aa53-4ae6-808d-ccceb411594a",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a094a56b-0518-4806-94c0-4bd2ba1fe438"
        },
        "item": {
          "id": "0ff5b1e4-c119-4b87-bdf0-0c089402a0e2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "df032719-b99c-4a34-bc18-5ff18b77b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26d09fb-b65a-41a9-9038-115f6587e495",
        "cursor": {
          "ref": "2cdc376c-8d04-4a60-9a5f-fa114fcc0c87",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d3aa02e1-1092-4078-a5e6-0306aed44427"
        },
        "item": {
          "id": "a26d09fb-b65a-41a9-9038-115f6587e495",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b7e556c4-ea9a-48c9-b3a9-9766a4d9a53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30240d6c-dbcb-490c-ad5d-0c824c1cf1b1",
        "cursor": {
          "ref": "bea65060-90b9-4e35-935d-a51f475a9bd5",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4ca0ebef-42e9-4add-937e-dfc9bd7e6f01"
        },
        "item": {
          "id": "30240d6c-dbcb-490c-ad5d-0c824c1cf1b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fe0dd0c9-2105-4b2b-8296-cc301b982772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d7699d-bb34-4441-ae04-5fd12625b87b",
        "cursor": {
          "ref": "0c7954c2-ab4d-4466-985a-214da7aa4926",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ea5f0051-f1c5-47bc-9e9c-ab1d69498b5f"
        },
        "item": {
          "id": "25d7699d-bb34-4441-ae04-5fd12625b87b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6a30264e-7c69-4d97-bcef-70d7961da71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eea7195-12ae-4be2-9ad2-afb32e8541fc",
        "cursor": {
          "ref": "4cdf2811-1cb0-4229-9312-e53e69fadae3",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e90906a5-fa35-4adc-9b40-b1286053a429"
        },
        "item": {
          "id": "5eea7195-12ae-4be2-9ad2-afb32e8541fc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "82440bd6-9f76-4f7e-a89d-a4d9d14d2b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3fff3-8a82-4835-80b8-724795da0ca0",
        "cursor": {
          "ref": "57c997a9-0cd4-4c2f-8021-3ebaa7a7a3fb",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bcb83147-856b-4b1f-baed-e5c4198b46a5"
        },
        "item": {
          "id": "7cd3fff3-8a82-4835-80b8-724795da0ca0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3ad87167-9a15-4a4d-8a91-4bfd45c86256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5749f47e-c801-4c6f-af99-91e5102f24c7",
        "cursor": {
          "ref": "d452d696-ad8d-46b1-9d2b-0ea42cef97e1",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "47b196f5-a465-4f52-b662-a71a9ed7855e"
        },
        "item": {
          "id": "5749f47e-c801-4c6f-af99-91e5102f24c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "67f6067f-cbcd-4799-b3d5-b228220a594e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e625b35-e478-4e7a-aa94-e9562aa5e499",
        "cursor": {
          "ref": "59a58574-a0cb-4d51-b681-b0f3ddc0beea",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5033042d-dcc0-4de2-876a-d67cd9ad4eaf"
        },
        "item": {
          "id": "1e625b35-e478-4e7a-aa94-e9562aa5e499",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2c276639-09ef-4745-b78b-49196d00bf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1402df-ef4c-4821-bd84-cf29612ccb63",
        "cursor": {
          "ref": "e073ee72-9dde-4491-bef0-9670c87b95d0",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7332f8fd-8ab1-438d-95c9-73d5144a51cf"
        },
        "item": {
          "id": "6d1402df-ef4c-4821-bd84-cf29612ccb63",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9eeaf3b7-5bcd-498c-bc65-677859fba595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7f5517-f912-406c-af77-a783dbabb18a",
        "cursor": {
          "ref": "fb690683-d96c-495b-8803-52c6fbc67a6a",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d2247f1-b2d1-41bb-a620-9e0c5241be16"
        },
        "item": {
          "id": "6d7f5517-f912-406c-af77-a783dbabb18a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8a2255b5-73f6-4591-8be2-ba119897cf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d99ada0-745b-415b-980c-cadc6e447908",
        "cursor": {
          "ref": "47b1f0a6-aadd-4f15-afff-04e58bfd542e",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b96b8acc-2f92-43da-9d63-0efcd6d1561a"
        },
        "item": {
          "id": "1d99ada0-745b-415b-980c-cadc6e447908",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "68f91133-5b36-48f6-9e01-d34004ca0e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82562c5d-62c6-4a28-a2b7-67569074f388",
        "cursor": {
          "ref": "7a536d55-feee-4108-af79-a6875950166a",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8af92873-dfcf-418f-99a6-750731ea8b84"
        },
        "item": {
          "id": "82562c5d-62c6-4a28-a2b7-67569074f388",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac6745cb-1946-4bce-a71e-6cba0c97056a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4ae1ce-9b6e-4347-9b39-cad7a21d3f01",
        "cursor": {
          "ref": "9679cbce-a3e8-4acc-9a95-301868de8d48",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dc89a133-f545-4eee-ae19-37f3ed6f09f7"
        },
        "item": {
          "id": "ab4ae1ce-9b6e-4347-9b39-cad7a21d3f01",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "adfb81e5-5d1d-448c-a48a-bc06ba05ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709b7834-7712-4dbd-8479-60af93ee54e6",
        "cursor": {
          "ref": "81fbca01-e28e-494a-b91e-78e97b9234f7",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "39890052-7f93-4ff9-a833-168ba94faf4a"
        },
        "item": {
          "id": "709b7834-7712-4dbd-8479-60af93ee54e6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf24d43d-1fe9-4240-a994-158472deedf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c674d1-88b3-47d2-835a-90218ae6694c",
        "cursor": {
          "ref": "d0127597-28de-4964-8b4f-5f8d446ff7a9",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "05772d04-f4d1-45fe-bdcf-de355e95fbaf"
        },
        "item": {
          "id": "01c674d1-88b3-47d2-835a-90218ae6694c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "841d149d-5e02-41f6-96ee-17148eb190cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f81843-52da-4cac-a436-ba766db9f6ad",
        "cursor": {
          "ref": "46c11f5f-8efa-419c-8f1a-c2e5deb71ca4",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "84482cef-6f8a-4a9b-921c-a7553a7aaef4"
        },
        "item": {
          "id": "69f81843-52da-4cac-a436-ba766db9f6ad",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0d88ecbd-fd9b-4774-acf3-0f017b804ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f562efe-7016-42ab-9fa0-d74482a1163d",
        "cursor": {
          "ref": "6ddcd730-b38b-46f3-b462-457c88676d45",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8602c5c3-73e3-41cc-a194-74dfdd893e57"
        },
        "item": {
          "id": "8f562efe-7016-42ab-9fa0-d74482a1163d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9401612a-e951-439f-a4d6-997b4405c718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af302c4e-b18e-425a-94a8-16a9f9e87764",
        "cursor": {
          "ref": "9a7f0303-b4b1-4d7e-a724-589287c979d9",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "648b019c-9996-484d-8102-63ce9f60fb69"
        },
        "item": {
          "id": "af302c4e-b18e-425a-94a8-16a9f9e87764",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cd28a757-401c-49f8-b85b-c27fff21c8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108a57eb-a114-4091-b342-914361442595",
        "cursor": {
          "ref": "8970b998-5cc2-4e35-8bcf-c4e2260cdb75",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "848b84c5-65e4-4726-a4e7-b37fdb91860d"
        },
        "item": {
          "id": "108a57eb-a114-4091-b342-914361442595",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "48b9a283-780f-4759-b068-9fb2dae20f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7a2a8f-de8a-485c-b544-54781faf2baf",
        "cursor": {
          "ref": "e695a5cd-d80f-4aec-aa13-aed7421add77",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e22ed203-078c-4e28-b1f3-2cb97151d164"
        },
        "item": {
          "id": "fd7a2a8f-de8a-485c-b544-54781faf2baf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "14bf94cc-6c54-4d30-b65f-aa4d5aeb48b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075e691-ef1d-428c-993b-09f5ec944f32",
        "cursor": {
          "ref": "dba53825-08d0-470f-8fd1-98426c33f2e7",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "04c299f2-b2ba-499c-a6c0-f2c2d33c7dbc"
        },
        "item": {
          "id": "9075e691-ef1d-428c-993b-09f5ec944f32",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b16d3412-79a5-4e7b-a7b8-c37d75cc0cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c850c4-a7b4-4b37-97bf-3c7e6593e5bd",
        "cursor": {
          "ref": "9b8cf0bc-c976-405a-bb90-255e370ae9f5",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cefcac20-5f6f-437e-b823-30ed74c17b8c"
        },
        "item": {
          "id": "76c850c4-a7b4-4b37-97bf-3c7e6593e5bd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9d9c761e-8507-406f-9cfe-2513f5b7a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bd2a73-eca8-429b-b61f-ad43d2377302",
        "cursor": {
          "ref": "68bbb1f3-f773-4081-ab3e-7b89a8643035",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2fb16a20-9c9a-473d-bedf-b24416d7ae08"
        },
        "item": {
          "id": "00bd2a73-eca8-429b-b61f-ad43d2377302",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4acb9906-127f-4ced-812a-cf636fe7fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0738fa86-fe4b-447a-8bfb-fbb33b9e521a",
        "cursor": {
          "ref": "6299735b-1adf-44c7-b899-93ecc84ed109",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "05b11fb2-dd1d-4c55-806a-32e293fc0afd"
        },
        "item": {
          "id": "0738fa86-fe4b-447a-8bfb-fbb33b9e521a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f23c8949-c8aa-49d8-aa3a-f9ef653c8e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4537e3-3cbe-47b5-b932-2b7ffb93f305",
        "cursor": {
          "ref": "25649cd7-1375-4fc6-a958-7ab09eca82bb",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1853e40b-62bd-49f4-ad88-ed1b25638257"
        },
        "item": {
          "id": "5a4537e3-3cbe-47b5-b932-2b7ffb93f305",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "66049e05-0d46-4e1e-84be-dc6b7f97a608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60438467-da92-4393-a036-6ddc6f4356ee",
        "cursor": {
          "ref": "b3586b0b-4cce-4294-bf17-d6f15bba20a6",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "43c5a8e9-4cae-4be8-9c4c-ab1a3d76dacd"
        },
        "item": {
          "id": "60438467-da92-4393-a036-6ddc6f4356ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2be55f79-97eb-4212-97ae-26090015fc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de072612-9bdf-490d-9321-722b0a118a94",
        "cursor": {
          "ref": "fc4f5c2b-29a6-4787-91d2-8be8418d593a",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2bec19d8-046f-4ac7-8ba3-1bd49f6f5c5a"
        },
        "item": {
          "id": "de072612-9bdf-490d-9321-722b0a118a94",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9f9e5a2a-1a91-4048-946c-6c8d4f36fed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163dc13c-f9b8-47bc-bb7b-faf74f5b50fd",
        "cursor": {
          "ref": "9a4db868-15de-4bf4-886f-35e30bd4f3a2",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4b5b3e27-ceba-4556-8c25-d55b599f02b1"
        },
        "item": {
          "id": "163dc13c-f9b8-47bc-bb7b-faf74f5b50fd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "821fe63f-4455-439f-9105-442fb78c92c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d926a8-57ee-4dc2-b588-211fd65ad3f6",
        "cursor": {
          "ref": "b15e170e-0809-43f0-aa0e-00a0fe8c4a6c",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c97b2ed8-4825-4c05-b491-38a1334913bd"
        },
        "item": {
          "id": "c6d926a8-57ee-4dc2-b588-211fd65ad3f6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "de42959c-974e-4e40-a32e-0af959895df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186bf2cc-ed95-4c73-b101-41dee56121b5",
        "cursor": {
          "ref": "f4ffe8c5-a8bb-44c6-b83a-4c36ee227c9d",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e6c608d2-088b-4b74-a85c-f92f381b999f"
        },
        "item": {
          "id": "186bf2cc-ed95-4c73-b101-41dee56121b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d383332-7703-4331-8838-7076efce47c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4779665a-340f-4c55-a226-287caced75e6",
        "cursor": {
          "ref": "a0fd0165-75c0-4873-af95-3af09195046e",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3c711a5d-0ccc-48f5-b4ca-30a6f339be58"
        },
        "item": {
          "id": "4779665a-340f-4c55-a226-287caced75e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6d5d2320-c1b5-4de9-8a60-a47979f9d189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f53b4e-ac10-4819-8981-d87bb4ba8d89",
        "cursor": {
          "ref": "55dd0ed4-586f-4e36-887e-1402bbb02709",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe1a595b-ca68-4891-af27-b68c6eaef1a7"
        },
        "item": {
          "id": "e5f53b4e-ac10-4819-8981-d87bb4ba8d89",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a56d8e03-9617-4939-81e8-507afdad8b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81726c11-0894-4ba2-94ff-7969e33c2b33",
        "cursor": {
          "ref": "f4c39107-348d-46db-9b99-98e631c953ee",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5a7d8406-9fa7-4fd4-9365-924f5717f0ff"
        },
        "item": {
          "id": "81726c11-0894-4ba2-94ff-7969e33c2b33",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f46e657d-15bc-42e0-a056-8b88acc2e002",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b7c4a7-cbd3-480d-9366-b632202fd67f",
        "cursor": {
          "ref": "577f334b-9d6d-4397-a277-5644f919c9ff",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b42b3ff2-13a4-4777-aef9-01b1d0fd7df1"
        },
        "item": {
          "id": "59b7c4a7-cbd3-480d-9366-b632202fd67f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "35e8c56c-4042-40a8-b9b8-6a620716aa14",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a81f69-23c8-4153-9309-740cb6e3661c",
        "cursor": {
          "ref": "bfb8ce5a-1202-42d0-b8ef-214e51606350",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "321323a7-cfcc-4b56-a33c-e27b3ae66d99"
        },
        "item": {
          "id": "87a81f69-23c8-4153-9309-740cb6e3661c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "30b4b2fe-a500-49e0-9c0d-87c8fc929d76",
          "status": "OK",
          "code": 200,
          "responseTime": 813,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8839412-3868-4548-887e-e890b8b4174d",
        "cursor": {
          "ref": "97b162ce-09d3-4ebb-91ff-2ff21c6c2bc2",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "49d9fd94-d3bb-43bd-8596-5a416f00ed03"
        },
        "item": {
          "id": "a8839412-3868-4548-887e-e890b8b4174d",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "0c6a0cd2-d077-4d06-b86f-a36a795f2291",
          "status": "OK",
          "code": 200,
          "responseTime": 667,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa4f7ee-364e-436e-a9fe-9c503da95668",
        "cursor": {
          "ref": "63de64f0-7d5e-42d9-9d33-e11be954d481",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c1b20166-b1e8-4636-b244-963a47e9959d"
        },
        "item": {
          "id": "cfa4f7ee-364e-436e-a9fe-9c503da95668",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a220b534-3d50-4fcb-acf2-3aa7e2b9d848",
          "status": "OK",
          "code": 200,
          "responseTime": 596,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4556d12c-16fe-44bf-aa35-cbc96e4562e5",
        "cursor": {
          "ref": "2fed5ba1-2377-45c6-97f4-3a8741dfc944",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e73196ce-599a-494d-9767-36adcc63beb9"
        },
        "item": {
          "id": "4556d12c-16fe-44bf-aa35-cbc96e4562e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c568d001-715a-4743-8d02-bbcc8f9eea4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4556d12c-16fe-44bf-aa35-cbc96e4562e5",
        "cursor": {
          "ref": "2fed5ba1-2377-45c6-97f4-3a8741dfc944",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e73196ce-599a-494d-9767-36adcc63beb9"
        },
        "item": {
          "id": "4556d12c-16fe-44bf-aa35-cbc96e4562e5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c568d001-715a-4743-8d02-bbcc8f9eea4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c70df-af08-4428-ba2f-491be5e9b190",
        "cursor": {
          "ref": "0f422ca8-5c3d-441d-b041-65ad94378aa0",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b0510d52-1878-4cb7-b198-6fab2c49181a"
        },
        "item": {
          "id": "2e1c70df-af08-4428-ba2f-491be5e9b190",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3fbacbf2-1248-4343-b34b-58c2bfb07629",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752f34c2-119d-48fc-b3e8-6ac94f3c1aa1",
        "cursor": {
          "ref": "3ab37c39-88b9-471f-9205-623d14383c74",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bdaef323-0324-4894-b7af-b50688e23f42"
        },
        "item": {
          "id": "752f34c2-119d-48fc-b3e8-6ac94f3c1aa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0950efed-cb7b-4337-b08b-7eab7018aa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "752f34c2-119d-48fc-b3e8-6ac94f3c1aa1",
        "cursor": {
          "ref": "3ab37c39-88b9-471f-9205-623d14383c74",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bdaef323-0324-4894-b7af-b50688e23f42"
        },
        "item": {
          "id": "752f34c2-119d-48fc-b3e8-6ac94f3c1aa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0950efed-cb7b-4337-b08b-7eab7018aa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "568c5b26-e33f-42b7-9429-1feb0aa1bca8",
        "cursor": {
          "ref": "b1959c27-4d8e-47d1-9752-1154b72dbfe8",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "67d683e1-e519-4b8f-b160-7c1eba4bcc06"
        },
        "item": {
          "id": "568c5b26-e33f-42b7-9429-1feb0aa1bca8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "50ecaf0e-e909-4a60-b323-a19b9df50d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "492c884f-ac7b-482b-bc72-cb581c39559a",
        "cursor": {
          "ref": "0c80fa02-4e1d-4e4e-81b4-d14287448fa7",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "410b1a40-e21d-4386-87ae-a9239a5d943e"
        },
        "item": {
          "id": "492c884f-ac7b-482b-bc72-cb581c39559a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1c59546a-1d9e-47fb-ae59-2e28c707b216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c884f-ac7b-482b-bc72-cb581c39559a",
        "cursor": {
          "ref": "0c80fa02-4e1d-4e4e-81b4-d14287448fa7",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "410b1a40-e21d-4386-87ae-a9239a5d943e"
        },
        "item": {
          "id": "492c884f-ac7b-482b-bc72-cb581c39559a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1c59546a-1d9e-47fb-ae59-2e28c707b216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0734c1-0ac2-40e5-a161-94169886f11f",
        "cursor": {
          "ref": "6040dedb-18c4-4fe4-8f63-e70e856b8f8a",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "728de034-13e1-4cfb-9ab8-0ec180eeeb37"
        },
        "item": {
          "id": "ad0734c1-0ac2-40e5-a161-94169886f11f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "59dfdc8d-b159-4dce-9c07-cff93a6f07e5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 15,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}