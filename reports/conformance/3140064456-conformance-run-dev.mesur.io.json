{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f97fc62d-1a78-48a4-bd41-b1784ffad61f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "651a0933-7ce2-4ebd-8e5b-75fb06d7ed79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d5857ff-140f-4cfd-a4b5-5672355ae95b",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ec27391-4d22-4a17-93b5-109fba9edecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c95e7b8-4aa3-4c98-af21-2ccf6374d22f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "a4060271-f19f-493c-8dd4-2542aca0127e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d8887979-3945-4ddd-93ec-707d0a23d5a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ec4805-e8d0-4ebf-9f53-2ede70c5b84f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a1f76c8-14f0-4c16-9bb0-160ff0e81346",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fffecd-280c-482a-bd69-95eb3e479b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a93542c-a310-4c36-b840-074529803b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3611b1-d070-490f-b856-8aa500a2a5f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42acc81f-094a-471e-9df4-9c78c2e3841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a815ee3e-69bc-46a3-ad4b-2b4943a4feb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a5d033-ae44-4b1b-977b-7f6fedb4d70b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfcecf3-f510-45e8-be8c-615839110374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fec196ff-dd2c-4169-97e9-fde2e62fe64d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "312b7c28-ab7d-4db6-aea1-435fafeaf381",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e375b715-bc77-4e6e-955d-f7551d714fb7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213b63f4-5e10-43de-b4db-697966faed28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12b0e356-c96c-42fe-bfd8-860f12363004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2c6eb5-07a0-408e-abff-e32e9d70733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88707622-748c-493d-85c8-d27b056c1cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f476f9d-dadf-4b0a-b8ec-917a1e689a6d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2bbee2-c3ae-4377-b31a-2cdff822f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d3b4150-f15e-43db-9f6e-c42d6e8eaf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491dfea3-f7d8-4022-a128-fc0b3610d738",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "08e6d07a-ceba-4a19-aa50-526cb2005ca1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "551d5ca3-cf8a-47fd-954b-21ce854344f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cbb0756-be75-4024-aac3-6b291a69de7a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ae6d855-db30-4b49-82d6-dc0ea1b8bcbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "69abc2bf-9a28-4555-926c-46405e84c552"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c6075a5-8983-40a2-a83e-132f3de0335c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9becad52-7824-4c06-a408-8b665e67c6c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "898291b1-f1a9-438f-9160-69008393b2d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b842d8b-9062-4c84-88ba-548dd5fc3871"
            }
          }
        ]
      },
      {
        "id": "ed947be3-145c-4ec3-9e6e-c783bad6e600",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5f37c36b-d454-4a01-a897-a7d2602395d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0cbe223-f184-41ce-9b21-9901ad648528",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdcf853-ff7f-414a-ac6b-cc545a42d475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0542b20-3312-4cdc-9a91-8389b9260c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf9f681-6648-4ac3-bc62-a71f011d508a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd4783e-5978-49f0-b5bb-47f2e08017b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e939f-8d0e-48a0-851e-ad83b879ab75",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2e8104-3aeb-42b9-9aa7-13802bc65a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa2d9f8-1a99-4748-8114-e09d1373b803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f14a8b-7a4d-4f37-b861-dc493c594229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac82412f-5c95-44f4-b420-a7ec1dc4ff0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1117ace5-0576-4e29-b98f-bf7543b70b9c",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48acf4f-0b88-4710-a3a7-f2473629dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fba657b-a055-4f0e-a023-99d6135159d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fe9ffd-3d6d-4c03-b608-bcf8bb8bfa74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b713edf7-7a68-4700-ac28-e38216ac8a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477146a1-d990-45c1-84fa-d2e58bff6612",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca2d048-3421-4697-b0e4-cdcfb56a6c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601b54e5-8744-48bc-908f-947994a781de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45863497-8582-480d-ac90-b58630e15777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020dab4b-7777-4918-b712-61ae1870aaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3572da-66ce-4e16-b17f-00dfa06314fe",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bec7d7-6e2e-4c92-ac39-e48a0c690c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13171139-53b6-4f0b-b54a-af985ba0bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014fb293-fed2-473b-8c8a-b6290d49a583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac75d55-6d99-4b8a-adf3-972ce51dd80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58509f75-4b52-4ec2-b1b8-548d3467a2dd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0005d8a-c3a0-48b0-af14-9bea5e582e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6b7855-da76-4255-8c94-7f8657793929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd8c355-af27-4ae3-877d-c7b455562057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c0b3ad-c24b-4fbe-ac0d-cd11498f87ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b8e338-0752-41aa-91ce-76232fadfca6",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02004ddc-0d62-4c4a-b535-8abea7a06a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c5888f-3066-40a5-b40a-6446e4e707e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe01a5-aa58-41ad-999f-5317eccff5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e467d7-5378-4f92-b40b-fcc4b4c950f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e349959-12a6-452f-9ceb-926ab7857861",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00632d18-1b54-4287-b4e2-3f20a54f5548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e703966b-f5e2-475a-80da-253c2f105355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741bc63c-d6fa-4d79-95fd-24286b3c43a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ea632a-9da0-414d-b7d2-cdbd5e359cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad10dab4-cd4d-4f08-a7e5-5c61617f0a32",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598ce48-8683-4f73-b25d-c3c4f01ddb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc23e92b-f953-4bad-8b69-06cd945c087e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94c0e2c-e300-40f4-b645-2157e4690633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee32946-bfb7-4247-9c4b-747de2cd53b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec48bb22-3d8e-42d6-867e-3dd3f84e19ed",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1223c4c-9aef-45df-9f9b-9095ed89463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac32c4f8-1f02-4720-b537-d99e1035d455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8523987b-fd9b-4d90-8c15-88fd719c2661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1380957d-903f-4e78-aa68-dd9e4db637e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730dd2f8-f2d0-46b3-888a-5aeb0367308c",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d57cb4-fb9d-4af3-82e4-69ff4a160c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b81a9c-6ef0-4189-974d-856d2be7a700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355b4ede-097e-4160-b1cd-db8332cb0dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "6410dae2-fd39-40b1-a4f9-52a858905b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a5fe83-48d1-4df2-86bb-65a9d7c6ef12",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556a204e-8fca-4094-938c-e94599fe4a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f29215-d4c9-42b1-8b2e-634b83f9a719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85e1fb5-522c-400c-b425-fb63e3743767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7d8efe2f-9b9d-40fb-b528-0ea1cb0e8e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9282914f-c431-45f2-8f68-7ede8542dd99",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2172fc99-a948-4a59-9e1f-ebc06e993725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43cc179-66c5-41c3-be97-c7655c50cc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608cd8df-4c5f-40e7-9929-34a97f6036ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43f3098-6a62-4ec1-9ed4-81554223a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d2c18e-472a-4454-98e2-856516872d2e",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc5c686-a48c-401d-b037-49c33b7ce644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22526c45-6af0-4408-87d0-a83b02c73c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad957833-30a0-4cb3-9ea1-24bcd2af5cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c870ecbd-5eea-423b-99dc-31705af29365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3906303b-fd86-43ba-a6ec-c69dacdb5fc4",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b3095-66fe-4b9d-8dc7-aba5270eb6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada13c14-c493-4966-a8e3-84eee5c5fe9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6283c12d-b3d9-4b21-8c28-05bbf4faf7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "69870a4a-16c3-4852-8430-d6c41dbb37eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a5dc78-0948-4361-8850-022500098f86",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5381b-1b39-47bc-bc81-52899f2388bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f2a912-0a7a-42ff-9eee-a84bf5d1a038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a58d1e-bb04-4914-9bcd-6b29e7e57922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "c64a65a8-5b45-41b8-8aff-cb0691fddb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddf80df-0dac-4915-9170-b6420d78b30e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acd5b72-c2b6-4822-bf3e-b75ba3e5654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e130dfd1-3245-4745-8883-07cf562084e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6430de2-74e7-4507-8635-e1c5a19e0c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa3213f-671e-4a03-b26e-d4d67bd88738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a44650e-34f8-4162-a413-6ac7eb8adc72",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe399d0-66f5-428f-9401-2aa5119452b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5fece3-da87-463c-bd3f-8323f92f24af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e76c9-a82c-4c31-8c66-51279f49c206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e9b81f7-8df9-4367-807f-fb59b68f90a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb821b-ee61-4681-8a08-0ed1ddedcf0d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa45721-0e9f-4f4b-97b2-f22e91f00b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d6868c-76e0-48d1-95b8-35e1c3fcdb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feb65f5-fe85-47eb-b252-c8aff2047990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0c62f0-4d77-44ff-8c85-7234090e6a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3290475a-0b2b-464f-9edc-fa8c290596fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3a6413-dadc-41ec-8f9a-f4ed0aaad19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa39b8a4-f34f-4bde-a611-878d0186179d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbae78b3-b82c-420b-8dce-3dfe0c2a49bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c624839-62bd-4444-96bf-44e8a5481a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc0d8ac-82c6-42c1-b4f9-653c57168f4f",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd801ff0-0528-4b55-aa31-3c22660c648f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42017c25-cd44-4760-913b-9f22eec1c25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e81a32-605d-4faf-86f4-88acc5e0fead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a8a4e2-d3cb-4ff7-8cdc-1b26792bdf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc463f08-e9a0-40e2-9bf4-561b77329bb4",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f29cb28-2ef3-44cb-bdee-90c4e5a5f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b399f5a3-e4e4-4d9d-9ab9-affe74dbd01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab35e259-76ed-4a6b-b1ac-ef721620195f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f50ae8-90f1-41fe-a69e-9360b20d5700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3406dff-46aa-4bd8-a17b-abf92fc3f030",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b053660f-7a65-4d3c-913f-1ca05d5cbb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a34328-3315-43c1-beb6-5374f8cc684b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8c0e86-fff4-4666-adf3-b97e5730b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ea6ee5-8a79-4f9d-860f-45a2144776e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cb430c-846d-4ff7-97c9-351851ae385c",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eee888b-fe5c-40a0-8d3f-30d89ef27e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218fda66-526e-4eaa-904c-d52772e8c760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a73474-81ac-4e69-acff-e8b5236aa02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30d4830-5e40-4a27-9892-36cea1b0af7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f766cf9b-7ef4-4371-b649-bb413daabc20",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0973ef-3038-4a29-b8bf-138ce1fea287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7df1f0-6996-4644-b439-ad4553155ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6809191e-6a58-43ab-b9c8-4e460b9b3c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e883bd80-a285-40d3-a6bd-972ad06346c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebea8b0-6544-4755-869b-2f551780e4cd",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344133ea-64e5-4c18-acb9-9debbbdf39e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e96501-b60b-43ce-9fa3-d25b0ee70303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4873a4b0-9f52-4249-a0c2-25a25798a282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c5c040-f1bc-440a-8ca3-c04c1935b78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d48b99c-6823-4697-8056-e6c90bca3fad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b664c14-52ed-4317-b293-5081adcea3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05e7943-2ee2-4cd2-b127-2601f9e6e6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a34efa-5561-424e-b9bd-027eb2738398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9d329c-3297-4172-a9ad-a28b025b4ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b248c0-354a-4e33-80ff-2fc5d5b42bc2",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c82fa06-a922-458f-b7a5-38546b994c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862bf087-e13f-4f08-a542-7e64ffcd67da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acabbbc7-110f-4fd8-bfa7-dbbb67d4e299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096f46c4-57a5-4220-8c7a-996df4b74bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc11a26-f46d-4ace-8a1e-f702e09bfc9c",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e8daa-58ab-472c-9bd7-f495a34dae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d530d717-b542-41a5-a7ea-c2883ce3816d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4a7357-b1ae-4a73-abd1-831443ee16e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5c1343-7d89-4829-ba12-7a0d830dd376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c3eb8e-5b41-408b-8e44-1b7efb07885a",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4488897f-dcc1-4e79-aa6b-4f19502ba74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac501612-158a-4da2-ac7b-cadd72538983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a5e012-0af7-49fe-8d63-963e49f75a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cbf84cc-6918-44cd-9b69-323b8c6468f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da65b6-fd59-462d-979f-54a1a784f988",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66818bc1-5188-4e19-9aa1-071a0ec75871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a14b8bb9-ea3f-4d3e-951e-3bea8108413a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1549be04-6c9c-4adf-b8e1-f879a0f2bc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e972c93d-5839-4f1c-9a1c-877c62082949"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfdd63a7-22d8-4f64-9434-2d7a30819a76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "217e427d-594a-41b8-aa8d-b355e692c686",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d826525-89ca-4c06-8954-7a0d3742dcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c094d226-9918-41de-9ecf-8f86bf9687f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaaf155-999f-4582-a726-1ae5a1f60e1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cf177a11-c1b5-448b-ae27-ffa06532eeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe0a080-d5c1-46d6-b0e5-a1562b86722d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff0f286-aa2b-4230-947f-85451236c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5deb5061-77be-4f8a-b187-5fc2d4f8127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150c14bd-ee64-4b42-afd2-48df171df249",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "075303f6-f4f9-4fb7-9c9a-5ad709a07a08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7d19bf6-a140-4d0a-ac08-16679fa2eecf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c9bbe2-225a-4e6a-9f47-f1aaa6ac5e9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba48e37f-fcd2-4548-a7a2-47c54ebc0150",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa6c27f5-9d17-4d4c-95b4-495dd00b4d7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff8c4707-0aa2-4e0d-b2ec-5e55df41228c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9f2295e-7d03-43e9-8cea-6a977291cc3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af792ba3-5e1f-4091-83be-fef3274a9925",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "335bb796-9cd6-40ca-bf97-ba3b5f4f5874"
                }
              }
            ]
          },
          {
            "id": "ac6973f9-f306-4fce-bfed-c9644686d7a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f11f7ca-99ac-4a14-b58c-ce78de1a0df5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35815f8-e499-4086-a4eb-9649f8072166",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52f7996e-ecb1-40d4-9d8c-21ee79936a50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbc6127b-2f5b-4564-916e-b304870060a4",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "1779d036-9273-4d0e-841b-3b7fbf68d965"
                    }
                  }
                ]
              },
              {
                "id": "9c8c219d-1638-49ad-b169-6bfca8883266",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77bf0d0e-bb67-49b6-9312-5ab980ef8aa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0358d375-01dd-4c68-bbc5-1e0298efe76d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80b8e721-d203-4909-ba40-4757315643d9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "20330b7d-b6a9-4fed-b3e4-147316afccbc"
                    }
                  }
                ]
              },
              {
                "id": "97a8616d-4eac-4bea-9d62-bb36bd9c8796",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c75f782b-1a54-4860-ae88-03f44b910e9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd3a89f4-5a3b-4a34-9d2b-dc3b5d034c31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d7e7fd2-b1b7-410e-87ff-4c0a8b8ffdea",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "e4757967-f055-4e21-872b-97cfb62913d9"
                    }
                  }
                ]
              },
              {
                "id": "362171ed-986a-4fcf-8335-eb24b30b93a1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e0f07c7-cb92-4d57-88e0-6eae666e8084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0c66907-3ed9-4faf-8158-c299dcdd6397"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e418b476-89fe-46c9-961e-72fd32d47dff",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c65b5ae0-f417-4de7-800e-d00c65c47986"
                    }
                  }
                ]
              },
              {
                "id": "e9db6689-7f2e-40d6-b788-88a1e6485e91",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb609631-4cda-4d88-8376-95cef0c49ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0ffd754-4cf9-4850-b5c7-3843a24bf9f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d139879-9863-4889-927b-517f3c1442d0",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b6997288-8306-4793-ad62-6ca51c79e69d"
                    }
                  }
                ]
              },
              {
                "id": "a7a74305-1bf4-4d4f-aee7-6042a4f794ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "245cfe53-64e8-4145-bfa2-b12265dc6e01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd35c60d-d357-4047-9f93-d3ef40e4702a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94ed3879-e307-4a8a-bc65-7cc1aaff92a1",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "3ac03b6a-dd0c-48d4-9cc7-4dcff2febed0"
                    }
                  }
                ]
              },
              {
                "id": "a18df15b-828c-4004-877c-b94c70ba1b4c",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db9f4465-dc51-44cb-9b23-2188bf24691a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6755745b-02d6-47af-9396-edd2156f528a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "667977e8-ecc4-4041-918c-f3770b772956",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d4ce8070-e215-4202-80d3-547f502a6f97"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2b6b51a-2891-43a6-98b8-a6850bfef8fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0557f0e8-c266-4bd7-a2cd-bcd697a412f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83d3d40d-6c08-483b-9210-4e49923285ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2798824b-aaa1-4923-988e-59e421e0a0c9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f16e004-3fc0-4e3a-87df-d8073aca5a26",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "43f609c1-e2c6-46ce-8c01-ee3ea6190031"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "353844e3-b058-4441-a59e-174c4781d82d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a819117-9459-45af-8716-94409cf13679"
            }
          }
        ]
      },
      {
        "id": "450a98d0-3a5c-45b1-82c5-c516a2b6663a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7b5b3be3-c339-4b46-aae8-ae1ee28d373c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4fc324f-4bf7-472a-bace-51748b601d4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6efb16c-d4b2-4482-a137-01cc98135e90",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaf27bb-f4f3-4f05-9f18-3162aa63b4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecf0765-1696-4f08-ac8a-4d48f22af61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36233e66-64a1-4c24-8aa8-a29aff8244d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8b6ec5d-70b1-4584-aa81-77c806f4d37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee62a83a-f3e4-4fba-b2e4-6a59c9e99533",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a4ff60-7f71-4a5a-97e8-aa7dc27ffa54",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c3e23150-64c7-4b45-b9ba-2aac2d35fe57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e85aea-4b49-4020-a151-4fe1152d28a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "601d9ef7-7361-4d88-bd18-ae161063f37d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "566ef192-f223-4c63-be97-620152211641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abd92670-e302-453a-95e0-69ded766a63f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cafa9900-5845-4f3c-a921-135f025dbc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df3e13cb-427f-433f-9dbb-bb294008f4e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b19d222d-1bab-4c3f-971c-e6f2fb136f7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "0f56fa1d-cdf9-41fd-baeb-56e084000beb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f7505dd-e466-4cb2-9458-5dc6db99c9e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64b65d97-2465-4fe4-ae6a-803e15468846"
            }
          }
        ]
      },
      {
        "id": "8c1b78e6-4a3a-4195-9593-3907bf220f69",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a06c3fa-7b84-4eb9-b025-46300f36b0c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1339f323-afc5-4656-aba3-dc4d4fff1146",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aac8b89c-3572-46aa-8d09-4e537e1e7767",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a0eb24-0742-4acf-9aab-76be8e828b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7b45b3-014e-4aa4-a8d8-ef68fcf58d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f0c1f2-741e-4bfc-8c4a-8fc805321b3b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a294d6-4a31-4fe7-bb77-26ae4d350f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1056af95-9a37-4580-904f-ea0aeb5a3a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ccea0a-3f14-47b9-bcbe-21d0fe457b9e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2728b18d-3f30-4901-b1e0-3a2740499e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe75402-d5c7-4f59-b3b8-9e79daa63efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58f68bf-7856-4f3c-b265-f27588299d4d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c53b096-4ab6-496e-b597-f2d8a7289a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ba7a73-da68-4e5e-9eb7-9b86b1950b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a07c08a-9b85-452f-a3c9-60708812adbc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaced055-ca57-47d4-b2ba-e42f884d43a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749dc051-8ba4-416d-958a-186475d0133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d97307f-cb88-4ea2-b3e6-251321ac1879",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598df1d4-8d52-41e8-a997-c0b27947460f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83a5d10-5b04-4e8a-a02f-2d360e0a4e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc06be11-cf5e-4128-bbcd-c293d3dc6b7e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1575c7c-5a80-45b0-81f5-26b62afd9ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2e727d-0b8e-4af6-a275-f55aaadfb8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceca3f28-0c7b-4713-a67a-f27cbc0d5ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4273c-4fbd-4037-b28f-3e97e1904796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38070ad-eb02-4aca-8ea5-bffb1218e169",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd476f3-8160-4392-b286-dfbc6694e792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09aa699-ae36-4280-9962-194ece493cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a50e27-3e12-48ef-a2a2-1708c4c8dd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccf0494-f242-4262-871e-440902a1d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa6e472-5e86-4620-a700-c380a94ae250",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22546894-cac7-4a23-95e9-2e2c7cf31155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d498f39f-5fa3-4f71-95d7-cff33dab5dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e9673b-c7bd-4ffa-99f8-2065eb43561c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbd4bd0-88eb-47b6-9927-d2c891888698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c080b507-c49b-472b-b7e8-ab71d063426c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb9d4f2-6f9e-41f4-bb5e-dcfb2e7e24f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc617ce-109d-4f11-9fb3-8e79227f07f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfbe68b-2757-4146-85bc-76b71e3a11a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783b5d2a-d9de-4c82-a51b-81f623337b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4563b256-eecc-42bb-b064-89b4adf0916f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd93f5f-3ba9-470c-95cd-aa8de0c7555b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd1d222-31c8-4f1a-a789-68d90bbff2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68480e49-b359-4a73-9079-11feb7be0ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d71a56-fb54-4ad2-9f4d-75c6b21ca00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb1908-9850-4693-a94b-09850c543cef",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d0d98b-eb3c-4c59-b5af-10841636b3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a1d3a5-df23-4a88-9284-179b49cc26e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152971ca-a6ea-426b-bdef-07a3f6d3656a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780dd1aa-2a14-4181-991f-52ebcbc143d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5c2bc9-ed62-4335-ab66-7d79997198c1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd53a00c-a2a0-488d-b8d4-7c0dbb6d49ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bfd3cfe-34ff-446d-a4ed-0138bc0595e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8236485-e7f4-47e5-a6b2-714e3bb281c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa495e1-79c7-4d50-b702-789bee3d0bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af95858f-5c9b-40bc-8d3e-5237504ef0d7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89501fad-ba1e-4d5c-b107-296f2036b52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3e0792-7646-46dd-b29c-d4472a5477fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f425cc8e-f510-4a74-b9bc-45991cef7845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c1a957-cb40-41cc-84bd-8f7c74793282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3671efb9-2d43-4e74-a888-7bc3bd6e6deb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36da4452-c33a-4603-83ea-98c21945e128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3589e678-a64b-4b0a-860d-2edc8796d52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c5fb2b-14e8-4535-8891-cd856a33661b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d74ffc-d208-469b-9bac-1ff69a016307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bcf045-6cad-4fa2-8355-f4395438f56b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf16608-b8da-4eb9-ad04-e8917273b261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db76c785-c0b4-4033-8465-2037fb83f099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f4dde-af92-40a2-80d4-04a8bdd00c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144ecb5f-8df9-4765-a7d9-ea75750be70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be4cdf-efca-489d-9a74-43e192320297",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad501fd-2a11-406b-bdf8-038da696f9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5794b5fa-a7bc-435e-8e79-270616abf35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d660928d-3367-4710-b05d-8187871fa5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9147808-4254-4926-85d9-fa185894bd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2441ca-3ffb-43c7-a942-018a49d7770a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c02c7aa-cd4c-41e7-957f-a2d4a7ebd0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1630d0ca-8653-4ac1-aee2-cc9926ed0712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfebc30-a4fc-46e9-b11f-d69749604fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e02eb10-1a1f-427c-bfa1-067ce4ab6fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7103ee49-dae4-4873-a21d-b6d5baecd45c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956c3159-5005-465f-8a2e-3babd77c0ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5a3998-5b33-480d-af35-c7b4eddf65a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0ad451-411f-43fc-a342-2a33c4cf11ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55765ea-0448-4ee2-a901-dcd18be95fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050a3731-649d-40a6-91ca-8f3740c6d599",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55672b7a-21f9-4f7f-b980-332a503c9648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc5e84d-9aa4-49ea-adb4-ae8a78ff3117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f851e4a-1da1-497a-93ec-456c7220470b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee618cf-8140-4eb0-a486-469b7fe26262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97fbdf8-c392-4d48-bb84-bac9011af36e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5658dccb-8ec5-4dfe-8f9d-b06676d0b53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e08aac4-6b21-4636-8e0b-4883669dba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8093e03f-1f69-4070-ba04-0409be54b650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644afeb1-359f-4673-936d-89bcc1b569c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bf9c1a-c0f4-4201-bb6b-0330f07d0103",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5798d112-b4c5-496c-828f-6063b7a93904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699a43b1-c85d-4f43-afa1-aa441ff10ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c3224-7797-4048-a81d-631b47cff046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349c687d-fc87-494c-b681-2517c28fa91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1198e9bc-2d40-496f-9891-0d42b0864c2a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2725a3dd-9eaa-47ae-80d8-2d2244fdd4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddaca3b-c0cd-438f-b77b-1de0f6d0d9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c64a7-3009-4121-bc64-c981ecc29eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2296915b-6ff8-45ea-b765-29c95df5564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795e8f7-9a62-453e-b153-bc0356bd6d77",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070cd8a9-95d5-43c3-9f8d-639de9f0d797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab08e0f-0cbe-4e08-9dc1-a7f06b6d4e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae1cbf4-925a-46a6-b308-0dc5e06abaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f54b35f-3290-4e62-a4af-f312c763a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd18094b-2359-497f-b659-80a14873790f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be0c05-cd10-4132-8bba-ea95a6234ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d8cd28-f333-4d80-bcf4-c3d1570d20fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa09686-54fa-474d-824a-5a63826956c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd986b1-1907-46e3-b0fe-12e05a7e3b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9698b355-0379-4625-80be-9fc98db1dae8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2c0897-6194-4872-8683-8afa5ad0afb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033d3d38-ee62-4042-b974-f68f2f8d2cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985902a-ed86-402b-8244-90c80938e3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f4e4e5-56a4-4e3f-a502-c54556d2fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c15280-dcb9-4194-84a1-7472d98c8e0f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85b358b-877f-4822-8895-545f0a4da81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763b37b8-322b-4473-bd85-0c390a8cf311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12c40f7-fbbf-4569-99ce-718434131b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab3395c-1bb8-472d-b0ad-cee88005b293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0954d0f1-8b94-4e44-b41a-3a01e7f080ed",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f7ffc5-6d7d-4e5c-a58e-5e4cff0ec3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaa9dbe-ce91-44a5-8eb1-facf563172cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7befbae-4677-4326-a0da-6274f2f1f845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b63370-eaf8-493d-9c6f-3be377e99b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e3305b-1393-4425-bb68-0f704584157d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f361195-98fe-458c-84bd-b7363f51e060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de90b6f-810c-4c2f-9776-e9415eac9207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3891998b-d616-4e55-8eb5-a83d10c8f181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092482cb-091a-49d6-9a5f-4daacbffdf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b3eab4-68cc-4322-9a6a-67a255724a93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3229315f-5204-46e1-860f-e732d03515e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af2fcfd-415a-45bf-8c3c-69479e359743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0771a7ee-9c17-4648-8d7b-7b60c025fbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029f1600-aed1-426f-b0c4-7903bf7e9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed9dcac-ca3b-44a7-9e94-e12cc69d022e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277821e0-0599-45d1-9148-f08adb0ecc50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ec2188-5427-4301-8fe0-f50b6a4f1d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c189f01b-3939-4f68-a885-767eb11624d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90402db1-05e1-4930-9667-84784a144e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1879b1a-f306-45f8-a85d-589afd1d545e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855ad794-83c1-4675-b1ab-42a92ebed321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4564089d-de0d-40ea-9505-055ac34a2431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2013250-43e3-471a-9e67-c8718a385ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dc7fac-791f-455a-85b9-7e5a98cfe15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192512c2-234e-450e-87cb-89b18e935f90",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8182572-c702-4c27-aeb9-8e06f31b2a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd316fee-0ea9-4aad-b1e3-139a559175b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433ad89a-d853-452e-af36-e6db30c7f917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cddc905-5178-44e3-867a-1d4236bf133e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c2b8fb-045e-4af6-8d04-8af9f29737af",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6ca56-a736-444a-9230-790c5f3ae47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d52a44-c602-41c6-9253-b34c03648b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90b3f32-cf49-4bd9-9e41-b535e2b625ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac29ba3-be50-4cd0-892d-d4640f423a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a155155e-7779-4b47-8013-b4035e3adf6c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc97e8f9-ec28-483b-bbe7-82180bb9c77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d54062-7fd1-4904-8455-7e413b57a70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6335bcc-144b-4177-9435-4912cda077c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834e3b76-f21a-4947-984e-fbb2cface801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f21da5-ad91-44f0-8570-73920d454b95",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ae416-3c90-4fb4-adfc-fad1d8ea1d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b565129f-0f21-4633-aada-407d78be2712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683ef9a-5e2e-4296-8d03-6fb1d9a03929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b074427-26fb-4124-9318-c50354982759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeddfd8-6917-47f3-8ca1-11b6c31a4557",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bca1937-5c5d-4f8b-8c0e-c292e899ec1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e698e1a0-73a1-42cb-96a0-12a835060ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1e1e0f-cde1-4e68-9c64-c84ae1811833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bdaf6b-ffff-4273-a83f-e5d4dda2f604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b9c580-f5fc-4d75-9534-11037b324699",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeefeec-e1d7-45c8-a50b-eeac75d2b8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7d9ce5-2872-467b-85b5-9a13fd43b138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950568a9-5752-4924-9e64-1f8d7e184c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327f697f-e331-4459-8bca-175d3b05994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70490734-cf13-4437-a673-d54183cd5aa1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8a971a-db2d-4ebf-aa0b-01c85d2eee47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e55ff4-365b-4e46-bebe-aa30309a581f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bc8ecd-f2e8-4858-9174-d0a5648a6222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30878a3-08db-4321-bb20-686c2c6de468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd2e78b-9613-484b-8083-f9cb10679b6b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fadbb3-41c8-49d3-b568-909a1ac45447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28115c8f-c8e0-4705-8241-11ae13e600d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a93e3b-f679-45e0-86bc-0d264c5b0948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e66ecb4-2f69-4976-916a-cfb0631c79b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43509d7-182c-40b4-b04a-c82627e50e21",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6346892-332e-438b-9498-cc365d80a06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1c2285-42f0-4ca6-9ad9-a99a89f97d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e87f32-c955-4d4b-b8bf-b2679ed5927a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52b7405-ea5f-4d53-90b5-f69f5e91e4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c390b8-039c-4d12-a1d3-6ed255fea078",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56943ad0-8ab9-4072-b931-12e9378e5798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57e65e1-22f7-4014-9f09-5e2a71210852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77260c51-cc9f-4dc5-a634-94f94a2027cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f6e452-8557-4b04-ab55-1616f940d647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07559126-48fd-4af7-9735-3cdbedde7689",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124447ca-c037-44f5-a45d-00958df554bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f9f939-8343-4a7d-affe-8cbca5a1242e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bc56f9-c8f9-4296-a856-8254e78a98fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3cb05a-eae2-460e-8727-7e9d5721397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c07a50-b319-4885-aaaa-2f13aba0a480",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96e7ee6-4f51-4e98-b210-b40b6627e3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a8ab36-e46d-48ad-8295-fa53ac942c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7fbd1-eb38-4a27-939d-2479a2002122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e45e523-7271-4f4e-8cf4-1daa23df9060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7851013-2e4d-47f8-8b76-3a8a8d152c34",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2ccecf-18a1-4b20-a2d4-aefba64deb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78e1f3-8646-4df0-99bd-c08167a65529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cb3979-a401-4180-af4d-46e7fcdf50ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bdfd34-8375-4a7d-a80e-bfbdd13b46b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75756e5e-e126-4bcc-93a6-39af054a31e2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9f3971-f764-4e2c-aa56-5e5016a56ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8fd949-d368-43f6-8fdd-bf98fe0096be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf70feb-6317-4966-9f68-259327e74d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048979cc-eb67-4f32-ac3e-7d12e00d67af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab5b04f-385a-4ba7-8526-0110b0c22f09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977f0a5d-02e3-4e44-bb46-131b76042053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959e4ab7-72b3-4998-be63-bb648cc45993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aa5d3d-88ce-45b6-a69b-2d2120ced071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577aedeb-2b23-495b-b481-f0242a98b1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd8154-9e5e-4971-b4c5-9550db2a3a10",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de5be6-eaad-47ed-8f24-a3324322587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998fe88d-b362-4181-9730-b7e7cac04d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559c45fa-d39e-420a-b73a-d4450ca3a7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c2616b-e7e0-4645-b3e5-654ccb4ef3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e8267a-fce1-4fb8-9c08-1afcc7d617ea",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f67e79-45a9-4d24-a660-020f8333a3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf08319e-eeaf-46fe-b9c5-5ba2a1095bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c7cf02-5954-4c77-a8b8-886ea4efe226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb22a3dd-6734-460f-941d-f45f4e692a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dccc6f-d17d-4b05-a208-46f201909274",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404af161-8687-4109-80f8-67b9ecdf369a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd419cac-7a12-4e1a-9c22-0d8bdde2c0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10372535-3b05-4cc9-b2a6-33d5bf8dc3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0775d04c-eb61-4736-a3d6-bde02f7b3dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47cd821-24ce-493f-910a-6703f0a123c6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6a273e-a426-4761-bb21-7245d9287641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6002be72-a95a-44ec-abcb-b3dc6fdea3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed21595-378b-4388-9679-d5ba31a74557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f06aacc-8442-4b12-8422-806c81a35bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71744aeb-832b-48bb-9425-8a055083600f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a05ab3-8eea-480e-9f11-ee89e752389b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10532e83-6f23-49fa-8a47-15bd83eca116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f123f70-8752-45d9-8645-7dd63136b97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1517fd80-db50-40eb-908d-b474f9a80716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1554f69-5792-4081-85d4-7ff7dae953a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54994c0a-a446-42a3-83aa-a4bc8d8610ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e178dc5-3356-4a01-922a-dac3c6bac269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e7350a-3eca-46b4-a0de-a1e10dd34e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4ba207-9b5d-463a-8831-1125b4858e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a17f9f-1347-444b-8af3-07914bd52aec",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ded20a-85b3-4faa-a3b3-19d245051836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c3b0b1-8a01-46c1-866a-370d406d3915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec3d887-8fba-4098-a4ab-6b6835e63312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00715b6c-71e2-4bac-a61e-f127b498c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6069d80-7459-4461-b1be-677d430905f7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad23c6f5-12ac-44cf-98fd-a6bab94c5ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7e839b-5d91-44eb-b899-37078e47878f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b06ee5-3b45-4c39-8656-369e330207b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ace35c-2b67-4c4d-a552-67d8824b7911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a483830f-536a-4fc8-8ae8-2e9e2b379899",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607444fb-c484-44ae-9586-7ad4db2369c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fdd535-d4a0-4594-9bfe-951b1daa3d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9063dec1-af79-4f30-a718-fdaefe4318a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5513b004-4238-483a-b7c7-d0b09a7639e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f15f7e-7bcf-48a2-95ac-dd74b0428108",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5a9c27-47e0-41e6-857e-2a21fd516428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dee015-e4dc-4fa0-a671-778e7d75c9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7414dc-7726-40df-a5a4-eafbd052b767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b836b120-c2a1-4c53-9ca7-c8b70cbd553b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6895f1-794e-4bed-bb3e-de877ead9521",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8789ef-7268-4f8a-a0aa-5a6ec8cd4275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca279e8-7e27-4f3d-9e78-9e80e4cf3f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b57aa5-146f-446f-abdf-e58ef575c097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4cfd87-1cfa-4b4a-b7ce-062a674ce636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c97a5d-42b5-4787-a30c-3f910061cbbb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a54413-2f38-4edd-9dd2-650c6c419c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7ce9e5-dd38-4647-bfc3-862e50d2dabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f728c418-4eae-458e-b5e5-c4d00d4ebce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7310c42a-bea8-40f0-b2d7-9bdf4fbf78d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de5efc6-5af0-4268-9058-0678f437ca85",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6cd0cf-49f7-4a35-ab12-ca49ed0440b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6008fa7-0bd1-4507-b678-8aab090396e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17198bb9-8aa7-4574-aed8-53d564d3a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058d2232-9ee5-4565-9cad-389a30ed7bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d56844b-1db7-4c1c-bd38-f0a720c70025",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3aed58-4e31-49b2-9e9c-ca8a779cbc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b9fa00-bc70-4654-bdfa-2273cf083e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57e15d4-c2dc-4266-85dc-95085a4fa336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677f7f8f-ec07-47b7-826e-c10be7164671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec18af7-5a2a-4c4b-98e0-8b3760d0315c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0abcbfb-2f8e-4f27-8681-eb294f4e2072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cac2aa-b446-491a-bace-3db5a79d2734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a57694-8102-41fb-b245-2f2fbed57afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8141e25b-a17a-4f8e-9020-abaf82326d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20917ef-ac3d-4442-975f-95ee08b53478",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559142e-d513-4fdf-98f6-8edb3baa3d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e37811-51a5-4f1d-8af1-781b6db8f5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cd1657-a5a4-46b8-b73c-b4849969ffe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66b229d-590d-436c-be7b-ba3b4bbb201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f20de40-af6c-42eb-b17b-d852dbe5d96d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bd5bf4-f53b-47f3-8157-d8f971fc0890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f49d61-caa3-42ff-8e35-2958122af1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b60f382-3e16-4d8e-a816-060545ea68ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addf21cc-3c6e-4657-8deb-ebb5da61f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5eeb97-c9e6-4b56-9c11-c562d8f709aa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5073a07c-0e30-4d0a-8efe-cef836bd514d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f61af4-c976-4e87-87d3-4d5e3ad1b585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0542eb5c-bfd3-4a8f-a02c-441ba77a2c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d189438b-6b0d-4ad5-ad88-2ce8a7e108fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26950bc5-32ab-4740-a699-07535fa3e34e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0120e0d-9fce-450a-acc4-143f940c878f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4f7cdf-31e5-499d-9069-32fc25f587dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ad4d7-de70-4786-b044-489410ab69b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de9b6ae-2bd0-4714-a0c6-7e6f4be5c5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d102bee-5149-4fc2-8fff-3f805ef36118",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db7c6b8-53dc-4dd9-8b27-b63acf71433b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8669cbcf-7bf2-4be0-928a-2b5635dbe08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00174481-bced-48ed-924a-ffc1d04c4384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec5ea0c-5e62-4348-8f42-19d54a21066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4072823e-2998-4331-a554-f949a198edaf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96cf9cb-7689-484f-95c3-60505c0fddf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e14a75cf-5377-4fb0-9009-137a4a1683e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce9712f-4e26-4109-8d28-46009f69005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a456996f-4a6b-4628-a6b7-c0740e33653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5fbb5e-8609-4180-afe5-dea9c2ad2ee7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd30088-c1f5-4cf5-87ef-04f1287e15aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1085c91f-06c3-4d60-ab1a-a694aa0883f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb0c150-621b-49c3-b410-ee8aa77e5f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29435964-ff89-4dc6-be8e-7bd37671a0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639b8af-2f7a-4389-8f81-30e98ed9ab63",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c25c70-6ce6-44e2-8174-90a99fabeca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5769f16-b874-48ff-9fce-e553c8307bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e4eb4d-a8d5-4c78-bb4b-f7f87eb356be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc02ae1-86c0-4604-a22d-40716fde1e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c31c707-3350-43a7-a1bc-745c23278204",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3294aa7-27a3-479b-bc48-5a3679c86414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0ff78f-f233-4f8a-a8ce-ab5cebb2384e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd4e4e7-fb41-46a8-94b1-607a07fd7999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644e7497-963e-4d28-8604-0675f536d324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68867db-9243-4af8-8cc1-506d2f0c6524",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ec7beb-6e1f-4463-94cf-a1060f79ae14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853b440c-6bfc-4734-9bac-5162614a8deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb985318-30f0-48c9-9fef-b9fdb5460055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a1bf51-e67e-44c3-b691-af8ddac50845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8894578-2e33-4c51-af8a-8717587cd22e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b4086-b7b4-4c12-bdcc-d25bc46e401f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57076492-b734-4606-bd74-43f91af90354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc362383-407a-4e29-8d21-c821c45f6c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c087768b-5ec0-40dd-8787-86f1e7bdf157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78579e15-4842-4da0-b946-b9e999d8577f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0456dd-c203-491d-8872-af46dffcc47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133da97b-0eeb-4eb9-9ae4-b863c2acf4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6d9af8-18e8-4018-a959-bacdbcc5629c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659f2f24-dc78-49c5-adfe-2aa18c4e35b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7f8238-b7db-4a6a-903b-1ea7272a3c4c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7613b7cf-0767-4f98-bd78-f2515ab99b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e83329-e476-46c3-96c9-88ae3a0403c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2353a681-39ff-4755-9a08-3861320f4fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252f0ece-c61d-4876-ac7a-7f8d0742750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e80b21-1953-4403-80ea-bd6b5e001a0b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa924a77-0e59-4836-8d16-3b2084d201fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c554b8d8-1150-42e7-9cf0-1283b3ca37c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c827189-c686-47c5-96b3-ea6d2464abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6723178f-898c-4128-a15e-897b99108070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9b9970-23a6-4937-8c17-d44533951342",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abca40d1-523e-49bb-8d6e-8c5c306bddfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa1d6c7-bf24-4fd2-9d1c-ca648d4c67ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07953822-eaef-4795-b2e3-28264bc0107b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc25328-648a-4d6a-8f4d-7b05fb644694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4ccd56-f47e-4e9e-9f30-2eb60468d41f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376fe316-27a8-4ed3-874c-c0a268f7f40a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c7a7e6-e006-4ba3-8a1d-a984d5ad579c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570459b1-cc69-49cd-9a22-235f889d6d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06d778c-03de-4523-9b6c-216b1fe3473b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51502df-99ab-4034-ab5e-c4eff43d075a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8047dc56-a9fe-459a-b48f-2eaffd5f0bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ed2c7f-092f-47ef-813a-178231290c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67acaba6-3b0b-4d7f-82bc-cd7520a8566c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4ae2e6-4131-48c1-b0bc-10aa28a48db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935ee3ac-05f3-4fce-9eb6-d1c12f492b59",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f4e98e-b16a-4b29-943f-9efef1188981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b34da9-00d5-4e2e-a7e3-8a6c6ad79e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce960974-a4d5-4e5a-9239-56bf506a4796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d1aadc-16f8-4b9d-97ce-16c822c6c482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b07f39-a0f0-4a75-8483-d7e604b646df",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5830a248-2222-4728-a391-0ebee0e6a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f922e78b-c1e6-4142-b4c4-615f13e88b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0503ba8-cb8e-4f7d-a5b2-2c37bd5596c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c4304e-addc-415f-8173-39b2f09a5c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f26236-2a79-48ef-bdf9-62d78175b095",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e779defd-e8e1-4dbe-a7e2-eeff9061b225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d284d761-69d3-4a3c-8330-c5c817cc437f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c5d4b0-dc85-4207-9174-4cb54dc42dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe2a8c9-31ff-4f74-b102-43a1f108314b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1532f5dd-70ab-4361-8371-75bc30abaa97",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5670ca85-eaa7-47f8-829b-100cb7c8613b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e785d61e-7314-4f28-b8e9-ca3dd9507cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b27389-ca4c-414e-8cf4-9ecb07929bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b741a174-fb39-4e5e-aed9-a9006052430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680e56ad-01ba-488f-9f51-d996d825b9fa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9537d8-430c-47a7-aaf8-e48fe2200321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678b296a-1d25-445c-9c38-783faa8e09bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b07079-eee7-4b60-987c-112561635766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4632345-2d80-4bed-9a53-b2fb44a1afa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d7f850-3ee8-4e97-a02a-68e5df6d7483",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b82cba1-9edc-4ba4-b7b2-1c074aa0abd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d919d7-1fd4-4d69-b208-c90bdd3e3a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d35c544-3ced-4d2b-b8bc-78324039d867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952981ed-d956-488b-a59c-ba4e35b735b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b06926-c76e-4ba0-8971-5373bc17d65b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92a63d-7a18-4b03-b7a2-a6b4f4595977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f20140-0d22-4eeb-8f81-9132dcff58e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae10653e-82f8-4297-b655-ed5857e26854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbb60cb-a079-4aad-8880-2ebaad908807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147ef4d8-e63b-498e-bfcd-035178f3b6b7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0d2b18-71b6-4818-ae39-86ae9e461a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5959cc-2b53-42a2-80e9-3f1162f4f85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d4b141-a53b-4366-bed9-b07bb88c3475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fdd5a1-984e-4dba-aff2-ca4df3dfc81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d0c758-a7df-4ead-9f9f-0c90093c32d3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb6adb5-9311-4734-b706-e847a26d602d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceebc023-7916-49c7-89d8-90edebf6cc86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a01a6d-75b8-4bdd-bc26-a4ee587dadd5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc73598-2705-47db-ab8e-828c7870ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d41c3b-f169-4969-bebe-44334309465c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab17dd69-3f87-46e9-adf7-a0b11da5357f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e21f33-cf3f-4834-a577-c7ec54a494c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8044d4-2527-48fa-bd6f-5b2deec161d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db8f13b-dec7-4357-a1aa-75328bcdb4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe784de-d263-4884-bbaa-7d9243659023",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1562785b-ba6b-4988-bfb9-b9b8b076224f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c76ea1b-2954-492e-88e3-aaf1648c8b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa72c5fa-1304-4ccb-b389-e07cbfb32bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fdb76e-5fdb-4e54-a389-2ed848b8894a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a746292-af88-4526-9b11-aaaaca5d8f5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49094c8b-52af-4147-ba84-beaa0303c52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb997901-4bc7-49c5-ba31-d1ee78b31647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b961b-5109-4020-94c3-9247e6840916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78293693-38c2-4272-b2d4-aebc591eebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee321781-28e3-4f88-9488-a315a28cb549",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203b0851-4e18-4743-bd5a-1425a98b2a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5081118-332f-4acc-a6b2-099696c7e3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fa93cc-0758-4bca-8ffa-f43defd76585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8351d498-64b6-41ab-9cc3-5180a8d03976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ca2a01-8bed-4938-93e9-8ba9bb0e64f4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb85817d-981a-4865-9d31-7ce97dc787de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a7c801-9139-4e21-8a03-3533d32d77b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59b339d-fab0-467e-96eb-7f5f93668e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b476c6-f67e-4c05-b02e-accb01907d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4783a6-5540-4c29-b2c9-d1bb8e5f8485",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54704cf1-6652-467f-bf94-f12d8eba572c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da951b6e-2c70-4f25-9c01-1ff5e100b9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ab3b61-1140-4f2b-995f-198af0ea4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb972a1-986a-4c05-a6e1-1d21739c551e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b00b987-c935-4ec6-9757-cfa1ae845c4f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a1094-f4aa-4753-be1f-7f2590a2877a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15d8316-32e2-4b91-8c3c-2780acabfadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f9014-9771-4cd4-abf2-701d92ebf09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5189514d-ea06-414e-9106-c7cb90b192a8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f2cebed-933e-48ae-bd1e-3e26a448ad93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "654dac94-63a8-4892-8d68-0d0a82bfee93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "927f304b-1724-4c91-83b8-e730842379a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ca22976-b5d2-4581-a345-6f68fb3a9f57"
                    }
                  }
                ]
              },
              {
                "id": "7cd8b4d0-71d0-4a43-9891-cdd50e5bd2d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93b9f38e-065c-4a39-8e62-1c82da9f75e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0d14f8-b613-4844-b497-aad626264417",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48abac0f-8136-4b60-8e34-c9c5fdd5142d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c10c54-2d47-4176-91e8-ef4a9f0ac52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60f6d092-7f06-468a-bcbc-c65431ba46f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3782fb6-0850-4a35-8d2a-e5d79d1cfdce",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036dc28-da55-476a-aaa8-0391e93013e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2ff640e3-c82e-4cfa-ad15-aaef79b0bd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21264974-8837-4e65-8d75-0b52410a5ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd61f01-326d-410f-a2ea-56b939382da9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98d3482f-6ad7-4e9d-bd35-b0ff94a2cf85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32e5b02d-ffff-4880-b58a-83aaded519eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b5171a5-0326-459f-86eb-f7f385a943c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8084864c-c226-4f3a-861a-77c832db5489"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "df8b3a8c-aec3-4b12-bc11-64c389b4c17a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c0d7530-06f3-4857-9286-b627087c9004",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6653181a-e857-48c3-a3c6-26d580c8afe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90cb5a11-ef0e-4b33-8fac-c9e9197f5200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa0bbd79-8ad8-4dc0-8ac5-c224f04d15b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c52e8e-cfbd-421c-804e-47f15d7e2155"
                    }
                  }
                ]
              },
              {
                "id": "38657508-6b2c-446a-9c8c-bd8a14820084",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "170ed5ec-f380-4e59-9cbe-6acdc24da451",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "592410e3-4462-4414-8b86-f44f57e18cc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdb849d8-4773-4361-bd4a-1f50b64c8a3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e98d91-6bcb-4099-8048-da7e5c503717"
                    }
                  }
                ]
              },
              {
                "id": "21080143-b7a1-423f-97d0-47755577e505",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fbc84c5-f58d-48a5-8166-29c8a16e2a96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1000ffc-26ad-4e19-a02b-ce5bb81818e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac9e2ebc-adb0-4743-bd13-ed9753824248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f27cec91-67f9-429d-a073-0233299923ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2a71423-68e4-4ed9-aec8-f02fc9f6ff6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "67b5f149-50f8-4c05-8a00-1ce727e9a702"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d47cabd3-444d-4724-a8de-3c14ffd07e8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13e6b054-9a5f-4ad9-8b8b-21e9535f0afb"
            }
          }
        ]
      },
      {
        "id": "b15322bc-cd3a-4269-9713-b205efc741e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f52d9fe3-dd77-448c-86cd-315a35ffb63a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa3b5b30-0004-4c7e-9150-03e9a27bfbd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a5c9cdc-78c7-4d17-b509-97ea3ab275ec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfb1496-ee5a-4e41-b117-f57e12c1a986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc5a124-60df-4fd7-a85c-828e80deaac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06baebcc-6ebf-4d7d-8aa9-dadaa57bb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eba2a3d0-abd5-41f1-9bee-a15291e156f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2eda91-116f-4ea7-94ed-12c4eb639d87",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c32583-c591-422f-a366-b87f551d6e80",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "829ffe3b-2285-4adc-bec4-00cc5a7bb6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ee698b-db56-404a-8451-97461e9155ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70fa09a0-8aa2-4d38-ba0c-11a876874726"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849207bb-99f8-431e-b918-cb1ea2f77454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b053149-1212-4ab4-be52-9f148052a1b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe5d0f6-98e8-411a-8f95-cb2f974372d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56337431-936e-48c7-a9ba-e7b694ccd731"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2503abb7-8b74-4bca-9651-61942943f422",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "f27d87fc-e85d-4af4-ba78-c4e7ed1ea58a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7997445b-3a02-4c97-9ba0-d8ebc1afff91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fcc8e96-361c-4c78-ad77-55272c5c5db7"
            }
          }
        ]
      },
      {
        "id": "47443bfa-61a0-474b-be89-a158f0f80e4d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7d2ecbca-fe33-4df6-bca3-dfc04f17b57f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d598a862-8373-4ac3-adba-6beb12309191",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d5f9400-0792-4f53-9e33-e1673469f79e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9147b366-41c6-4099-b080-b7a2a7ed8cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c79bfd-86fa-4937-8a93-06f4bea40144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4920b58-8e9a-4f8c-a5cc-5da8c7882ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77e5e450-9416-4763-9189-20134a355541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa5a54c-9313-48a3-8d2c-b99dee621f8c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31921ebb-d278-4735-9216-16e1ec10efdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "2329e512-c682-47d2-b8c7-ea2853a14aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd3003c-8c9c-4c8d-82a6-f23e2a6a7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60912f18-e1d2-4cd0-8549-01c99fba4c1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cfe38be-00f2-4798-8e92-bfb70bf741ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c35dc7e-32b7-4417-aaca-6542baefbed7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e24a37e-ff85-4c9d-bcc7-844b84b315d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb435902-f135-4fa9-8d7b-dd7706ffb911"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f01a3d32-a344-4649-bacc-1e081a650590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "bd9d3dce-8f59-4b23-9283-7e78e26a97ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35a71798-4e02-4daa-92c9-0ff2e67d13c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eba2379d-5545-4357-9a89-b1683570ff01"
            }
          }
        ]
      },
      {
        "id": "e94a53ba-27dd-4b19-b7f9-df4a711c1748",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2a4a267c-7ea2-4a8b-aeea-c1264d570581",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b287fc1-93b5-4e9f-8832-a0010aa8ee46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be18585d-7090-47da-8766-19c419d217c0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c7758a-e7e5-45da-9b67-f99da109aac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5587faf-7956-405b-8b07-9522f6fbe2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f769960-b91a-463d-83a7-0071a68602af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e56adfd6-d943-4619-8cc5-8d6bab05eafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eb08d7-edd1-4a20-b96b-de6f1aebdaa6",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b883ab8d-9042-470a-b99a-55ce4f05185e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e1c669f8-e4bf-4230-ba9d-e6188a4fbafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f049274-2b57-4da3-86eb-b564514bdc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7330098b-0ea8-44c6-8fe5-58ad7d6d6a49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5214b25-5004-4774-9bda-80ebf0dcb409",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdc285a3-fd10-4138-bc84-d554295b9948"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aacbe31-d9a2-467d-8763-4f9adbeeb56b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f479a968-73f1-434d-8034-8b1be395d000"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7194c995-a43a-44c8-90f0-9c3f95347817",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "e8c8d108-5573-4620-a8ef-b3ebc0514442"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37220c05-9fe1-4f44-9219-9da9f3c69a07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "901aaa97-a027-44e9-bbd7-cb88b5e81410"
            }
          }
        ]
      },
      {
        "id": "4800fba1-2f83-4807-8c22-a7c798215bdf",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "78c21c2c-a8c3-4b89-87b3-d052a7dfeae4",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.72906403940888,
      "responseMin": 69,
      "responseMax": 813,
      "responseSd": 123.89416464115205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664326741578,
      "completed": 1664326777597
    },
    "executions": [
      {
        "id": "8d5857ff-140f-4cfd-a4b5-5672355ae95b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "571996e7-d999-4372-a77a-3b34492d51fa",
          "httpRequestId": "e0a369fb-f9a0-4954-8595-8ccaa37c2e30"
        },
        "item": {
          "id": "8d5857ff-140f-4cfd-a4b5-5672355ae95b",
          "name": "did_json"
        },
        "response": {
          "id": "9de6a209-ed89-491a-b7ea-27cfc0d9df78",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "8a1f76c8-14f0-4c16-9bb0-160ff0e81346",
        "cursor": {
          "ref": "6759d1e7-522b-4c9b-8ab4-cc6e45a8975b",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0619a752-8361-46e9-a9f5-1d4b262932fe"
        },
        "item": {
          "id": "8a1f76c8-14f0-4c16-9bb0-160ff0e81346",
          "name": "did:invalid"
        },
        "response": {
          "id": "fdd91884-1e89-41d5-9afb-689def3df947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f76c8-14f0-4c16-9bb0-160ff0e81346",
        "cursor": {
          "ref": "6759d1e7-522b-4c9b-8ab4-cc6e45a8975b",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0619a752-8361-46e9-a9f5-1d4b262932fe"
        },
        "item": {
          "id": "8a1f76c8-14f0-4c16-9bb0-160ff0e81346",
          "name": "did:invalid"
        },
        "response": {
          "id": "fdd91884-1e89-41d5-9afb-689def3df947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3611b1-d070-490f-b856-8aa500a2a5f2",
        "cursor": {
          "ref": "e5207d20-5bd6-43d2-af28-b4539feac51d",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "88fb6181-f2b1-42a7-9e60-02b1bcf7dcd9"
        },
        "item": {
          "id": "5d3611b1-d070-490f-b856-8aa500a2a5f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f4cf3bdf-44a9-4d26-aaa6-8f00780e6f6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 125,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a5d033-ae44-4b1b-977b-7f6fedb4d70b",
        "cursor": {
          "ref": "364fa63e-32c4-4dab-9da7-50b752927e99",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c17d7e42-a311-41dc-8f68-429a586813b9"
        },
        "item": {
          "id": "82a5d033-ae44-4b1b-977b-7f6fedb4d70b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "912ab7de-c202-4dba-834e-9fa6a6a57f78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e375b715-bc77-4e6e-955d-f7551d714fb7",
        "cursor": {
          "ref": "5fb81cbd-4fd7-47be-9e61-1cdd5ad8975a",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff857acd-e0be-4900-aa3c-eed78649bf1d"
        },
        "item": {
          "id": "e375b715-bc77-4e6e-955d-f7551d714fb7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a995ac2e-a9ac-46f4-ab6d-3c7dbe9d9f48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f476f9d-dadf-4b0a-b8ec-917a1e689a6d",
        "cursor": {
          "ref": "e6b7941c-f226-4267-b028-5242f61b5065",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3db3bf20-609c-44b1-a411-940e49d68f57"
        },
        "item": {
          "id": "3f476f9d-dadf-4b0a-b8ec-917a1e689a6d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "81fdfea9-8d28-407a-b669-6b520ac57e4c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f476f9d-dadf-4b0a-b8ec-917a1e689a6d",
        "cursor": {
          "ref": "e6b7941c-f226-4267-b028-5242f61b5065",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3db3bf20-609c-44b1-a411-940e49d68f57"
        },
        "item": {
          "id": "3f476f9d-dadf-4b0a-b8ec-917a1e689a6d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "81fdfea9-8d28-407a-b669-6b520ac57e4c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbb0756-be75-4024-aac3-6b291a69de7a",
        "cursor": {
          "ref": "0e0d7e81-9c7a-478b-a169-931152446786",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "97d01ed2-bc37-4dab-b265-48c2a51ff5a0"
        },
        "item": {
          "id": "7cbb0756-be75-4024-aac3-6b291a69de7a",
          "name": "identifiers"
        },
        "response": {
          "id": "9d0ebc05-63f7-4dc2-b468-b034814bc7a6",
          "status": "OK",
          "code": 200,
          "responseTime": 244,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
        "cursor": {
          "ref": "0ef6086b-9b8c-4546-93e1-0df078dc770a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "752dbfef-571e-4b05-8a52-02b3b9addbbd"
        },
        "item": {
          "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8e7aa5f2-7f1c-40ab-9252-2f8df9374fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
        "cursor": {
          "ref": "0ef6086b-9b8c-4546-93e1-0df078dc770a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "752dbfef-571e-4b05-8a52-02b3b9addbbd"
        },
        "item": {
          "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8e7aa5f2-7f1c-40ab-9252-2f8df9374fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
        "cursor": {
          "ref": "0ef6086b-9b8c-4546-93e1-0df078dc770a",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "752dbfef-571e-4b05-8a52-02b3b9addbbd"
        },
        "item": {
          "id": "fe1c4ab9-c261-4553-9be8-76820df11e5c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8e7aa5f2-7f1c-40ab-9252-2f8df9374fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e939f-8d0e-48a0-851e-ad83b879ab75",
        "cursor": {
          "ref": "1e0b6f3b-04f3-4267-b315-058ddb57e16e",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b5e77863-a8b3-43c5-b40e-f8d51e16f14d"
        },
        "item": {
          "id": "996e939f-8d0e-48a0-851e-ad83b879ab75",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2d354491-e87f-4dc3-b19d-49b34c87e965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e939f-8d0e-48a0-851e-ad83b879ab75",
        "cursor": {
          "ref": "1e0b6f3b-04f3-4267-b315-058ddb57e16e",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b5e77863-a8b3-43c5-b40e-f8d51e16f14d"
        },
        "item": {
          "id": "996e939f-8d0e-48a0-851e-ad83b879ab75",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2d354491-e87f-4dc3-b19d-49b34c87e965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117ace5-0576-4e29-b98f-bf7543b70b9c",
        "cursor": {
          "ref": "6ad1f765-5bb1-4b7d-b21a-29401e7d497d",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d3ecec26-d153-439e-9b82-44a3e921349a"
        },
        "item": {
          "id": "1117ace5-0576-4e29-b98f-bf7543b70b9c",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "3e8452c2-4bb6-46e5-a3fc-03fc61d08133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117ace5-0576-4e29-b98f-bf7543b70b9c",
        "cursor": {
          "ref": "6ad1f765-5bb1-4b7d-b21a-29401e7d497d",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d3ecec26-d153-439e-9b82-44a3e921349a"
        },
        "item": {
          "id": "1117ace5-0576-4e29-b98f-bf7543b70b9c",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "3e8452c2-4bb6-46e5-a3fc-03fc61d08133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477146a1-d990-45c1-84fa-d2e58bff6612",
        "cursor": {
          "ref": "f1d9b6c2-db93-4ce2-a42c-4e56018cc1e3",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa1d73cd-e4f6-4515-949d-b10c42413d64"
        },
        "item": {
          "id": "477146a1-d990-45c1-84fa-d2e58bff6612",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "90ccbdee-034c-4291-a732-f5741395ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477146a1-d990-45c1-84fa-d2e58bff6612",
        "cursor": {
          "ref": "f1d9b6c2-db93-4ce2-a42c-4e56018cc1e3",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa1d73cd-e4f6-4515-949d-b10c42413d64"
        },
        "item": {
          "id": "477146a1-d990-45c1-84fa-d2e58bff6612",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "90ccbdee-034c-4291-a732-f5741395ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3572da-66ce-4e16-b17f-00dfa06314fe",
        "cursor": {
          "ref": "df7b1d64-08b3-44bc-80c5-95c03b18bd22",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "43604a94-9672-4753-8357-b80624841259"
        },
        "item": {
          "id": "da3572da-66ce-4e16-b17f-00dfa06314fe",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "fb5490b9-40db-4869-b3ee-7583570529c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3572da-66ce-4e16-b17f-00dfa06314fe",
        "cursor": {
          "ref": "df7b1d64-08b3-44bc-80c5-95c03b18bd22",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "43604a94-9672-4753-8357-b80624841259"
        },
        "item": {
          "id": "da3572da-66ce-4e16-b17f-00dfa06314fe",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "fb5490b9-40db-4869-b3ee-7583570529c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58509f75-4b52-4ec2-b1b8-548d3467a2dd",
        "cursor": {
          "ref": "96c13777-a85f-4dac-9072-48084354eb72",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4769a0ce-849e-4736-8af2-23d16cf4f909"
        },
        "item": {
          "id": "58509f75-4b52-4ec2-b1b8-548d3467a2dd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f744453d-9af5-4ba7-ab25-afc023e1dcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58509f75-4b52-4ec2-b1b8-548d3467a2dd",
        "cursor": {
          "ref": "96c13777-a85f-4dac-9072-48084354eb72",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4769a0ce-849e-4736-8af2-23d16cf4f909"
        },
        "item": {
          "id": "58509f75-4b52-4ec2-b1b8-548d3467a2dd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f744453d-9af5-4ba7-ab25-afc023e1dcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b8e338-0752-41aa-91ce-76232fadfca6",
        "cursor": {
          "ref": "d2c475b9-f70b-4d20-a59f-de3e400622de",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "600a55e1-988c-412e-bce9-370bb3ed5c27"
        },
        "item": {
          "id": "47b8e338-0752-41aa-91ce-76232fadfca6",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "4a2c74aa-a3db-4f30-b2cf-624236c6b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b8e338-0752-41aa-91ce-76232fadfca6",
        "cursor": {
          "ref": "d2c475b9-f70b-4d20-a59f-de3e400622de",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "600a55e1-988c-412e-bce9-370bb3ed5c27"
        },
        "item": {
          "id": "47b8e338-0752-41aa-91ce-76232fadfca6",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "4a2c74aa-a3db-4f30-b2cf-624236c6b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e349959-12a6-452f-9ceb-926ab7857861",
        "cursor": {
          "ref": "0cafd8d2-5c91-4150-a3ae-d982c9ae748f",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dfd7e518-b8f7-4b14-a748-170854728407"
        },
        "item": {
          "id": "2e349959-12a6-452f-9ceb-926ab7857861",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "1d2b19e7-b171-4c16-b9e1-20f9c83359da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e349959-12a6-452f-9ceb-926ab7857861",
        "cursor": {
          "ref": "0cafd8d2-5c91-4150-a3ae-d982c9ae748f",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dfd7e518-b8f7-4b14-a748-170854728407"
        },
        "item": {
          "id": "2e349959-12a6-452f-9ceb-926ab7857861",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "1d2b19e7-b171-4c16-b9e1-20f9c83359da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10dab4-cd4d-4f08-a7e5-5c61617f0a32",
        "cursor": {
          "ref": "4c624099-3b86-430f-8580-98ed4cae8f9b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2fc3baf6-1326-42e6-ab8b-5cd5eb11a423"
        },
        "item": {
          "id": "ad10dab4-cd4d-4f08-a7e5-5c61617f0a32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "28142772-190e-4cb9-a05e-c49304094a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad10dab4-cd4d-4f08-a7e5-5c61617f0a32",
        "cursor": {
          "ref": "4c624099-3b86-430f-8580-98ed4cae8f9b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2fc3baf6-1326-42e6-ab8b-5cd5eb11a423"
        },
        "item": {
          "id": "ad10dab4-cd4d-4f08-a7e5-5c61617f0a32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "28142772-190e-4cb9-a05e-c49304094a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec48bb22-3d8e-42d6-867e-3dd3f84e19ed",
        "cursor": {
          "ref": "b97b7613-ba9b-4ee9-9c13-b5738648c053",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8bdd12cb-21ec-4457-93eb-cd1e2a9ae472"
        },
        "item": {
          "id": "ec48bb22-3d8e-42d6-867e-3dd3f84e19ed",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "48dc2f9c-38c7-497f-b62a-f4dfdd027d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec48bb22-3d8e-42d6-867e-3dd3f84e19ed",
        "cursor": {
          "ref": "b97b7613-ba9b-4ee9-9c13-b5738648c053",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8bdd12cb-21ec-4457-93eb-cd1e2a9ae472"
        },
        "item": {
          "id": "ec48bb22-3d8e-42d6-867e-3dd3f84e19ed",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "48dc2f9c-38c7-497f-b62a-f4dfdd027d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730dd2f8-f2d0-46b3-888a-5aeb0367308c",
        "cursor": {
          "ref": "43fba2ad-71b9-469d-b866-798e8f3df4b0",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2cde6614-4a32-43e3-9546-d5e2597d26dc"
        },
        "item": {
          "id": "730dd2f8-f2d0-46b3-888a-5aeb0367308c",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "792224e5-c5e8-4f52-92bf-b797200178e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730dd2f8-f2d0-46b3-888a-5aeb0367308c",
        "cursor": {
          "ref": "43fba2ad-71b9-469d-b866-798e8f3df4b0",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2cde6614-4a32-43e3-9546-d5e2597d26dc"
        },
        "item": {
          "id": "730dd2f8-f2d0-46b3-888a-5aeb0367308c",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "792224e5-c5e8-4f52-92bf-b797200178e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a5fe83-48d1-4df2-86bb-65a9d7c6ef12",
        "cursor": {
          "ref": "c82fbd52-09b9-4c95-b496-06310366f350",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f6a650f7-0400-4c4a-bbc4-e4624479702e"
        },
        "item": {
          "id": "77a5fe83-48d1-4df2-86bb-65a9d7c6ef12",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9473a71-9b8c-4e9b-88a1-f5da0a0e6713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a5fe83-48d1-4df2-86bb-65a9d7c6ef12",
        "cursor": {
          "ref": "c82fbd52-09b9-4c95-b496-06310366f350",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f6a650f7-0400-4c4a-bbc4-e4624479702e"
        },
        "item": {
          "id": "77a5fe83-48d1-4df2-86bb-65a9d7c6ef12",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b9473a71-9b8c-4e9b-88a1-f5da0a0e6713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9282914f-c431-45f2-8f68-7ede8542dd99",
        "cursor": {
          "ref": "0a64c040-1dc8-4421-8e85-a8641927044a",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3724ae0b-20d9-4fff-a5c3-88a913abcf30"
        },
        "item": {
          "id": "9282914f-c431-45f2-8f68-7ede8542dd99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9bf8c344-8abf-45d1-84b6-14ac2e08c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9282914f-c431-45f2-8f68-7ede8542dd99",
        "cursor": {
          "ref": "0a64c040-1dc8-4421-8e85-a8641927044a",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3724ae0b-20d9-4fff-a5c3-88a913abcf30"
        },
        "item": {
          "id": "9282914f-c431-45f2-8f68-7ede8542dd99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9bf8c344-8abf-45d1-84b6-14ac2e08c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2c18e-472a-4454-98e2-856516872d2e",
        "cursor": {
          "ref": "1d81ee96-80d2-4f17-8217-d85dd9c81186",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "40fcb058-7894-4b71-9e77-e66081d6f1bf"
        },
        "item": {
          "id": "93d2c18e-472a-4454-98e2-856516872d2e",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "ebe29cd9-d323-4822-b2d7-dc467718143e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2c18e-472a-4454-98e2-856516872d2e",
        "cursor": {
          "ref": "1d81ee96-80d2-4f17-8217-d85dd9c81186",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "40fcb058-7894-4b71-9e77-e66081d6f1bf"
        },
        "item": {
          "id": "93d2c18e-472a-4454-98e2-856516872d2e",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "ebe29cd9-d323-4822-b2d7-dc467718143e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3906303b-fd86-43ba-a6ec-c69dacdb5fc4",
        "cursor": {
          "ref": "457d1458-09df-49ce-811b-65ec3136886f",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bbb760d0-0878-442a-a799-ab7d9f015972"
        },
        "item": {
          "id": "3906303b-fd86-43ba-a6ec-c69dacdb5fc4",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "98223185-5a0d-4d21-8c64-8b994bbca48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3906303b-fd86-43ba-a6ec-c69dacdb5fc4",
        "cursor": {
          "ref": "457d1458-09df-49ce-811b-65ec3136886f",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bbb760d0-0878-442a-a799-ab7d9f015972"
        },
        "item": {
          "id": "3906303b-fd86-43ba-a6ec-c69dacdb5fc4",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "98223185-5a0d-4d21-8c64-8b994bbca48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a5dc78-0948-4361-8850-022500098f86",
        "cursor": {
          "ref": "2c8beb20-0c69-401c-be40-73c1b6da1341",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ae9d7131-3e74-4610-ae86-c25e82d0fa4e"
        },
        "item": {
          "id": "51a5dc78-0948-4361-8850-022500098f86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c7504eb-2957-4e76-80f2-ff08cdd60d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a5dc78-0948-4361-8850-022500098f86",
        "cursor": {
          "ref": "2c8beb20-0c69-401c-be40-73c1b6da1341",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ae9d7131-3e74-4610-ae86-c25e82d0fa4e"
        },
        "item": {
          "id": "51a5dc78-0948-4361-8850-022500098f86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c7504eb-2957-4e76-80f2-ff08cdd60d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddf80df-0dac-4915-9170-b6420d78b30e",
        "cursor": {
          "ref": "b4e30622-26e4-4299-b2cb-389f6c3a451e",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "facc31bd-61f9-4e1f-b481-5a2f60704b6c"
        },
        "item": {
          "id": "8ddf80df-0dac-4915-9170-b6420d78b30e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2a203db1-e2ec-4cef-82a7-d0d887973924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddf80df-0dac-4915-9170-b6420d78b30e",
        "cursor": {
          "ref": "b4e30622-26e4-4299-b2cb-389f6c3a451e",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "facc31bd-61f9-4e1f-b481-5a2f60704b6c"
        },
        "item": {
          "id": "8ddf80df-0dac-4915-9170-b6420d78b30e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2a203db1-e2ec-4cef-82a7-d0d887973924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44650e-34f8-4162-a413-6ac7eb8adc72",
        "cursor": {
          "ref": "d6460ff3-9f0f-4b9b-be22-220610f923cc",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "73eb96ec-4f47-4471-a99c-630c3891046a"
        },
        "item": {
          "id": "9a44650e-34f8-4162-a413-6ac7eb8adc72",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "46032e56-27ee-456e-9493-03af1a472074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44650e-34f8-4162-a413-6ac7eb8adc72",
        "cursor": {
          "ref": "d6460ff3-9f0f-4b9b-be22-220610f923cc",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "73eb96ec-4f47-4471-a99c-630c3891046a"
        },
        "item": {
          "id": "9a44650e-34f8-4162-a413-6ac7eb8adc72",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "46032e56-27ee-456e-9493-03af1a472074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb821b-ee61-4681-8a08-0ed1ddedcf0d",
        "cursor": {
          "ref": "56b9da4b-4f91-449c-a5aa-cbee12a20f1c",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f6ebec1-6141-4579-b3cc-1794d627e98c"
        },
        "item": {
          "id": "34eb821b-ee61-4681-8a08-0ed1ddedcf0d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "73a54455-492b-43d1-a4b0-773f920d1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb821b-ee61-4681-8a08-0ed1ddedcf0d",
        "cursor": {
          "ref": "56b9da4b-4f91-449c-a5aa-cbee12a20f1c",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f6ebec1-6141-4579-b3cc-1794d627e98c"
        },
        "item": {
          "id": "34eb821b-ee61-4681-8a08-0ed1ddedcf0d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "73a54455-492b-43d1-a4b0-773f920d1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3290475a-0b2b-464f-9edc-fa8c290596fe",
        "cursor": {
          "ref": "f077f22f-f044-4f42-837f-3c8c8158c490",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4344945d-55aa-4879-994b-d79982a4fd2f"
        },
        "item": {
          "id": "3290475a-0b2b-464f-9edc-fa8c290596fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9b594d01-b227-4956-91a8-6bbf89c010ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3290475a-0b2b-464f-9edc-fa8c290596fe",
        "cursor": {
          "ref": "f077f22f-f044-4f42-837f-3c8c8158c490",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4344945d-55aa-4879-994b-d79982a4fd2f"
        },
        "item": {
          "id": "3290475a-0b2b-464f-9edc-fa8c290596fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9b594d01-b227-4956-91a8-6bbf89c010ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0d8ac-82c6-42c1-b4f9-653c57168f4f",
        "cursor": {
          "ref": "8ea1872a-a7e3-4245-987e-14b9e292210d",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6def4ee5-7184-44ae-ba36-2e94dcf6dd71"
        },
        "item": {
          "id": "fcc0d8ac-82c6-42c1-b4f9-653c57168f4f",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "9ae6136e-428a-491c-af25-4dc51afc907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0d8ac-82c6-42c1-b4f9-653c57168f4f",
        "cursor": {
          "ref": "8ea1872a-a7e3-4245-987e-14b9e292210d",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6def4ee5-7184-44ae-ba36-2e94dcf6dd71"
        },
        "item": {
          "id": "fcc0d8ac-82c6-42c1-b4f9-653c57168f4f",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "9ae6136e-428a-491c-af25-4dc51afc907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc463f08-e9a0-40e2-9bf4-561b77329bb4",
        "cursor": {
          "ref": "61863ade-faf1-4b07-a98b-910f925c5633",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60f6dc6c-fd9d-4e48-b816-2654eaacd81f"
        },
        "item": {
          "id": "dc463f08-e9a0-40e2-9bf4-561b77329bb4",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "0cef9c77-b6c1-4613-9537-14339caf7b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc463f08-e9a0-40e2-9bf4-561b77329bb4",
        "cursor": {
          "ref": "61863ade-faf1-4b07-a98b-910f925c5633",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60f6dc6c-fd9d-4e48-b816-2654eaacd81f"
        },
        "item": {
          "id": "dc463f08-e9a0-40e2-9bf4-561b77329bb4",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "0cef9c77-b6c1-4613-9537-14339caf7b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3406dff-46aa-4bd8-a17b-abf92fc3f030",
        "cursor": {
          "ref": "c20ae9ef-0f21-48f3-b5ee-a2b7c915d694",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "625c187c-6d33-46cb-b043-a2446e8f922d"
        },
        "item": {
          "id": "f3406dff-46aa-4bd8-a17b-abf92fc3f030",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "59e94b30-74b3-4383-812f-780b24c34d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3406dff-46aa-4bd8-a17b-abf92fc3f030",
        "cursor": {
          "ref": "c20ae9ef-0f21-48f3-b5ee-a2b7c915d694",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "625c187c-6d33-46cb-b043-a2446e8f922d"
        },
        "item": {
          "id": "f3406dff-46aa-4bd8-a17b-abf92fc3f030",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "59e94b30-74b3-4383-812f-780b24c34d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cb430c-846d-4ff7-97c9-351851ae385c",
        "cursor": {
          "ref": "4bec4aa9-b7a7-432b-a706-e91648bb00bb",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ff6b8b0c-b24c-4da5-bcc3-396481c2551a"
        },
        "item": {
          "id": "45cb430c-846d-4ff7-97c9-351851ae385c",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "72887331-2c94-4a0d-998c-5a4559c185b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cb430c-846d-4ff7-97c9-351851ae385c",
        "cursor": {
          "ref": "4bec4aa9-b7a7-432b-a706-e91648bb00bb",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ff6b8b0c-b24c-4da5-bcc3-396481c2551a"
        },
        "item": {
          "id": "45cb430c-846d-4ff7-97c9-351851ae385c",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "72887331-2c94-4a0d-998c-5a4559c185b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f766cf9b-7ef4-4371-b649-bb413daabc20",
        "cursor": {
          "ref": "9b1dddb1-f5ef-41c1-886a-0adf8893a9c4",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bdb5a11d-8bf0-4e99-bca1-7d04ef906fda"
        },
        "item": {
          "id": "f766cf9b-7ef4-4371-b649-bb413daabc20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34e154b7-c1d1-4236-bbc7-cf890249750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f766cf9b-7ef4-4371-b649-bb413daabc20",
        "cursor": {
          "ref": "9b1dddb1-f5ef-41c1-886a-0adf8893a9c4",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bdb5a11d-8bf0-4e99-bca1-7d04ef906fda"
        },
        "item": {
          "id": "f766cf9b-7ef4-4371-b649-bb413daabc20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34e154b7-c1d1-4236-bbc7-cf890249750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebea8b0-6544-4755-869b-2f551780e4cd",
        "cursor": {
          "ref": "f9f8f165-560a-41e6-a0e6-099f3eb5f360",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3d57fc18-b912-424e-b5b4-b6c343756056"
        },
        "item": {
          "id": "3ebea8b0-6544-4755-869b-2f551780e4cd",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "8294f444-7ea1-4b59-9bf0-ea20b8a6bf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebea8b0-6544-4755-869b-2f551780e4cd",
        "cursor": {
          "ref": "f9f8f165-560a-41e6-a0e6-099f3eb5f360",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3d57fc18-b912-424e-b5b4-b6c343756056"
        },
        "item": {
          "id": "3ebea8b0-6544-4755-869b-2f551780e4cd",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "8294f444-7ea1-4b59-9bf0-ea20b8a6bf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d48b99c-6823-4697-8056-e6c90bca3fad",
        "cursor": {
          "ref": "8bcad399-90db-4887-a4fe-d3e2e6d8952e",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0147ea7c-fcf3-44f6-9424-22d9f24940c0"
        },
        "item": {
          "id": "7d48b99c-6823-4697-8056-e6c90bca3fad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "70f84030-9f00-4586-9547-45bc5a83b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d48b99c-6823-4697-8056-e6c90bca3fad",
        "cursor": {
          "ref": "8bcad399-90db-4887-a4fe-d3e2e6d8952e",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0147ea7c-fcf3-44f6-9424-22d9f24940c0"
        },
        "item": {
          "id": "7d48b99c-6823-4697-8056-e6c90bca3fad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "70f84030-9f00-4586-9547-45bc5a83b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b248c0-354a-4e33-80ff-2fc5d5b42bc2",
        "cursor": {
          "ref": "f1d88a06-f257-47ac-a5d6-f883e1ca1576",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3c7b5b6-76f6-495e-bcc9-91cb9b0fe467"
        },
        "item": {
          "id": "32b248c0-354a-4e33-80ff-2fc5d5b42bc2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "33eaf1b1-9ebd-4570-b99d-b8bc3c97480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b248c0-354a-4e33-80ff-2fc5d5b42bc2",
        "cursor": {
          "ref": "f1d88a06-f257-47ac-a5d6-f883e1ca1576",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3c7b5b6-76f6-495e-bcc9-91cb9b0fe467"
        },
        "item": {
          "id": "32b248c0-354a-4e33-80ff-2fc5d5b42bc2",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "33eaf1b1-9ebd-4570-b99d-b8bc3c97480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc11a26-f46d-4ace-8a1e-f702e09bfc9c",
        "cursor": {
          "ref": "d0722cdc-dd1c-48ec-95dd-4a70c2c20671",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a0619e9e-e607-4848-9f6e-478d47816023"
        },
        "item": {
          "id": "edc11a26-f46d-4ace-8a1e-f702e09bfc9c",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "420776ee-4ac4-4c96-8082-33ae7061c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc11a26-f46d-4ace-8a1e-f702e09bfc9c",
        "cursor": {
          "ref": "d0722cdc-dd1c-48ec-95dd-4a70c2c20671",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a0619e9e-e607-4848-9f6e-478d47816023"
        },
        "item": {
          "id": "edc11a26-f46d-4ace-8a1e-f702e09bfc9c",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "420776ee-4ac4-4c96-8082-33ae7061c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c3eb8e-5b41-408b-8e44-1b7efb07885a",
        "cursor": {
          "ref": "dda3ca31-a0ca-4850-aaa4-9e877385d3f6",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "268bf7da-53ee-4be9-9fad-9d640504169d"
        },
        "item": {
          "id": "d9c3eb8e-5b41-408b-8e44-1b7efb07885a",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "48d6798e-7da5-458c-93d5-3837041138f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c3eb8e-5b41-408b-8e44-1b7efb07885a",
        "cursor": {
          "ref": "dda3ca31-a0ca-4850-aaa4-9e877385d3f6",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "268bf7da-53ee-4be9-9fad-9d640504169d"
        },
        "item": {
          "id": "d9c3eb8e-5b41-408b-8e44-1b7efb07885a",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "48d6798e-7da5-458c-93d5-3837041138f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da65b6-fd59-462d-979f-54a1a784f988",
        "cursor": {
          "ref": "41ac920a-fa6b-4da1-8b9a-9e49b9eb874b",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f87dd1ab-0bf2-4b81-8140-f21ca8d3d769"
        },
        "item": {
          "id": "44da65b6-fd59-462d-979f-54a1a784f988",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "fbe538c8-d910-4448-a024-b76e1c348d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da65b6-fd59-462d-979f-54a1a784f988",
        "cursor": {
          "ref": "41ac920a-fa6b-4da1-8b9a-9e49b9eb874b",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f87dd1ab-0bf2-4b81-8140-f21ca8d3d769"
        },
        "item": {
          "id": "44da65b6-fd59-462d-979f-54a1a784f988",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "fbe538c8-d910-4448-a024-b76e1c348d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217e427d-594a-41b8-aa8d-b355e692c686",
        "cursor": {
          "ref": "9230cfe4-bc2a-4235-9192-be8e4b83460f",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "72468bf3-e6c9-4fcc-9ff9-e66ee2c7cd6c"
        },
        "item": {
          "id": "217e427d-594a-41b8-aa8d-b355e692c686",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "af9349df-4440-4d6a-9196-4986dc465af8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217e427d-594a-41b8-aa8d-b355e692c686",
        "cursor": {
          "ref": "9230cfe4-bc2a-4235-9192-be8e4b83460f",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "72468bf3-e6c9-4fcc-9ff9-e66ee2c7cd6c"
        },
        "item": {
          "id": "217e427d-594a-41b8-aa8d-b355e692c686",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "af9349df-4440-4d6a-9196-4986dc465af8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0a080-d5c1-46d6-b0e5-a1562b86722d",
        "cursor": {
          "ref": "ba46963f-dd03-468e-ad26-c7662c15336f",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f792bdf7-bd0c-4d07-9785-ab185e1edf2b"
        },
        "item": {
          "id": "cbe0a080-d5c1-46d6-b0e5-a1562b86722d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9d055207-f4e1-4901-92d1-ad8b00d5c34d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0a080-d5c1-46d6-b0e5-a1562b86722d",
        "cursor": {
          "ref": "ba46963f-dd03-468e-ad26-c7662c15336f",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f792bdf7-bd0c-4d07-9785-ab185e1edf2b"
        },
        "item": {
          "id": "cbe0a080-d5c1-46d6-b0e5-a1562b86722d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9d055207-f4e1-4901-92d1-ad8b00d5c34d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f11f7ca-99ac-4a14-b58c-ce78de1a0df5",
        "cursor": {
          "ref": "09b3af27-5abb-4b0d-b5c7-398d9d84b3cb",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1eb9f72f-003a-4bee-8ee2-9fb48a70180c"
        },
        "item": {
          "id": "4f11f7ca-99ac-4a14-b58c-ce78de1a0df5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "52ba64d0-fc43-4936-81e7-eeec16e085b2",
          "status": "Created",
          "code": 201,
          "responseTime": 430,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f11f7ca-99ac-4a14-b58c-ce78de1a0df5",
        "cursor": {
          "ref": "09b3af27-5abb-4b0d-b5c7-398d9d84b3cb",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1eb9f72f-003a-4bee-8ee2-9fb48a70180c"
        },
        "item": {
          "id": "4f11f7ca-99ac-4a14-b58c-ce78de1a0df5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "52ba64d0-fc43-4936-81e7-eeec16e085b2",
          "status": "Created",
          "code": 201,
          "responseTime": 430,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c219d-1638-49ad-b169-6bfca8883266",
        "cursor": {
          "ref": "9996376c-7add-42ff-9e17-6e51a6426580",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c2c3033-4596-4463-ad75-3df9f0a51bb6"
        },
        "item": {
          "id": "9c8c219d-1638-49ad-b169-6bfca8883266",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "70278c4e-8e18-4b95-8f45-52293684ee51",
          "status": "Created",
          "code": 201,
          "responseTime": 357,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c219d-1638-49ad-b169-6bfca8883266",
        "cursor": {
          "ref": "9996376c-7add-42ff-9e17-6e51a6426580",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c2c3033-4596-4463-ad75-3df9f0a51bb6"
        },
        "item": {
          "id": "9c8c219d-1638-49ad-b169-6bfca8883266",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "70278c4e-8e18-4b95-8f45-52293684ee51",
          "status": "Created",
          "code": 201,
          "responseTime": 357,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8616d-4eac-4bea-9d62-bb36bd9c8796",
        "cursor": {
          "ref": "7f7a9c95-3925-4bd0-8cd0-00525e16343a",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d1a4460e-fd2a-4a3c-ad16-6b5fa97a9172"
        },
        "item": {
          "id": "97a8616d-4eac-4bea-9d62-bb36bd9c8796",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "456bee7b-bfc5-4a9e-a35c-82e94575e3f6",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8616d-4eac-4bea-9d62-bb36bd9c8796",
        "cursor": {
          "ref": "7f7a9c95-3925-4bd0-8cd0-00525e16343a",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d1a4460e-fd2a-4a3c-ad16-6b5fa97a9172"
        },
        "item": {
          "id": "97a8616d-4eac-4bea-9d62-bb36bd9c8796",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "456bee7b-bfc5-4a9e-a35c-82e94575e3f6",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "362171ed-986a-4fcf-8335-eb24b30b93a1",
        "cursor": {
          "ref": "b9802cbc-3a4b-407f-8060-613fecadf7ad",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d1dcc81-2321-48b5-832e-3e114c78e411"
        },
        "item": {
          "id": "362171ed-986a-4fcf-8335-eb24b30b93a1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38ea7e25-8b68-417b-8ca5-7e4eafba6b05",
          "status": "Created",
          "code": 201,
          "responseTime": 394,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "362171ed-986a-4fcf-8335-eb24b30b93a1",
        "cursor": {
          "ref": "b9802cbc-3a4b-407f-8060-613fecadf7ad",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d1dcc81-2321-48b5-832e-3e114c78e411"
        },
        "item": {
          "id": "362171ed-986a-4fcf-8335-eb24b30b93a1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38ea7e25-8b68-417b-8ca5-7e4eafba6b05",
          "status": "Created",
          "code": 201,
          "responseTime": 394,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9db6689-7f2e-40d6-b788-88a1e6485e91",
        "cursor": {
          "ref": "0bb4f693-1ca1-46be-8110-48945bc84fa4",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "672979ad-104f-499a-b872-d3a301a2ed84"
        },
        "item": {
          "id": "e9db6689-7f2e-40d6-b788-88a1e6485e91",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25af2dc2-2338-4f0c-afe3-c9991e1941c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "e9db6689-7f2e-40d6-b788-88a1e6485e91",
        "cursor": {
          "ref": "0bb4f693-1ca1-46be-8110-48945bc84fa4",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "672979ad-104f-499a-b872-d3a301a2ed84"
        },
        "item": {
          "id": "e9db6689-7f2e-40d6-b788-88a1e6485e91",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25af2dc2-2338-4f0c-afe3-c9991e1941c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "a7a74305-1bf4-4d4f-aee7-6042a4f794ac",
        "cursor": {
          "ref": "7cd4c343-fc07-403e-9233-11b3428f44a9",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca9f7f18-85ac-469f-b66f-4b02d3065b47"
        },
        "item": {
          "id": "a7a74305-1bf4-4d4f-aee7-6042a4f794ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0566584-a09e-47f1-89dc-4ab2321221ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "a7a74305-1bf4-4d4f-aee7-6042a4f794ac",
        "cursor": {
          "ref": "7cd4c343-fc07-403e-9233-11b3428f44a9",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca9f7f18-85ac-469f-b66f-4b02d3065b47"
        },
        "item": {
          "id": "a7a74305-1bf4-4d4f-aee7-6042a4f794ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0566584-a09e-47f1-89dc-4ab2321221ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "a18df15b-828c-4004-877c-b94c70ba1b4c",
        "cursor": {
          "ref": "b04feb45-1061-4ce7-ab12-995ccc40c312",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d2ab56a-8cfe-4b2c-a738-5b0f49a5313e"
        },
        "item": {
          "id": "a18df15b-828c-4004-877c-b94c70ba1b4c",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "633fdce4-22d1-473a-b8ab-04e680268a99",
          "status": "Created",
          "code": 201,
          "responseTime": 338,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18df15b-828c-4004-877c-b94c70ba1b4c",
        "cursor": {
          "ref": "b04feb45-1061-4ce7-ab12-995ccc40c312",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d2ab56a-8cfe-4b2c-a738-5b0f49a5313e"
        },
        "item": {
          "id": "a18df15b-828c-4004-877c-b94c70ba1b4c",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "633fdce4-22d1-473a-b8ab-04e680268a99",
          "status": "Created",
          "code": 201,
          "responseTime": 338,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6efb16c-d4b2-4482-a137-01cc98135e90",
        "cursor": {
          "ref": "fd7bae64-ec26-487a-9633-b41bef95e036",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ca342a8-2746-437d-962a-e24222e531b1"
        },
        "item": {
          "id": "f6efb16c-d4b2-4482-a137-01cc98135e90",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2c0614e-70db-4cbe-b0c6-bf607cd45e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6efb16c-d4b2-4482-a137-01cc98135e90",
        "cursor": {
          "ref": "fd7bae64-ec26-487a-9633-b41bef95e036",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ca342a8-2746-437d-962a-e24222e531b1"
        },
        "item": {
          "id": "f6efb16c-d4b2-4482-a137-01cc98135e90",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2c0614e-70db-4cbe-b0c6-bf607cd45e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee62a83a-f3e4-4fba-b2e4-6a59c9e99533",
        "cursor": {
          "ref": "d4cf7330-9066-45a6-83e3-c1afa778fb08",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "87e077b4-278f-4f3e-87ef-c30e992606a9"
        },
        "item": {
          "id": "ee62a83a-f3e4-4fba-b2e4-6a59c9e99533",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a3e8a643-df2f-491e-9ea2-2b80d9487b9c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 72,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8b89c-3572-46aa-8d09-4e537e1e7767",
        "cursor": {
          "ref": "6bd2c638-f8af-4ff2-905c-95f7190f097d",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88081289-59e6-4baf-a25d-4c69a11d2ee9"
        },
        "item": {
          "id": "aac8b89c-3572-46aa-8d09-4e537e1e7767",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c967d9ea-17bb-4f27-aaa3-8503d926fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8b89c-3572-46aa-8d09-4e537e1e7767",
        "cursor": {
          "ref": "6bd2c638-f8af-4ff2-905c-95f7190f097d",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88081289-59e6-4baf-a25d-4c69a11d2ee9"
        },
        "item": {
          "id": "aac8b89c-3572-46aa-8d09-4e537e1e7767",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c967d9ea-17bb-4f27-aaa3-8503d926fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f0c1f2-741e-4bfc-8c4a-8fc805321b3b",
        "cursor": {
          "ref": "e4fe61aa-9d73-425a-941f-93908a558f02",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7a90b0d2-a51e-42ee-9156-378a3ad4ae7c"
        },
        "item": {
          "id": "a1f0c1f2-741e-4bfc-8c4a-8fc805321b3b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "652a529e-6062-4c7f-94d6-671c97112908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ccea0a-3f14-47b9-bcbe-21d0fe457b9e",
        "cursor": {
          "ref": "c6f3286b-b302-4be7-b448-ef004df48607",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "57356377-5d53-4f57-b673-06debe938c78"
        },
        "item": {
          "id": "03ccea0a-3f14-47b9-bcbe-21d0fe457b9e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "690450bd-8177-4c39-bdd1-646e26e68f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58f68bf-7856-4f3c-b265-f27588299d4d",
        "cursor": {
          "ref": "6159fae3-84d5-4895-8502-c0e383efaacf",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a202fee5-7d0a-4448-bd70-c54f8982a780"
        },
        "item": {
          "id": "a58f68bf-7856-4f3c-b265-f27588299d4d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e48633eb-5dd4-4d75-be03-c545d8093c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a07c08a-9b85-452f-a3c9-60708812adbc",
        "cursor": {
          "ref": "b58ff0f9-fb43-4c0f-8559-84a6e5d4be43",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "30e0446d-a325-4652-ba9e-f3fd77d1cfc8"
        },
        "item": {
          "id": "4a07c08a-9b85-452f-a3c9-60708812adbc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f49fb2dd-e83c-4b08-974d-3fb75204f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d97307f-cb88-4ea2-b3e6-251321ac1879",
        "cursor": {
          "ref": "0c860477-8814-4fc2-941d-60a450081d66",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2906ad5-3f08-4c46-b032-60d84c5a9411"
        },
        "item": {
          "id": "6d97307f-cb88-4ea2-b3e6-251321ac1879",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8da11541-e53f-42b0-b8c4-5983b67212ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc06be11-cf5e-4128-bbcd-c293d3dc6b7e",
        "cursor": {
          "ref": "668d2076-6408-426a-b1db-9fe241dbb2b9",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80f121ba-ff5b-4fa3-8a79-8eb87cb3d4f2"
        },
        "item": {
          "id": "bc06be11-cf5e-4128-bbcd-c293d3dc6b7e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8dcc9041-01c7-4fef-9fe2-873637cb18ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38070ad-eb02-4aca-8ea5-bffb1218e169",
        "cursor": {
          "ref": "d76fe8d9-bcbf-4566-88d6-77c6528532bd",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "566947b9-ba22-44c2-bdd1-a488de742ba3"
        },
        "item": {
          "id": "b38070ad-eb02-4aca-8ea5-bffb1218e169",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "63bfa5f8-5a7d-4ce2-9200-bc778498bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa6e472-5e86-4620-a700-c380a94ae250",
        "cursor": {
          "ref": "b44a47b2-37e8-4a66-967e-438abd698bde",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6a27e84b-0582-41b0-971f-bb16137a8bbe"
        },
        "item": {
          "id": "cfa6e472-5e86-4620-a700-c380a94ae250",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2617fbca-e84e-4789-a56d-7ab6158cc1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c080b507-c49b-472b-b7e8-ab71d063426c",
        "cursor": {
          "ref": "3c6bcb10-3de2-4ce8-9a67-abefd7408d29",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b0f3e8ce-8dea-4d87-97f5-704257a2f272"
        },
        "item": {
          "id": "c080b507-c49b-472b-b7e8-ab71d063426c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7aab5708-6858-4900-aee1-8c756a0b2725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4563b256-eecc-42bb-b064-89b4adf0916f",
        "cursor": {
          "ref": "6670a331-0ff2-496f-b4e9-943c191f0192",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "feb4dd66-361d-49b1-b021-b1d48a8ab43c"
        },
        "item": {
          "id": "4563b256-eecc-42bb-b064-89b4adf0916f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "92cdd36b-5c1b-475e-b8ba-f08cbb928bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb1908-9850-4693-a94b-09850c543cef",
        "cursor": {
          "ref": "a7c18ab3-67a6-4ce6-acc3-6efbae99e650",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8c42ddbd-82c1-49fc-8dd0-43ad623d35df"
        },
        "item": {
          "id": "c1bb1908-9850-4693-a94b-09850c543cef",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "59a23d5f-3f76-49fc-a737-9add667f9dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5c2bc9-ed62-4335-ab66-7d79997198c1",
        "cursor": {
          "ref": "c551196b-79f0-4f52-82ad-5b9460f7aae3",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "04692eca-187c-4367-b1be-e058fca64738"
        },
        "item": {
          "id": "4f5c2bc9-ed62-4335-ab66-7d79997198c1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "51c9e284-4df0-4819-815e-d69ddfc4c4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af95858f-5c9b-40bc-8d3e-5237504ef0d7",
        "cursor": {
          "ref": "d9bbb12f-4acd-4af3-a2cc-5ea2a7cbfea0",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2d3a2cbb-6a26-4a95-966e-84c71a997ef0"
        },
        "item": {
          "id": "af95858f-5c9b-40bc-8d3e-5237504ef0d7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b7d3d3d2-9521-4b91-96c5-893008eae3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3671efb9-2d43-4e74-a888-7bc3bd6e6deb",
        "cursor": {
          "ref": "68e90a75-c923-432d-a260-962e785bd46c",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5655c307-6c8c-42fe-982a-75b9a415e2fb"
        },
        "item": {
          "id": "3671efb9-2d43-4e74-a888-7bc3bd6e6deb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "004bace6-4aa3-4ae5-9519-52923aca6526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bcf045-6cad-4fa2-8355-f4395438f56b",
        "cursor": {
          "ref": "12b528e5-a80e-4c73-a3ce-36ad622591fa",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fe56ffbd-1f00-45b6-adb5-02312dd9be60"
        },
        "item": {
          "id": "e8bcf045-6cad-4fa2-8355-f4395438f56b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9cce1367-0573-4fcc-81c0-ddfc23c3412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be4cdf-efca-489d-9a74-43e192320297",
        "cursor": {
          "ref": "8d5a5039-abd4-4939-9acd-1cc106be7fac",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f2b2fe09-0fd9-4e70-939f-d31ba5baf639"
        },
        "item": {
          "id": "62be4cdf-efca-489d-9a74-43e192320297",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f613605d-474b-4bb4-a6b7-425ea01e93d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2441ca-3ffb-43c7-a942-018a49d7770a",
        "cursor": {
          "ref": "f376fc04-7010-46e2-9119-53ec1380a2d3",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "70f236ff-3d3b-41bf-adc4-fcfe56613a50"
        },
        "item": {
          "id": "9f2441ca-3ffb-43c7-a942-018a49d7770a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "26d57962-878c-474b-a7d3-ba3381c9bb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7103ee49-dae4-4873-a21d-b6d5baecd45c",
        "cursor": {
          "ref": "332a8afb-2a9f-4b65-921d-1ab200c08286",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "060052b1-283a-4b17-90a7-992d09010b4a"
        },
        "item": {
          "id": "7103ee49-dae4-4873-a21d-b6d5baecd45c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d7da0dd0-1b7a-441f-8416-6957805aa8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050a3731-649d-40a6-91ca-8f3740c6d599",
        "cursor": {
          "ref": "3165a00f-f093-452d-b1da-a26bf6ce87d9",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23c732d9-9ee2-4311-972a-db14abbeadae"
        },
        "item": {
          "id": "050a3731-649d-40a6-91ca-8f3740c6d599",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "acd026e9-bb0e-4e19-a250-d1820c771f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97fbdf8-c392-4d48-bb84-bac9011af36e",
        "cursor": {
          "ref": "d26024a0-7030-4c2b-ae04-0a1df9cf2eb3",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "96208502-35aa-4057-98a5-527c9d9ad23a"
        },
        "item": {
          "id": "b97fbdf8-c392-4d48-bb84-bac9011af36e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "93473c91-fa49-47b0-81b6-fcc56393d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bf9c1a-c0f4-4201-bb6b-0330f07d0103",
        "cursor": {
          "ref": "effef892-3439-4ef8-b4bb-1e3c0dec4af0",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c15b9638-e3d3-4474-a416-dba67d3ec3d1"
        },
        "item": {
          "id": "01bf9c1a-c0f4-4201-bb6b-0330f07d0103",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5b1acbe2-f7a2-41c5-a037-97fe1e3a624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1198e9bc-2d40-496f-9891-0d42b0864c2a",
        "cursor": {
          "ref": "dafd1c79-8c55-428a-b330-80459c5e018f",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "589525ad-3088-411c-931a-d1638ce8f4d5"
        },
        "item": {
          "id": "1198e9bc-2d40-496f-9891-0d42b0864c2a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b263e5ce-12ba-423c-80da-ffff10ce6d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795e8f7-9a62-453e-b153-bc0356bd6d77",
        "cursor": {
          "ref": "23618d91-89a6-4859-b269-982633c5bf56",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "72df737c-412c-43bd-8544-dac3053f7463"
        },
        "item": {
          "id": "2795e8f7-9a62-453e-b153-bc0356bd6d77",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d32471c8-7631-4143-b2f0-0dcfc1ba689d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd18094b-2359-497f-b659-80a14873790f",
        "cursor": {
          "ref": "f55f7fc5-b17f-4db6-8152-81820dffeea8",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0f4c8466-7230-46b6-8c18-04e52301a43b"
        },
        "item": {
          "id": "bd18094b-2359-497f-b659-80a14873790f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ae9b0c3d-92a8-4aab-8a27-056da4535b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9698b355-0379-4625-80be-9fc98db1dae8",
        "cursor": {
          "ref": "edb8a255-cd27-4bf5-ae06-9b7cebedafbe",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1b6fe155-5911-404b-9c1f-0a33d4ed7ffe"
        },
        "item": {
          "id": "9698b355-0379-4625-80be-9fc98db1dae8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7535ad4-3cb5-4fb0-adf5-6b3574673a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c15280-dcb9-4194-84a1-7472d98c8e0f",
        "cursor": {
          "ref": "df1b072f-1d83-4ade-a217-5eecce760940",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e1966b1e-201f-44f4-ba52-d75444228a2f"
        },
        "item": {
          "id": "57c15280-dcb9-4194-84a1-7472d98c8e0f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "679212b0-e806-4adf-94bb-d155ec30c200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0954d0f1-8b94-4e44-b41a-3a01e7f080ed",
        "cursor": {
          "ref": "7edb64d7-0f9b-4b84-83c9-38edf6e2ff75",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c10728cb-18e8-49fc-beae-8f48350f73db"
        },
        "item": {
          "id": "0954d0f1-8b94-4e44-b41a-3a01e7f080ed",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a321eb74-a04b-49f4-9777-16d32942e995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e3305b-1393-4425-bb68-0f704584157d",
        "cursor": {
          "ref": "420f641a-3cd9-4914-a390-2d7a70e3e217",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "08112434-7069-46aa-83a3-f402f211f308"
        },
        "item": {
          "id": "64e3305b-1393-4425-bb68-0f704584157d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6b051485-470c-4c8f-b988-8506fc95ce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b3eab4-68cc-4322-9a6a-67a255724a93",
        "cursor": {
          "ref": "7de5a8e5-1f66-43d5-a554-5500ac76fb1c",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d9113132-6979-45e9-a35b-0ad6d1327471"
        },
        "item": {
          "id": "64b3eab4-68cc-4322-9a6a-67a255724a93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0925d0d-a936-4de9-8560-9150914c2023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9dcac-ca3b-44a7-9e94-e12cc69d022e",
        "cursor": {
          "ref": "834b98c8-2aa5-4156-8e95-e2bfd2514aa9",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "89989a62-e17b-4355-8599-1a66791b43d9"
        },
        "item": {
          "id": "eed9dcac-ca3b-44a7-9e94-e12cc69d022e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7a2d3d1d-e75c-401b-ad11-603e3ac608ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1879b1a-f306-45f8-a85d-589afd1d545e",
        "cursor": {
          "ref": "46bb557d-035c-4268-a826-af23f180cd37",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9afca884-2f62-4ae4-bcf6-465728570a7e"
        },
        "item": {
          "id": "f1879b1a-f306-45f8-a85d-589afd1d545e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a9960854-a905-4004-9563-3df4696a1123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192512c2-234e-450e-87cb-89b18e935f90",
        "cursor": {
          "ref": "3037ed91-e409-4d8a-acea-780ec65457ba",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8d881833-5951-41d1-b4b0-8231b6942e8a"
        },
        "item": {
          "id": "192512c2-234e-450e-87cb-89b18e935f90",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9cd28aa9-042d-4912-9e22-a35a926fed14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c2b8fb-045e-4af6-8d04-8af9f29737af",
        "cursor": {
          "ref": "b89af26b-02d5-494e-975d-044dfce6b76e",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4d2465aa-5a3d-4e58-8f3f-8d293c019456"
        },
        "item": {
          "id": "58c2b8fb-045e-4af6-8d04-8af9f29737af",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6e556c2-33ed-4ff2-9571-dce29e2400d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a155155e-7779-4b47-8013-b4035e3adf6c",
        "cursor": {
          "ref": "0fc7d914-c531-4475-8fef-48a7560b5dac",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ae5035af-11ce-4e4a-b85d-17653a9e62de"
        },
        "item": {
          "id": "a155155e-7779-4b47-8013-b4035e3adf6c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "debe65f7-ea5a-430a-b4f3-c671b695418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f21da5-ad91-44f0-8570-73920d454b95",
        "cursor": {
          "ref": "8b841810-455a-498e-87a1-51144fcbc766",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7df1f73-a99d-40a7-8c17-ad8b243e9a5b"
        },
        "item": {
          "id": "55f21da5-ad91-44f0-8570-73920d454b95",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "32ff1351-7550-4deb-b23e-5de625aabee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeddfd8-6917-47f3-8ca1-11b6c31a4557",
        "cursor": {
          "ref": "14cca85d-8ca4-4941-b938-df4e0c15892a",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b396675d-6821-4168-a702-6e58d09cbed5"
        },
        "item": {
          "id": "ebeddfd8-6917-47f3-8ca1-11b6c31a4557",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a5b5d09a-3213-4562-850e-20f79db9e0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b9c580-f5fc-4d75-9534-11037b324699",
        "cursor": {
          "ref": "22d89c70-f075-47f4-906d-ed4c0bda270b",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b51e250-f27a-456e-84b9-358bc4d2dbe0"
        },
        "item": {
          "id": "69b9c580-f5fc-4d75-9534-11037b324699",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dec6eb8d-6a42-4505-8068-b39ec4c575d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70490734-cf13-4437-a673-d54183cd5aa1",
        "cursor": {
          "ref": "84b4ed70-1856-440c-9d22-291bec0c35a7",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e8eaf697-2f52-4442-adee-57cd028ba85d"
        },
        "item": {
          "id": "70490734-cf13-4437-a673-d54183cd5aa1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0fb5a3bc-29d2-479f-9a75-0039d8e1546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd2e78b-9613-484b-8083-f9cb10679b6b",
        "cursor": {
          "ref": "7fc7d9f3-af64-4330-a22b-53240032dcc2",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dcdcf670-0471-4a9a-8571-007f34a80140"
        },
        "item": {
          "id": "1fd2e78b-9613-484b-8083-f9cb10679b6b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8d3b25b1-d6dc-4950-88b6-b28e1ec16c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43509d7-182c-40b4-b04a-c82627e50e21",
        "cursor": {
          "ref": "6100e164-d80c-42bb-b43d-febdda49ef18",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7763c99b-bad4-4ad3-b9d4-23256d67b4b4"
        },
        "item": {
          "id": "b43509d7-182c-40b4-b04a-c82627e50e21",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ba8e45d0-77ab-491f-82c4-49656d4f6816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c390b8-039c-4d12-a1d3-6ed255fea078",
        "cursor": {
          "ref": "828624b5-5294-4db1-9ddd-b45b720fb99b",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cf96f5d0-f80f-4e98-aa05-48827fe27f28"
        },
        "item": {
          "id": "37c390b8-039c-4d12-a1d3-6ed255fea078",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "940dc7c3-0de9-4d1c-b367-0fabd8b2fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07559126-48fd-4af7-9735-3cdbedde7689",
        "cursor": {
          "ref": "28402783-0381-4c39-a825-077044f1958f",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcd87c4b-800f-47a4-abce-73fc6b8aa4e4"
        },
        "item": {
          "id": "07559126-48fd-4af7-9735-3cdbedde7689",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "05fb7d2e-9510-46f1-af0b-a0d9ce6df9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c07a50-b319-4885-aaaa-2f13aba0a480",
        "cursor": {
          "ref": "6722be5f-5957-4928-b017-a0d148b11048",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b2e05ce9-b38f-4b52-89b8-ec4e1c48f2c8"
        },
        "item": {
          "id": "80c07a50-b319-4885-aaaa-2f13aba0a480",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c01d4809-f56c-4287-a97b-e2f497311d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7851013-2e4d-47f8-8b76-3a8a8d152c34",
        "cursor": {
          "ref": "abc67ee1-037d-4ccb-8341-4f683279304a",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9bb1120b-52b1-44a5-8b5b-0201d3ea164e"
        },
        "item": {
          "id": "b7851013-2e4d-47f8-8b76-3a8a8d152c34",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f8273860-f2f2-4b70-b8d1-e2d8609ee223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75756e5e-e126-4bcc-93a6-39af054a31e2",
        "cursor": {
          "ref": "fbd778cf-0fd2-438e-a177-881c2c4f9b4b",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "38c277eb-0ea0-4f6a-99d7-aebb19ad8493"
        },
        "item": {
          "id": "75756e5e-e126-4bcc-93a6-39af054a31e2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5f02c94e-ddf5-4662-968b-948dc49f9dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab5b04f-385a-4ba7-8526-0110b0c22f09",
        "cursor": {
          "ref": "f6bd643e-7acb-46a3-9723-3847f6361458",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04e27c6e-b2a7-44df-810b-d95da8171e58"
        },
        "item": {
          "id": "9ab5b04f-385a-4ba7-8526-0110b0c22f09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "01766fe3-abf1-4597-b40d-004ec38f50d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd8154-9e5e-4971-b4c5-9550db2a3a10",
        "cursor": {
          "ref": "8ac22c0c-65b6-41eb-8cfc-5517d768f072",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4fae2a82-1c97-4d2f-ab75-7267f38ccf6d"
        },
        "item": {
          "id": "d7cd8154-9e5e-4971-b4c5-9550db2a3a10",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "48d337db-8e4f-4321-82d3-2b7ec95d6a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e8267a-fce1-4fb8-9c08-1afcc7d617ea",
        "cursor": {
          "ref": "6fb7cf8a-90ff-4e9b-bd2b-a89f4d0d7000",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00912c03-c45e-42a4-91fe-cf73cd3ab24f"
        },
        "item": {
          "id": "52e8267a-fce1-4fb8-9c08-1afcc7d617ea",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "792d1e7d-0991-43ab-8566-39d6b4ca7c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dccc6f-d17d-4b05-a208-46f201909274",
        "cursor": {
          "ref": "007bc88d-7a51-45ad-984a-6d25cf723dba",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "03d187f5-e385-4b6b-89f2-97f800f66b1f"
        },
        "item": {
          "id": "02dccc6f-d17d-4b05-a208-46f201909274",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d436965f-8e93-4b1d-bb1e-10ddb1ee66ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47cd821-24ce-493f-910a-6703f0a123c6",
        "cursor": {
          "ref": "def49526-3f62-419e-8cb6-b8a3baca418b",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3611c370-4e26-4945-9c4b-234ac32b2d2b"
        },
        "item": {
          "id": "e47cd821-24ce-493f-910a-6703f0a123c6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f8a3868b-5bfc-4257-b108-5e2169e3c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71744aeb-832b-48bb-9425-8a055083600f",
        "cursor": {
          "ref": "d18dc590-03a8-429c-8817-5a24f0602e82",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2550d9cf-6217-4b5b-b8bf-243e41b73e84"
        },
        "item": {
          "id": "71744aeb-832b-48bb-9425-8a055083600f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eb2e0369-fed0-45d1-9db4-356c6b3c0215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1554f69-5792-4081-85d4-7ff7dae953a1",
        "cursor": {
          "ref": "680b0272-8361-47b9-8360-95bb6684047f",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e74274fb-86fe-4ab6-a922-3bbd251acf14"
        },
        "item": {
          "id": "c1554f69-5792-4081-85d4-7ff7dae953a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "468c4c90-808f-41f7-969a-5db17c45a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a17f9f-1347-444b-8af3-07914bd52aec",
        "cursor": {
          "ref": "423364eb-800a-4447-8f7a-c7c7db12f6d5",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f08ede48-ad20-4707-a8e3-d6dd0b63e0f8"
        },
        "item": {
          "id": "63a17f9f-1347-444b-8af3-07914bd52aec",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eec2fdd9-7b8c-4f76-868d-22460541dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6069d80-7459-4461-b1be-677d430905f7",
        "cursor": {
          "ref": "684ed42f-7e96-4e7b-af19-b4ccde1dd920",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc3d4dc5-d6eb-442c-ab6e-8673e9ae5617"
        },
        "item": {
          "id": "f6069d80-7459-4461-b1be-677d430905f7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f515f599-8ad4-4681-8a18-b4538c430c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483830f-536a-4fc8-8ae8-2e9e2b379899",
        "cursor": {
          "ref": "6e19e812-288d-4618-a86a-966d721701c4",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "903d3596-a58c-45a4-8e1b-cd0b8a754c82"
        },
        "item": {
          "id": "a483830f-536a-4fc8-8ae8-2e9e2b379899",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "104d4a14-8429-4f62-a5fa-dff276ced321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f15f7e-7bcf-48a2-95ac-dd74b0428108",
        "cursor": {
          "ref": "f1673e47-9599-4fb2-966f-79a546bc6968",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "86a3211b-132e-4b6f-903f-fbf7514cddbe"
        },
        "item": {
          "id": "a9f15f7e-7bcf-48a2-95ac-dd74b0428108",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "82ac5619-892f-425d-9fe3-a451c573aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6895f1-794e-4bed-bb3e-de877ead9521",
        "cursor": {
          "ref": "431637fd-361d-4c05-966e-93c9cac039ad",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a3ccc6a6-cd0b-40e0-b315-b569dabe5dea"
        },
        "item": {
          "id": "dd6895f1-794e-4bed-bb3e-de877ead9521",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "df01c846-3271-445a-9b0c-c2944722a067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c97a5d-42b5-4787-a30c-3f910061cbbb",
        "cursor": {
          "ref": "e86ad070-044d-416e-8665-76e86131d7d6",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "605198c7-7388-4a41-9765-72e5b22516de"
        },
        "item": {
          "id": "b0c97a5d-42b5-4787-a30c-3f910061cbbb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "665b7bcd-0883-4061-81a5-10894d25bbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de5efc6-5af0-4268-9058-0678f437ca85",
        "cursor": {
          "ref": "207de138-1dca-479a-bf45-6dd969c44889",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dcfa6478-13fd-4c04-b6cb-2bdcf9afecc3"
        },
        "item": {
          "id": "0de5efc6-5af0-4268-9058-0678f437ca85",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9a5c48c1-9f8f-4cc4-8ef9-b45594afc4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d56844b-1db7-4c1c-bd38-f0a720c70025",
        "cursor": {
          "ref": "6a462927-e1db-4eca-86d5-724d96255c9f",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2499dbb5-379d-462e-ba80-42c0fd65cb4d"
        },
        "item": {
          "id": "3d56844b-1db7-4c1c-bd38-f0a720c70025",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "181af55d-451a-4a2c-8a19-2ee40bd93618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec18af7-5a2a-4c4b-98e0-8b3760d0315c",
        "cursor": {
          "ref": "37312ba9-8932-4029-be4f-fd0136f460d2",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4e87d414-2efc-4932-b78d-2a0ed41d76e0"
        },
        "item": {
          "id": "aec18af7-5a2a-4c4b-98e0-8b3760d0315c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cdac7e28-5438-41eb-b85e-6322f4e69b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20917ef-ac3d-4442-975f-95ee08b53478",
        "cursor": {
          "ref": "8b47664d-be4b-4661-b204-a56d738e8375",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4398cfb3-ada0-4565-9d58-f723578ff524"
        },
        "item": {
          "id": "e20917ef-ac3d-4442-975f-95ee08b53478",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "01af3f65-03ec-4166-8e15-c6cd5d0cb7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f20de40-af6c-42eb-b17b-d852dbe5d96d",
        "cursor": {
          "ref": "033d825b-b8f3-4e99-b7d3-53640a039aea",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c2bda685-a552-425c-a4fd-1596bab4a0fd"
        },
        "item": {
          "id": "3f20de40-af6c-42eb-b17b-d852dbe5d96d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a9f14b7c-33f0-4485-88ff-9d054cc81a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5eeb97-c9e6-4b56-9c11-c562d8f709aa",
        "cursor": {
          "ref": "ee37d2a6-f6b9-498a-9591-3fd079ee10bc",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4ded0ae2-b1f6-4922-8dc5-e0aba9da32f6"
        },
        "item": {
          "id": "7f5eeb97-c9e6-4b56-9c11-c562d8f709aa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1daf6e74-7524-4303-bbbb-6ccd425a11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26950bc5-32ab-4740-a699-07535fa3e34e",
        "cursor": {
          "ref": "cfc87203-cbe0-479d-ab7b-8fa5e16421d1",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9e0d47af-4ff0-43ae-b664-12ead6ed50ca"
        },
        "item": {
          "id": "26950bc5-32ab-4740-a699-07535fa3e34e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "73173fb1-2db8-446b-a065-d1c044e5c44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d102bee-5149-4fc2-8fff-3f805ef36118",
        "cursor": {
          "ref": "c541c558-8cbc-4010-8f84-74cab4c4a82b",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be197e25-2347-4958-aa56-73ffc5c8d36f"
        },
        "item": {
          "id": "8d102bee-5149-4fc2-8fff-3f805ef36118",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f0471fc5-f99d-44a8-848a-a851b92ec9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4072823e-2998-4331-a554-f949a198edaf",
        "cursor": {
          "ref": "d735bd5c-577a-4508-ad9e-09cbd659d1cb",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5205b06e-0c4e-41d9-9f3c-0b0c06cb62cd"
        },
        "item": {
          "id": "4072823e-2998-4331-a554-f949a198edaf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "39710f09-f256-4b2d-b05e-ee43c0c1d227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5fbb5e-8609-4180-afe5-dea9c2ad2ee7",
        "cursor": {
          "ref": "72a54d3d-fc70-4540-b70a-c87e848b44f9",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "73448294-facd-48dd-afec-778847c4776f"
        },
        "item": {
          "id": "2c5fbb5e-8609-4180-afe5-dea9c2ad2ee7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0876a785-206c-4658-b661-4f2fb2a3526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639b8af-2f7a-4389-8f81-30e98ed9ab63",
        "cursor": {
          "ref": "ea73a2a6-92a5-41cc-beb9-48b2e0c55011",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0585bfdb-495a-47c6-8569-3a75a62ee70d"
        },
        "item": {
          "id": "4639b8af-2f7a-4389-8f81-30e98ed9ab63",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "50619eee-d856-4feb-9232-aa190b39be16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c31c707-3350-43a7-a1bc-745c23278204",
        "cursor": {
          "ref": "f5f1e5e5-56a4-4b5b-b87c-4050da1b806a",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3883066d-81de-4204-b42b-c1867541312c"
        },
        "item": {
          "id": "8c31c707-3350-43a7-a1bc-745c23278204",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cbfdf6aa-095f-4d16-b5eb-b4389f4cb0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68867db-9243-4af8-8cc1-506d2f0c6524",
        "cursor": {
          "ref": "c9485a42-9862-4e72-9086-0d328d212ebd",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "96796fc0-9165-4e2d-b3d1-99e204268321"
        },
        "item": {
          "id": "d68867db-9243-4af8-8cc1-506d2f0c6524",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6f39c324-ca4b-4574-b623-264a1b8efa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8894578-2e33-4c51-af8a-8717587cd22e",
        "cursor": {
          "ref": "c7072fb6-a386-4b97-a46d-f30e9039f515",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "321f0483-2c3a-415f-941d-3607871a8a65"
        },
        "item": {
          "id": "c8894578-2e33-4c51-af8a-8717587cd22e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6365adc8-a88a-49cb-a964-5d81420ac6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78579e15-4842-4da0-b946-b9e999d8577f",
        "cursor": {
          "ref": "7976c63f-750b-4b2f-9835-e504c8b79230",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1d11e698-bed5-49a3-81ac-db7acc902a18"
        },
        "item": {
          "id": "78579e15-4842-4da0-b946-b9e999d8577f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "831f139a-d861-4818-a1d2-40c559ad6bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7f8238-b7db-4a6a-903b-1ea7272a3c4c",
        "cursor": {
          "ref": "22c761db-f9da-4acc-a624-f92a11751126",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7d949d52-7383-419d-aa38-9d8a78a9f6cf"
        },
        "item": {
          "id": "2a7f8238-b7db-4a6a-903b-1ea7272a3c4c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cd068886-6351-4e26-b6c8-fe08d7448991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e80b21-1953-4403-80ea-bd6b5e001a0b",
        "cursor": {
          "ref": "4056779d-0830-4858-87b7-f9d72b67efdf",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "389b1eb4-dd0e-4e4b-af65-898febb433ca"
        },
        "item": {
          "id": "65e80b21-1953-4403-80ea-bd6b5e001a0b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "08061fc1-33cd-4533-a6e3-4441c7545aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b9970-23a6-4937-8c17-d44533951342",
        "cursor": {
          "ref": "3b91eca4-1087-41b5-b681-422005803e81",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e47db481-3d54-45a4-b931-8d771772ea7e"
        },
        "item": {
          "id": "fb9b9970-23a6-4937-8c17-d44533951342",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae72ead6-f304-4daf-9f2d-6388109c166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4ccd56-f47e-4e9e-9f30-2eb60468d41f",
        "cursor": {
          "ref": "cedb7d6f-b28c-4135-a143-577844e92485",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "013a051d-b90b-4f98-a6cb-ab4b263dd42d"
        },
        "item": {
          "id": "5e4ccd56-f47e-4e9e-9f30-2eb60468d41f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d35f6b8f-fa89-4ca5-ba46-d0570ae77670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51502df-99ab-4034-ab5e-c4eff43d075a",
        "cursor": {
          "ref": "12177cfd-fc6f-4750-a332-23d01454da5a",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "81021848-8bc4-472b-a1bf-a014d87aedbe"
        },
        "item": {
          "id": "d51502df-99ab-4034-ab5e-c4eff43d075a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e97b78da-8f19-492e-9e23-d0d684cedb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935ee3ac-05f3-4fce-9eb6-d1c12f492b59",
        "cursor": {
          "ref": "fd144f04-a72d-449c-aa90-dec44e3c8664",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fc085479-f0da-44fb-bc54-501763144234"
        },
        "item": {
          "id": "935ee3ac-05f3-4fce-9eb6-d1c12f492b59",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fe169606-ebfb-46df-9f15-44a558118375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b07f39-a0f0-4a75-8483-d7e604b646df",
        "cursor": {
          "ref": "09ce2ec5-6930-4836-b6cf-463d592a531b",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8e79e9d9-b10d-44b5-83f5-b964069aa175"
        },
        "item": {
          "id": "d5b07f39-a0f0-4a75-8483-d7e604b646df",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c3c7b402-2d81-4eb9-9f60-9fc74dc017d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f26236-2a79-48ef-bdf9-62d78175b095",
        "cursor": {
          "ref": "a1066575-b436-4fcf-a16b-e98ef62b56f4",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d5b3f54-3271-4e95-b6d3-111f1b8b9fb8"
        },
        "item": {
          "id": "67f26236-2a79-48ef-bdf9-62d78175b095",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0bb8831-3e9d-4e93-a67f-ae879eb0ac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1532f5dd-70ab-4361-8371-75bc30abaa97",
        "cursor": {
          "ref": "adc20d29-90dd-4f97-9402-edbdbed54f7b",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d061f281-c268-4d8d-bb2e-c51e51764274"
        },
        "item": {
          "id": "1532f5dd-70ab-4361-8371-75bc30abaa97",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ecf8aeae-7fd7-438e-b1ac-44a06ea17b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680e56ad-01ba-488f-9f51-d996d825b9fa",
        "cursor": {
          "ref": "a42586a4-4068-42c0-a92f-632459c0d8bc",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "39b47a0e-2204-4ca7-9f3f-1b494197b93b"
        },
        "item": {
          "id": "680e56ad-01ba-488f-9f51-d996d825b9fa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "29bec717-f1dd-4126-85de-0b5e04d42439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d7f850-3ee8-4e97-a02a-68e5df6d7483",
        "cursor": {
          "ref": "824a3000-8b19-4a5b-8788-10fcc58cf3be",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0a039308-92e8-48f3-a1ec-d5e540592604"
        },
        "item": {
          "id": "47d7f850-3ee8-4e97-a02a-68e5df6d7483",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4dd83b30-d210-4c09-aadb-e611905fe4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b06926-c76e-4ba0-8971-5373bc17d65b",
        "cursor": {
          "ref": "3c0aab2a-c3d0-43a2-915e-6fa0d088818e",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17f33982-0c40-4901-a6a8-f0dcf42bde6d"
        },
        "item": {
          "id": "c7b06926-c76e-4ba0-8971-5373bc17d65b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "96ac3361-5239-4e8f-aa5f-825af3bc2ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147ef4d8-e63b-498e-bfcd-035178f3b6b7",
        "cursor": {
          "ref": "b124c2f3-acbf-4d7b-9336-8164f39b18c8",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b707f831-b4fd-4fe2-bd40-ae7bf8bbcb45"
        },
        "item": {
          "id": "147ef4d8-e63b-498e-bfcd-035178f3b6b7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "deb48c66-9fd8-4be6-8804-43746195e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d0c758-a7df-4ead-9f9f-0c90093c32d3",
        "cursor": {
          "ref": "b128ab9e-60fd-4746-97eb-bf9e7cf643eb",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dd63d8bb-bc9b-493b-b5dd-b0cd85db7c39"
        },
        "item": {
          "id": "54d0c758-a7df-4ead-9f9f-0c90093c32d3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "84037c66-5b62-4bef-a4d0-bd9388cb0cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d41c3b-f169-4969-bebe-44334309465c",
        "cursor": {
          "ref": "5293a3a9-3822-4066-ab3b-11cfa02b1d97",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "146b51b7-0bec-4799-a841-2c7c9a4d84b0"
        },
        "item": {
          "id": "99d41c3b-f169-4969-bebe-44334309465c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5310efb8-3f4c-45dd-ad7c-a7bc84c2fb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe784de-d263-4884-bbaa-7d9243659023",
        "cursor": {
          "ref": "23c06f8f-4791-4af3-a186-19b266c856a4",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cbbbab9b-9dec-4ba0-a38c-1bedc01ccddb"
        },
        "item": {
          "id": "bbe784de-d263-4884-bbaa-7d9243659023",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "241fa3c8-cea8-4870-8c2f-db3979f52d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a746292-af88-4526-9b11-aaaaca5d8f5c",
        "cursor": {
          "ref": "9996b6d3-cea1-4ee9-87e0-0245025412d1",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5c009edd-5b59-46a9-b204-5f657ad69555"
        },
        "item": {
          "id": "3a746292-af88-4526-9b11-aaaaca5d8f5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6085d19d-01c1-4ce7-b66b-d892e6c8aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee321781-28e3-4f88-9488-a315a28cb549",
        "cursor": {
          "ref": "41848c14-374c-414d-932f-c6b5fa560c07",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "44198531-f859-4877-8f8e-3b22d9b60bde"
        },
        "item": {
          "id": "ee321781-28e3-4f88-9488-a315a28cb549",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f1786612-abce-4173-99f9-3282f399e7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ca2a01-8bed-4938-93e9-8ba9bb0e64f4",
        "cursor": {
          "ref": "1985ac13-d95c-48e2-82c5-a28fa0820a20",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0c157927-7a8f-47ce-b316-77faef107d0e"
        },
        "item": {
          "id": "93ca2a01-8bed-4938-93e9-8ba9bb0e64f4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4c31124f-bf41-4d0a-91ba-841d36afff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4783a6-5540-4c29-b2c9-d1bb8e5f8485",
        "cursor": {
          "ref": "b5b20907-773d-44f8-950e-c755d32bf178",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a9fa0330-fce4-4e39-94bc-e2b65ec7ae99"
        },
        "item": {
          "id": "7c4783a6-5540-4c29-b2c9-d1bb8e5f8485",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "71bc9622-9528-49eb-a7cb-dd30cdcc76ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b00b987-c935-4ec6-9757-cfa1ae845c4f",
        "cursor": {
          "ref": "b5325c81-9607-4b94-8b0e-c3cf5aa545e4",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c00ae51-8670-4658-a9d8-788725ec3e6f"
        },
        "item": {
          "id": "7b00b987-c935-4ec6-9757-cfa1ae845c4f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2e97ffcc-84e1-49c3-a962-c9958b9850bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9f38e-065c-4a39-8e62-1c82da9f75e9",
        "cursor": {
          "ref": "21d02d80-9d47-42d1-86d8-b3f2f3e0572d",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a50829a7-cf1a-4ccb-b1c0-882f4dfc18ff"
        },
        "item": {
          "id": "93b9f38e-065c-4a39-8e62-1c82da9f75e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ace1116e-9bfc-4b3d-ac54-ffaf72995b1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3782fb6-0850-4a35-8d2a-e5d79d1cfdce",
        "cursor": {
          "ref": "b8152b73-eb94-4d96-a62b-0fcf4d7f5b07",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "96f014f9-ac05-4861-a654-8bfb6a2b4b22"
        },
        "item": {
          "id": "c3782fb6-0850-4a35-8d2a-e5d79d1cfdce",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ca6dccc3-95be-4266-98eb-395579aa7b1f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 70,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d7530-06f3-4857-9286-b627087c9004",
        "cursor": {
          "ref": "703e91fb-a772-4262-864b-d4693f08a875",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a59ea719-8812-427a-918e-e518407315dd"
        },
        "item": {
          "id": "6c0d7530-06f3-4857-9286-b627087c9004",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d8a335a2-6358-40e6-80dc-f6ee3653f1fd",
          "status": "OK",
          "code": 200,
          "responseTime": 813,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38657508-6b2c-446a-9c8c-bd8a14820084",
        "cursor": {
          "ref": "b3d52557-3e09-4e11-8cca-c0edccd240a2",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9c727594-d0aa-4d02-abc4-1af2100059b3"
        },
        "item": {
          "id": "38657508-6b2c-446a-9c8c-bd8a14820084",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "38e54f70-6b59-473b-9ce3-0a284c2fa326",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21080143-b7a1-423f-97d0-47755577e505",
        "cursor": {
          "ref": "3be66949-de3b-49cc-97eb-415031d35739",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9105d18b-9e33-4388-9cad-1abb80c7ff7e"
        },
        "item": {
          "id": "21080143-b7a1-423f-97d0-47755577e505",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "21fac62c-fb4c-4c01-afad-0a95505f7ce0",
          "status": "OK",
          "code": 200,
          "responseTime": 382,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c9cdc-78c7-4d17-b509-97ea3ab275ec",
        "cursor": {
          "ref": "6edf9295-c840-4065-9c9c-d1b8044d8ca2",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4f8a568e-c912-4c4e-b021-295b6237f2a9"
        },
        "item": {
          "id": "3a5c9cdc-78c7-4d17-b509-97ea3ab275ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b499eb2f-e848-4fce-bc5b-f228a708ef26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c9cdc-78c7-4d17-b509-97ea3ab275ec",
        "cursor": {
          "ref": "6edf9295-c840-4065-9c9c-d1b8044d8ca2",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4f8a568e-c912-4c4e-b021-295b6237f2a9"
        },
        "item": {
          "id": "3a5c9cdc-78c7-4d17-b509-97ea3ab275ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b499eb2f-e848-4fce-bc5b-f228a708ef26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2eda91-116f-4ea7-94ed-12c4eb639d87",
        "cursor": {
          "ref": "28121d69-7331-4b34-be1e-d57a177dce09",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "129a6a4e-3969-4954-bd13-4b4799b40087"
        },
        "item": {
          "id": "ed2eda91-116f-4ea7-94ed-12c4eb639d87",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5cb74877-8acd-4ef5-9adf-d7c53902ba1a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 70,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5f9400-0792-4f53-9e33-e1673469f79e",
        "cursor": {
          "ref": "f19682fb-4108-4c53-8c95-2fdc078bdb09",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a3796561-3b16-4a8f-8ed6-5da239a51db2"
        },
        "item": {
          "id": "4d5f9400-0792-4f53-9e33-e1673469f79e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e8d9bda-5caa-4036-a5ef-b4cd088bbb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "4d5f9400-0792-4f53-9e33-e1673469f79e",
        "cursor": {
          "ref": "f19682fb-4108-4c53-8c95-2fdc078bdb09",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a3796561-3b16-4a8f-8ed6-5da239a51db2"
        },
        "item": {
          "id": "4d5f9400-0792-4f53-9e33-e1673469f79e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e8d9bda-5caa-4036-a5ef-b4cd088bbb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "afa5a54c-9313-48a3-8d2c-b99dee621f8c",
        "cursor": {
          "ref": "382134af-ec71-4cff-aacb-4cb2b9d82975",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ef32554e-42a4-4d48-9907-b52da37535dc"
        },
        "item": {
          "id": "afa5a54c-9313-48a3-8d2c-b99dee621f8c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0ec4b348-f048-4519-a324-4f0d4dcac697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "be18585d-7090-47da-8766-19c419d217c0",
        "cursor": {
          "ref": "6bc9609d-b729-4aff-8abc-c8c03a5b5d44",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec3f7521-991e-4e6f-b3c9-2d8471513274"
        },
        "item": {
          "id": "be18585d-7090-47da-8766-19c419d217c0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b58f7da5-5c11-4221-9a39-8b810ead1fb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be18585d-7090-47da-8766-19c419d217c0",
        "cursor": {
          "ref": "6bc9609d-b729-4aff-8abc-c8c03a5b5d44",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec3f7521-991e-4e6f-b3c9-2d8471513274"
        },
        "item": {
          "id": "be18585d-7090-47da-8766-19c419d217c0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b58f7da5-5c11-4221-9a39-8b810ead1fb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eb08d7-edd1-4a20-b96b-de6f1aebdaa6",
        "cursor": {
          "ref": "af16afba-6f4f-4d2f-a55a-f93b4723be91",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "48d17f8b-c74f-4b13-a47e-2197366d62f4"
        },
        "item": {
          "id": "21eb08d7-edd1-4a20-b96b-de6f1aebdaa6",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9321e52d-dcc3-417b-b7be-7a1083e16335",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 69,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}