{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1f1aa998-3aed-4047-9a31-dbb1c4206908",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5528ce50-5a23-4fa8-8c1d-3f88a278b595",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cc1b279-2bdd-4236-9550-32fde6ba08dc",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cade0b38-eb94-4270-9290-0ae6912e8cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81a9ccb7-4448-4148-a723-6b38e1e5f9ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "6a76680c-08e2-459c-bc50-546bf3d2248d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6dc8c1f4-f806-4fb0-88aa-838ff97679a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8d80eea-122f-4938-a4b0-5d90583d69b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6130699-eadf-4e13-88d5-e974635b49f4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee649d1-f29e-47af-81c7-ed7e2c4927da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5eccbf76-7327-495e-ab94-4a86e0d226ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5882c2c5-0763-4f34-819a-ca9d4114d8e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb4b05a-e3a3-4423-82c3-104448caa519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f01a1462-0a23-4298-a2fd-8ac6a2f61533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4f54e0-24d4-49fc-b836-809a86c66bb1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1440bf-fb9e-496e-91a9-ddb12440f1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddc55cac-eea0-451d-9c9e-fae51062b02a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd497b65-3d94-4320-891a-5a78bbefe13a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79db22c2-35fa-4dfa-8e37-8a722c8d42b3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c29738-8b18-4579-91ad-8ef886546cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea6a4c3-a721-4d97-a295-d63ac7c1a459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8bd78-d8e0-44ab-846f-5bb837106c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb21f56-6b6f-4208-923d-cd0c3ef1dd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd9bab3-13a8-44af-9936-755b5ed21338",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faf20bc-ee9d-47cb-a02c-9f6335d4933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b2297c-c342-4afe-82c4-cbd98d7b626f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76477ff3-7a88-4399-807b-0f3a933bcd5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5fa32ded-10a3-4286-bee8-0362423727e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e84e4195-b064-4ada-be69-abefecf7d4ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd3ebeb0-ba66-475d-a041-d779fab83cc8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0192f9c4-dbde-4bf3-9c17-91f543118876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d5a3d86b-093e-41c3-bd26-c2b4aa996394"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76300ca3-6f0f-4bc2-976a-6e2a8a46631d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "03e38975-89a5-40b6-ac36-8f04c974dec9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb1dc2eb-0350-40f4-928a-d58ef4d3392e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce558288-6e09-4196-a5b8-5c07d13ce67d"
            }
          }
        ]
      },
      {
        "id": "595995c7-11b2-47d9-a8d1-9e5a2068ee20",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a40e3026-4e00-46ac-8f53-3a67cae45bc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cf4a55a-6ba2-4002-8cca-85e326dfbfd8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "071862f6-6c84-4091-985c-0750450e8081",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f6094a-3996-404d-9459-81e8c1fe66de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d8a926-7ea7-47fd-b518-2e2136c67207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19d5d59-c74b-4464-9f5c-1dcf913519f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64b1ad8-8182-4080-9617-3c2a7627c553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8664be1-6774-46ac-bc2b-80fd7660fc06",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55234860-b37e-4a40-bbd5-78ac527f05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a71946-f4cb-439b-afa9-ad2709a4568f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be993186-d60d-4164-ad21-2c32e4a5e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "716f9a31-af00-45c6-9793-5a59ce44018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e901b5dc-64c1-4e3c-b2e4-a7be9acf26fd",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f02ce18-3140-40ff-a22c-6c1ba0d59c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb6a6fa-d3ff-49af-93fe-8a5013289a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1bc07b-f136-462b-871f-c5ca1228844d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64010072-f10e-4090-bb5d-b5d6e50d0921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf9e83-0010-4842-b158-b9227d4b8bc9",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba55aefd-bf65-446b-ae01-b8cd51a10ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3fb667-3001-4c59-a9dd-4a93da208192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4becb0-7ccd-4e6d-ad1e-0fe5a8bcbadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f24399-09ff-4790-bb8e-09de93c6648e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a524c5e5-9589-4e43-ad98-224f41d8ab5e",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2cbf81-4313-4209-8a3d-2bf9d977e805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca663e67-5c41-4d34-aef9-e2dd6b7907ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac824d-5e37-4e1f-8fbc-ab3366ad8738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c64dba1-b9fd-45bf-820e-90b2a2184b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bca072-907b-4c06-ad25-eb6fc80a8479",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f332be6-1523-4009-83b2-921dc491b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b881c74-48c0-4e69-abd5-d93f777577d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a9dd6a-2446-46fd-9300-081ae694e9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b06eea4-6e03-4aeb-84c6-4be43032d651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96ac44f-ba4c-48d4-82cc-c2d7a1a99985",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270f08f3-610e-400d-84b4-482ccbc5cad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d27856-e3ed-473f-9863-29b4f64b9dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88967011-cec1-41f5-b15d-c96ae5d88ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63df9f5-a9eb-4469-aa05-e11227c6d48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76707ce4-c812-4ff0-a20a-dbff856872ff",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bfa927-02b6-4467-91ab-5aa46db2e840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540600b4-12a2-4d0f-bbad-2cc28bbb9262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f93e5e6-7187-47a5-a782-5a7a6bc456c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3ae9a2-5e8e-427a-a44f-61e7c54ca2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d712c03-50ef-4c73-bcbe-bd1c5ac4bee0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab72c44-64a3-4ad6-a157-735aa062645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a0edd8-b7d0-4a50-a586-c9e9db2393d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c9bd83-3784-4585-b4a8-e6934eb933d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5e1171-f433-4055-b2d8-1e374d443ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e861033-6e45-4b31-9eae-decd1dfda760",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985ec283-5e20-4c0e-89ae-cf0f8d514c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a21b66-6a9c-4f91-a155-2fa32c33b3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf3275a-7718-430b-b999-c13137fa213f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8e6bef-18f8-4c7d-9a2c-b055332a5d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9d12b5-aa15-48aa-b35c-5ffb48d7a7e0",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19dd6b4-0390-4775-bf06-216c89271e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19e918e-19e7-422f-8d97-f889559a3a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4632fdc-bb11-4d6d-9698-1749ea3790a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "e5f6a959-ed2f-49fa-9258-981bad5713fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653d480a-92f1-4bb0-8302-aaf0c73de252",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48afc387-3886-4719-a6f6-7f2eecd2a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c403bdc4-3aa3-4d2d-aa13-d5e0aaf8600c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e16a5a-26e2-439e-a8fe-4a68f726267f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "dbe8f243-e12f-402a-8cc2-25873c9af15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f22a9b1-2f0d-4b14-afe1-e927fd24901d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c6c544-bee3-4437-9aae-6a806b291f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dcb537-1dcf-4bca-915b-1c6781eef36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b58d0-b3e0-4a63-93d8-095f4f4eb415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ac6c36-63ea-4622-9373-20af039a2e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf06636-bca8-476a-a0d8-7fedbe6d3dc1",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c5401a-2a9e-4ce7-b071-620a02879509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bbb345-8674-4483-bc5c-2c4ab722d774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b19f5-b2d0-4274-b31d-7fc91d875e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e17c90-f979-4101-a54c-513277e03511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632f7b8-31fc-497c-83ef-b350ef003319",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89901515-4100-40d1-b7c5-a578a3d3cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c046a6e-4582-4228-a0b6-e412272c717e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b266ef-a68a-4ea9-81f8-6d689bf82b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "71590107-dc1b-4c74-9821-bca183f0cd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07006a04-a48b-4a11-86ce-766892ba26b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6158ede3-67dd-4b00-a3e5-6b95fd28ef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda798a7-c644-44cf-ac50-0c3a44a41857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4fcefb-ba4f-4c61-9a5c-df5fc6e1d563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "0aeb0823-b6d0-4ce2-81b3-070e1360e790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e04678-10ef-4977-9783-e15750dce915",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122e9160-c3ad-4cfa-9f53-5c5425437f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3c9c63-6577-442c-a5f5-fb7966379fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952bfdc1-a08a-444e-8564-28b0cb90c414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e787dbc-9df2-4670-a9d4-fa1cb6bda05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc49cb81-29f8-4d54-9edb-7a4ec3b999a5",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f7022-aa81-430b-803a-5448792d40a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d3409b-5e4f-4530-adcc-54d6af8c728e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7295f1b-c86b-44fc-88df-69d2c3b63c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7279f25e-af7e-448c-a612-1b297df57e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5240e6-cffd-49e5-ba6c-da79114e9db1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc20b2e4-7e1c-4589-9236-9cd8ac35ddd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28efd109-7f73-428d-88c8-44ce9b8de6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c469604f-66ae-44e3-9735-ee637f30bbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cd1aba-87c2-43bc-a23b-c34733eb9149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51da442f-30cc-4e49-94c5-a50418d2f190",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8410654e-1023-4b91-83b4-aebe9fd7e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c48906-5719-447d-a484-f6daffed988b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bf34a0-af35-4971-893b-02c42371b402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3581c52-6bd9-402a-85b3-ecd73bfded10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc6ff0-a3ad-4804-bc69-303b8a9fb511",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de677019-3ca0-4bde-aa23-5cdd805c5be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d449455-43d4-4059-9e2a-6bc34c25d45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b408522-681a-4af9-9cb7-f11240ce7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61356d21-a6d6-41bd-aad4-4eb88eadec55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96e5179-e789-41d1-9586-1d1d8d096c05",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4f75cf-093f-4b4e-8d15-6d7f1e1b8cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6b8821-688a-4c42-93e2-41f58af97c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c1de55-0947-4178-85fb-ff50fa035f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fe6009-cd69-487e-ad80-a7f4081e526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d93ba-6de9-4645-885a-d7d019150ff0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd42b0f-5e25-4dc7-9296-95a72e3fc926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95265a4c-860b-40a8-acf2-2d27f85bf381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8dbaf2-dee8-4de6-bf6b-f531ab8f5624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702de031-664f-4e57-8037-9279db4dbc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf49d538-3a9b-4059-8049-f87cdfd6a13a",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ade6655-8d42-406e-9a7f-faf66e243d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a9e3d2-ae05-48df-8672-6a30df8ccdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05af47-dd15-4477-b770-ec1ff27137b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133fcc22-e0a4-44c4-8305-1838a2975c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d79a8-e34a-4de4-a75d-a56f7be23ab4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8596bd7-1af9-4b55-b7ec-09c76184c240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c73b224-722f-40af-af88-65b7cb3136e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a57538-e360-4286-9c5d-a5ebfa61f04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd14cf32-3fac-4328-ae6c-de3f37d3fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e9b231-eb02-489d-a5a4-3eab4b32413d",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af3b09-b82e-410b-8130-cea9743dda66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cf39da-99a0-44f9-ab5e-503daa1283b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b3eb75-656b-4830-826a-b5849083dfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9386a7ac-e1cd-4f4b-afc1-6be9ca1571cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93e33f4-caa3-44ed-9f08-7f5b05082cba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71d5fa0-5c0b-4270-87a8-86239cd7f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aee1f9-b2d0-4249-9b8b-e2fe4f3e119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761cee4a-db30-42ba-a832-5fb3b14af143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536a83ec-5b1d-44b7-8369-b26792bf5ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a722a-6b4f-4686-987d-15aa88211bce",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb96063e-4757-4391-9951-1a851b9d2591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bba5a8-4209-441e-88f6-8e125934653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61531262-86ee-45e8-99bc-eb7d42fe90b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4a4a16-7fff-46dd-bbfb-e0b9dccb7674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbfb79e-d42c-4863-896e-dd983f11f1a1",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa83fee-966e-4575-889a-f573feeebc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcafe5c2-71d2-41fb-9a59-dce1a0b03acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35247fe-14d2-4a79-af11-d539f27c28a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5263156-1216-42b7-85b8-fc84c852c44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80371e05-5a94-49f7-87d5-9f97fe0d429e",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2011dc0-fdaa-4ba3-838f-1ea2f18c058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5296a6-3256-44ea-b183-8927ffc0e340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310fbfde-a63a-4fe1-a595-882793de67dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86af937f-93c6-4163-8c6e-05109b104644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ffcc4-3678-422f-974f-d2a1df7b6bf4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86580e8e-14d2-4df8-a666-5871a7cbce31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dff3be8b-fb07-4765-80e8-d2a5f84388e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a4c441-1125-4feb-a1df-8dce457dfa47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5348f1ea-f438-4c39-ae30-22b0469c7237"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f0018e8-a81c-4fe6-8376-04e8010665fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6590120a-5567-4ac6-91b4-02aff93cc850",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d42103-97ce-41b5-9114-fdb073c45b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e5bd4e4-fffa-4aad-b318-5b1305c55e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46f4373-be8f-4293-ae81-1ebe03d70f22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "50beecad-9503-4792-8f77-3439da6d53c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35d345-883f-4873-a8c4-924d99aeebc7",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d874e8-ea85-40ab-8516-15dd56c3cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4ef7180-db52-4cc1-86fb-065980da7a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94daeb98-8beb-4fa5-8585-65eb711b36ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b0e9a237-c385-451a-b5f2-1d32b3616bb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c9664e4-5560-458c-87fe-87f31957f68e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e484f479-4d36-4064-bdf1-63cd20b85271"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6f85577-68d6-4c3b-93a6-558e0ff846ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f11522d-cf6c-4c81-9bfe-c5da5da8f763"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57f4964a-bb97-46d8-a396-fcbf0d4abc96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0fdb8fe-1cf1-49e1-ba6d-07decf62b223"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51e8fb02-75f3-49e0-94f3-7c7de4a70a78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "917f3ef3-2f90-41e5-90d7-06b24fe9102c"
                }
              }
            ]
          },
          {
            "id": "3098b868-1065-4150-8e06-b4e643e3b38b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dcfc8454-507f-4b4e-8eef-61ef8fe2424f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98f5f9b4-143a-40ba-94ff-16c958ee2661",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "858c9daf-e68b-4ae4-abdd-c1c9e8090ae0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0ca1dc-e383-4008-bb49-b36ea2ef8e54",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "6973dcee-4059-4eb8-a813-ff9458f09905"
                    }
                  }
                ]
              },
              {
                "id": "70b1c284-e1f6-4d24-84fd-c4150c9fc419",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67699ada-e8e3-4419-b67b-e78df081016d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2979d68-af50-4ae5-b656-4d66ecaf6694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f1706db-1a46-4491-8564-726d2006a373",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f55df3a0-93c9-456b-a467-04d6140a4074"
                    }
                  }
                ]
              },
              {
                "id": "9daccbe0-bc38-4387-b25e-24c0e6e58656",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb46c0e0-5d0f-4ffa-8d2c-ef2fffab991e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8da093e6-8c18-4611-a9a3-2253a192ff93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f473712-a6f0-4306-a859-014335eedcc5",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2b5a1ba7-8c74-4510-9534-4674878c88f0"
                    }
                  }
                ]
              },
              {
                "id": "100a585f-cb1b-4d5f-9835-18a6a21593e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7680d4d9-a2ed-41dc-98cd-c7679f9d8f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7303f6cf-d9bd-41f4-8821-4664f9222351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed0628c4-62ff-4b7f-9c65-8488db27e178",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a25bf68c-74a1-4f50-8248-63560bb5a337"
                    }
                  }
                ]
              },
              {
                "id": "55fdc3d4-944c-4772-9302-ac591061004a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28d6c3bc-da21-43bd-80eb-9626e236df86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9635e0c-ca27-4940-81a2-04e322788e7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5fae7e9-ef96-42fe-b19d-d538b2d0687f",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "e9fbde16-9747-46b5-8290-cd69e921ffe7"
                    }
                  }
                ]
              },
              {
                "id": "dffbb7f0-2c99-404d-b59b-3fbb99ae69bc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "352e6751-4b98-427d-84a6-08ef90b882b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48f558ce-2610-4c9a-a6b6-bc2a7552e88f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6fb716-d3e4-4408-a88f-d79b297ef09e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "114d429d-91d2-4dcf-888d-d5241e9f8227"
                    }
                  }
                ]
              },
              {
                "id": "19f2afc5-982b-41f4-a7fe-15acce637bb1",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbb2e0bf-9bc6-4ecc-a668-0af72041f043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c83752af-a5db-408f-b525-c02a7d62661f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83837de-d8b2-4334-88ca-b6aaaf79683c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8e29d919-af1a-4e5d-8dba-edbc778e80f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a225a74-626c-402d-8596-6c122f8b86d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb9776f0-067f-48d0-ab32-b5e620ba0447"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1c15a76-4431-4a39-9c49-e385a375af70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcdae256-8c6d-4be4-a133-dd5dd44e9c82"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60933471-2def-4821-a109-b1889fbd0b84",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "9b224a8c-089c-478f-9112-b9d01ae51ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3381986a-5580-4497-aed9-196a23b3a1bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9355d3a-ebb7-4156-90bf-ebf6248c009e"
            }
          }
        ]
      },
      {
        "id": "1822de42-fc12-42b3-ad13-fd6ed8c5beba",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7519dde4-7d93-4b8f-9c44-299d58f11099",
            "name": "Negative Testing",
            "item": [
              {
                "id": "333a4356-c741-4640-a0e6-596105634065",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8eba299-59a3-48c7-9627-37d28fa3018b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8bb323-9bc9-4419-bc31-9ca8294b5825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9bc2dd-401c-4d1f-870b-25f9e4010f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3dbfe6-9678-438f-a867-4dd971d571d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e05bbf7-2d13-41e7-91d2-f6c6a4fd78ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2779a1-39b3-4160-a150-5ed51af6f1ba",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72807d34-e8fe-43ab-b183-5ceb34c3040f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "abed7e85-e76a-4ba2-99a4-b66f57bc2601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c5cbd1-58c6-4125-b6ce-98995ee97c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d91accc3-024a-43c8-a37b-932c4f48073a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48c6cbd4-cf23-4ee9-a067-7aed75c17795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c712b4d2-1e47-4e89-b6b4-40711b445583"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a4785ee-969b-4b92-ad3b-50fb5ce136c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac486bf6-8a4a-4b58-9bd9-0a76fe8d39f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f074b3fb-fcff-4e6e-99c4-6165920165a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "778c3f23-75ff-4f30-8b62-fc54b7b8b55c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28a0daf1-f3cd-40ab-ba4e-937d4cefd463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1b7263d-94d4-4f16-b1f5-84b9c8166374"
            }
          }
        ]
      },
      {
        "id": "6cad2ecc-4f35-4997-91be-e820cb32553c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "99eae5f5-d13c-410d-b39c-ea03d85f01de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac15b27a-47e0-42d3-8944-5a0fa316be66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79f36505-c92c-46a1-ae18-5ae377f4f5b9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a77ae-0321-4e57-bea1-a3dcdc4108ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c34184-7716-4967-a518-c3991785bdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67edadb3-5dfd-42fc-a126-df2f2f2ad09d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bb8b17-485e-49fe-ae7f-4f32dc799416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f992d5-a2f5-4e87-a313-ea5b124e0b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f53c12-eb65-4395-ac31-279a5b6bc79b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a606559-b663-4000-9e00-7f5f15a9f34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56edd79b-6a75-41af-ae79-53f1da12fd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bce5b1-2c29-4165-955c-557e1c191190",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e2ec50-6bb2-445d-a30a-1efa5655c533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6320a212-e0e8-433e-a91f-2aea2e47094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe998bda-4c75-4f64-9b7d-4ab1dc0512c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6386625a-7671-4220-9d17-90972db861dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054471a8-ef38-47e6-81df-341ede4ce78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1134b28e-67dc-4dcc-a7c0-1f27a4dbaab1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6c2f06-792c-4c54-beb9-45776847eae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c2b415-5a69-4337-a392-cdfc94b8eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff82ea-2b4c-4205-b047-3eabd6df6d73",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1204145-5d66-4399-bd41-08b902ae1adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954ff002-73fe-4578-9f2b-c13bf469afac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0649706d-eff7-4ad7-a778-1b73bdc362cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc1d674-90e4-4370-8149-f0458b47ff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ed1202-0a75-4fd9-bc5a-740643fb2e00",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec4197-2d09-4e71-aea6-85de8bf3b496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06301779-187b-4253-8a02-7766f9a775ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d46403-547b-470c-8968-db26633f6c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640f3bda-f3d0-481f-8c9b-f314b9008297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71907a0d-aaff-42bd-8a44-67b2b3eff575",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e933f556-8c84-40b4-bd9e-147bb5d5ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cfe7ac-c66f-4f43-8c7c-1340efe74e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b3048-883f-4e02-a02a-dd6b45f2d340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368fb13f-44bd-4ba8-a633-364b257f022b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079a82f1-d7b8-4857-a26c-4a6829380d4c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a0cf3c-e415-4c2f-9686-42d5dd97c965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bbfe296-3d66-4c8f-9f5e-1d99a4480b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f01ee-206b-4ce3-8520-4bf222fa6dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822d1c26-fb23-42cb-b180-ff6cbf3d62ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2be41a-0fd7-4ac5-b51d-468cf4d5df1b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13789e7e-9c62-462d-9c0e-aaf2850cb1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbd6a05-5f52-4018-b13b-10a66f7e6d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d74092-7fa7-468e-bfab-861dda1d2e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec441e5-8abb-4154-9f74-5624046502c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac6586b-c63b-4cd1-b2e3-e86b7695a27a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b01109-b4fb-43d6-91a3-c750440c81f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9882c7eb-1f5c-4127-b42e-63e6469c1521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee591b16-2d25-42f8-85a3-4d26b09cd068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec10690-3a14-424a-b45f-5a49dd1c9472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d44a515-fac6-4311-b1c6-fbd142984377",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cea8c11-4637-45e2-8e91-9ddf2f97dabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b32312a-a5bd-4801-b80a-e0e34114dd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4ff13e-3226-4835-8aa5-82c504cd26cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3baad9-55a6-472c-853d-fc88f066dcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cd8852-336e-48e1-8090-f939917df2e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebacbd0e-e06d-4fd3-a8d8-84a79b25d132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60baf800-9329-4582-91d9-8d2c66aa713f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df399d7f-ad38-4ca4-ab9b-610ccfd494b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4552ef0-3992-4428-96fd-2fbdbc582d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2135e040-57dd-42d9-9b94-426a4caedf72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900c9586-4ea1-4c86-beae-9399d9499922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801e9756-3e72-463b-8de4-b2f9587f9ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33d312e-a2b6-43c8-8f34-3dea272ac0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0d5cdc-4bbe-4cfc-95b2-0629d5bd700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730c5c39-5af8-499c-9bef-110921ad3473",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcddf7c-2af3-4587-870c-1742a06375ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcce0db-246b-437e-87af-c7fa8df33b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fe92fb-d77a-4c39-a79e-e8ff20cf62fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766eaeb6-3dbb-4abc-8b53-8a14ba2ef6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be76eaf-9d62-4594-b02e-f0f0505fd75d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0577196e-519e-4a05-aff6-feb79e75f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d1fbde-53eb-4229-b53f-9ec09badce97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724cce38-59b4-4592-ae8c-3c733724f771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547aff3d-86f6-4a7c-830d-ed07931cff3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914ead6-4fff-4825-8c3b-b501ff383c8d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a41afe9-076d-4d84-813d-72f08c447777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e7a6dc-fb43-4184-870e-96e3ddae59ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85728361-96ce-4ddb-a5a6-d138dbc91dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d730b4c-83de-418e-8342-8c1abaac66df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888deccc-f203-4c39-b95f-60018f85aa34",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbdc424-449e-4d51-a6aa-b5e84842db68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c731fb-0f20-4a69-a2ce-79494cd4c76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f16e74f-39dc-4ac3-99fb-0f903b744f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2588323b-bc8f-4b6c-b264-0f46e320dfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d5c19c-5ee4-4769-a187-22f20395c696",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01020b9-2003-4862-96aa-924f4ab4dacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15313b02-70fa-4956-ba81-b82bc4936352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d785aef-48d9-4bb6-92ec-af00f64d5a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2edcfa-fdfa-4813-9c61-1518676aaf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed2cefa-1d51-4625-9948-0e702ff1ff69",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747460cb-1b4c-4d5b-9be2-4f40bb53f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331c6f0e-0d44-461b-a378-ecb750a0be6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecc8f72-8664-4191-81a4-4e1946f5952a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3881302c-6b9e-4d51-9417-99b45bfcc43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97236c38-3d83-4467-bf2b-625b55915b1c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b1967-4e2c-442f-b09d-837716c41418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875d0b0e-4855-410c-86b5-4515ab4556c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f37147a-8206-4fb9-aa1a-c71fad4f53f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad10b804-e3c4-4b96-ba2f-d897ab56ad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e646710-8555-452c-a5b7-4a7c73b1d019",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd7d205-44d0-4016-b860-5365a4850920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e97a408-0ad4-4fed-913b-28c5d4341e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644bc322-fea7-46a6-a2ed-68d895cfb7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa3586-b6ab-40ef-af10-1f2532b8da70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cb3dc3-31d9-42df-a713-fb4586a91004",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463461ad-1429-42c8-bf91-d09f06459521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4037b51e-38f9-4cee-8071-32be2b13ed6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897fe308-aae8-46ed-b752-aae1e171e204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409fd4ba-372e-4c73-85bd-e3b191f44681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a4a929-08a2-439f-ab96-b0a14b61dc7a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1f72b1-39cb-4de5-9057-b4e1f5dd09cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2b732c-0bc0-4772-8382-211c081dbb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9596ea2-8acb-4dab-8bd5-46e0a76e93b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a32fac9-adae-4d05-b80d-249544503fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c5fa26-e40c-496e-b76b-c38ca0ba763f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2f53cb-a9b9-47d9-817e-0d304950591e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957bc8f7-459e-43cd-94ea-629773272f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf4cfd-33b3-466e-b39f-a4d61a9a724f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a41d1ae-65a4-4c87-9683-095dc18dd82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4274d9db-ccda-4337-bcca-79dd1721b62f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060b0664-00a0-4c3a-908e-bc27c55af5a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db990716-1acd-48ce-8963-40d6e1116ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8fec30-b1d4-4471-8329-bc6c676956ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3cdb72-2996-4b93-96e2-a1fbfa35e29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f637453-c9b2-4d50-bc3b-7ac4505a6c15",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d55db48-7cff-4ab1-a2b3-11a78836d868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9360949c-bab7-4095-a403-5c43e29501b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c4531-57dd-4499-95d6-359730472941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f060be62-c04c-4e1e-8ee5-4b9806b905b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f865d9-a7d8-4022-849a-7e272392ede5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3718bdf-c53a-4cc1-8585-5a169d93c5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac307f59-58e3-4d64-bdb1-2408360c7e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a4dfbf-bbb2-4579-b246-593b8c58bfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ff5535-1ea1-4dd7-aaca-3e6aa8aec49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17347fc0-e74b-455c-a020-0aac9dc444a4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ee395e-fae3-4db2-b821-c80c1578abce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a47da2d-6c4d-4951-9210-0b5e43a24c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da15c408-f118-4b49-8be8-9eb5b7c5229c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3562364f-46d9-465f-9a00-3adf65815acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017a211b-6c94-43c2-a1a7-8c1549d78507",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f811286-ad03-4c94-aafa-7316f9f0e7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b128f1ab-b4b8-4404-aa71-053db58bca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a11fa2-26ef-419f-9661-68364e7bcd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a3f494-45bb-48d6-8896-0ca5e1a6e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1ebd5-32e8-4587-b027-dbaedc2df24a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeef5d6-cc01-43b2-b57d-a8083162d0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce3e60d-41cb-405e-8f55-247d9a2aa689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f7913a-b626-4d6e-b9f1-f5a1f5c1d934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980eae27-5bbc-480d-9ec7-d7f476eaa70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02c0bb-1c36-477f-b414-f12f6bf0e99e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12ec27-7d4a-4bbd-bd36-15fdf145a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad51883-8ab2-44c7-a632-c3f70f3ff856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4884374-8d86-433d-9840-13ebfde7d501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50ee05c-1f97-4f50-a7af-17fe2867a133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683f4adb-d5b0-447f-b31e-fb33e241480c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845fe900-63d1-46ad-a412-1002ef496a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8500f60c-3a02-497b-9048-1eb7852a98b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a996ff-27d8-470a-9b81-a747779e6edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2448bdce-0a62-4431-a391-0d33aa54590b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e76cef-da3e-47d3-a803-72eb0473294e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e78375a-8975-4042-a5d2-f025f7638d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5d6192-d706-43f6-a1e3-476bb353a4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd3f8ce-a0c0-472c-85a3-50c66996401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33983cb7-4ac3-4f25-acb0-97ba49fb2cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea97106-837f-43dc-b15e-31914cfb1cc2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d08ed01-33bf-4807-8dd9-319b329e1c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56bc0c38-61e6-4cef-a351-a444dc9a1087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b642d4-b776-40e1-9301-0fa1a7b67ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e853412-f6f8-496c-ba2a-d062ec468cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f144814-7c29-4751-abc4-18fed412d875",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d8561-5cb1-4b19-8af7-37c194899d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293f0d98-4b3e-42a0-85b5-508a1f2fcdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c1936b-d3d2-4faf-9a20-e3a8e48d037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033c4d24-a12b-42cd-8b66-76a464b57820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52897b16-8b56-4ed2-a04c-236b422b1684",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e1eaf8-78c9-4ae1-a314-771281397a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf48375-e255-4afd-bff8-a4243d6d4fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc759f1-c9b4-4fb7-a400-a19024f376b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38be72d3-b8d9-406b-8844-df2c7fe83286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac885c81-55f7-41c0-86cc-0d7f935b85c1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba90036-3d65-485b-8a57-7966723cf1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86a7770-c318-4dd3-918f-178b19c80dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d00ad-947d-4b12-b106-3e3d31bdc226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af41ff-c0ea-41e4-96b2-244081d92377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebe34a-5ac0-491e-9f4d-ea7aa93f5375",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107ff0bd-7135-4ff0-b91c-ac1829eb12e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9517cf-4377-4609-a62b-c3cbcf88032c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee64612-37ec-413a-8071-742553f6ede1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442ba98b-4aa7-491c-a5ff-ea71056c2220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd676ae-7657-40ac-a0cd-714924e2e4ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdd6e36-ade4-4e11-b8ea-8d88bfe8a13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8a23d5-e1bf-4281-9461-5efaa248b401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d0c9d3-ed5a-4b8a-9e27-6df354d19edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b211c-4aee-490a-898f-11488ab3282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9860a3-ec96-4be9-a784-925a07aa49dc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb392011-79e5-4102-bda8-6c11bc4f7641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde7e3c4-08f1-43da-91f1-f81b1e2ae2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf8b9ef-6943-4635-8779-cefca8d2bbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31183621-2d9c-4b23-94c9-d8783c8c0aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df3c2e8-3347-4035-9313-764174dfd4c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4173c3d-dcf3-4c44-ab1d-7be4736ef974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de618bd2-184a-4e9b-b23a-8eaf6b4c115d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d766d771-4c55-4378-b92c-8d65344eba2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d2cfee-43c5-4f10-bd88-458b22e3092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b658b4b3-d2a5-42b2-b1c4-6a7ba75a7a1d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34423b21-d172-4da7-a0a5-b03fc4d8825e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babc455b-6272-46f5-8bfc-a8df3a7a5ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4153fbb-783b-448e-90ca-49a29987b7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a5ec4f-116e-4770-b1f7-bfa68aa0beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf9e2e-0591-4263-aa8a-c63538529582",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3681134-3b18-4944-93ec-520e1a976261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371c44de-5529-47e3-b126-8a73e6436903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831b08ba-ad5a-45d5-920f-a1355d3232ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab25178-5205-45ad-8cc4-e0c3c456063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b6d6b4-9b56-46e3-90c8-2c42624feb29",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da204e9d-ac00-4f24-90d1-7bdf698843d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75f2eb8-fbb8-4d49-ba72-563b83ebc265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480bbf83-8b6f-4abe-bb63-069f04f7a6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96113ca2-b2e6-406b-bea7-4ca63559b6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af834061-79cb-4357-af3c-46c68d921137",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abba3379-df6b-4e85-9317-6323171f1b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93396c5e-a651-4df7-9b51-e6ce9d3c73cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b4d11a-8fc1-4b04-b42d-fb1624227741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04479e1a-5a3a-4ed3-9587-56497dac65ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ddf393-d4e8-4b92-8fdd-ed83f1e77973",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa60b3d-0d5f-411b-9465-855d42f6398a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb7c653-04b3-411c-9b1c-7d10880aa764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17b989b-a17f-41ef-86c0-d8dfafd27054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3089b3aa-d289-439e-a3fa-f3324dd82365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b247f54-b0d2-443b-9052-3ee1bc534db3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aefa577-9e1e-498a-8559-59af80322d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9136b7e-33b0-4ba5-bc7d-3e5afaf3670a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e245b2-5b1f-49ba-bdff-06a7c5f5e096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd731da8-9f1d-489f-826c-01c3447a5c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4043fef-fbd1-4d1c-9733-ee4cac30a9ae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e633dac-a36c-4663-8fd6-a6394e7130d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8f708e-6e6f-4d1e-b9b5-90df9d8811c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbe06e3-933e-4622-ace8-af5c37266271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1502f82-7ec7-4f74-addd-5166904d61c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ec134-25bd-4c3d-961e-16a9e310e798",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a99bdc-8ad4-4aa3-8173-49daea60dd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac6410d-6e4c-4eda-99c0-3e62ad248d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd4bc3e-5e97-400a-977c-62851babed7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fabda9b-92bb-4afe-a5cd-11357d4be974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2315ec2-244a-4232-ab03-92fffc5bfb51",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799bb4ab-cbd6-46c7-b5c6-b19697f48880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46ca42a-3169-494b-aab2-48a4343c7b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1bdc85-c1c6-402e-8f0b-db64aae50b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a68cafe-b8d4-4b92-b0af-2fceb12a2077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cb12a0-1df8-4c53-ad1a-da0dcce8064e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0558683b-ce68-44f6-ab02-b5786d2d87b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a83590-d493-4cd1-8f1e-e604ef185edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd1dc59-8630-4267-9600-983c0ee6f377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fbdc15-e6dc-49dc-9de6-c05b20a6ecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d631ba-1e1e-4b46-98a3-18d187c1d278",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150e7a09-05b8-4367-a9d2-04a91e95b362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171a4a8a-746d-4a1a-baf3-7e2dcb9575f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16eb3c3-59db-4c58-9ab3-7bfb6e0dcd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54dee37-4037-4adc-894c-4bd6dcf20089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be038c56-5000-49a3-85b6-81defb521e15",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b3c2f9-022a-4346-984c-c2ab16a2cd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533d4a99-ec61-40b9-a720-81efea7266f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dae4e7-67e6-46f5-971a-97db3efd08f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a059a6-6b73-48be-894c-a026251c9593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9facfb5-fae5-414e-b9a8-283fd7049134",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c114459b-5bfa-4ece-8c4b-83a33b486b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b127ebb-1480-4d70-8b0d-49e97c071b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55740c16-b9c5-4265-a415-261352dafe3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbb772a-91e7-4649-86eb-07915a0e7882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b4f7e3-b32c-4c51-8528-af5fd323c3d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aa23fc-497a-4f55-8ba6-23a1548991de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d6736d-268e-4b61-b6eb-17f9f388ba32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba325a-7a97-438f-9c98-0280054b4847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843469c4-6a2d-4eb9-88f2-768206af2709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4eb149-6ffe-42ad-971e-fd5da7d0a079",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05f8671-22dc-4d2e-b17b-00f83a76bb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b832005-cc0f-4bb2-8793-263a322f7f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76927321-b5a5-421b-8036-2f35b1b76eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a96a25-db5e-4b4f-ae0f-9ccfce3946c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c70ff0c-80b3-4b57-a846-7396293dce62",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d2e5ef-6233-41e3-880c-127980c6fa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182f0946-6131-490e-8430-1bbd39f2df10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c23153-f0e1-4c2c-9143-947c5d06914d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01916a4-a177-4fd0-9a4a-4100fd674c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfba919-dfda-4140-9fa7-3d6570868d51",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a2e3c6-a46c-49c8-b0b7-06f6d4df4fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ed12f0-6a6e-4376-a885-a772df4c1210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e2b26c-b784-4538-aa9f-fa69ec32168a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244e529c-cf94-41c6-a65f-2cda92241d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd58361-00fc-41e7-b898-2b1efa858ae0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2a5ea7-7254-4b93-8848-ef344dafbce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcdfaf8-d7db-4bff-a995-87cf98a3a912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84551ec-7a84-461d-8fae-edbce5dee531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1046212b-9c41-4281-a482-eb69ce87806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc3b0d6-203e-411c-bf85-85d8dff8473c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c202b18-b4e2-4ea4-8b48-fdf2c8bcbbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfa54ae-9cb0-4031-a1bf-fde549aa9baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77a8ea5-7fc3-442a-b5a4-cc78f707b01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c05857-8cf6-4136-9352-3fb43af255c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cf8e18-cb45-463a-9dc5-8c07d7ba1a14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d142548f-5a11-4442-a70c-284ac445182a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c831659b-21b9-4c90-9311-e24a79d7e35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4237bf45-1849-4230-b477-476ecacb5b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fbef0f-625a-44d5-ab7f-4ecdf5dc39be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167ca9b7-357d-411b-b5bc-fda439906577",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2fd06f-fac2-4a93-a272-f38d7d1d8b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc2359e-24f6-4aa0-bfba-d754c507d350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7be65-2049-402c-ae25-9bdee9bd3de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f809e96-a6df-4771-9154-cfdf0c6bac8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe23c75-342b-42d7-ad08-748619a8696c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a648b7ca-fa64-4fd1-a4c5-a2b259f326d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9539c5-c3e8-4801-8e95-b4cd3fe30e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b748b-407b-4dbe-b65f-222f7df8320c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef395d78-14a7-4b8e-9efc-d7833aad20d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88418936-82aa-4fcf-9390-38cec30b4b6f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e51c3f8-3238-46b1-84ab-109e94f9e866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5480a25-144e-482c-b3d2-52d9b5bd4462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8254ba-3c37-4394-86bc-4109bd8b9162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd2e142-d0bf-4347-be47-d53630f78b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc52b146-a0d4-41c1-b95f-7547a9897478",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89eb6c-0ebd-45c3-b82e-a16fd50c089d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b77cc7-aa8d-46e7-83de-f8cc0b0d96d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233db373-0772-435b-8272-826b89d5c996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b4bf36-0fe5-4750-bead-4aa68d1a5c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b50356-f106-4a6a-b7a9-347a9cbe76f8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ac815-a886-4a4a-b0ee-1acdf0de637a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92087083-4a46-46a4-8b50-38a06397eb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9899fe1-041f-401b-8c98-851df78ba6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3344bfef-1761-4a2f-b3ce-a67c280e5ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd26efb-8f3d-46bc-8979-cacd7628a1c1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ca3be-d305-4f1d-ac73-69cbda0556ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a46a8d-6869-4416-93ea-e9319723515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3717e67-249d-4c14-912f-fb894d0cb6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3edc60-540b-4d14-8f0b-80b000ddfd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82d4be2-2d19-4fdc-81b8-ba262712938e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf7d377-e9c3-49a5-b55a-ba27fa10e349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b26f6e6-399a-470c-953a-157e03827e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b445f-ac91-414a-a7e6-ee6dafa48f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1088a2-7394-4efc-ab7f-5ec30491c2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041492da-527d-4c92-948e-f2f7b879701f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c688e9-2b21-4a33-a92f-dd87dcd4872b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5662f96f-fdef-4da4-8a29-b58279081e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bc112d-c020-4c13-84c1-092b168c420b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6994be56-bf66-44af-9b4b-d0546eca7f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9434944d-fe2b-42a6-9fe8-4f70e44b88f9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327afd3d-1433-4e77-a91a-9217fcca6ce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f4c032-f54d-4868-be25-74b313211950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d386f89-45d1-44f0-b5db-327eee961950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a827f72c-6f34-4055-9bfb-5d0b7d95314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2dee1e-20c4-4165-8835-f599ea21496a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb3730f-4a22-42b8-9621-fe1d33dacfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c0d23f-7674-4d18-9c3d-9abcc1f8f59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a3904f-b284-4004-a813-a4fe5905c95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e7aeed-722d-45ce-9fe5-0cae5ae41ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f303b5-29ba-4a2b-b5f5-1c8feadcf35f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f416475-ba4b-4c22-a094-7c3f6f21fb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea9a101-5cb0-4fc3-bea0-b299332ac0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed90b104-3786-4cfd-8fee-12c265f51ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009d39b1-27f4-4113-8d33-ac442c112dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3099ff-cd58-4b7c-875e-d17885421411",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1900413-37f0-4888-989e-436928fcef1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e773c5-10ae-4ff1-a16c-8fc051048dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d420a6-0a8a-49c3-b76f-ae841adb52ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503ae144-f6be-4caa-8dc3-fdf82a5f9062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a85b2e-6d59-4b85-b974-80e3ecd2d3cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ec4df9-568c-49f8-9177-88d97df47d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d146dba8-a400-4001-bec8-804a96cb701a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d3c92d-7520-4af9-bc4a-3bdb9493011f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc6ba29-ac6d-4321-a784-92d0209e9986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5190a38e-fbe5-47f7-8b0b-30069f245277",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b0d88e-e1b3-4e14-8b17-a8758af62627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07b2db9-a90b-48f1-b721-6a0faa143ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267ac459-5111-4c10-8288-47283338bd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040caf4b-00c6-4fdd-9dc6-79cfe9c8ce4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf7980d-f2f6-4e11-9576-813675c708d9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b15487-f56c-415b-8931-15fa057fb224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254f6fa2-7775-429c-8a9a-a9497a6b4806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a118ec-3ba7-4f54-8155-bc8fd47d145a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6372760d-fa7a-4957-b6c5-b7077ac74f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73fd716-8bea-4710-bc33-2ca82564320b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cb3b76-d846-4e02-8363-57e0d8c0ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebc8ec2-bc11-4b39-ad97-80504b48d81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4ec6c2-5eee-4832-9967-d7e79de90f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f10390-7937-4d6f-9710-af1999ace3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4916417-ba8d-434c-a434-bea03fc73d26",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6569ed7-4d39-4683-8a91-4bc12fba957a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17a374c-2fa0-4da1-886b-cb8fa359cb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463b92c9-67f6-4a99-8e2f-9262700619fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d4bc5d-b169-4c6c-85fc-29e4aacc8606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0898ab43-55ce-4ecc-b85a-795ecdbb74e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6870f466-c0a6-44e5-b27f-1db2581811a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f3636a-939e-4eb9-95a0-6b97acfcd049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd641b8-ba4e-4c24-be7f-8c39217ae433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa847e4-589c-4193-9c5d-94563f01016c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ec6b30-3fe0-4798-bd34-3f16f7c78e32",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393a621f-bfc4-48a0-a47e-37f5d5aa7af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b198358-df80-414e-8940-4cff44f2e022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac750d2d-31fd-4386-bcf8-1ed3d045215b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70703242-8bb8-4d0f-aa8a-8901d73fc1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f5623-d9d8-4630-a294-3d2cdfc21776",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f71941c-a258-46cd-845d-fbdc606689ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8989df-6a21-45f5-a548-c4076fd5846a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a13b6-246e-4ce0-bb3e-cf74b520b01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f420975-119c-4424-99aa-6cf9128f4f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f2eaa2-1bdf-4541-81fd-3c744671e316",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36eecc9-5c82-44e2-89f9-3ce8d0a39b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e40edb9b-dc94-4afd-acfe-8cfc36dab3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5863ddd4-9223-4a67-9d4e-e850d15e4e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae48fb29-7552-4b58-ad70-d1062c202e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debcbd48-4aa8-4ee0-9e7a-1100f5324486",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03693810-af30-4ba4-81bb-e200ce620900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c0f1ef-b28b-43f9-b975-feee0b4f5a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce20c081-8a38-4d5b-8d99-e60768780b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c736977-5798-414a-b1e4-cf4e311e3d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0096091f-ebdf-4e67-b4ae-4dab0f0e6e25",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184bee52-93c9-4b59-8cb9-d6a316d48130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c952b7a0-9aba-48ce-8aeb-2e644fc8ba8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfb5c02-8352-4a3b-a50e-d80e9a57858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57613b28-3caf-4b75-ab49-eb57dce3722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d900a76-b6e7-4139-a228-79a836a04dcd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d1c8af-d01b-41e4-acb5-8e3422955e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5df7954-214c-45f2-86bf-0c3ad5c44350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6ad320-097a-4769-8dc9-0119f90f0ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f477fd-e4c5-46ae-baf3-70df37e2fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6738a675-4fdd-4f3c-87af-da27c4480969",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4209030-9057-4710-921f-8782e84a61a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9b5c81-c8ee-46b0-8cd6-608011ae154f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b5bd2-cfb0-47b0-ada4-3be71be08110",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eef3913-7b75-4aa4-80ba-7e932e7d6f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6161dda-2e4d-40b0-b7b3-3e2ccd7a6033",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5602b8e6-6b79-4203-96c5-795d8a208e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3899837-7868-4196-bcf4-979dd443e85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7164db2-c4e7-498c-8b6e-8361b810dfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30511d2-0780-4bf5-883e-4abdd33168bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05dd6e7-f3c7-41b6-bf4e-2c6eea5fed74",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d2b74c-34aa-4e6b-a3ee-2707c585e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "324b3ded-9da3-4d28-bbd9-18c12e3e0128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d4b457-ca7f-4b33-a8b7-b97cf842a468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7368764-f040-4e26-a85b-07076a08925e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcc290c-e1d1-4dfd-a2a6-8df36cf5b2b4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9487668f-bb8d-49a7-b7fc-7d8068ba02d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dfe468-879c-41e2-ae9e-cd9f68e62bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d35666-e16d-4bb9-927f-233501fe835a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac52e7a-8558-4bd4-ab80-ee2a58a6d1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f8d801-1f36-4539-b243-cf30aba4b000",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55eb4e2-aa73-4be9-98d4-4bddfb2c1f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8610df-8258-4275-b974-ecaf9aa0f560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c79238-1778-4c64-93e5-9efe3924050d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ad8a7e-1f3d-4292-8c68-9977cef6b013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48324353-5701-4b7c-a1f3-1bac02b9518e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9488557d-68bf-420b-b86c-9648e4400ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9136a936-198d-4444-813b-21b74946a055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f827c0-c445-49b3-9271-e1ccd7cdd453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99edd23f-20f1-4f62-9da0-b8dd39d08df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fa981c-c8d7-461c-aca6-3c0bd22ac8f7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e1f373-1557-44ff-9cf8-e17da69f44b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7bd4bb-7b03-4e3b-919a-1af809071f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c71f75-207c-4b81-9a4a-11846c429c0b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e552a333-9178-4b54-a76e-48bd32b2dff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef42a40-8700-40a9-b452-03e2fbcaa34f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500b5221-4c0e-4d30-b21b-62b11354e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3078dbe-2aef-4115-ba6d-bca6de247183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef6f56-6cb8-4169-b811-965d2f81f1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50b52ea-cc11-4504-8862-092c55a157ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b82547d2-32c2-4a9f-a05b-d68473539923",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e57e2df2-c0ea-4f83-b315-29ef160486c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67f7c47-43c6-413e-b143-628f42d1232e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b9c1bc8-a62e-467c-86c8-c5a58194c8d4"
                    }
                  }
                ]
              },
              {
                "id": "4fcee3b4-84bc-42b2-92b5-cbaa2944f275",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af2b4e3d-705a-4921-8b64-456fcefcc2ac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e242c4-cee3-4943-ab93-1cf444b6b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fa58db1a-da78-4b5e-9b13-dec6e06f2607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057cc868-1283-4f5b-8028-c384eaca8e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35e354c7-017a-4f8d-9f20-8cb49cc69889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe83df8-dcc7-49d6-950c-e8d1fdd3741a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddefdf0b-142e-4372-ac7b-acd75b076d84",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "45ccbeeb-ad45-4013-b80a-7b40be89b65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f5cb70-9af8-4aa2-8205-9dbbc3eca0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f915e1e-7a08-44ee-b6e7-aa226d6d9fe0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4333a209-39a3-4fb8-9700-6926d7f24f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af8d6f0e-a66f-48d1-bcd7-9939f693fd1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "228f584a-90fa-43d7-898b-d5fcb5c1a9f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aae4b013-1966-40d7-9b2c-0cbb12626411"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0972bcc6-de1b-4a5e-96aa-8c26e771d86a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9d040862-cba1-44ce-b159-e963b529e2dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0beb88f9-dbe4-4a06-9eb4-d917c82869be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbfb701b-7b96-4fed-b505-a0e21a731bb8"
            }
          }
        ]
      },
      {
        "id": "a0dfd8ac-f1b4-4469-8178-692b63a49098",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8dd01a5e-5b43-49a7-a16b-24484cd32695",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8249b397-e640-4731-a46c-293deb2d01b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70f0b164-46fd-4e66-80d2-ce7945cfac41",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c66418a-ec9a-4339-83eb-d8801c2aee5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f60127-e8e8-4264-beb2-3de25e8fe224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12420f6b-7a88-45a3-8336-fb59b2216e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bd6178b-8729-4a25-b0d0-b74aedc9f0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec94013-d540-44f3-920b-52e234da6ad1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c16143-ff36-4c96-ba63-bd6e8039b677",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "54581c63-e1d9-4539-b4c5-47391127dcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c6b1e4-6641-45d6-a632-df8a0b50ea3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46fd5635-b318-4f5e-a959-7f448aaedbef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e05d5ff0-4f5c-4ed8-95c9-d49e843116c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff1b2a57-8bff-4e48-bbac-4012d2a28361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1618ace-31a9-4424-ba27-48d6d35801f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4cfe6d4-4443-4043-94f7-888cf12ede00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f710bf9-7735-4a55-a54e-136612cfa31b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "d81fa85b-bab5-4658-8004-f79345efaf28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "736eb5b2-2b1c-4e6a-b7c6-a89aae0f5047",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "294bae76-b5e1-47e5-8e13-56c4e90c32e5"
            }
          }
        ]
      },
      {
        "id": "b89868f1-f5b8-45bd-b6a7-c77e325a6a68",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0314a8d3-9dfc-449b-b621-cd70095ceec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05f4aee4-6830-43eb-9640-db2dcbf0f5f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "357ce751-549c-4c2a-a27e-8b04a2759f65",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4f6d8a-8998-4406-8b9c-13417edd80a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9820c479-a4b5-4f0c-8c84-324df09fcd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f71582-bba6-4aa5-85b1-6254b1831a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e347534-b60f-46d5-8729-fb9a4f8188a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0307d48a-f36d-47d1-8505-aff6ff0d9597",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f84e81b-bcaf-45d9-9ba2-07aef66712e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a4fab885-0e20-4c2c-8cb0-7b81ea47c056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bc126c-a1af-45c1-ac43-f7cf0cb21f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dccdcdb4-63dc-4afa-b8c3-8a02031afe71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ebedac-e230-4e7d-a3da-43cc8cdad2b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b371cb09-7b6b-4c51-98a5-a1d2eb93613c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03f2d910-115d-494f-8635-73183732d2a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08afc0ab-753f-47b5-849d-58bec52f552c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71b31d29-0d65-4f41-a339-caaa12459117",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "9d3e3f9c-129a-452d-9ba1-0df1319817e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da252dd2-0573-49e0-81c9-18c14b0f38dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2b37df3-387c-479e-ae91-329e0ce0fb15"
            }
          }
        ]
      },
      {
        "id": "8d249441-c878-4488-aa6b-a7a165cd8f96",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "154859c0-68e7-4b8f-a639-c7d43cda53e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d73f39b-7b02-43db-998f-a386dfc8366a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1b0f531-e409-4059-aca1-6fe8d0ec72df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21ca52b-1793-415b-b455-aa7a54c5698f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5148cc58-5168-4c6c-9b50-bd85ee8ff7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef65876-f31d-4aa4-8a52-2e73e2a2c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcee8efd-690e-4160-aa29-0d9e4a277ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2b1f5c-f208-4b5e-8b27-74db6bc028fb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef86fc28-8597-411e-9c7b-c4e7d06ee2f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "d6345790-4f19-461a-8d29-26c06b04eeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf42314-2596-43f4-8cb7-a44d0f4a0d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be3f68a8-2046-40d1-a8a4-501ce28a5473"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da726b1-d74e-4af5-8e1b-8275f8ea39fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8f26d69-0b47-4854-949f-b509fcf01ec4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9c7b2a-f97e-4e0f-b514-0c33261dbd8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fb4e544-db02-47af-8fee-c6a4ab41a8fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d88d7a2-5643-48f1-b723-d969f854eb36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "d33968cb-087c-47cb-9405-cdb2857344b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c5c3f95-5a56-41de-a2b6-ee38d25bc311",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0007df09-d4b4-4591-b4bf-b3cf3a5b252c"
            }
          }
        ]
      },
      {
        "id": "7d6058fa-0554-45fa-bcdf-32095de64afd",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "f513e93f-d591-4806-9bbf-ee78d7ca8434",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 85.335,
      "responseMin": 33,
      "responseMax": 930,
      "responseSd": 103.14660816042377,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663862029555,
      "completed": 1663862055647
    },
    "executions": [
      {
        "id": "4cc1b279-2bdd-4236-9550-32fde6ba08dc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c8aae0ff-c781-40f1-a020-bafe4cd5f1d3",
          "httpRequestId": "440a256a-eb3d-409f-b201-43afd7418424"
        },
        "item": {
          "id": "4cc1b279-2bdd-4236-9550-32fde6ba08dc",
          "name": "did_json"
        },
        "response": {
          "id": "ca9e7eca-00d7-4e2e-a7c8-0e1f280747fc",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "a6130699-eadf-4e13-88d5-e974635b49f4",
        "cursor": {
          "ref": "a9144256-d1fb-4103-a6e1-daba373d039f",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c643bc9e-acf8-42fb-9157-b974ba2af446"
        },
        "item": {
          "id": "a6130699-eadf-4e13-88d5-e974635b49f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "6448a6f2-28d5-4d0a-a5b2-b78391ec5781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6130699-eadf-4e13-88d5-e974635b49f4",
        "cursor": {
          "ref": "a9144256-d1fb-4103-a6e1-daba373d039f",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c643bc9e-acf8-42fb-9157-b974ba2af446"
        },
        "item": {
          "id": "a6130699-eadf-4e13-88d5-e974635b49f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "6448a6f2-28d5-4d0a-a5b2-b78391ec5781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5882c2c5-0763-4f34-819a-ca9d4114d8e7",
        "cursor": {
          "ref": "847d4079-3584-42df-ba96-b190a08d6849",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e59c236d-df6b-4b52-b6f4-bfe7b4b10718"
        },
        "item": {
          "id": "5882c2c5-0763-4f34-819a-ca9d4114d8e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "389654f9-95b8-400e-bfe9-2ed1fa15591d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 100,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4f54e0-24d4-49fc-b836-809a86c66bb1",
        "cursor": {
          "ref": "29b62b31-9927-48be-b04b-24b7d459b9bf",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "43e05553-eeed-4c23-a66e-7769ebc234ce"
        },
        "item": {
          "id": "eb4f54e0-24d4-49fc-b836-809a86c66bb1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "24aa3dae-1fd5-4f69-809d-8c4036f01ddd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79db22c2-35fa-4dfa-8e37-8a722c8d42b3",
        "cursor": {
          "ref": "4ca5f054-4a2f-4d1c-b3cb-8f82a480df60",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "26991ec3-df0a-4beb-a167-14a8db4a8517"
        },
        "item": {
          "id": "79db22c2-35fa-4dfa-8e37-8a722c8d42b3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7624ffb5-e774-4670-a97f-1109a7d69a15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd9bab3-13a8-44af-9936-755b5ed21338",
        "cursor": {
          "ref": "5d56561c-8c76-4ec5-92b9-c694eee4b5a3",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "856a62e9-61ad-49b5-8888-3a2a1b90d053"
        },
        "item": {
          "id": "cfd9bab3-13a8-44af-9936-755b5ed21338",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "65d1af46-40d7-4ceb-9cfd-a8ca599ea8e1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd9bab3-13a8-44af-9936-755b5ed21338",
        "cursor": {
          "ref": "5d56561c-8c76-4ec5-92b9-c694eee4b5a3",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "856a62e9-61ad-49b5-8888-3a2a1b90d053"
        },
        "item": {
          "id": "cfd9bab3-13a8-44af-9936-755b5ed21338",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "65d1af46-40d7-4ceb-9cfd-a8ca599ea8e1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3ebeb0-ba66-475d-a041-d779fab83cc8",
        "cursor": {
          "ref": "8cdef9d9-8e44-429b-b8da-055d3c7bd05a",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d97deea8-4976-4ad1-812d-da749e319f5e"
        },
        "item": {
          "id": "bd3ebeb0-ba66-475d-a041-d779fab83cc8",
          "name": "identifiers"
        },
        "response": {
          "id": "14da05f3-8500-40b4-85a6-5e71a6f92e0d",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "071862f6-6c84-4091-985c-0750450e8081",
        "cursor": {
          "ref": "f410ee2d-50f7-4ec1-8c39-2b1f9f540dc5",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4dda5cac-5c9b-4876-bf46-1dc3b7c727cb"
        },
        "item": {
          "id": "071862f6-6c84-4091-985c-0750450e8081",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc3bd172-acbc-41bc-96cc-b0fd7817bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071862f6-6c84-4091-985c-0750450e8081",
        "cursor": {
          "ref": "f410ee2d-50f7-4ec1-8c39-2b1f9f540dc5",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4dda5cac-5c9b-4876-bf46-1dc3b7c727cb"
        },
        "item": {
          "id": "071862f6-6c84-4091-985c-0750450e8081",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc3bd172-acbc-41bc-96cc-b0fd7817bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071862f6-6c84-4091-985c-0750450e8081",
        "cursor": {
          "ref": "f410ee2d-50f7-4ec1-8c39-2b1f9f540dc5",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4dda5cac-5c9b-4876-bf46-1dc3b7c727cb"
        },
        "item": {
          "id": "071862f6-6c84-4091-985c-0750450e8081",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc3bd172-acbc-41bc-96cc-b0fd7817bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8664be1-6774-46ac-bc2b-80fd7660fc06",
        "cursor": {
          "ref": "983f4226-7a37-421c-9539-605d48ead4b6",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af090dda-3a4f-4c30-8c9d-c72bbca4e42d"
        },
        "item": {
          "id": "c8664be1-6774-46ac-bc2b-80fd7660fc06",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b17c2901-6fd1-47b3-8b8a-1f2d233a1921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8664be1-6774-46ac-bc2b-80fd7660fc06",
        "cursor": {
          "ref": "983f4226-7a37-421c-9539-605d48ead4b6",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af090dda-3a4f-4c30-8c9d-c72bbca4e42d"
        },
        "item": {
          "id": "c8664be1-6774-46ac-bc2b-80fd7660fc06",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b17c2901-6fd1-47b3-8b8a-1f2d233a1921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e901b5dc-64c1-4e3c-b2e4-a7be9acf26fd",
        "cursor": {
          "ref": "342d3404-0b6e-49cd-bd84-b183e7be13c7",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a602015f-e278-4893-9a86-9afb2667f946"
        },
        "item": {
          "id": "e901b5dc-64c1-4e3c-b2e4-a7be9acf26fd",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "72001cc0-373a-4627-a8e5-b71219510af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e901b5dc-64c1-4e3c-b2e4-a7be9acf26fd",
        "cursor": {
          "ref": "342d3404-0b6e-49cd-bd84-b183e7be13c7",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a602015f-e278-4893-9a86-9afb2667f946"
        },
        "item": {
          "id": "e901b5dc-64c1-4e3c-b2e4-a7be9acf26fd",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "72001cc0-373a-4627-a8e5-b71219510af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf9e83-0010-4842-b158-b9227d4b8bc9",
        "cursor": {
          "ref": "ef9a8ed7-8c3c-499d-9acd-f3e8a01d9d32",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "36ae03ca-bde6-464c-b70d-bef1502a1944"
        },
        "item": {
          "id": "5ccf9e83-0010-4842-b158-b9227d4b8bc9",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "854a60a9-612e-4880-850e-dec50b4c21fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf9e83-0010-4842-b158-b9227d4b8bc9",
        "cursor": {
          "ref": "ef9a8ed7-8c3c-499d-9acd-f3e8a01d9d32",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "36ae03ca-bde6-464c-b70d-bef1502a1944"
        },
        "item": {
          "id": "5ccf9e83-0010-4842-b158-b9227d4b8bc9",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "854a60a9-612e-4880-850e-dec50b4c21fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a524c5e5-9589-4e43-ad98-224f41d8ab5e",
        "cursor": {
          "ref": "ee1d7e91-f289-4377-ba0f-83d8930e1541",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1647ece4-e589-472f-9cfe-db6e81c6cb91"
        },
        "item": {
          "id": "a524c5e5-9589-4e43-ad98-224f41d8ab5e",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "c42676cd-bb8b-4dbf-9e05-91296aa864a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a524c5e5-9589-4e43-ad98-224f41d8ab5e",
        "cursor": {
          "ref": "ee1d7e91-f289-4377-ba0f-83d8930e1541",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1647ece4-e589-472f-9cfe-db6e81c6cb91"
        },
        "item": {
          "id": "a524c5e5-9589-4e43-ad98-224f41d8ab5e",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "c42676cd-bb8b-4dbf-9e05-91296aa864a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bca072-907b-4c06-ad25-eb6fc80a8479",
        "cursor": {
          "ref": "291cb387-529d-43c3-a497-fa9f58f7f22a",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d9b8b4f5-6ce1-4e26-9b4c-01b08156baeb"
        },
        "item": {
          "id": "a4bca072-907b-4c06-ad25-eb6fc80a8479",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2c07590-2782-44d3-9419-ed47bbf51e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bca072-907b-4c06-ad25-eb6fc80a8479",
        "cursor": {
          "ref": "291cb387-529d-43c3-a497-fa9f58f7f22a",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d9b8b4f5-6ce1-4e26-9b4c-01b08156baeb"
        },
        "item": {
          "id": "a4bca072-907b-4c06-ad25-eb6fc80a8479",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2c07590-2782-44d3-9419-ed47bbf51e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ac44f-ba4c-48d4-82cc-c2d7a1a99985",
        "cursor": {
          "ref": "d3b0bbfd-8d67-4070-b504-9615b1a9eb78",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e80cd01-8063-46fb-97e1-c49c00686208"
        },
        "item": {
          "id": "a96ac44f-ba4c-48d4-82cc-c2d7a1a99985",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "c1eacdca-97bd-4a7b-936a-d42b61131e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ac44f-ba4c-48d4-82cc-c2d7a1a99985",
        "cursor": {
          "ref": "d3b0bbfd-8d67-4070-b504-9615b1a9eb78",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e80cd01-8063-46fb-97e1-c49c00686208"
        },
        "item": {
          "id": "a96ac44f-ba4c-48d4-82cc-c2d7a1a99985",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "c1eacdca-97bd-4a7b-936a-d42b61131e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76707ce4-c812-4ff0-a20a-dbff856872ff",
        "cursor": {
          "ref": "5f771792-a06b-47c8-a2a3-d8e0e5fe6af4",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "16968430-67a1-4045-90f0-8c05b7046f3a"
        },
        "item": {
          "id": "76707ce4-c812-4ff0-a20a-dbff856872ff",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "ec790ffa-1715-4f09-9f10-ed1268133cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76707ce4-c812-4ff0-a20a-dbff856872ff",
        "cursor": {
          "ref": "5f771792-a06b-47c8-a2a3-d8e0e5fe6af4",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "16968430-67a1-4045-90f0-8c05b7046f3a"
        },
        "item": {
          "id": "76707ce4-c812-4ff0-a20a-dbff856872ff",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "ec790ffa-1715-4f09-9f10-ed1268133cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d712c03-50ef-4c73-bcbe-bd1c5ac4bee0",
        "cursor": {
          "ref": "a932dfed-1469-4884-b038-a211bbfdc872",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1b3f976-15ed-4559-bd2c-96ba88976a42"
        },
        "item": {
          "id": "2d712c03-50ef-4c73-bcbe-bd1c5ac4bee0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "816eb77f-65e1-43a3-8a64-6fe7050c0915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d712c03-50ef-4c73-bcbe-bd1c5ac4bee0",
        "cursor": {
          "ref": "a932dfed-1469-4884-b038-a211bbfdc872",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1b3f976-15ed-4559-bd2c-96ba88976a42"
        },
        "item": {
          "id": "2d712c03-50ef-4c73-bcbe-bd1c5ac4bee0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "816eb77f-65e1-43a3-8a64-6fe7050c0915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e861033-6e45-4b31-9eae-decd1dfda760",
        "cursor": {
          "ref": "8da2d97e-e7c0-4187-8407-bb6521c17da0",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9725fb36-a579-4e28-981d-2acc3904634d"
        },
        "item": {
          "id": "3e861033-6e45-4b31-9eae-decd1dfda760",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "469b2d10-e408-485c-8e78-d13dd0c52098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e861033-6e45-4b31-9eae-decd1dfda760",
        "cursor": {
          "ref": "8da2d97e-e7c0-4187-8407-bb6521c17da0",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9725fb36-a579-4e28-981d-2acc3904634d"
        },
        "item": {
          "id": "3e861033-6e45-4b31-9eae-decd1dfda760",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "469b2d10-e408-485c-8e78-d13dd0c52098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9d12b5-aa15-48aa-b35c-5ffb48d7a7e0",
        "cursor": {
          "ref": "2e2b12f9-bc7a-4d88-ae86-ec07abbdbe59",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5314016-ddc0-4e67-a8c7-da05b0e907d2"
        },
        "item": {
          "id": "ed9d12b5-aa15-48aa-b35c-5ffb48d7a7e0",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c3b3ec1d-bf34-4719-8f73-0f818d3f7b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9d12b5-aa15-48aa-b35c-5ffb48d7a7e0",
        "cursor": {
          "ref": "2e2b12f9-bc7a-4d88-ae86-ec07abbdbe59",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5314016-ddc0-4e67-a8c7-da05b0e907d2"
        },
        "item": {
          "id": "ed9d12b5-aa15-48aa-b35c-5ffb48d7a7e0",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c3b3ec1d-bf34-4719-8f73-0f818d3f7b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653d480a-92f1-4bb0-8302-aaf0c73de252",
        "cursor": {
          "ref": "3b20347e-9ba8-4049-bfe3-a0226c9e9399",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86c24333-1133-4962-859d-bc6a7ee137e1"
        },
        "item": {
          "id": "653d480a-92f1-4bb0-8302-aaf0c73de252",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "06987809-09f7-47cb-a96e-e84625334724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653d480a-92f1-4bb0-8302-aaf0c73de252",
        "cursor": {
          "ref": "3b20347e-9ba8-4049-bfe3-a0226c9e9399",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86c24333-1133-4962-859d-bc6a7ee137e1"
        },
        "item": {
          "id": "653d480a-92f1-4bb0-8302-aaf0c73de252",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "06987809-09f7-47cb-a96e-e84625334724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22a9b1-2f0d-4b14-afe1-e927fd24901d",
        "cursor": {
          "ref": "8755a327-9cf1-4514-8a66-62cd759e56b6",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fee356ed-02ae-429c-8888-0bcf97248d30"
        },
        "item": {
          "id": "6f22a9b1-2f0d-4b14-afe1-e927fd24901d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "447b4091-5078-4d2d-90da-77ff41b66a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22a9b1-2f0d-4b14-afe1-e927fd24901d",
        "cursor": {
          "ref": "8755a327-9cf1-4514-8a66-62cd759e56b6",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fee356ed-02ae-429c-8888-0bcf97248d30"
        },
        "item": {
          "id": "6f22a9b1-2f0d-4b14-afe1-e927fd24901d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "447b4091-5078-4d2d-90da-77ff41b66a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf06636-bca8-476a-a0d8-7fedbe6d3dc1",
        "cursor": {
          "ref": "a629b74b-ec44-4de8-b2ac-1d5dde94788a",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55b1ed23-4a93-4a77-aec5-3eff30184134"
        },
        "item": {
          "id": "ddf06636-bca8-476a-a0d8-7fedbe6d3dc1",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7165636a-2f1f-4626-84f4-d1f33630c611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf06636-bca8-476a-a0d8-7fedbe6d3dc1",
        "cursor": {
          "ref": "a629b74b-ec44-4de8-b2ac-1d5dde94788a",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55b1ed23-4a93-4a77-aec5-3eff30184134"
        },
        "item": {
          "id": "ddf06636-bca8-476a-a0d8-7fedbe6d3dc1",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7165636a-2f1f-4626-84f4-d1f33630c611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632f7b8-31fc-497c-83ef-b350ef003319",
        "cursor": {
          "ref": "2ef18cc3-2db3-429e-9d67-c619235e2eb5",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7616aa1a-f54f-46c1-bec2-a60d97f33dd5"
        },
        "item": {
          "id": "a632f7b8-31fc-497c-83ef-b350ef003319",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "3257e2ce-512f-4d07-a2b3-0854146e76e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632f7b8-31fc-497c-83ef-b350ef003319",
        "cursor": {
          "ref": "2ef18cc3-2db3-429e-9d67-c619235e2eb5",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7616aa1a-f54f-46c1-bec2-a60d97f33dd5"
        },
        "item": {
          "id": "a632f7b8-31fc-497c-83ef-b350ef003319",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "3257e2ce-512f-4d07-a2b3-0854146e76e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07006a04-a48b-4a11-86ce-766892ba26b8",
        "cursor": {
          "ref": "b1b1a4e9-06bc-4f53-804b-9215c45cb4bd",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "79d8dc4d-a56d-4623-82a8-a6c7ac68d3ec"
        },
        "item": {
          "id": "07006a04-a48b-4a11-86ce-766892ba26b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eb51ca3b-ee10-452c-a3e5-2f024e8491b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07006a04-a48b-4a11-86ce-766892ba26b8",
        "cursor": {
          "ref": "b1b1a4e9-06bc-4f53-804b-9215c45cb4bd",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "79d8dc4d-a56d-4623-82a8-a6c7ac68d3ec"
        },
        "item": {
          "id": "07006a04-a48b-4a11-86ce-766892ba26b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eb51ca3b-ee10-452c-a3e5-2f024e8491b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e04678-10ef-4977-9783-e15750dce915",
        "cursor": {
          "ref": "50f0db30-4188-4a8f-9c1f-bbe820e438fa",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "846300e7-2e1d-4a45-bbb7-924952362891"
        },
        "item": {
          "id": "58e04678-10ef-4977-9783-e15750dce915",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a84173b5-3a71-4a98-b1a0-1c74687a66a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e04678-10ef-4977-9783-e15750dce915",
        "cursor": {
          "ref": "50f0db30-4188-4a8f-9c1f-bbe820e438fa",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "846300e7-2e1d-4a45-bbb7-924952362891"
        },
        "item": {
          "id": "58e04678-10ef-4977-9783-e15750dce915",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a84173b5-3a71-4a98-b1a0-1c74687a66a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc49cb81-29f8-4d54-9edb-7a4ec3b999a5",
        "cursor": {
          "ref": "f3f2b7fb-58ec-4217-a2f7-741431caae5d",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83a52085-2783-4685-b373-2aa1855fda3f"
        },
        "item": {
          "id": "fc49cb81-29f8-4d54-9edb-7a4ec3b999a5",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "806c9578-101b-4215-9b22-51188318b691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc49cb81-29f8-4d54-9edb-7a4ec3b999a5",
        "cursor": {
          "ref": "f3f2b7fb-58ec-4217-a2f7-741431caae5d",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83a52085-2783-4685-b373-2aa1855fda3f"
        },
        "item": {
          "id": "fc49cb81-29f8-4d54-9edb-7a4ec3b999a5",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "806c9578-101b-4215-9b22-51188318b691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5240e6-cffd-49e5-ba6c-da79114e9db1",
        "cursor": {
          "ref": "6899db18-6231-42a6-af08-2718f9a0f2c8",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5b936490-d4c8-4ec9-b81c-8bba8e375ad4"
        },
        "item": {
          "id": "2b5240e6-cffd-49e5-ba6c-da79114e9db1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bd81cbf6-e626-4c3b-86cf-8b5825e7abd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5240e6-cffd-49e5-ba6c-da79114e9db1",
        "cursor": {
          "ref": "6899db18-6231-42a6-af08-2718f9a0f2c8",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5b936490-d4c8-4ec9-b81c-8bba8e375ad4"
        },
        "item": {
          "id": "2b5240e6-cffd-49e5-ba6c-da79114e9db1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bd81cbf6-e626-4c3b-86cf-8b5825e7abd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51da442f-30cc-4e49-94c5-a50418d2f190",
        "cursor": {
          "ref": "34fcf5b9-3675-42d5-81f8-dc36dfe24da9",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "777f5a99-eda9-4056-a816-308cc1441a95"
        },
        "item": {
          "id": "51da442f-30cc-4e49-94c5-a50418d2f190",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "72a603d4-2fac-4dd6-9720-52bf63135370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51da442f-30cc-4e49-94c5-a50418d2f190",
        "cursor": {
          "ref": "34fcf5b9-3675-42d5-81f8-dc36dfe24da9",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "777f5a99-eda9-4056-a816-308cc1441a95"
        },
        "item": {
          "id": "51da442f-30cc-4e49-94c5-a50418d2f190",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "72a603d4-2fac-4dd6-9720-52bf63135370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc6ff0-a3ad-4804-bc69-303b8a9fb511",
        "cursor": {
          "ref": "b33725bb-0eb1-41d0-9e84-2102dfb95020",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d30bf5ce-45af-4ad6-8a49-95641ce87fa2"
        },
        "item": {
          "id": "42cc6ff0-a3ad-4804-bc69-303b8a9fb511",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "df7b5c17-e3b1-4190-8048-8e93e1ed716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc6ff0-a3ad-4804-bc69-303b8a9fb511",
        "cursor": {
          "ref": "b33725bb-0eb1-41d0-9e84-2102dfb95020",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d30bf5ce-45af-4ad6-8a49-95641ce87fa2"
        },
        "item": {
          "id": "42cc6ff0-a3ad-4804-bc69-303b8a9fb511",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "df7b5c17-e3b1-4190-8048-8e93e1ed716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96e5179-e789-41d1-9586-1d1d8d096c05",
        "cursor": {
          "ref": "2e6d631f-ac44-411b-b82f-818291b93d0d",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "359445a8-1ebf-4a81-9956-e3004511576b"
        },
        "item": {
          "id": "d96e5179-e789-41d1-9586-1d1d8d096c05",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "cc16823f-84a9-42f6-a0e2-5308b2a83ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96e5179-e789-41d1-9586-1d1d8d096c05",
        "cursor": {
          "ref": "2e6d631f-ac44-411b-b82f-818291b93d0d",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "359445a8-1ebf-4a81-9956-e3004511576b"
        },
        "item": {
          "id": "d96e5179-e789-41d1-9586-1d1d8d096c05",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "cc16823f-84a9-42f6-a0e2-5308b2a83ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d93ba-6de9-4645-885a-d7d019150ff0",
        "cursor": {
          "ref": "2770bf92-78c4-42cb-a5c6-1facc91710c3",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c83741b-e1e5-4dab-bda9-add06ac972e5"
        },
        "item": {
          "id": "db1d93ba-6de9-4645-885a-d7d019150ff0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f6285ba6-7636-4560-bdd2-59770d688b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d93ba-6de9-4645-885a-d7d019150ff0",
        "cursor": {
          "ref": "2770bf92-78c4-42cb-a5c6-1facc91710c3",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c83741b-e1e5-4dab-bda9-add06ac972e5"
        },
        "item": {
          "id": "db1d93ba-6de9-4645-885a-d7d019150ff0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f6285ba6-7636-4560-bdd2-59770d688b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf49d538-3a9b-4059-8049-f87cdfd6a13a",
        "cursor": {
          "ref": "d8886b4a-ba77-4f28-baae-4f18eae77f7b",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f0199b78-668c-4459-b53a-655ad663ee42"
        },
        "item": {
          "id": "cf49d538-3a9b-4059-8049-f87cdfd6a13a",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "e213c796-78f4-4797-aa03-6eb4473ce76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf49d538-3a9b-4059-8049-f87cdfd6a13a",
        "cursor": {
          "ref": "d8886b4a-ba77-4f28-baae-4f18eae77f7b",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f0199b78-668c-4459-b53a-655ad663ee42"
        },
        "item": {
          "id": "cf49d538-3a9b-4059-8049-f87cdfd6a13a",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "e213c796-78f4-4797-aa03-6eb4473ce76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d79a8-e34a-4de4-a75d-a56f7be23ab4",
        "cursor": {
          "ref": "7304b764-014a-4c34-adcb-ded898ec66d3",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8acad4a9-bb7c-4eea-bf59-22081e40c17a"
        },
        "item": {
          "id": "9b0d79a8-e34a-4de4-a75d-a56f7be23ab4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2120199-9ef9-4e30-b030-d0d609a64dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d79a8-e34a-4de4-a75d-a56f7be23ab4",
        "cursor": {
          "ref": "7304b764-014a-4c34-adcb-ded898ec66d3",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8acad4a9-bb7c-4eea-bf59-22081e40c17a"
        },
        "item": {
          "id": "9b0d79a8-e34a-4de4-a75d-a56f7be23ab4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2120199-9ef9-4e30-b030-d0d609a64dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e9b231-eb02-489d-a5a4-3eab4b32413d",
        "cursor": {
          "ref": "a628996f-8110-49d0-b32f-860645d35a2a",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6376a2fa-9e80-4f76-9c83-1aaa04e49b98"
        },
        "item": {
          "id": "a3e9b231-eb02-489d-a5a4-3eab4b32413d",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "7423387e-70ca-4fb3-9bbd-8bac36e13979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e9b231-eb02-489d-a5a4-3eab4b32413d",
        "cursor": {
          "ref": "a628996f-8110-49d0-b32f-860645d35a2a",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6376a2fa-9e80-4f76-9c83-1aaa04e49b98"
        },
        "item": {
          "id": "a3e9b231-eb02-489d-a5a4-3eab4b32413d",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "7423387e-70ca-4fb3-9bbd-8bac36e13979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93e33f4-caa3-44ed-9f08-7f5b05082cba",
        "cursor": {
          "ref": "58788ca0-8dd6-40f0-b223-1b1172a6eca6",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9d1fa738-a8de-44dc-b17a-1ea39cf0b71b"
        },
        "item": {
          "id": "c93e33f4-caa3-44ed-9f08-7f5b05082cba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13065eec-a0d7-41a7-b601-4290123a8bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93e33f4-caa3-44ed-9f08-7f5b05082cba",
        "cursor": {
          "ref": "58788ca0-8dd6-40f0-b223-1b1172a6eca6",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9d1fa738-a8de-44dc-b17a-1ea39cf0b71b"
        },
        "item": {
          "id": "c93e33f4-caa3-44ed-9f08-7f5b05082cba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13065eec-a0d7-41a7-b601-4290123a8bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a722a-6b4f-4686-987d-15aa88211bce",
        "cursor": {
          "ref": "eeaa39c5-d4cb-48f2-ad7e-7e02100d6a08",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "762cdcc8-83f7-4897-8705-573d74cc412c"
        },
        "item": {
          "id": "ad2a722a-6b4f-4686-987d-15aa88211bce",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "faaa1a42-a9d3-46d0-bd90-fafe0121ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a722a-6b4f-4686-987d-15aa88211bce",
        "cursor": {
          "ref": "eeaa39c5-d4cb-48f2-ad7e-7e02100d6a08",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "762cdcc8-83f7-4897-8705-573d74cc412c"
        },
        "item": {
          "id": "ad2a722a-6b4f-4686-987d-15aa88211bce",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "faaa1a42-a9d3-46d0-bd90-fafe0121ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbfb79e-d42c-4863-896e-dd983f11f1a1",
        "cursor": {
          "ref": "f5c5d68b-ac55-4f64-bb8e-811cdf5147a7",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bd8e0693-8abb-4ba4-81c4-3ffd7ad4a8a0"
        },
        "item": {
          "id": "2bbfb79e-d42c-4863-896e-dd983f11f1a1",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "a5048363-4f90-4af9-a74f-fbbb5346efe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbfb79e-d42c-4863-896e-dd983f11f1a1",
        "cursor": {
          "ref": "f5c5d68b-ac55-4f64-bb8e-811cdf5147a7",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bd8e0693-8abb-4ba4-81c4-3ffd7ad4a8a0"
        },
        "item": {
          "id": "2bbfb79e-d42c-4863-896e-dd983f11f1a1",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "a5048363-4f90-4af9-a74f-fbbb5346efe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80371e05-5a94-49f7-87d5-9f97fe0d429e",
        "cursor": {
          "ref": "e4d98c59-2b3c-46ed-9196-251e06a0167d",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd666964-d3ea-4314-984a-db579d5d9199"
        },
        "item": {
          "id": "80371e05-5a94-49f7-87d5-9f97fe0d429e",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "d207b749-9e53-49b1-a133-a432bccf86f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80371e05-5a94-49f7-87d5-9f97fe0d429e",
        "cursor": {
          "ref": "e4d98c59-2b3c-46ed-9196-251e06a0167d",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd666964-d3ea-4314-984a-db579d5d9199"
        },
        "item": {
          "id": "80371e05-5a94-49f7-87d5-9f97fe0d429e",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "d207b749-9e53-49b1-a133-a432bccf86f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ffcc4-3678-422f-974f-d2a1df7b6bf4",
        "cursor": {
          "ref": "49d013a8-6691-4798-ac75-516c150e2122",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a3b7d80-57cf-47e6-b25b-36260585bfef"
        },
        "item": {
          "id": "5d3ffcc4-3678-422f-974f-d2a1df7b6bf4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "080e0a10-c802-4cb3-ae1f-b3c77e49fc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ffcc4-3678-422f-974f-d2a1df7b6bf4",
        "cursor": {
          "ref": "49d013a8-6691-4798-ac75-516c150e2122",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a3b7d80-57cf-47e6-b25b-36260585bfef"
        },
        "item": {
          "id": "5d3ffcc4-3678-422f-974f-d2a1df7b6bf4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "080e0a10-c802-4cb3-ae1f-b3c77e49fc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6590120a-5567-4ac6-91b4-02aff93cc850",
        "cursor": {
          "ref": "c156cf59-0546-4c7f-a5f5-57fb01261baf",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ac4cfa02-0213-4dae-b484-738c5100aca8"
        },
        "item": {
          "id": "6590120a-5567-4ac6-91b4-02aff93cc850",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8e0eed4b-972c-4d1b-b2e4-39e69cfd74d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6590120a-5567-4ac6-91b4-02aff93cc850",
        "cursor": {
          "ref": "c156cf59-0546-4c7f-a5f5-57fb01261baf",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ac4cfa02-0213-4dae-b484-738c5100aca8"
        },
        "item": {
          "id": "6590120a-5567-4ac6-91b4-02aff93cc850",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8e0eed4b-972c-4d1b-b2e4-39e69cfd74d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35d345-883f-4873-a8c4-924d99aeebc7",
        "cursor": {
          "ref": "060c4385-639b-4f74-965f-1a7405b048ad",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e28338fa-ac9e-453f-a0aa-933991eb1b7a"
        },
        "item": {
          "id": "2a35d345-883f-4873-a8c4-924d99aeebc7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "04b84b29-05b6-46cd-bb1a-d41dc311c1a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35d345-883f-4873-a8c4-924d99aeebc7",
        "cursor": {
          "ref": "060c4385-639b-4f74-965f-1a7405b048ad",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e28338fa-ac9e-453f-a0aa-933991eb1b7a"
        },
        "item": {
          "id": "2a35d345-883f-4873-a8c4-924d99aeebc7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "04b84b29-05b6-46cd-bb1a-d41dc311c1a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc8454-507f-4b4e-8eef-61ef8fe2424f",
        "cursor": {
          "ref": "d9e81620-9203-4922-bc6b-faef2df1338e",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4646a1cc-130b-4421-8c8a-f18115b48ac1"
        },
        "item": {
          "id": "dcfc8454-507f-4b4e-8eef-61ef8fe2424f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "559db8d4-c0ad-4b40-819d-9dfb6fcb702f",
          "status": "Created",
          "code": 201,
          "responseTime": 360,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc8454-507f-4b4e-8eef-61ef8fe2424f",
        "cursor": {
          "ref": "d9e81620-9203-4922-bc6b-faef2df1338e",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4646a1cc-130b-4421-8c8a-f18115b48ac1"
        },
        "item": {
          "id": "dcfc8454-507f-4b4e-8eef-61ef8fe2424f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "559db8d4-c0ad-4b40-819d-9dfb6fcb702f",
          "status": "Created",
          "code": 201,
          "responseTime": 360,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1c284-e1f6-4d24-84fd-c4150c9fc419",
        "cursor": {
          "ref": "5c6869c2-0912-4d28-b744-c713272babb8",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ec1d45c9-fc6e-44aa-be2b-4c10431150d9"
        },
        "item": {
          "id": "70b1c284-e1f6-4d24-84fd-c4150c9fc419",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "18218a70-61dd-4c08-91c1-2d27f699bd81",
          "status": "Created",
          "code": 201,
          "responseTime": 323,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1c284-e1f6-4d24-84fd-c4150c9fc419",
        "cursor": {
          "ref": "5c6869c2-0912-4d28-b744-c713272babb8",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ec1d45c9-fc6e-44aa-be2b-4c10431150d9"
        },
        "item": {
          "id": "70b1c284-e1f6-4d24-84fd-c4150c9fc419",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "18218a70-61dd-4c08-91c1-2d27f699bd81",
          "status": "Created",
          "code": 201,
          "responseTime": 323,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9daccbe0-bc38-4387-b25e-24c0e6e58656",
        "cursor": {
          "ref": "8a8bb35a-ffb9-46ee-864a-0d0c7d7f1fd9",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64e1b15d-40cc-4647-8891-c761098170bf"
        },
        "item": {
          "id": "9daccbe0-bc38-4387-b25e-24c0e6e58656",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e6be8e61-32d3-4623-a4b2-7538769afde0",
          "status": "Created",
          "code": 201,
          "responseTime": 321,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9daccbe0-bc38-4387-b25e-24c0e6e58656",
        "cursor": {
          "ref": "8a8bb35a-ffb9-46ee-864a-0d0c7d7f1fd9",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64e1b15d-40cc-4647-8891-c761098170bf"
        },
        "item": {
          "id": "9daccbe0-bc38-4387-b25e-24c0e6e58656",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e6be8e61-32d3-4623-a4b2-7538769afde0",
          "status": "Created",
          "code": 201,
          "responseTime": 321,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a585f-cb1b-4d5f-9835-18a6a21593e2",
        "cursor": {
          "ref": "462a1684-913f-4efc-94a3-2ffd8b71ea90",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b50ad11e-8b0e-47b3-a01d-704c98c91771"
        },
        "item": {
          "id": "100a585f-cb1b-4d5f-9835-18a6a21593e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8908f6bf-57f6-4cf6-a2d9-4f9a38df7129",
          "status": "Created",
          "code": 201,
          "responseTime": 326,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a585f-cb1b-4d5f-9835-18a6a21593e2",
        "cursor": {
          "ref": "462a1684-913f-4efc-94a3-2ffd8b71ea90",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b50ad11e-8b0e-47b3-a01d-704c98c91771"
        },
        "item": {
          "id": "100a585f-cb1b-4d5f-9835-18a6a21593e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8908f6bf-57f6-4cf6-a2d9-4f9a38df7129",
          "status": "Created",
          "code": 201,
          "responseTime": 326,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fdc3d4-944c-4772-9302-ac591061004a",
        "cursor": {
          "ref": "20617e60-5ca2-493e-8e0f-77f69e220484",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "005382bf-3988-4c06-b9ad-1b73b4095b93"
        },
        "item": {
          "id": "55fdc3d4-944c-4772-9302-ac591061004a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "593164a5-cc45-4d19-ba8d-d788acc57e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "55fdc3d4-944c-4772-9302-ac591061004a",
        "cursor": {
          "ref": "20617e60-5ca2-493e-8e0f-77f69e220484",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "005382bf-3988-4c06-b9ad-1b73b4095b93"
        },
        "item": {
          "id": "55fdc3d4-944c-4772-9302-ac591061004a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "593164a5-cc45-4d19-ba8d-d788acc57e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "dffbb7f0-2c99-404d-b59b-3fbb99ae69bc",
        "cursor": {
          "ref": "afc33e20-ff65-457f-8be0-493c3eeeb8aa",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a867cbec-6c2a-4dbb-b9ae-e0b9477765f5"
        },
        "item": {
          "id": "dffbb7f0-2c99-404d-b59b-3fbb99ae69bc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7f031ee-0a7a-4f74-a591-716669289f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "dffbb7f0-2c99-404d-b59b-3fbb99ae69bc",
        "cursor": {
          "ref": "afc33e20-ff65-457f-8be0-493c3eeeb8aa",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a867cbec-6c2a-4dbb-b9ae-e0b9477765f5"
        },
        "item": {
          "id": "dffbb7f0-2c99-404d-b59b-3fbb99ae69bc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7f031ee-0a7a-4f74-a591-716669289f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "19f2afc5-982b-41f4-a7fe-15acce637bb1",
        "cursor": {
          "ref": "0b650768-c23e-4b02-90cd-32e466c93a0f",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "94ba16cc-2b5d-4c8b-ad59-287a2ca1320a"
        },
        "item": {
          "id": "19f2afc5-982b-41f4-a7fe-15acce637bb1",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "97aa93d8-6efc-4f79-bb95-257ae54e6b1f",
          "status": "Created",
          "code": 201,
          "responseTime": 298,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f2afc5-982b-41f4-a7fe-15acce637bb1",
        "cursor": {
          "ref": "0b650768-c23e-4b02-90cd-32e466c93a0f",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "94ba16cc-2b5d-4c8b-ad59-287a2ca1320a"
        },
        "item": {
          "id": "19f2afc5-982b-41f4-a7fe-15acce637bb1",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "97aa93d8-6efc-4f79-bb95-257ae54e6b1f",
          "status": "Created",
          "code": 201,
          "responseTime": 298,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eba299-59a3-48c7-9627-37d28fa3018b",
        "cursor": {
          "ref": "692a2f92-7c03-479d-946e-d377a8fee889",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e592e57-ca3a-474b-9cdf-199f2fd0b034"
        },
        "item": {
          "id": "e8eba299-59a3-48c7-9627-37d28fa3018b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cbe61a1-cd2e-48eb-a6da-d5777ac14048",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eba299-59a3-48c7-9627-37d28fa3018b",
        "cursor": {
          "ref": "692a2f92-7c03-479d-946e-d377a8fee889",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e592e57-ca3a-474b-9cdf-199f2fd0b034"
        },
        "item": {
          "id": "e8eba299-59a3-48c7-9627-37d28fa3018b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cbe61a1-cd2e-48eb-a6da-d5777ac14048",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2779a1-39b3-4160-a150-5ed51af6f1ba",
        "cursor": {
          "ref": "39baf017-2230-4946-a0e4-693695196d39",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "24f94fbf-3ea8-4245-8f37-7d34ab31ee5d"
        },
        "item": {
          "id": "ef2779a1-39b3-4160-a150-5ed51af6f1ba",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "834e95b8-6b0f-4eeb-8793-319e72b06abf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f36505-c92c-46a1-ae18-5ae377f4f5b9",
        "cursor": {
          "ref": "255824d4-5551-452a-8e99-038177ea30bc",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "69050cab-6678-4e59-8cb6-1d666fcb0836"
        },
        "item": {
          "id": "79f36505-c92c-46a1-ae18-5ae377f4f5b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ad4e2e45-25e0-4bb7-b613-da51b16fc6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f36505-c92c-46a1-ae18-5ae377f4f5b9",
        "cursor": {
          "ref": "255824d4-5551-452a-8e99-038177ea30bc",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "69050cab-6678-4e59-8cb6-1d666fcb0836"
        },
        "item": {
          "id": "79f36505-c92c-46a1-ae18-5ae377f4f5b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ad4e2e45-25e0-4bb7-b613-da51b16fc6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67edadb3-5dfd-42fc-a126-df2f2f2ad09d",
        "cursor": {
          "ref": "191d8a50-0b77-4828-8248-ae244095d420",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "17921526-90f9-4b20-bc34-3aa426e2d7f5"
        },
        "item": {
          "id": "67edadb3-5dfd-42fc-a126-df2f2f2ad09d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "10d538e3-a3a1-440f-b421-bb4fff6c40f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f53c12-eb65-4395-ac31-279a5b6bc79b",
        "cursor": {
          "ref": "ba696fc4-a36c-4d36-b207-d438dcb81b5c",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9ee70e4-c31d-40ed-95e0-34b488aa0b56"
        },
        "item": {
          "id": "64f53c12-eb65-4395-ac31-279a5b6bc79b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "10f65638-b2b8-46c3-b0a3-c9a857600d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bce5b1-2c29-4165-955c-557e1c191190",
        "cursor": {
          "ref": "d8d5323f-7b00-4de5-a731-5974bd41daa9",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7f017bfb-57b5-4531-b2c2-2d9f69b2b165"
        },
        "item": {
          "id": "d9bce5b1-2c29-4165-955c-557e1c191190",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "449b001e-b08a-42ac-bc70-385b7851690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe998bda-4c75-4f64-9b7d-4ab1dc0512c3",
        "cursor": {
          "ref": "aa912cb6-bdc7-49cd-aefc-57950326bff8",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "33862f25-0419-4b5f-99e2-cde001158e19"
        },
        "item": {
          "id": "fe998bda-4c75-4f64-9b7d-4ab1dc0512c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "05f58be2-11e8-46a5-9155-623a1d8c1c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1134b28e-67dc-4dcc-a7c0-1f27a4dbaab1",
        "cursor": {
          "ref": "3a7e4ddb-b554-46ce-aecf-afca5ea53972",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9bba38ce-cc3c-4400-8f26-f75a54268722"
        },
        "item": {
          "id": "1134b28e-67dc-4dcc-a7c0-1f27a4dbaab1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ec4222c1-96f6-46d7-8b83-eb14cd3784e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff82ea-2b4c-4205-b047-3eabd6df6d73",
        "cursor": {
          "ref": "a8979828-b73a-4dac-9680-478fbf11d39c",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "26382623-3264-46bf-92b3-2a947e131644"
        },
        "item": {
          "id": "95ff82ea-2b4c-4205-b047-3eabd6df6d73",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5238b1e8-8e30-4dc1-8600-6093cf9ab987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ed1202-0a75-4fd9-bc5a-740643fb2e00",
        "cursor": {
          "ref": "dcc8bd58-2867-4487-92f9-809e0717a6bb",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "94584264-ad98-4648-aed5-00682d22624e"
        },
        "item": {
          "id": "c3ed1202-0a75-4fd9-bc5a-740643fb2e00",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a16c1c99-5ff4-47ee-9d22-485cef68a876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71907a0d-aaff-42bd-8a44-67b2b3eff575",
        "cursor": {
          "ref": "926049aa-34bc-4844-a0d3-f8bb3f554e4a",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "00c04ac1-3735-4095-919b-cbc15538b8c6"
        },
        "item": {
          "id": "71907a0d-aaff-42bd-8a44-67b2b3eff575",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5d1425d9-2d7c-4b34-a151-7c20680d3a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079a82f1-d7b8-4857-a26c-4a6829380d4c",
        "cursor": {
          "ref": "3aa08a8c-4f52-4ea2-bead-418df4c53af5",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4b006e1b-0540-4a4c-9451-26ffd677971b"
        },
        "item": {
          "id": "079a82f1-d7b8-4857-a26c-4a6829380d4c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d8f75ec5-a9e8-4275-acb4-e073a51f6a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2be41a-0fd7-4ac5-b51d-468cf4d5df1b",
        "cursor": {
          "ref": "580852bb-5be1-4744-b806-5e9f28d80e1a",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "60532c91-23d8-48cd-8ec6-a8bd6d0bc977"
        },
        "item": {
          "id": "2f2be41a-0fd7-4ac5-b51d-468cf4d5df1b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ff39665-0b98-46ed-87cb-3fa24f29089d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac6586b-c63b-4cd1-b2e3-e86b7695a27a",
        "cursor": {
          "ref": "ecd0a4a2-d250-4450-a60e-28d82e343d60",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "be120e51-3d3c-4925-80b6-ede37375d092"
        },
        "item": {
          "id": "dac6586b-c63b-4cd1-b2e3-e86b7695a27a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e47744b7-e820-41c2-ac0d-b73bb404f3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d44a515-fac6-4311-b1c6-fbd142984377",
        "cursor": {
          "ref": "5a3481d1-56f0-491e-9b86-f1a4cc94c2f9",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6dc551d7-ed5e-4f54-a7d5-c580ea189fde"
        },
        "item": {
          "id": "3d44a515-fac6-4311-b1c6-fbd142984377",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eaf61c98-4f3b-4b11-9c82-eb7c7c331cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cd8852-336e-48e1-8090-f939917df2e7",
        "cursor": {
          "ref": "8dac28f3-ce1e-4c1a-92f8-f071784464ec",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "80390f43-9fb4-4998-bfac-0574112e53db"
        },
        "item": {
          "id": "a3cd8852-336e-48e1-8090-f939917df2e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eba583ff-70b1-4e75-b74a-f549e1c8bb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2135e040-57dd-42d9-9b94-426a4caedf72",
        "cursor": {
          "ref": "99c0bd12-d8e8-4a64-a3fb-c6070681cd2a",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6a89865c-80ab-48b2-b2a4-bfdf794c970a"
        },
        "item": {
          "id": "2135e040-57dd-42d9-9b94-426a4caedf72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c8557853-8924-415d-96a6-b3fa526fec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730c5c39-5af8-499c-9bef-110921ad3473",
        "cursor": {
          "ref": "34f147af-1248-438d-a157-b1a097223795",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cef0a329-e2de-4a54-8b44-1a00ce12047e"
        },
        "item": {
          "id": "730c5c39-5af8-499c-9bef-110921ad3473",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa499537-0e08-4dac-b1a2-f4a254b4ed58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be76eaf-9d62-4594-b02e-f0f0505fd75d",
        "cursor": {
          "ref": "3ade2f77-f176-4a27-b7d8-5aca8a991976",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "10295660-cd47-4ca0-9f2c-9bbd503b6b03"
        },
        "item": {
          "id": "4be76eaf-9d62-4594-b02e-f0f0505fd75d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4a5716a3-5a54-4997-bc44-a5ca7692a53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914ead6-4fff-4825-8c3b-b501ff383c8d",
        "cursor": {
          "ref": "7d2e52de-c722-4c12-8834-76991b085d8b",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "95b3ae8c-5a87-4222-b04f-d7cef18d1d39"
        },
        "item": {
          "id": "7914ead6-4fff-4825-8c3b-b501ff383c8d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0289d0dc-2646-47a4-86b1-436b3d7bc858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888deccc-f203-4c39-b95f-60018f85aa34",
        "cursor": {
          "ref": "cd21a91e-b016-4646-b245-1f192bb4f4e1",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cf9223b2-db11-4c4f-a969-88b1577a1b02"
        },
        "item": {
          "id": "888deccc-f203-4c39-b95f-60018f85aa34",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e0219224-c288-4381-acee-c5c809bda6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d5c19c-5ee4-4769-a187-22f20395c696",
        "cursor": {
          "ref": "8dfc3b15-16ce-4647-9232-39eb3fdad6f7",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7cff66c7-22e7-4c32-981e-e0a7b345892d"
        },
        "item": {
          "id": "f9d5c19c-5ee4-4769-a187-22f20395c696",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2e1f0be3-0cc8-4ac7-8522-931e3aa3bbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed2cefa-1d51-4625-9948-0e702ff1ff69",
        "cursor": {
          "ref": "52b13abb-a125-4bd2-9141-31317236c9c3",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8777b959-2f50-483d-9bd5-871b27fafe23"
        },
        "item": {
          "id": "bed2cefa-1d51-4625-9948-0e702ff1ff69",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "54b01337-83b8-4f8c-9e25-d6b863281128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97236c38-3d83-4467-bf2b-625b55915b1c",
        "cursor": {
          "ref": "6afad1b3-347b-411e-9ad4-126f0b1d1e1d",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3de8a55-b7f8-4577-9ece-b8d61714046f"
        },
        "item": {
          "id": "97236c38-3d83-4467-bf2b-625b55915b1c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f3131d09-0698-4d76-b318-56f2de9c3a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e646710-8555-452c-a5b7-4a7c73b1d019",
        "cursor": {
          "ref": "497358b9-ba2f-442b-a742-b6d73a9d54fa",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "12a5c049-4eab-4d5f-8025-2d20d4f83727"
        },
        "item": {
          "id": "2e646710-8555-452c-a5b7-4a7c73b1d019",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5df2b6fc-39d1-4acf-91aa-9a8de0323608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cb3dc3-31d9-42df-a713-fb4586a91004",
        "cursor": {
          "ref": "a11c8c0e-1edd-4b93-825b-e1f943c1bffc",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "47e5d274-3cd3-4c0f-a78a-b482f8873730"
        },
        "item": {
          "id": "a1cb3dc3-31d9-42df-a713-fb4586a91004",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c9e7ff48-a507-49bf-bad1-31112459a2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a4a929-08a2-439f-ab96-b0a14b61dc7a",
        "cursor": {
          "ref": "5ce13016-aed4-432e-9fff-36e2206b5703",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8a1a0b12-2b50-45f1-a4be-2bef37e3f971"
        },
        "item": {
          "id": "a3a4a929-08a2-439f-ab96-b0a14b61dc7a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4d06e32a-19d7-44c2-a52e-7c8a651b94b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c5fa26-e40c-496e-b76b-c38ca0ba763f",
        "cursor": {
          "ref": "a6dab8d3-34da-443a-b9d9-72bc97281e04",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b7e966e6-2443-4687-a3fc-648ea6215568"
        },
        "item": {
          "id": "a5c5fa26-e40c-496e-b76b-c38ca0ba763f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "659d053b-efb5-42de-9074-38248840d5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4274d9db-ccda-4337-bcca-79dd1721b62f",
        "cursor": {
          "ref": "2881bd59-62a5-4361-ad50-95c2070433c5",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9e5bbc49-ea21-46f5-b74b-f2707c35fc77"
        },
        "item": {
          "id": "4274d9db-ccda-4337-bcca-79dd1721b62f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c4768ea6-afb7-4e87-a443-b133e8634f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f637453-c9b2-4d50-bc3b-7ac4505a6c15",
        "cursor": {
          "ref": "647cc930-05b2-4f1d-b070-64ba0cdc84d9",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fda12e1a-af55-4175-ba5f-23de44af71db"
        },
        "item": {
          "id": "7f637453-c9b2-4d50-bc3b-7ac4505a6c15",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad4a3b5c-91ba-4738-ac50-fbbd34f0f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f865d9-a7d8-4022-849a-7e272392ede5",
        "cursor": {
          "ref": "e8ee5793-8253-4949-a2ca-7845da9f0bfa",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f034ad51-0ddb-4f78-960c-0eb90a17558f"
        },
        "item": {
          "id": "24f865d9-a7d8-4022-849a-7e272392ede5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "65a423a9-3aae-48a0-89c6-f0c8b9ba8a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17347fc0-e74b-455c-a020-0aac9dc444a4",
        "cursor": {
          "ref": "e8196ff4-5d96-4ab3-8853-b49ff79371f7",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ed4dc57c-4199-4557-a510-840904d6196b"
        },
        "item": {
          "id": "17347fc0-e74b-455c-a020-0aac9dc444a4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9594d7b-6496-4ece-bf96-4770a234d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017a211b-6c94-43c2-a1a7-8c1549d78507",
        "cursor": {
          "ref": "59ea92de-5171-46ce-94bf-432d297ce891",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "87f1f48d-c2f5-48be-aec7-23efaedd210c"
        },
        "item": {
          "id": "017a211b-6c94-43c2-a1a7-8c1549d78507",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "70e6f986-d28d-4418-b8d7-672c8f89a3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1ebd5-32e8-4587-b027-dbaedc2df24a",
        "cursor": {
          "ref": "aa5d5ac1-cd9c-40ab-add9-192c85405d10",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ef3cc1f3-27ad-45e7-b724-24ac96cf8819"
        },
        "item": {
          "id": "ffd1ebd5-32e8-4587-b027-dbaedc2df24a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1aff827a-b1b4-47e0-9de6-b250b0ee8c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02c0bb-1c36-477f-b414-f12f6bf0e99e",
        "cursor": {
          "ref": "b3cc4de2-723e-4fbd-baf5-4e9e8e4b8740",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "df2e8647-ecda-43e3-872f-d190c65fee75"
        },
        "item": {
          "id": "fb02c0bb-1c36-477f-b414-f12f6bf0e99e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "98373d95-eadc-4c44-9a6e-d817b4b0f3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683f4adb-d5b0-447f-b31e-fb33e241480c",
        "cursor": {
          "ref": "59976002-6fc5-40ae-a2a1-5a0c358677ae",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "98b527e3-ec0c-4120-bae2-6dcddb74be3e"
        },
        "item": {
          "id": "683f4adb-d5b0-447f-b31e-fb33e241480c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b0546045-29ea-4c3a-bb22-cecf37fdf7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e76cef-da3e-47d3-a803-72eb0473294e",
        "cursor": {
          "ref": "2338d4ca-3bb1-483e-878a-d472492c5db8",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3159fd32-d3e5-4ab9-acd5-e442d019ca1b"
        },
        "item": {
          "id": "30e76cef-da3e-47d3-a803-72eb0473294e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e3f60e56-4c8c-4461-94c4-0b739c184cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea97106-837f-43dc-b15e-31914cfb1cc2",
        "cursor": {
          "ref": "968192e5-eef6-40d0-8816-d2e86caa603e",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "07c87abe-0ebd-447b-b549-42a79a6a64d9"
        },
        "item": {
          "id": "cea97106-837f-43dc-b15e-31914cfb1cc2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "873a9264-172a-4ddb-ab0f-ad22f6c0dc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f144814-7c29-4751-abc4-18fed412d875",
        "cursor": {
          "ref": "9747b6c1-30e7-4614-ad46-92b402874d45",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "36817272-c388-4b1c-a775-77999721c3f3"
        },
        "item": {
          "id": "7f144814-7c29-4751-abc4-18fed412d875",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7df0c5e9-26ab-498b-aaf0-2899829e1224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52897b16-8b56-4ed2-a04c-236b422b1684",
        "cursor": {
          "ref": "181ef280-1bbf-4979-bacb-a5249e7e4819",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "acfa51e9-c1df-493b-ae44-571f1a396dbe"
        },
        "item": {
          "id": "52897b16-8b56-4ed2-a04c-236b422b1684",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "979854c7-8980-45f0-bdf5-44a241128508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac885c81-55f7-41c0-86cc-0d7f935b85c1",
        "cursor": {
          "ref": "dd476c5e-cf04-4787-8487-0f66dc1f526a",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "32474b1b-531b-428b-aae3-97364d10f636"
        },
        "item": {
          "id": "ac885c81-55f7-41c0-86cc-0d7f935b85c1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "18ddf3c4-193d-40b6-ae96-b4bb932a838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebe34a-5ac0-491e-9f4d-ea7aa93f5375",
        "cursor": {
          "ref": "4f71fbcc-f57b-4cc7-bc15-bc3529a13f18",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c06d3fe1-1d19-4b8a-aa4c-d2ed83fc2c51"
        },
        "item": {
          "id": "eeebe34a-5ac0-491e-9f4d-ea7aa93f5375",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b7293e9-116e-4135-ae26-6c90a9011ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd676ae-7657-40ac-a0cd-714924e2e4ad",
        "cursor": {
          "ref": "d139562b-c30e-4d6a-8813-8074e1a2daf2",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9279823d-949f-45f8-a4c2-ca45fb3c0b5e"
        },
        "item": {
          "id": "0bd676ae-7657-40ac-a0cd-714924e2e4ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "914d7dbf-563d-48e1-8884-ba6ea7e01c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9860a3-ec96-4be9-a784-925a07aa49dc",
        "cursor": {
          "ref": "9e71cfe9-3217-46c0-b765-78275f8fa38e",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3d01ccc5-0716-4eda-92d2-6f9745d043c9"
        },
        "item": {
          "id": "ca9860a3-ec96-4be9-a784-925a07aa49dc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b826cba5-1e22-4d65-bb28-c1db73d0b8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df3c2e8-3347-4035-9313-764174dfd4c1",
        "cursor": {
          "ref": "8f7c5237-0125-42b8-9a21-7f0af59a7187",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "27719568-6783-474b-a782-7ac73fcc04d5"
        },
        "item": {
          "id": "9df3c2e8-3347-4035-9313-764174dfd4c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a994cb0-cd27-40f8-a869-85e9fb426939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b658b4b3-d2a5-42b2-b1c4-6a7ba75a7a1d",
        "cursor": {
          "ref": "13883f35-fef5-444e-932c-1373bf650c07",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "af05d30f-79ac-4df5-93b0-e0984d06260a"
        },
        "item": {
          "id": "b658b4b3-d2a5-42b2-b1c4-6a7ba75a7a1d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "48b54b1f-ee94-41ec-b39e-66a44f2f4f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf9e2e-0591-4263-aa8a-c63538529582",
        "cursor": {
          "ref": "3020881b-d5c4-4547-bb7b-a038b8ec2f79",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4b72badf-50a2-467f-87b9-d5b7bf839fd2"
        },
        "item": {
          "id": "6baf9e2e-0591-4263-aa8a-c63538529582",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5779e82a-84f5-49b9-aae8-7d038c0c83f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b6d6b4-9b56-46e3-90c8-2c42624feb29",
        "cursor": {
          "ref": "3a003db1-d584-439c-a4cc-9c2420bc35ba",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "541c1a54-59cf-44bf-8f9c-6d49f0331f59"
        },
        "item": {
          "id": "42b6d6b4-9b56-46e3-90c8-2c42624feb29",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf6dd40b-cf07-4139-a59f-424d0d374a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af834061-79cb-4357-af3c-46c68d921137",
        "cursor": {
          "ref": "f01a9b7f-d052-4b7d-9520-7f2272a13541",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b5e3e57b-af74-40bd-a6e2-904827b7b614"
        },
        "item": {
          "id": "af834061-79cb-4357-af3c-46c68d921137",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c2598aea-2ea9-4991-871f-255e23b2b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ddf393-d4e8-4b92-8fdd-ed83f1e77973",
        "cursor": {
          "ref": "61c2a8b5-bdda-4ad9-a752-f95efda1102d",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f93938ab-1c18-46fb-8787-ccbb58630b1f"
        },
        "item": {
          "id": "41ddf393-d4e8-4b92-8fdd-ed83f1e77973",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "824d2559-dd26-46b4-be1b-10ab22e43377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b247f54-b0d2-443b-9052-3ee1bc534db3",
        "cursor": {
          "ref": "d2ba6710-ce9a-47cc-a90a-acdc73fa16e7",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d73669d7-5dd4-4af5-b750-e4bfecba76ce"
        },
        "item": {
          "id": "0b247f54-b0d2-443b-9052-3ee1bc534db3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02980a67-98ea-4308-83a5-f5417c0bcb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4043fef-fbd1-4d1c-9733-ee4cac30a9ae",
        "cursor": {
          "ref": "af834d9a-c5fa-4b43-895b-b12a0cf5ebbe",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c2d49de3-df63-40bd-9ff5-509b8bc4ba18"
        },
        "item": {
          "id": "b4043fef-fbd1-4d1c-9733-ee4cac30a9ae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ead8be2b-b331-4724-9c0d-256e0d0f6d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ec134-25bd-4c3d-961e-16a9e310e798",
        "cursor": {
          "ref": "45ab6269-0e9a-4e3a-bae2-f1ba32f34a37",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f2a83110-8e95-4784-978f-e10121306dcf"
        },
        "item": {
          "id": "b11ec134-25bd-4c3d-961e-16a9e310e798",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5591ce1a-3eef-468e-95c1-2f30b181067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2315ec2-244a-4232-ab03-92fffc5bfb51",
        "cursor": {
          "ref": "b0b5dfb6-d35d-4591-85ad-d4ff73700d21",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ef958351-6b7f-4b84-92d6-089023a43bb0"
        },
        "item": {
          "id": "d2315ec2-244a-4232-ab03-92fffc5bfb51",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2b34b6f2-4afe-4c54-a9ef-ae02191bba6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cb12a0-1df8-4c53-ad1a-da0dcce8064e",
        "cursor": {
          "ref": "94f471b0-a10a-475d-94e5-9be0009ce564",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fb22c600-fbb2-405c-910a-8a2bb36629f6"
        },
        "item": {
          "id": "62cb12a0-1df8-4c53-ad1a-da0dcce8064e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "238d2d15-3b26-465c-bec7-49430f02e56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d631ba-1e1e-4b46-98a3-18d187c1d278",
        "cursor": {
          "ref": "be036a57-ac6f-4e83-81d4-1572e30bcaa7",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "749d0a9f-b390-45d3-a8af-5299855aef86"
        },
        "item": {
          "id": "e7d631ba-1e1e-4b46-98a3-18d187c1d278",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc80ce84-1f46-4e38-878a-efebc5bbf31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be038c56-5000-49a3-85b6-81defb521e15",
        "cursor": {
          "ref": "6fdbaa3a-0cc6-45c7-b0ca-6ac13c3b7323",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4bcff8e6-99f4-40dc-88ee-412d730ea726"
        },
        "item": {
          "id": "be038c56-5000-49a3-85b6-81defb521e15",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "55301c02-24cd-4367-9363-dabfcd557aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9facfb5-fae5-414e-b9a8-283fd7049134",
        "cursor": {
          "ref": "2b16014e-be95-488c-af27-12c429e3cc6d",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d997b74c-648b-4477-92b8-dcdfb8c19ff7"
        },
        "item": {
          "id": "d9facfb5-fae5-414e-b9a8-283fd7049134",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "871749b8-a6fb-47d5-a67e-fd109f839059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b4f7e3-b32c-4c51-8528-af5fd323c3d6",
        "cursor": {
          "ref": "7b25f032-7e75-4107-9d26-204fb5e0d486",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b7f9ccc5-7557-4809-87df-967118cf0c8f"
        },
        "item": {
          "id": "06b4f7e3-b32c-4c51-8528-af5fd323c3d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a44d0ea1-ebd7-40d0-921e-ec20357d32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4eb149-6ffe-42ad-971e-fd5da7d0a079",
        "cursor": {
          "ref": "b26a1f81-81db-43e1-b2b3-eed1cadbd61f",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6fd89e8f-6987-4707-af34-c7617780b48c"
        },
        "item": {
          "id": "ca4eb149-6ffe-42ad-971e-fd5da7d0a079",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ceff5e0-83f2-42e8-81c8-80bec01ce45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70ff0c-80b3-4b57-a846-7396293dce62",
        "cursor": {
          "ref": "ea992660-5db5-41e1-8ec5-bb45a7a46835",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6157d14e-b117-41ab-ba64-017303f890d0"
        },
        "item": {
          "id": "9c70ff0c-80b3-4b57-a846-7396293dce62",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5e6baed0-28c0-4c66-91eb-302356febd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfba919-dfda-4140-9fa7-3d6570868d51",
        "cursor": {
          "ref": "895fb4b4-227d-4737-b8cf-3d512469e7b4",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d0f9102-329b-4f33-8168-1f496c811103"
        },
        "item": {
          "id": "5dfba919-dfda-4140-9fa7-3d6570868d51",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c4c45854-e5cc-4f9f-b9c3-f80ba96eb9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd58361-00fc-41e7-b898-2b1efa858ae0",
        "cursor": {
          "ref": "769787fd-6a6f-4aad-bb5d-b40ae47abba3",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e54697a-6189-4e6e-b5f3-6a1a49f48b4a"
        },
        "item": {
          "id": "3fd58361-00fc-41e7-b898-2b1efa858ae0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30a650ea-cb00-4c61-ba96-152161bac5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc3b0d6-203e-411c-bf85-85d8dff8473c",
        "cursor": {
          "ref": "17177da5-02cb-4376-90f2-1714748c4b32",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e6abcd0e-6c01-45e7-8599-8240b18a8b4d"
        },
        "item": {
          "id": "bcc3b0d6-203e-411c-bf85-85d8dff8473c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1e9b8593-25f5-4728-a1be-77c437002d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf8e18-cb45-463a-9dc5-8c07d7ba1a14",
        "cursor": {
          "ref": "eacd1ee6-498f-4071-99af-f45c30ef7910",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4b696fb7-b00c-45f6-9b8b-72188e8b6977"
        },
        "item": {
          "id": "18cf8e18-cb45-463a-9dc5-8c07d7ba1a14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f95312ae-ca63-4e7c-b73e-8ca07b9289b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167ca9b7-357d-411b-b5bc-fda439906577",
        "cursor": {
          "ref": "3988a663-4b71-4bda-97cf-d5eb021d0ac0",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "59e7b0f2-5e7b-4415-a836-f4d399ef3914"
        },
        "item": {
          "id": "167ca9b7-357d-411b-b5bc-fda439906577",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4af7fd70-2931-470e-87bb-94ef3cf38740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe23c75-342b-42d7-ad08-748619a8696c",
        "cursor": {
          "ref": "0575fa6f-4bd7-4a8d-aad7-723780364c66",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c90ce0d2-2776-4c87-9e1a-2a4cbe9d7e03"
        },
        "item": {
          "id": "abe23c75-342b-42d7-ad08-748619a8696c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e163efc0-8b30-47cd-a682-d6f1250d69e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88418936-82aa-4fcf-9390-38cec30b4b6f",
        "cursor": {
          "ref": "2dfbf864-e208-43fa-8b31-ea8920fb1813",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "23cfdde4-5d1f-4170-bcc5-2cd7b4ca0f22"
        },
        "item": {
          "id": "88418936-82aa-4fcf-9390-38cec30b4b6f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e01416c1-d30a-4066-92b0-7deb12e21de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc52b146-a0d4-41c1-b95f-7547a9897478",
        "cursor": {
          "ref": "de6bd4c9-7fd0-49e8-9db6-a2a59d1ca047",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c19822cb-419d-4c8d-9b1a-b4c8247dd9de"
        },
        "item": {
          "id": "bc52b146-a0d4-41c1-b95f-7547a9897478",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e08ccf10-fde0-4842-993d-3f00e13ffb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b50356-f106-4a6a-b7a9-347a9cbe76f8",
        "cursor": {
          "ref": "7a48488e-6d42-4fb6-a90b-1ca387595fe3",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "79ee648a-2be4-412a-adf5-ba7a12e139f2"
        },
        "item": {
          "id": "96b50356-f106-4a6a-b7a9-347a9cbe76f8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "32cb3950-2d40-43c8-af4c-ba0c9ee9c96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd26efb-8f3d-46bc-8979-cacd7628a1c1",
        "cursor": {
          "ref": "36949d3e-1a04-4c2a-9ca8-730ef7e1d415",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "caa5435c-18d3-40f5-955b-511ecb06898d"
        },
        "item": {
          "id": "ebd26efb-8f3d-46bc-8979-cacd7628a1c1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79cb0861-64fb-4e7a-b753-c53c595a997a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82d4be2-2d19-4fdc-81b8-ba262712938e",
        "cursor": {
          "ref": "1cac123f-3e8e-4423-9a95-46b5f84f5664",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a553311a-fda6-40e9-956a-c498e32e4aba"
        },
        "item": {
          "id": "f82d4be2-2d19-4fdc-81b8-ba262712938e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fa427f2a-5d10-4844-be62-33e694ebbe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041492da-527d-4c92-948e-f2f7b879701f",
        "cursor": {
          "ref": "baeab98c-40b9-422b-942b-581b6c31b6bf",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f42d25b5-3f80-4884-b408-e3a948c2de4b"
        },
        "item": {
          "id": "041492da-527d-4c92-948e-f2f7b879701f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "445b9610-fbfd-4fa0-a529-dd41f5edaa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9434944d-fe2b-42a6-9fe8-4f70e44b88f9",
        "cursor": {
          "ref": "cb320921-0e7c-45d9-afea-29e1fab0faa9",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "27607afa-0d86-4941-899e-857d330bbb91"
        },
        "item": {
          "id": "9434944d-fe2b-42a6-9fe8-4f70e44b88f9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cc8cbf91-1ad8-4e47-9e76-50a06c97902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2dee1e-20c4-4165-8835-f599ea21496a",
        "cursor": {
          "ref": "3f9b6729-e8b1-4f8b-abdc-e3674ab47a75",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10c9d09b-e240-4a38-b656-83bf9cc2baae"
        },
        "item": {
          "id": "2e2dee1e-20c4-4165-8835-f599ea21496a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9eefd6c-50c9-4e99-a5c3-86d16b0155cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f303b5-29ba-4a2b-b5f5-1c8feadcf35f",
        "cursor": {
          "ref": "c0364d50-a87d-42c4-ac69-a12f6ec27516",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "33c92e32-acb1-4f3f-a5a7-4fcc6737f72b"
        },
        "item": {
          "id": "35f303b5-29ba-4a2b-b5f5-1c8feadcf35f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "581465b6-c3e7-489a-8c1f-614b0e721cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3099ff-cd58-4b7c-875e-d17885421411",
        "cursor": {
          "ref": "861424b0-e3c3-473e-afa5-f077ed5cee08",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e0c57787-df5b-4bf8-9672-69e76a6e2885"
        },
        "item": {
          "id": "ac3099ff-cd58-4b7c-875e-d17885421411",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c55f123c-235f-40f5-ae0e-6eadfe590753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a85b2e-6d59-4b85-b974-80e3ecd2d3cd",
        "cursor": {
          "ref": "dafaffa4-2a43-42c5-be98-3089172600be",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dd2871d7-5afb-4058-bef2-f38b04c33060"
        },
        "item": {
          "id": "e1a85b2e-6d59-4b85-b974-80e3ecd2d3cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2680289e-62ad-49dd-bfbb-a70bb59ff740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5190a38e-fbe5-47f7-8b0b-30069f245277",
        "cursor": {
          "ref": "56a86f8b-bced-4783-8dd1-3a7ce824ca9d",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2a3daf7-0348-4f4d-bcdb-ff54d3d81959"
        },
        "item": {
          "id": "5190a38e-fbe5-47f7-8b0b-30069f245277",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c1a38f19-359b-48e8-895b-4b0fba386559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf7980d-f2f6-4e11-9576-813675c708d9",
        "cursor": {
          "ref": "8d5cf5a4-d51d-4ffa-b4aa-1897c2a26d1e",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d90d6a5e-ec2d-4e8b-9805-5e77c3246d94"
        },
        "item": {
          "id": "bcf7980d-f2f6-4e11-9576-813675c708d9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5b16561-b0f8-4117-b64c-439f1c26ba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73fd716-8bea-4710-bc33-2ca82564320b",
        "cursor": {
          "ref": "1e88e30b-3548-4a65-a9cb-5095179ef4cf",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "58bcddf7-c2d4-4a70-b6e3-13f508243761"
        },
        "item": {
          "id": "f73fd716-8bea-4710-bc33-2ca82564320b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92beb202-52fe-47d8-ba36-1032d5aa44b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4916417-ba8d-434c-a434-bea03fc73d26",
        "cursor": {
          "ref": "eb523578-a963-49b4-adb7-c9679190bd00",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a291a7a2-ea2c-414a-a237-1805c6e8c5af"
        },
        "item": {
          "id": "c4916417-ba8d-434c-a434-bea03fc73d26",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "755a75f3-894f-465f-9ccf-2f09153e0235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0898ab43-55ce-4ecc-b85a-795ecdbb74e2",
        "cursor": {
          "ref": "1e3cdaba-b111-451f-b2b6-129ed88e0639",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "696da7c3-7b45-4d40-bc8f-4c347d15b442"
        },
        "item": {
          "id": "0898ab43-55ce-4ecc-b85a-795ecdbb74e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a071a97d-979a-41ad-82f4-782dc6cf3bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ec6b30-3fe0-4798-bd34-3f16f7c78e32",
        "cursor": {
          "ref": "746d00a6-020b-4c46-9236-379230840f7d",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fdc3e9e3-d1ea-469d-be3e-8c01eadf3d09"
        },
        "item": {
          "id": "b3ec6b30-3fe0-4798-bd34-3f16f7c78e32",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cb001967-46d4-48ed-86e8-338e598ce8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f5623-d9d8-4630-a294-3d2cdfc21776",
        "cursor": {
          "ref": "ae99ef20-fbf7-450f-adc3-d8bcaee0bcc6",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0c76ae12-e3ea-4891-820b-14f9df7eab05"
        },
        "item": {
          "id": "159f5623-d9d8-4630-a294-3d2cdfc21776",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "59a34d9e-00cc-46e1-9701-395ca02f01c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f2eaa2-1bdf-4541-81fd-3c744671e316",
        "cursor": {
          "ref": "f4c45cf6-9867-4bce-b89b-45b2fbf6b333",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "97458b70-b033-467a-9656-d3b9449cb6b3"
        },
        "item": {
          "id": "b2f2eaa2-1bdf-4541-81fd-3c744671e316",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f94af695-9daa-445b-b958-7337f8f01f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debcbd48-4aa8-4ee0-9e7a-1100f5324486",
        "cursor": {
          "ref": "b16e55ac-42b3-42d5-a74d-adda857955fd",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "129605d3-10a7-43d9-817a-957e13f4d40e"
        },
        "item": {
          "id": "debcbd48-4aa8-4ee0-9e7a-1100f5324486",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "301bca06-9482-48c6-a1dc-d4f4616b75ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0096091f-ebdf-4e67-b4ae-4dab0f0e6e25",
        "cursor": {
          "ref": "e9ce6870-eae1-4024-adfe-1373ecd814a9",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aa1d4af7-3455-477c-aa2f-748205c49eb8"
        },
        "item": {
          "id": "0096091f-ebdf-4e67-b4ae-4dab0f0e6e25",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28b9cf85-043e-498c-9dfd-f105188bb0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d900a76-b6e7-4139-a228-79a836a04dcd",
        "cursor": {
          "ref": "0ac7dfd2-c569-4874-95d3-3318ebdd6796",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f5de79f8-674d-4848-bb92-6cdc6138ccbb"
        },
        "item": {
          "id": "9d900a76-b6e7-4139-a228-79a836a04dcd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "10d56e43-9ec9-4619-adf2-91336a08fc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6738a675-4fdd-4f3c-87af-da27c4480969",
        "cursor": {
          "ref": "51aa951b-5590-422e-a262-345fdd95ba5b",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a61f3028-848a-4fef-bdc4-7806a209f59c"
        },
        "item": {
          "id": "6738a675-4fdd-4f3c-87af-da27c4480969",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0d9d76e9-5605-44cd-8bb6-ae723ffb22c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6161dda-2e4d-40b0-b7b3-3e2ccd7a6033",
        "cursor": {
          "ref": "7adc220d-f503-4f6d-8317-3a5790d5e8d0",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ced72143-229d-4d96-afda-95d59fca7834"
        },
        "item": {
          "id": "c6161dda-2e4d-40b0-b7b3-3e2ccd7a6033",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e25d5d96-283e-4198-8e28-2b05f7341174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05dd6e7-f3c7-41b6-bf4e-2c6eea5fed74",
        "cursor": {
          "ref": "0faa4977-ad54-43c9-bb1a-68fabed0a3e1",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a13f63cf-5b74-448a-bbd8-94a7767d1b59"
        },
        "item": {
          "id": "d05dd6e7-f3c7-41b6-bf4e-2c6eea5fed74",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0cb0e4b9-2397-4027-b039-e4d23ca69d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcc290c-e1d1-4dfd-a2a6-8df36cf5b2b4",
        "cursor": {
          "ref": "9d985274-cba3-4f56-a2eb-7d0bf6dec984",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "732f916f-790d-4be9-b873-f90f45005efe"
        },
        "item": {
          "id": "cbcc290c-e1d1-4dfd-a2a6-8df36cf5b2b4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "edec84d5-6a4d-41f6-88cb-d6d4969d7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f8d801-1f36-4539-b243-cf30aba4b000",
        "cursor": {
          "ref": "beb3aeb1-ab6d-40a0-a523-320c9b5f4e86",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4ffb1a88-147a-4ae8-b29c-92429e432831"
        },
        "item": {
          "id": "f1f8d801-1f36-4539-b243-cf30aba4b000",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f527b8fe-7765-40b0-bcb6-4aaaf0dd29a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48324353-5701-4b7c-a1f3-1bac02b9518e",
        "cursor": {
          "ref": "d461a720-9ab2-461b-b1bd-3b18fa8bfe06",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "64077273-3497-4953-9c64-d915e841412f"
        },
        "item": {
          "id": "48324353-5701-4b7c-a1f3-1bac02b9518e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ced95865-0173-4a00-8f4e-eee085579485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fa981c-c8d7-461c-aca6-3c0bd22ac8f7",
        "cursor": {
          "ref": "a51d00c1-1ab2-4f87-a681-6ee61ee4cfe0",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f693a2ae-712c-4071-b9bd-f29cac8f481a"
        },
        "item": {
          "id": "a8fa981c-c8d7-461c-aca6-3c0bd22ac8f7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6d3695a5-e406-4dd4-9d83-c4fd1d360796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef42a40-8700-40a9-b452-03e2fbcaa34f",
        "cursor": {
          "ref": "1b0f5bff-a11c-42cf-a280-0e56d14aad0d",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f9c2f68-e507-4c69-887c-6bc632bd3521"
        },
        "item": {
          "id": "aef42a40-8700-40a9-b452-03e2fbcaa34f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2dc17cfc-6bdb-4843-9a0e-019d9fa905bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2b4e3d-705a-4921-8b64-456fcefcc2ac",
        "cursor": {
          "ref": "5f5b00e9-0ba8-4dd7-ae2f-6d656ef99d6c",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b412e1a-9ccd-4f8a-9327-aa934d477c63"
        },
        "item": {
          "id": "af2b4e3d-705a-4921-8b64-456fcefcc2ac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "33052812-0399-4373-8eb6-6ba0e8e37cb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe83df8-dcc7-49d6-950c-e8d1fdd3741a",
        "cursor": {
          "ref": "6e325504-fb1d-4a4f-878e-4d326b53420a",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "12bb5d78-4283-4491-9562-8ff4c7396dc0"
        },
        "item": {
          "id": "bfe83df8-dcc7-49d6-950c-e8d1fdd3741a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "492d88fb-eae0-41ea-9425-9f74fc5565cd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0b164-46fd-4e66-80d2-ce7945cfac41",
        "cursor": {
          "ref": "53d0661d-4e04-46de-a74c-887e02e15e44",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "909b969b-a674-40c5-b4b0-9079328da436"
        },
        "item": {
          "id": "70f0b164-46fd-4e66-80d2-ce7945cfac41",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38b1908c-fae7-45c0-ae0e-244b6438aa66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0b164-46fd-4e66-80d2-ce7945cfac41",
        "cursor": {
          "ref": "53d0661d-4e04-46de-a74c-887e02e15e44",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "909b969b-a674-40c5-b4b0-9079328da436"
        },
        "item": {
          "id": "70f0b164-46fd-4e66-80d2-ce7945cfac41",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38b1908c-fae7-45c0-ae0e-244b6438aa66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec94013-d540-44f3-920b-52e234da6ad1",
        "cursor": {
          "ref": "0106a958-935c-4801-8596-eb0bff02661b",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c6e874d4-4de2-43ad-ad6f-25042d5e8b2a"
        },
        "item": {
          "id": "8ec94013-d540-44f3-920b-52e234da6ad1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "29ede259-5fcc-46c5-a7f7-f7c2371a85d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ce751-549c-4c2a-a27e-8b04a2759f65",
        "cursor": {
          "ref": "17d932ba-aa0f-4065-bf10-93c9a5d0c12b",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a9f2b864-6910-4698-a658-20c800e700bb"
        },
        "item": {
          "id": "357ce751-549c-4c2a-a27e-8b04a2759f65",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "456383a4-a861-4643-bc91-16716824fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "357ce751-549c-4c2a-a27e-8b04a2759f65",
        "cursor": {
          "ref": "17d932ba-aa0f-4065-bf10-93c9a5d0c12b",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a9f2b864-6910-4698-a658-20c800e700bb"
        },
        "item": {
          "id": "357ce751-549c-4c2a-a27e-8b04a2759f65",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "456383a4-a861-4643-bc91-16716824fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "0307d48a-f36d-47d1-8505-aff6ff0d9597",
        "cursor": {
          "ref": "3b43932f-c3f6-4e55-a184-2b6c5f9691d2",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "97145282-1e67-4f2f-9026-cc9eb9fdd231"
        },
        "item": {
          "id": "0307d48a-f36d-47d1-8505-aff6ff0d9597",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "88d2e7b3-421d-4500-86c3-893ed80d2d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "d1b0f531-e409-4059-aca1-6fe8d0ec72df",
        "cursor": {
          "ref": "dcce1257-2aad-4fe4-9d36-760f3f0a8af7",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b54f7202-500e-467b-a2cb-0bfc3339dbd2"
        },
        "item": {
          "id": "d1b0f531-e409-4059-aca1-6fe8d0ec72df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bdf45506-fcf6-4dd6-b9ad-fb323dcfe249",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b0f531-e409-4059-aca1-6fe8d0ec72df",
        "cursor": {
          "ref": "dcce1257-2aad-4fe4-9d36-760f3f0a8af7",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b54f7202-500e-467b-a2cb-0bfc3339dbd2"
        },
        "item": {
          "id": "d1b0f531-e409-4059-aca1-6fe8d0ec72df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bdf45506-fcf6-4dd6-b9ad-fb323dcfe249",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2b1f5c-f208-4b5e-8b27-74db6bc028fb",
        "cursor": {
          "ref": "84ee9dc4-ba3e-43ab-9835-4c65069458a7",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c54991c1-4965-4783-8fc8-8d699c225823"
        },
        "item": {
          "id": "9c2b1f5c-f208-4b5e-8b27-74db6bc028fb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bf921193-32a5-4915-8749-9650833abe81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}