{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e4ba7b63-30db-40d9-900b-25979945317e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c4a67ed9-92ae-41d8-bf37-5d8661118a42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a996ee0-8bb9-4ae1-bd92-b291f268ee80",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa65a17-00d3-48dc-bbf7-0be0e2771a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8795bb05-a6b3-4cdd-bf84-8d66f9908086"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "ffb83b0b-8418-461d-93df-9a35ec384bfe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c1ee2e4e-01b6-47b2-a639-4d61b54f5470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5017249c-9372-49e7-8d6b-619575e5c2a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f83eef5f-051d-4c5f-9bab-e1e27841ea91",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2772c0e-dfa7-4414-9aef-6693610b5bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5279713f-d6cf-49db-a97d-e7971bc0d761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea7aeaf-19f0-4104-9c7e-b4434719a539",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bf476f-0ce2-40f4-8f3e-50898d77f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c5e76f-57fe-4d82-b9eb-56f6b2b23cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80af8286-ffd0-43c6-b9ac-b6324bb65c5a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609b0371-5fa0-4982-a78f-5bc46c8444b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00da00b4-c0a9-44ee-8c64-a3a20d73cd41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c1b4c7f-bd1b-4469-a23d-c24042b7c5e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c7721db-c5d6-4e76-8fa9-ad68cbf6dc9e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96e313-09d2-4f58-9b7a-b6760ad0563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b6b9343-6488-4a2a-bee3-2922964c73d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa02df-6760-42c6-8abe-73afd873b961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1b838f-69ab-4c31-8cd9-78ca50383ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaee8082-2685-4879-9f91-0709ad5b612b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cfdff8-2e2a-4b77-b28b-888813e48da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6ecd1a2-1eec-4e49-9bdc-31da0c2ad447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce09432b-6640-492c-be1c-76ce02c60f78",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "cd49e8e5-6298-4ea8-aa05-c4368aaa572c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4676cee9-6063-424a-9498-68d8eb0b54f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccac6b17-ebd9-4466-b660-a7331328e352",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5adb566d-8601-4a90-8d1c-141ffd87bd89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0855b60e-b68c-4a92-bb89-61df9ecf2596"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89e3da11-d83e-4f31-a289-7f74c2f8e74b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b28746f1-e39c-4e8a-a367-d31378bb6635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69294379-6bcc-4867-9ba8-f0d59ed8c66d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c166e50-20fd-4652-9e86-467d691c676b"
            }
          }
        ]
      },
      {
        "id": "c3e8ecb9-e97e-4fe5-a0a5-fe68231653f0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "442248a1-8be2-438a-81c5-535e51aaf4fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23c0875d-7fa6-406f-8cb7-ff00c7b792f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e87266cb-28ab-459c-b634-26eede7afe13",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df818e6-ae36-4d13-8187-84d38f476a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b65b294-ff84-4ab3-b4a8-aef7a546a3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a73a900-eafb-43ef-bea2-24f6ca3e2598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a225cc83-b519-4cbe-a8c5-41a8f4ae9b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd591cce-ca54-4265-9a6e-f19ae8c1306a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e07f63-71d1-418c-89a4-644d9b8912d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb4be47-0b9a-4d2f-b777-c993791c44ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692ca3b9-b489-4edc-a5cd-bb1e4b2ad0d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf604ca-cc4c-4430-9e3d-5174e01f3cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a78bd9-ff04-44a5-a58e-66bc91d62890",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20ab7d-3f36-41c3-997b-87f1c8743235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1587345f-9499-49fd-ab7b-51ba38993176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30411981-1bf3-4449-b100-77f9bd9d0235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a56be1-6687-4d17-904f-3ce3e6c964b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b0352-793f-49f6-a87e-d57404234a99",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb1750b-7c8a-417e-92bc-88dc67773294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2479fd5e-d927-4298-b787-cd8badb77686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cede45-f016-4317-ad75-687d9771b112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e40479fe-b8f8-4ccc-90d8-590fdf9df518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294247fa-8c24-4c6f-9708-a0dc7b521f01",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0fcf31-535b-419d-8268-77c0ca25b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba4fbe0-f84c-44fd-86ee-227713036952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a3776-9e2c-4419-a739-7915fac33312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59590e9-4976-4ca9-a63e-8db08cd0ddbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0693e6c2-fe8a-49fa-a50e-d5966639b852",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22030b6b-d75c-4b11-b665-f7fe29d91510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b8f5d-c803-4f83-9de9-381e53f08731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b345840-7d15-4832-85c6-3f2105ac032b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9577ec1b-0bd1-4780-9071-3009d9bd4df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cfbbe9-2892-472d-b4a0-96335984f0de",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904c62ba-1bc8-4850-8cbc-1a3e92b5ff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009a43bd-a8db-4bb7-967e-f8af8b21ae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0c27f2-f251-4bbb-9d56-9094ded45196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bf1619-e23c-483e-9286-b446acb0d606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e419e1b-cd30-45d1-a53c-1164d4f4dbd0",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e7e58d-9274-46a4-9d57-d2af15ea1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ace8468-5975-4279-8b5a-92635e2b19d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e22b2b-0a0a-445c-87c5-31b24e0805e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d20e9b2-4954-48b0-ad9d-dd315f46c4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61caa0a-2d5e-48af-a910-73cf1927b65a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a167c5bc-e10e-4279-b4ac-d94019258d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4af3e8-8c87-4ede-8ea0-73d2e0f0253a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de351b-d1cc-4e42-ac54-a514dcbadff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3132ef41-f4d9-47da-803b-a84cd08bc4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd13e4d6-4865-4f3d-839f-b7fddbb62d47",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9eea20-0f95-4f18-8552-d5132d345f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72b8fca-fdda-4ec5-a2bc-d8befc1398f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e60e012-e051-4885-9ab7-7529c9e2c018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4aa95a6-d25f-4905-b647-58125a7fa045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86559671-cb75-4751-8d71-f3fcfea11522",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7f5b1f-bf74-441a-9a6b-87c5daf51265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae9aafa-eb7e-4c01-8536-fc9c3824d4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8160e5-81bc-415b-bbb9-19fd363edebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "ab55ce19-789b-493c-a225-43e30cc644dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4abb1c-6f9f-459c-afcb-c6e474e501ac",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6768ac5-f96e-40a2-ba97-6b2c47bf4360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9acff9-44a4-4e89-bae8-6d0aba82680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa5c2e-d063-4092-82a9-ab24cf6df474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "d3f234ca-31c3-437a-9ece-6281bed9670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eecdd3-10b0-4768-96b6-870dc23a0d78",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3639925d-6532-49ed-8d62-ca23d36bbe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494937cb-398d-45e1-ad77-6eaabd72f7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ec3e7-c8b5-4575-9f5a-18dee3ba88cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0602987-3c18-4732-82ee-cef47f5c3b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab0e59e-3ab9-4a4e-b758-91e5d98e2be9",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10906c05-8bb2-433f-965b-1641bc73af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83123e28-0f74-4c19-95a5-5c9c57dcedea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61d6d88-4fe4-43c9-8a27-4a45b51124ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951f5a93-d9c1-488e-aaa7-4060ab0ff925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553e3021-e017-49fe-9a02-201f5f26c4a7",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be9ca68-2b02-4855-b6a2-2274fdb12f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebb0ba1-2cd3-403e-9092-8654c86c7373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6726e488-e24f-4824-8f5e-d635ad178fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7f116a4e-96af-44aa-a135-5ab91cb2bef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c9c923-9eef-46ba-be7b-3088547c3f65",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41b9b94-877f-48cb-9e6b-a9e45b65db0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d2f62-ec83-47f2-a09c-fceb54d4c68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e61dd5-af5c-4574-b48e-f329ef34ad73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "fb40514b-57de-4bb0-9364-d49200e075a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cb32ad-4962-459b-b5e8-9ba49b96aace",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4523e0e3-1171-4952-bcfd-0c6434ee920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef05a92-9bae-498a-98a7-d78ffabc8017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c85df0-7687-4e7c-9b83-48483cbae21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af763038-3c50-486f-b5dd-949568a2fd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ee6927-31af-4d8c-ab46-d69903e06a1a",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c560c4-4414-439e-9008-474fc8c6fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9dfbbc-540f-4ef4-a418-e5712fa3e779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf86955a-ab28-477f-b4f6-531446474865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa3ce8d-4c5a-46c9-8392-5dc4df3ecd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b453c0-1dd1-4e68-9f4d-6f03c7fba413",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31e98ed-6838-4942-ba3b-e8e4662d39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136a771b-fd6b-419e-ba8b-bfe2fd076223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf887fd-a60e-40ac-bfb3-bab4ae6c0a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293de862-676d-40f1-b0a9-f7a3ef35edbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc86d8a-dca0-43c8-8a6f-da7f90550f6d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0fda86-c424-4474-9845-c913679a4046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c9aac8-b468-488c-beac-e9db941955d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969c1b13-dbb0-4cf7-888b-ead8a2505375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323fee83-aab4-49e8-8534-8fc0afe11255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2703ca19-6e0f-45c7-8199-fa70a12a11ff",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6baf150-0a5b-4e93-9dd4-29016e286231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe17526-1f02-4c45-b31d-7b40a35c20f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37032b39-f6c3-48c2-a6a4-9ca614e31baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197f193d-1230-41ec-be2e-6ecd85dc18fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9550fad8-c6d1-436d-a6b1-bf572332c77a",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d15e59c-7ecf-4c90-8306-ed55443d4f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b857a6e8-cc49-4750-8a5e-b224be3dd766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410b7acc-cf3c-4b3a-83e6-fe5cf3c7e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40926885-0d92-4c7e-a4fc-0935a809beeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db5698c-63e8-4967-9d43-388cbfeb8dbd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060c3031-23b9-4da9-878b-0b021752222f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd73bbda-d9d5-49d5-afa0-6061891a251f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6324fa-c905-4ee2-9a88-1a0ff8ab1d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db321ca-c6b8-4826-8124-bcc4531259e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a387c1-f699-4171-8ca4-e9e9696659b3",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b962d1-6a89-4e99-84d6-fc9e7eddaf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a6b225-4d71-474b-98f8-02cc8b3bb2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38ad9ec-4935-4b8b-99c8-81896dff21ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a602683e-9f16-4327-80a7-787f1cd08673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8458f239-7e25-4d87-bb90-1f93c45bd048",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f270f-0623-4b93-94bc-99f60efb9fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ba40bc-4b84-4235-9944-632cda0fcba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c595c9f1-b17c-4840-866b-17fe217441f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f834c3-85e8-44d3-a26e-3265db684f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281905f2-dc9a-4948-a5bf-2f9f3de100f8",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76137a9c-6172-45e9-9080-00f1b71330d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455a32c7-6c7a-4500-bcbe-fd9a7b4952fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4938bf27-fb39-4053-9fbc-214aa8b84150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad78f406-a258-48a9-9a82-ca0f392b427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb4c67b-25b3-47bd-9a3a-564bcca51d64",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5f320f-535b-473a-b5ef-18caf0ae01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774b4983-e8a3-48ef-b455-b89567ce2067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e12a216-3a05-4504-9d3b-852e8daf9efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b4bbb7-5cfd-459d-9834-ae190299d6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092160fb-07fc-4b53-8f52-c908d574819e",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98835c-0c20-491d-a70b-ae253187d396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe85d5c-d5a7-4c96-b799-f4747ed00bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2172ca8e-e373-4761-8e57-7f401821512f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c475740f-fb39-40ed-b135-753c22aee594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017c71a4-c339-48b2-acab-466d8207a95d",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7df1173-35ab-4c6a-84b5-6f289d3aced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb245115-4b6a-43f7-8c9c-3b16053b0f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8f446-69fd-4f06-8860-1cd718a16052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dffd851e-232b-41f3-bd12-41dcc5ca1d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e1ac8b-7170-49e3-bd09-0ffec1075843",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9cc6c0-3989-43b5-a00c-c97dd33f4686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f5ea4f-2b42-4cba-a9b2-1c9bd2e2152b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e5d5bf-473b-46c6-8cc0-92d93524e82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55a76ed-58fd-482a-a50b-d64839be6a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7aac1a-3aad-4694-bbe6-cc9d66c84a3e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa3c230-272b-42cc-b66a-d5ac13105df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d89c5aa-9758-45da-88d8-2b7f1fcccb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3441c169-6891-4cba-9b67-90c39583cb7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74b1db0-b446-4523-9d45-9b4d0fba5c64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3824057-cb29-4362-81e6-351a8f46bb5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb1d9c29-6eda-4359-a681-7355e5168fa8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfcdcec-b573-4a5e-9531-af02a66217a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bb6e510-ef2e-47c4-81f5-38480a0729c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee14cef-61ae-46e3-a629-481a0efe96a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b9431cb4-0784-4664-8134-d91f7ac5cfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5525bc-00e6-4f08-af36-64fb4188c68d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72765b98-173d-4867-ab4a-7aad32563e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d765dab5-1cb6-4067-a99d-d9adcf9d52fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7e31cd-4aee-40be-9ff4-c2ad4a2f3442",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e3aaca0b-c3b1-43aa-beb2-e8c34eeeef13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2ffd762-5d79-4976-ae92-14749dc4364a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "505811f5-aeca-45c6-a7d6-7b0481699aef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "541f2e4f-7275-4cde-85d8-c86e6d93224e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "416cc10c-e789-41c6-be8a-c3ac77ebe0ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "636f2a68-4374-4033-9e01-be5e1a4cf695",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79d55c21-c27b-46a1-a654-1e909cf203bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b38ef26-dda9-4595-b7b6-c37d0af333d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4ebf2f7-b59e-4ec6-a257-90a95383034f"
                }
              }
            ]
          },
          {
            "id": "7a3fd437-b3a0-46a2-94c1-5cbb33efb56f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2fc3620-803f-4c88-8584-79be0f460061",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aa12263-cd68-4bf5-b9ec-07df13a61ccc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "174fc7f0-fffe-4a53-9b3f-a50cbab65683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a91bd2f-bbc0-4e42-a223-5989757c3c16",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "9be1be09-fe98-4b24-96fc-395cc79c3e89"
                    }
                  }
                ]
              },
              {
                "id": "e3c75b53-5a29-40ae-89c3-8492aa600805",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02c9a59-d2ef-4488-a301-0a28cdfd8a96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d184d391-f6e3-4d56-913b-bf242d74e41f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a2c6742-dcb5-4412-943e-a04c7d6f2e96",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a0e14825-f1d5-47b3-93f9-e16070aad161"
                    }
                  }
                ]
              },
              {
                "id": "a6f9c76f-f724-46a9-bb64-6a9d6ec7eb04",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c39c71-a6c3-4d17-aa2f-b150c3fbee14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfcbb4cd-a045-41f9-aa9c-cafefe4a8ee7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ec05de-e274-4071-b670-911bd5b223d7",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4ba3bc96-7279-4649-9d3a-22682326b02c"
                    }
                  }
                ]
              },
              {
                "id": "932d4ffa-33d3-46b0-ac5c-10ba06674a18",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c59edc01-974c-46be-9e9d-8106a5f5e521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e5d9272-d385-4ffa-be32-11dd1b8cd0ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6999ab1-3d9f-4343-a628-e89d04454367",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d75583f3-dad7-43ea-804f-aa5aaa8b40da"
                    }
                  }
                ]
              },
              {
                "id": "64e2cbd6-89f5-4627-ac39-98be5f5e7187",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7937b88d-cc86-485a-8d0e-3944961f643b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3e5147c-9caa-4ad6-8dc3-8aaeecd70853"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c23e094d-2e25-4014-a79a-efe09407be15",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f1b57f61-1f03-4c1b-bea0-5f6d07dd3608"
                    }
                  }
                ]
              },
              {
                "id": "8c49a7fb-6b98-4ef1-89b5-fc1ad6d56944",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b01c9524-1007-4ca8-b887-72430cdfefe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c55741d-a99d-4846-b4c1-6d43cbb89180"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7c786df-63e4-4d61-a4fc-df70f6406520",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ae2a09da-9ab4-407d-a105-e5b9fb2ab123"
                    }
                  }
                ]
              },
              {
                "id": "43779953-69ea-4414-9158-6408f0e7e071",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1afe437d-7d89-44a8-9bb1-aea80522bb03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7b45167-8c5f-4829-a78a-99ba90763f86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "637cab46-a6d0-4cfd-bdf1-4785344e7f62",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f4caa983-5235-4339-9b1b-c94e1f0ea610"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "531b0389-b4e6-4f43-8e8b-96161a14e246",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98e3552d-9c4e-4cb4-94b0-172927a31d7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e31b1b0-6926-40e5-8e4e-6e9bcd2e4261",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddcaa05e-fa4e-4b45-927f-1545b29a9dce"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de82e22d-9f46-46b4-ba17-65ddcf4b1b1f",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "b641813d-c1b5-41b2-b777-d1d8f86f95f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b603e98-5ca1-4166-8119-cf74f29386a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f32f8f71-9d18-4f91-b47a-2a17c0579aad"
            }
          }
        ]
      },
      {
        "id": "ecc50e3a-10f8-42a3-a6f8-8d14b89f79c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a5b974fa-b26b-4cd2-83fa-27ee4ddb5ac0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1974b0db-0d72-4ad6-a79a-1323812448c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2cef70b-5ba3-4699-8db8-af664c947495",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e0d82e-8442-485f-aadf-14f5d0472c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc742309-6e9a-4543-846d-878e538bbdf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57df0117-7e07-4868-8c59-60a8eb61e7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a5c11bb-e77b-4c87-9a8d-509ff242f60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e04231d-7798-4d25-a8d1-9090bed1e04b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74323ded-4f65-4f4e-b1fc-f054b394e685",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8d0c9e1a-4ffe-4a2d-828c-11c4caa7d240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b801bf-1df9-487f-9e7f-900224b5570a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da0c883c-de57-4e06-b449-2d1a2d8ecb18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97f8478f-e5d1-4496-8e18-fdc7950ceef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "475681df-e6a8-470b-a70f-467ece1921b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "975d7f3f-8c70-4eb3-8827-7e394375cfc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86634d1c-6171-4cc5-b991-ff291a413fc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29702f6d-0dbd-4af8-91c6-eaf2bcab4799",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "789fd6e3-352f-4573-afe4-8bb800a71476"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd7d258c-a34f-4df9-aa64-a4049e806d1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59783903-cc27-4e0c-a0fe-3b808dc98307"
            }
          }
        ]
      },
      {
        "id": "78e7ea5a-4123-48cc-9836-ed4ea3a7972e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3e227f8-a4a7-4a25-afc7-f22427f6ce7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb40c6b-ca85-493f-8263-46fc223546d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08634211-b0d1-4629-9a80-aab16366c94f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b58f0-d904-4232-ba43-0feee44c9035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ada64b-47a7-4894-916a-22a21c7a64f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d62a3e-f5a4-4a5d-a27c-8352a7546c98",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ef56d9-e8b8-41c3-bd45-811f28fe0d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3af2a0f-f3a5-41e1-91ec-16103aef2733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569bc19-0b4b-4f85-815e-0fc83ec17c7c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8015f8d-55bf-49d8-a730-62829c349178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061b9b38-785d-455b-b9e5-da842e067f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7cc7be-453d-48e4-8261-b67262b903f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc59a3-bd0c-409a-98aa-b9602e284f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393192fc-bbd8-4a94-9078-a697c1a155c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e7425-0a5f-4675-9574-edc87f85dd06",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d798ec1-26ce-4473-8c35-5023dbcc52e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d472e9cf-9d81-4100-a668-691738b72d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6dc156-5b6f-49f3-a214-ce2d45c85ae5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05002132-82cb-4a6d-b843-cca6628dfcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0b8604-66ee-4e12-92cc-ee4b50e0b768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08066c53-5c7b-494f-a77c-16f3c068eb41",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef91d14b-e171-4682-bd3b-e8117cf4da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d50ca3-d267-4bdd-b092-306ac619a809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafed21f-2381-41ac-aa53-68d523abc647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21d57e5-0066-4a8a-9e9c-bb0d42d2a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6965bc0-59ef-4582-82fe-c34a6208875d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ce4442-5006-4c90-b1b3-f2a4b27ed8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15927a58-ce20-4793-af86-68d76691e06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb63d47-5c03-4f89-98c0-68d2c28a7c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6ddc12-3acc-4685-bd59-8b636d9868ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fb02e1-5713-4aff-a4d9-100d6bc7e47e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7490a-7d9c-4f69-90df-16840cff1393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec6fe17-c786-423d-b9a0-3fd411e682dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb05da1-8b1c-4fe4-8706-00677c646ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5b5ac3-68f3-42b6-b1f2-8e74dcf8d6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d83d8c-2871-42a9-bc47-55e761af881a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0508a8fd-9c53-48d8-bc23-6ca8d815115d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731a0b93-da90-4ead-9891-60f8eb92fd47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e1c60b-ea3b-47bf-86de-566e67daba2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcfade6-f03d-4118-92d2-9a125d726ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d355ba21-910d-4f9c-b6d9-77a52f7ac056",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bbfa9b-8020-4e5c-a4ca-74cca45df129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae5291e-8938-464a-83ca-ae6495cba2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddaac43-fa0e-4ec7-806c-0544ef008ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400b3b50-3810-4740-92cc-88e3bf8bf54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ba7c43-ffe3-4f65-902e-dd6dda4c5786",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064cbc0d-911e-4ebc-be5c-87975c1900db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8900170-897a-498e-89d8-9fe312d8a8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ec0ca-4660-4aac-89a6-5db0bf032c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f07cac-dff8-4b31-80ae-162e65db3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06237dfd-30fc-44fc-9f01-a082657c9f17",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4540c93b-47c2-44cd-b5b8-d5be884e25d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037ce7a9-f3b2-43f6-8cc2-bac15acbc80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091d74d1-4e84-4818-9aaf-ed22441b68bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567bfd71-6528-450e-82c0-2093bb660ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510ef3a-8b24-42d4-bc81-e6bd2b12fce5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c2d7e-32ce-4ca5-b76d-585729b41f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db98cc1-c007-421d-bb80-25c911c642d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc00f47f-9ea2-43f7-b80a-7d599a150353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7495388-3e4c-41ca-aa72-0b1394e0398f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b731559-2af4-4766-908f-46778a96cd45",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec31bf7-93ac-4f6f-8638-ab3e2eb3fbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c8bffd4-8ab1-4201-b43d-4f261cdf02fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2538b-c2ba-43fe-9e9f-c4e4bcfc3ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789438bb-5067-46f1-91da-366ae124640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480785f4-e258-4061-8cd9-0240d0f22e0f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccf0069-4491-4b4c-8b9e-f6be6f75efac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bbdc17-7f80-4a73-8d9c-5a47b1b2717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2ef41b-754f-469d-8c79-c9daa5c255b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258024d8-3086-48e0-ba7d-6a1eef409cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00a98f5-5776-45a1-87d6-00e303188d08",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b034bc8-4982-41cb-9541-9d7dda98aee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46da5700-c8b1-41e6-8b97-242503e12c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc45a8d-1416-4ade-a178-61acdbf2294c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28e4d0b-2f88-4b7a-8194-fe4992fbda5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7320e5f2-3da4-4e1a-bcc4-0c4cfb6d2172",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5794d8c7-c1f5-4f45-953a-79a93a363b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2587bc43-243b-44d3-b176-dbf6cb34227b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19bd8e2-c312-4f79-a1c9-f13a3d2f73d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393e9e8e-8fc3-477a-b4e9-54270b3cdc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c76b86b-31dc-427b-951b-6481d59c423d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab8607b-e399-47da-9332-f9c615876ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf54f43-0c36-4969-ad15-d2cb310c108c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daf2b7d-08cf-499b-96c4-3baa4da08ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c7e2bd-d069-4166-a049-25dddb0d9e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94bfb99-0359-4c37-ac7c-b96d1db66b6c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7f7b74-2bb9-4cc4-94b4-bfdf22edf1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e4edae-2e7f-4d73-96aa-860767f346e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf76790-c9dd-43da-8da0-3e1632f80781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8814d2-46ff-47d1-aa89-600a5c6dc684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73299dd8-e8bb-4879-b56d-a1963181c14d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633875b1-38e1-47a8-bc01-b34b9e40acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d9eec4-d4a0-4986-bb26-e279b857e7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdfcba7-7e66-44b3-be0e-68b2476af172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c045245f-04da-4e92-af1c-cc449d721505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c82293a-c8e7-4ac8-8247-afccd6c7e1d4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69bf647-f62c-488a-ac23-ec723dc67844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c9f039-5f51-4272-8bba-e9a0716347c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802ccdc2-986f-4042-8829-7cb22450dfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9f3001-18ef-4df2-b46f-74e63b2314fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c465bf2c-ca12-41f1-8903-d2785ee6f1a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde8118-709f-44a9-9c08-ce5cf8032024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c83348-b8d3-4ab0-a807-79f0a945d9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b1840-7b62-45a5-8518-1229afa4dada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f90a99-7244-4682-aec0-d7a31c4c0503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6232d07-4f5e-4f35-8ccc-6d3afb6ccc56",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c458f4fa-e1f3-4674-97fa-3dbf8769d566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bcf004-d37c-4773-881d-ae54f4cfbe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22299fd-f382-4b87-8d66-579d59d5697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8952b071-18b0-4acd-9fb9-ebb8aaf1541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b3417-6799-47e8-91ca-e1523df35fa7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf8875c-7bc9-445e-91a9-6ab184ed3fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928db58f-a3df-41a7-a9bc-53d3b54c141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90210618-1b4b-40a9-a9e0-21ff0463bb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3faead-e1ed-4102-b29d-1bbdff9d381f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d6f1b2-a0fb-482f-ad10-54e77276ffc3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61c30b7-be46-4a7d-a8b6-25f0434e442a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2303d134-42d9-41ae-80b5-6be09f87d4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f339d2d6-0414-4908-98e8-36766be821fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22538f1a-01fc-4e0f-9f73-91f77d94612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89713ac8-d2d4-4e7b-9894-a89aea7d1907",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936a4628-529d-4187-8348-2ab82ee837f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bdb9d0-8dd6-43a4-85e5-0d80713fb66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b019ad17-6ffe-4855-b2e0-883bc8221e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b816571b-ef40-4163-ab9c-c1102890f70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e790b49a-8986-43ad-aaba-1f25e14c69b0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c30afe4-f302-4e99-a106-fded7d999928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87b8443-6891-4044-9115-0c95dfe1f04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b793e169-c75b-45f6-8757-bf6b55c8d635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51f623e-5ae5-4ae5-bed7-300992fea163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b18378d-9892-46e4-b12b-7585ac4057f3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725f495a-a824-4167-b000-7d21084c7771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3f6ba4-2a82-4148-9a94-6cdcb146e87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd078483-7db6-4bba-ac85-0b25c976ab5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae35374b-570a-4d72-869d-648bc19d9c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b047a75-1638-4dbb-a934-8239d9092528",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2504e0d2-465d-49cb-ac7c-5279f9ac8c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f721ff7e-6893-4a07-9a93-565f7105f977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203a9bf-234e-4a3a-9a40-2548a65a45fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811b661f-193c-441d-82a0-1a1b87c36e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ce112b-0348-46f9-9482-c10d6678a2ec",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2a5a9d-cab0-465f-8b0f-d2e512122bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a2f3ede-5c03-4cf8-9473-c7201d378266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b81f11-8a4c-4271-94cf-88e1b099dccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b640845-c711-425b-8366-51df0f5c2372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c914e266-33f9-4551-92f1-b22a931f8543",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac832d-2882-42db-bfcc-bd48bddc847b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba77698-e49a-4e9e-83c2-2919279ffede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d213fbf2-8fe2-49f5-8ebd-6638847b1b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f25148-a3a0-4d79-8608-d2de0f8152b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb9e7a8-a8e4-477f-a27b-1576340b3542",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8213c2e1-a7f2-4b5d-adbd-91aa3c2574f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf5975c-dcff-4e88-aa0f-0dbd066f131c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a345c791-1fae-46bc-b41f-cff2229bd41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b69643-05b4-4e42-9df7-496a6ead98ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8752c78-ad6c-48c0-8c59-98267aa66fbf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e00416f-3c48-4cd6-b4fa-f9d8c7b7edef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cea869-6889-439c-bf25-86246a26b09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186ec4bb-c15b-428c-9cee-87b2fbb11d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86e6706-c9e5-4e43-bd9c-6a3fd794f3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdabfd9-26b0-4b82-ac1b-d8f6bb38fae8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78759b4-6b59-4934-bee9-6cbc009da69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a96606-c488-4d06-9420-d9f2d1f7b3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88409d6-de6b-4265-a681-687b6a6c39ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9a4479-e4a3-4bff-9155-f9ebf0e1d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c89582-bc6f-464e-ac2f-305c871267bb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04f5559-ea50-4561-8f70-3db7c493e82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6e9aa9-46b1-444b-9541-a2b60c34b461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26676a8-1cc8-46ba-b8d6-f154ff241294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fa9a93-c85a-401b-b6d7-923a8ecc35e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddb7170-c435-4040-abdd-74a7153deb4b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e082ffbd-448d-42e6-aea5-bea2089ecda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4567b55c-f5ec-42f0-81d8-7e61698ba1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8b1c7-0a60-46c5-ae13-7ce39482e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a77604-51a1-4e7b-b514-a4d775df6dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d42bfd-a3f3-4671-a070-0c43bd761fdb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7791ff88-dc54-490b-8df1-00cca30d4888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc06015-9b76-496c-abaf-6869599934d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be320c7-a1ed-46c0-8d59-672675352e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96562c2e-51b7-4425-a13d-f2c1daab5281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91713a4f-119b-44b3-86e7-733fa97d19f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deed625c-2a01-4620-a73e-4ac6e1a60943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e085b94-f2f6-423a-a10a-98fd494b6a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3181ce6-ad78-4295-b337-5c70ad4fe307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4e58ae-fc2c-4971-9402-facf13c1dacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37347588-2499-4678-bcd2-9913b45e2d8f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33074393-ae40-4643-a2e9-7b9895629637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b2ba4b-0bad-4942-b293-b5df072c4d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30247b1-7e31-4b80-a22f-144a10b0127c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a265c3e6-f0a1-4d72-974a-f2d4cfefde46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f337c6-a194-47d8-b3e5-9f36a0e77fd2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6681c597-6c84-40d2-a410-2eab7ac71dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5a90e-6d6a-49cf-b62f-f94ab207be37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed94b90f-aa74-48c9-b0eb-0ab7a87fd66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeefa50b-e39e-4f8f-8107-29b9a3a806a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe33325b-d637-4e4f-85e1-6fa43c2ccf00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7609f002-8eea-421d-b4fd-d00f0c90114c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0672e021-8f77-4b68-a9d8-d4c3c93667c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec01d8-c607-46f1-b598-468fdadab1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e235ff6-69b3-4ee0-8bb3-0c51b703b6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7599472-3a4b-499c-9aec-335976134fc9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb126fc2-7fe3-4450-a70a-e91f5a94164d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde3bcd5-6393-4b56-b0fb-eec251f3eaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709bc1de-7179-48b5-a150-774166d0afbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ff0d2-6141-4cf2-b187-ac439fba2bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb42081-7d51-45e1-9869-0353e7dacf99",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe669957-402b-46e6-8629-3ec8c8766d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e82165b-d4e2-432b-a4f5-53ff175dd971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3ed13b-92ea-464f-b92b-6f4ddc7d126a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ec12e6-1dba-4c7d-84a7-ca3e6a3d0c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ee16ed-2953-49e3-84a0-6a2b271b5c6d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b55d4ad-04c0-45ad-b47a-8ea910bcd28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839a52da-a75a-4be5-b2a9-07a7e1d25dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acb2553-282a-4d19-94fd-1e4b75b03d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c473d1f-7c95-4bd8-8f98-9b380b104bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0082dabc-0e88-4545-88f0-0329f360fdaf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c75dc-3db9-4b0f-84e4-b838fbdde096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723718ed-937f-46fa-95ff-6b30b8b08023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf09bee-2d53-4dd9-924e-5dd29a00dbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ebefa2-d180-47d2-8c9b-7b807d17068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ea81c7-b6da-4596-a3ff-a146c769dcfe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d2f581-f625-4ea2-ba3f-f3a2b00dedf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85205cd9-a00e-46ef-bb6a-dc8cb102586f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c853164-c255-4402-b441-af41e40d3959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae32a6c-d720-4dc0-bd69-ee1476c0b533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13887758-67ab-44ae-ac7f-81be2b75aabb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caf0e3a-896b-4d15-befb-e66a4ab346ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dfb100-2593-44df-bdea-ae82ecc650e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd13aa2-6f29-423f-ba76-7f49c71f9b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768ae51b-191a-4acb-ac7c-d4a80ca5d193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611de0f-a326-40a7-9b29-021c8b87c948",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d118355-398e-4fbf-aa15-5ec39c9e8f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbb4227-39e6-43cb-a86b-1c3cf0906bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f2a419-01a9-4c86-92cc-9bc6d3005a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e65cecd-0d33-4abf-81aa-2e51f903223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b985da-bce5-4b58-859a-3696cb804d64",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98188214-97d7-4b1c-8e8c-feabb4a6a5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f0b6ec-d7ca-4e8f-82ce-730ba8822e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0c689-1367-49db-8b0a-58d9e39cc1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c971b7-b4b9-48a9-935c-2a3ce056e690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9d25d0-19c3-41bf-bc44-f3169f219978",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5510af4e-3cf8-4431-aeb8-189297d4b314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c665fb4-eac3-4266-aca8-9b7217ed46fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbce8f9-8f0a-4a2e-bcd1-bf34eb65d6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69538dd-58e3-4931-9663-92e61ddcc5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8fa942-e181-495d-923f-8dc9b978870f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434a3b49-883b-45da-b186-b15bf27d1da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee86d80-da4c-4be8-bca6-41d8cf485be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9109a0e7-32e3-4961-ab04-cb0129f64508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1aece6-eb4e-466c-a038-96f8f06980a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a28c3e3-49b7-4f0d-92a4-cbdbbc9b532a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b299710d-c6a1-4f87-8608-b531133a543e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939cb2bb-2a2b-4dc2-ba30-efd80c4e597c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4603efe4-14d6-4fa1-9e1c-f3e736091975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750288d7-5bc1-4e2e-8ccd-0004ce245bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e4852e-2ad9-47b3-a5be-a04b02ff65d0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60316ae-df6e-4aae-9cba-9d713885a002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195816ae-f7f8-404c-ba28-0ca8bf7ddaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aff81d-22c0-4495-8760-44ce5295389d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f61d98b-07f2-48fb-a819-8d9e59c5c605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78fe9f1-8eaa-412d-9cdf-6fd227ffb9a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed327af3-9114-439a-bd25-573302c8b123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4913b1de-e68a-4f52-8e00-8c4061b7d1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44638ef-9990-4482-a4cc-3e55e9b0b738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8f6e95-4d63-47f9-b1cf-b89aad6d51cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e4bf2e-ec49-4a70-95e9-cb3ca9d7f422",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf20298-69d4-4021-b23e-e3ab0d020135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1224f3c-dcee-4751-a62f-bf9182d7945e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2627c622-8be1-4964-a96c-89a1304365d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24bdae7-5b34-49de-a5f3-db65693f158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eadfe6f-bf2f-4d3c-8d2e-58e6262eb71a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed27be7-e283-452b-8989-1ba2bfd2c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cb896a-f4b7-4c33-b596-432f7c6985ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b87365-3922-41fb-8957-37093e04117b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c9e6b4-2530-48e4-81b7-c945480b1d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0b7e69-da71-4e0a-8bed-af45e6a278c0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7169d99-319d-4f39-954b-c84147c221b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f505a045-4113-40f7-9956-1c8c6b8b2bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8bf8d-667c-4e05-bc5b-5464914c63ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ba3f76-ba5a-4801-a4fb-d5f968b7b129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb1b949-f5d8-431e-bbf6-0b504133f01a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3953149f-3036-42c5-8764-2355bda6578d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec8a750-15ea-4370-b4f7-23bcf25f105e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60576c27-c083-4311-be0e-04e33a2fa669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2576a0-0d42-4576-8304-46d5ab0d4f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc9cd67-88c8-4392-bc9f-bc042c3b0f01",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f569436-71fd-4226-b3cc-287ebedb6ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d5b433-63a7-428e-b856-bb49b59be760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f7dfa-1f9c-4ac4-8abf-108e608fe952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca6f820-7ffd-4656-a836-acb94e5c852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de094369-4b02-4a56-a39d-8d4875ea1f65",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17afcab-0807-4b2c-9142-ffd996dd9134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a90844-0e4e-4411-8875-d9fc4b6b9ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b7e60d-ab0a-49f3-a520-bc440e872407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4788dc7-5824-49af-b016-23940492959e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5995107a-3795-4309-8e50-1634aa27c9db",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e5c677-1831-4626-ad13-bc014f200bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ae0644-1233-40e4-adae-f9c0a9a78ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c568592-992d-456b-a4e5-0f2a9f487b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c825639-3f42-4abd-b245-6192d59f4e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c77fbc9-bfe3-4eb3-8bfb-548d060b9eb4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7fddd5-667d-4d87-9f49-a6d64dc9744f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097a1d0a-03a5-43b3-8320-f7c8a092149c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cce96a-7afc-41ac-91f1-f0e8d27b5e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04046b2d-db05-4168-928b-63e6b8b4318c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa269c76-67c8-4756-8a29-d82749656540",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3b6d68-7e15-4a74-b806-1373260ac049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed0f87e-f955-4fa8-811d-241a345fede4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa96c2c5-d5e7-4ab5-ac63-66e1d430db00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99906013-d4bf-4214-8eeb-54af7378b58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f9961c-5cfa-48de-a033-7a4ea0d67944",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a87ac8-6d63-42d2-a4ff-e9761276538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03b35e5-b441-489c-8fd1-5c794f5a73b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46ddc1f-c957-498b-8d30-7e5be2f5c62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a9ff6b-d2aa-41c7-8735-a09fe60438df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a39064e-f4e8-4576-9d47-e78149cb9d5b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5232e9-6aec-4f05-bdab-961303803e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7907686c-62a6-4145-bd80-72c2783f3631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641633cc-cf97-48b9-bc98-39df272905c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c9b73b-42a0-4e51-8c74-44da337dcc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8e5a1d-a761-4c87-a904-ac06b752336d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70e42a7-ea72-41e5-8615-17e807faab20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2b98e6-899a-4a95-8050-d5cfb53249be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8ca1a4-863f-4299-bcdb-1b30738932d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02499549-220c-47a6-ad57-a687cd84dd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fed6f8-47b4-4880-9b61-dea54f14f6e2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d602d-1de7-4ae0-9030-81eb05438e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7930c44f-df9d-46d2-ba5f-c4619ddb6ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a2db3d-a18e-4b75-ac80-4af64c2aa164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54211190-2ce5-4e55-95a9-7c801aa5a19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60a061-d3fd-4c7b-894f-507ad5b01e68",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e92c8d-b598-45f3-a4b2-93d1944ad3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e34501ac-32b1-46fe-9cb5-7f2f22e1d432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2895ef9-e7c4-4a89-9f7c-88e0cd9bf7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888b9c69-7418-493b-a183-c1b55eaf5a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d8344a-d75b-4ab1-88cf-9a960b2936e1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fe1217-d245-4541-87c8-b1986e08e248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf92245-8838-455f-8a4a-035e4f8de3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c6a7e5-00da-4428-b084-9ebc2a3673c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62677812-13b1-464a-bd0c-7d165ac66096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db239ecb-fec3-4595-85a1-eebc4375ccd3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea3e176-975c-4176-8124-d7307086ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45777346-d321-4fa4-ba6f-4407c0382987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a0d03d-f43d-454d-b7a9-1f9afbbce818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a85a96-ab44-4eaa-84fe-79b0bbec0720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c1bb1-7371-4869-acdb-c3a86821d5f4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a9fdd3-4d5a-4785-9813-a1c72a0dfbd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30aa28f-b7b3-4f46-8120-45d8dbdb661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbfaf7d-0552-4b3a-bec7-f5058fdf1238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0fe9c0-9724-431b-abae-8fcdc7477113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d8e25e-8199-48a5-ad94-11595fa53c77",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd82ee2d-0360-4951-b362-7e6eed230009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9e2f8e-25c5-44f5-9386-d0c207280869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2983016b-b866-4348-aac4-5fda24a4e9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2865b69f-d51d-4d7e-9fbd-83f011145887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7005f8a9-a197-4d6e-84a5-bc4b0a4f2d30",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc583131-04cc-430a-9378-34f398dbc68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbc9550-7002-4397-b230-83cd8991dd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0872f153-3076-43d7-bf9c-5c305fef5cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8ef360-b6fe-418a-b76d-f15a1393fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24830980-18f5-4731-8d66-43157d1dec7a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3983fc3-af38-4c0e-9778-c8fde5e09384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620ff24e-53b6-48c9-a239-00b6fb5814fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0adcd0-432c-4d3e-baa5-73cba6a8e872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d61b5a2-e472-4c75-abbd-37113cab81e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d8c040-ccdb-463c-9d60-7ccf930cc398",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d12145f-434c-4c53-a0fc-01cbd27722ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3e6ee1-f72d-4790-bc52-1a0aff3b01c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c640ed-220c-46c5-a405-699aaa760f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954f747d-77cc-4c16-90cc-0d0a8eda499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4ea3c7-caa6-42b4-8861-d77bad843e65",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c105bdb9-e244-44f5-9ccc-e59b6b03d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbc53db-7aa3-40f9-bb32-f3daaa6e1c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5da9b1-be62-4c17-b20e-39afba9fe5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8529b5d8-af2a-4e74-a3e4-9b92734e6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e72cf8c-0900-40d1-8b8d-fa8c4615977b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f3b4b6-1aa4-446a-93b5-c58f6d688c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee24d639-95fb-4fcc-95fb-76aa11d969a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0880153-f223-4c16-a70b-b0fc64f0a1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4573b6b4-6e80-4379-b7f6-552f9e2743ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895c085-ca17-4946-a6e9-0bd55663ae89",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f235d06a-20a3-4b56-a2af-6a1ba5635495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1a40ea-f6e2-4f4c-b572-4d72bca3195c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cec698-b32a-483e-aaf4-9e36e59ca688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54d7918-b1ff-49df-b4fc-a34706fad683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfcf33c-7aaf-4f74-9a73-9568db1898eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4490a42-0af9-4191-96d0-6718e9aded6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cff94d6-e854-49b7-a4d8-b9eeaafa7ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316a5c2-4ba8-425e-8048-752e3500ffa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e67c5e7-c59f-45e1-b5c5-c13a638d2fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75865cad-ad9b-47f7-9735-1461b9ddfc02",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e6ace4-cf99-4249-b20f-d60bf682ad47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdc4856-40b5-4189-b680-53ad86ec5f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db8c8db-36e6-464e-a848-573bee8a15c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfae7490-8fc7-4fbb-b70c-71e02ae289a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03c8535-e32e-4d82-b0ef-33c116e90194",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0083dd-47cc-431f-942a-2e198cf74c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a695936c-623e-4926-bac2-5c53c67fa923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33df7f81-48e6-49c0-96c0-1fdb7bbefb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c337c8c-9e5d-4218-9ceb-8eec106e83d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c546c45e-5938-4aaf-92d9-b523d282e04c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90155fbe-4caf-4007-bc01-2a68b0c5985e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f067ca1a-2e59-4ddf-8822-55eaef08ae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de19df-50b9-4180-82b0-3dd386d49a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18982ac-7c12-4608-8636-5458d8fb6c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407e93d-3f9a-4126-b114-33bb5ddabfad",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7774155-f025-4a16-b11e-7d1146b09b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6407ff1-4011-4b05-a33b-0e310f9ea9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87c50eb-e25e-4fbc-9674-7166a2a72b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771f72a1-7dde-4097-af06-0d042f4638ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4419cd2-b59d-4ca8-9c7f-c4dcade73f0f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbd973e-8e4f-4597-abaf-bcd1a97d9035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083d352c-61bd-43bb-bd02-cfd5f532dad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e341fe8-23b9-4768-8bd2-8a3a39bb5a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e410efb5-23dd-450d-ad9a-f1c409258d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1f32f0-dbd7-44f2-829a-2e0a8d00692f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d1d07a-a5cb-4184-95c6-53441d3dc562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afc7a76-1042-42eb-9546-0c0fb37947f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e55834-df0e-41b4-8511-2e0cc7568578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b857c4-d4f8-43da-97a3-2ce4b94c05f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598580f5-808b-4b15-bd28-53c017a5ba5b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cea3ba5-382a-494f-9eca-5311f44e1d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acea9a5c-01b5-4eeb-aebd-82a0f32913c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ebb96-52d8-4e47-b1de-80061ebc6d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f440c4-6d92-477f-9934-46d385e9ecc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6683f85f-de09-41ff-8de4-35d8db0432e0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bc1617-d810-4710-ae1a-86186b2b5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b982c0e4-9d49-4a12-b31a-831710e6c599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aa1f0e-233d-47c8-bda1-b6c27bd45ff8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f132ee30-e783-4cad-908b-9e74bf69ac50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57404eba-075f-46b0-934d-c69374335f36",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79578c9-904e-4607-b367-ede25bf77e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a71df1d-3f65-437d-8e13-e622be957f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc74955-d9ba-4e72-926e-059311d3c846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46eb58de-2420-47a0-b1d1-e8d3dbd0cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a68b6d-4108-4f30-b6c9-4d3949f014b1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a7b37b-4c57-4f3c-9b19-375688a9b3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5161bd71-060d-4057-97ce-6008f64d2997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975bfecc-ad5e-4fef-af99-62f01d4b719e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09125c34-736f-4bf7-83f2-8706755d7931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9d355e-2d04-4d1e-9cf7-b52559784bde",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292759f1-325e-48d4-8b3a-a272a5a5487d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e449c544-ea21-4e81-abb5-eb64ab00a86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e5bdc9-0a4f-4792-8c32-e397984296e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a86a807-8ee6-477b-a9f2-b55509e5d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d89eee-d2e8-4566-a761-bc355c74bacd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1402a1b9-c373-498a-8765-c7ceb96a1c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867db943-039d-4ec9-9d47-a5b3143fe664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b37225-db89-4223-87b4-3d01e9f7420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a924a732-451d-4360-8f0f-40e9728a777a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dc8be3-6d8d-404e-8f65-792e4cb3532a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0e3acb-12df-4f46-a21d-4a4dc947af28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec0e0b8-9638-4950-b55a-cd0cc3cf0cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedd2b8c-cef2-4dc3-b21c-7ef6f540c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7a7892-61d9-498b-bc91-d87cfd457f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db4bc65-6162-4f24-8ec1-56dde595104a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46beac39-0786-4cc3-8e82-844ef497d28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2387c7-b7e2-416d-be22-04a5c5425fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d398af83-5bc7-4b9f-b1f1-e1249fc1eff9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af841c-2fbb-4d4d-8002-9d46ae227250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5905df6-b4c9-46fb-a2e9-b2d7667755d3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694a79ec-8a7f-4a42-82c3-0536a9171223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5864921d-45e9-41a1-b730-1de4f1f9f4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0bb90e-db85-482c-b98a-ae4094463bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5b1c27-522a-4cec-b87b-75ee5f457fe2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "128cb68e-0ae1-4992-a0f5-9b72dae7accd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3fe5c7c-02fb-4f9a-bf33-010fea20a7a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e3d7764-83c2-4771-b89b-415d51db0620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff273f9c-9b3a-4d1c-bfee-e4ecb3e66b37"
                    }
                  }
                ]
              },
              {
                "id": "bf88e0a9-1d96-4609-ac91-c70d5a63af48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "145d3ca1-a368-491a-a5f7-f3f1ad0b9955",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f65e87a-4691-4df6-8a2d-b57fe773e271",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ffe926e7-4303-470b-baa6-603dc81de980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad007bf-5743-43e9-a496-37632e22008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a88a6ab3-ecfd-44da-b5d5-5e2f12ddf707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83245d5d-a116-4af5-8886-7f66c2817ad0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b093714b-ca3f-48a4-b102-e39d050bdbe0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a4e845a7-c661-496a-822f-38c195213802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e8c619-74b4-4e81-9704-6e768e44877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94c699de-70ba-4384-af8e-516aa7ce735f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d336d8f-4c69-494a-9288-0c3ed64a8a3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30189358-3946-4ca4-a0ed-c7365990820b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6ef2be8-f722-400f-bf4a-fc795757a57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7441aba6-bc44-4d24-8725-a05b48a4d775"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a341db5-30b7-4fbd-ba66-93ab8a576251",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "341498ad-217d-4b3d-9159-8d4963796645"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5602f0e3-6bd4-4809-aaac-97b636dd9da4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f939050-04ab-4021-a779-f9d6db1aa3b1"
            }
          }
        ]
      },
      {
        "id": "ea6d63db-b00d-480f-ae7a-7d2a0a3b63c6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f7262383-6e82-483c-8b06-ad912d21d0c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e9396d9-e477-4f73-af44-8b501bdab5d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "478f8b01-2090-4013-9338-b0f8b6c9d76d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69ed157-eb24-4d89-baa0-562204eb0675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b28188-1a97-4f98-b0ee-dd88bb4dfa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5f0669-80e1-4331-8261-f6847f15708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9edf0138-3290-4325-9f26-1d7b1fd10ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f26ad-6dd6-48f1-8e97-9e6ee48d7ee7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1887d610-8c6b-49c1-a4ea-024c7e560797",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ca299a60-ce4e-42d7-8c27-3ab342b1213b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5774f6f0-9136-47cf-8c91-9c236cf3fc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cc1ed18-1db1-48b3-8049-e3c45d29b051"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb9f887-b47a-4631-898a-a1f32c634efc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d455bbd-c863-4d4c-8fbe-68fb100cc8fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a82278-f357-43de-a6d5-55d56b95af61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1cd125d-5573-4a9f-bbfe-9d23324c7242"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f229d3d6-3179-41b9-80ca-bdab8d36ae93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "64cf8b82-969b-4b16-863a-f7dda6d2a84b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3143bac1-cf3d-4cbf-949c-da822a943741",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71f974dd-efa1-40ae-ab7f-7efb2c6828ca"
            }
          }
        ]
      },
      {
        "id": "ec139246-6636-4e1a-be71-92266709ee73",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2e209ea5-d320-4f1c-adcf-a3fd9d525b32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98b0f579-3844-4c4b-a190-ca4993c1e672",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ea75138-56b7-44f3-a9c5-ec35d95dfa78",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098aa6f5-a990-44d6-abd7-81e18b200d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89774bce-554f-4d9d-a3fc-a098198baaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2f6396-4e60-46dd-83ca-fed94ec7c998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f108a48b-b227-463c-9c1d-20c476b7bc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ef9812-7ca9-4831-80e4-ba8f37103928",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7a0f99-d5a5-4032-bbdc-952b0f2c1fe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "62ea915e-b0fe-4920-abcd-c61583f62d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5d6afd-e41d-4ccc-b195-f63d5bc50775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3243cd52-5d17-46cf-ba8e-82aa66a0df84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521a53be-723b-47ed-96e6-fd199f852b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5ad9aa-93d4-4201-9c57-034dcc8d97cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf0e2b7-673d-4c21-a132-6dd7621143ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0e2ff7-12d2-43b1-9474-ba53dd8705a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "913a74f3-0e9a-4a3a-80ed-5539783bd0b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "198596f6-0e44-437b-91f1-fd8624b0a553"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5702b60-e429-49ff-b357-36e8277ce96e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cd32c8b-7e66-4a99-a241-e88f7379aeda"
            }
          }
        ]
      },
      {
        "id": "65cf3e49-d003-4631-9e0c-36201da11ad1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "237998a9-63c1-4ce8-97e4-6c0e6d967af7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90b2935d-2c98-40c0-8a48-5ab979101e11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b428d78-06dd-49c9-a978-683b8c03f17e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1139d75-8a2a-4967-830f-f422bfedd0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40254482-f51f-45aa-828b-1d6d94c51a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e0448a-8d89-4d44-a84d-5e3d07d464f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef42b2cd-00c0-4b63-88b4-3633f3dd4a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9159c2f8-f2dc-4eed-9dab-6d285f30d2e9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545489b5-2e48-4a91-bb1f-c76144826213",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1085e551-0981-41c0-9054-72dcf46c111c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f520807-f95c-4b84-9172-81a6fce568d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49842a82-0990-4b5a-9fc7-0a1edd310068"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b9ef12d-6a64-4237-a546-eb3b261a7acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d6e94f4-abf1-4be8-9818-89a8d1e5bde2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15790844-6c65-4781-ac6d-b53e5aec6917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bdc7279-aecd-45f1-a996-1e381dddf2cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9accf3-09a3-4a35-968a-cde2d44b97db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "6ddbe592-c027-4e3c-a997-a7e2e4e22720"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f34f3706-86b8-4b25-b5d3-247330695fb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a4d9f34-6566-4072-8d1f-ca3141dc2a61"
            }
          }
        ]
      },
      {
        "id": "309199fa-88ab-4242-b1a7-b37196f76756",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "753f3e11-ab2b-403b-96ff-1ca51675cb3e",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 54.02999999999998,
      "responseMin": 4,
      "responseMax": 661,
      "responseSd": 95.49413123328581,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664153678679,
      "completed": 1664153696137
    },
    "executions": [
      {
        "id": "8a996ee0-8bb9-4ae1-bd92-b291f268ee80",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0fb48147-8187-45bd-bd68-72083c002aaa",
          "httpRequestId": "7328706f-6fe2-46d9-a325-095c73851c06"
        },
        "item": {
          "id": "8a996ee0-8bb9-4ae1-bd92-b291f268ee80",
          "name": "did_json"
        },
        "response": {
          "id": "ccf14751-2237-4fd1-bebe-4332ff2a755f",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "f83eef5f-051d-4c5f-9bab-e1e27841ea91",
        "cursor": {
          "ref": "07b6f65a-24ea-46ed-8500-2198e40f376e",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e0257ab-903b-420c-94de-a517dcd836e2"
        },
        "item": {
          "id": "f83eef5f-051d-4c5f-9bab-e1e27841ea91",
          "name": "did:invalid"
        },
        "response": {
          "id": "1cc821da-aa20-4834-a5ab-743e7a767742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83eef5f-051d-4c5f-9bab-e1e27841ea91",
        "cursor": {
          "ref": "07b6f65a-24ea-46ed-8500-2198e40f376e",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e0257ab-903b-420c-94de-a517dcd836e2"
        },
        "item": {
          "id": "f83eef5f-051d-4c5f-9bab-e1e27841ea91",
          "name": "did:invalid"
        },
        "response": {
          "id": "1cc821da-aa20-4834-a5ab-743e7a767742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea7aeaf-19f0-4104-9c7e-b4434719a539",
        "cursor": {
          "ref": "2c3f6aec-fe2f-40ab-9525-e66f3aa6de65",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "88fd9f73-9c17-4815-a8ca-2cb9a122c930"
        },
        "item": {
          "id": "bea7aeaf-19f0-4104-9c7e-b4434719a539",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a91cdfff-ff7b-4354-a605-2bc98385e2a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80af8286-ffd0-43c6-b9ac-b6324bb65c5a",
        "cursor": {
          "ref": "bb3064b8-2cb2-4a8c-89d4-d415a3def3d5",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d146f789-1bcc-4304-a691-345026c13d2d"
        },
        "item": {
          "id": "80af8286-ffd0-43c6-b9ac-b6324bb65c5a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7b2ef497-7622-457a-9401-f2c00180c039",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7721db-c5d6-4e76-8fa9-ad68cbf6dc9e",
        "cursor": {
          "ref": "602cd1c2-13cc-4a83-a7ac-ef39d1a31344",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0808d5a-425b-4920-b759-e68723d4f84b"
        },
        "item": {
          "id": "7c7721db-c5d6-4e76-8fa9-ad68cbf6dc9e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "141d8201-0079-4924-8547-98ad53d418c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee8082-2685-4879-9f91-0709ad5b612b",
        "cursor": {
          "ref": "b3ca1af0-7f41-43fd-8ae4-77814051aaf2",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "94115bae-d0ee-4017-adc6-801cfc10dea1"
        },
        "item": {
          "id": "eaee8082-2685-4879-9f91-0709ad5b612b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5192075a-787c-4ee8-a136-685e1ef4b9a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee8082-2685-4879-9f91-0709ad5b612b",
        "cursor": {
          "ref": "b3ca1af0-7f41-43fd-8ae4-77814051aaf2",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "94115bae-d0ee-4017-adc6-801cfc10dea1"
        },
        "item": {
          "id": "eaee8082-2685-4879-9f91-0709ad5b612b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5192075a-787c-4ee8-a136-685e1ef4b9a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccac6b17-ebd9-4466-b660-a7331328e352",
        "cursor": {
          "ref": "6ad34f9e-b842-44ab-8e1a-ad2337e61bc3",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a2c0ebd6-e991-4ae3-845d-7e36eefd3079"
        },
        "item": {
          "id": "ccac6b17-ebd9-4466-b660-a7331328e352",
          "name": "identifiers"
        },
        "response": {
          "id": "491061eb-d73a-4959-9eb5-388cb5924299",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "Error",
              "index": 1,
              "test": "response validates against schema",
              "message": "schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf",
              "stack": "Error: schema is invalid: data.properties['didDocument'].properties['service'].items.properties['oneOf'] should be object,boolean, data.properties['didDocument'].properties['service'].items should be array, data.properties['didDocument'].properties['service'].items should match some schema in anyOf\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "e87266cb-28ab-459c-b634-26eede7afe13",
        "cursor": {
          "ref": "c3c60b29-e64c-4d71-9bd8-5be1d5305307",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ccc2d29-5c10-41b5-afa1-445fad4218e0"
        },
        "item": {
          "id": "e87266cb-28ab-459c-b634-26eede7afe13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "33e64486-b110-469a-9890-a8ae3029328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87266cb-28ab-459c-b634-26eede7afe13",
        "cursor": {
          "ref": "c3c60b29-e64c-4d71-9bd8-5be1d5305307",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ccc2d29-5c10-41b5-afa1-445fad4218e0"
        },
        "item": {
          "id": "e87266cb-28ab-459c-b634-26eede7afe13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "33e64486-b110-469a-9890-a8ae3029328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87266cb-28ab-459c-b634-26eede7afe13",
        "cursor": {
          "ref": "c3c60b29-e64c-4d71-9bd8-5be1d5305307",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ccc2d29-5c10-41b5-afa1-445fad4218e0"
        },
        "item": {
          "id": "e87266cb-28ab-459c-b634-26eede7afe13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "33e64486-b110-469a-9890-a8ae3029328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd591cce-ca54-4265-9a6e-f19ae8c1306a",
        "cursor": {
          "ref": "fdc77654-fef0-462e-97fa-b03523c894ff",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a27b6a83-4dd9-4c8f-b0d9-73fee9da8137"
        },
        "item": {
          "id": "bd591cce-ca54-4265-9a6e-f19ae8c1306a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "04290b35-37a0-4868-a883-30ecfab4c1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd591cce-ca54-4265-9a6e-f19ae8c1306a",
        "cursor": {
          "ref": "fdc77654-fef0-462e-97fa-b03523c894ff",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a27b6a83-4dd9-4c8f-b0d9-73fee9da8137"
        },
        "item": {
          "id": "bd591cce-ca54-4265-9a6e-f19ae8c1306a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "04290b35-37a0-4868-a883-30ecfab4c1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a78bd9-ff04-44a5-a58e-66bc91d62890",
        "cursor": {
          "ref": "459d4f8b-83ed-4eb3-b6d8-5be9e68e11c9",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83cc95dd-0294-4f8e-b37c-1abe8cc525bb"
        },
        "item": {
          "id": "77a78bd9-ff04-44a5-a58e-66bc91d62890",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "f8d3ccb7-49ee-46a3-bfe9-aa5bf8145e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a78bd9-ff04-44a5-a58e-66bc91d62890",
        "cursor": {
          "ref": "459d4f8b-83ed-4eb3-b6d8-5be9e68e11c9",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83cc95dd-0294-4f8e-b37c-1abe8cc525bb"
        },
        "item": {
          "id": "77a78bd9-ff04-44a5-a58e-66bc91d62890",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "f8d3ccb7-49ee-46a3-bfe9-aa5bf8145e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b0352-793f-49f6-a87e-d57404234a99",
        "cursor": {
          "ref": "4bfc71a2-5ad1-453b-b0d5-1b22f22f4c75",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6cfd8e05-215d-4e6b-a986-843f57af2831"
        },
        "item": {
          "id": "619b0352-793f-49f6-a87e-d57404234a99",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "0d9bead3-8290-45fd-ba89-34465f427ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b0352-793f-49f6-a87e-d57404234a99",
        "cursor": {
          "ref": "4bfc71a2-5ad1-453b-b0d5-1b22f22f4c75",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6cfd8e05-215d-4e6b-a986-843f57af2831"
        },
        "item": {
          "id": "619b0352-793f-49f6-a87e-d57404234a99",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "0d9bead3-8290-45fd-ba89-34465f427ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294247fa-8c24-4c6f-9708-a0dc7b521f01",
        "cursor": {
          "ref": "d3dc6569-bca3-4827-b697-090b5c2120b5",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97bfa9d1-2840-4f3a-b906-e5aa7ed3e0d5"
        },
        "item": {
          "id": "294247fa-8c24-4c6f-9708-a0dc7b521f01",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "2dc5f01b-aa68-4b35-8397-0d10d135bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294247fa-8c24-4c6f-9708-a0dc7b521f01",
        "cursor": {
          "ref": "d3dc6569-bca3-4827-b697-090b5c2120b5",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97bfa9d1-2840-4f3a-b906-e5aa7ed3e0d5"
        },
        "item": {
          "id": "294247fa-8c24-4c6f-9708-a0dc7b521f01",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "2dc5f01b-aa68-4b35-8397-0d10d135bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693e6c2-fe8a-49fa-a50e-d5966639b852",
        "cursor": {
          "ref": "935733b8-c7e3-471f-b664-683beac8a3fc",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3b6e3ad-d8a7-41bc-bb4f-2ba844a30eb7"
        },
        "item": {
          "id": "0693e6c2-fe8a-49fa-a50e-d5966639b852",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3004fec5-0a41-4e06-a573-2ca92338d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693e6c2-fe8a-49fa-a50e-d5966639b852",
        "cursor": {
          "ref": "935733b8-c7e3-471f-b664-683beac8a3fc",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3b6e3ad-d8a7-41bc-bb4f-2ba844a30eb7"
        },
        "item": {
          "id": "0693e6c2-fe8a-49fa-a50e-d5966639b852",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3004fec5-0a41-4e06-a573-2ca92338d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cfbbe9-2892-472d-b4a0-96335984f0de",
        "cursor": {
          "ref": "2f508b92-293d-4bdc-95b0-b91278c58ac4",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d725e87a-e7e9-4aa9-9857-967ef93d5188"
        },
        "item": {
          "id": "82cfbbe9-2892-472d-b4a0-96335984f0de",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "8e93cde7-b097-4cb1-8239-ade54ae4d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cfbbe9-2892-472d-b4a0-96335984f0de",
        "cursor": {
          "ref": "2f508b92-293d-4bdc-95b0-b91278c58ac4",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d725e87a-e7e9-4aa9-9857-967ef93d5188"
        },
        "item": {
          "id": "82cfbbe9-2892-472d-b4a0-96335984f0de",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "8e93cde7-b097-4cb1-8239-ade54ae4d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e419e1b-cd30-45d1-a53c-1164d4f4dbd0",
        "cursor": {
          "ref": "0032d8f0-928a-426f-a997-cd08d2da845c",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39c5bc72-9986-49da-b98e-962f988da556"
        },
        "item": {
          "id": "2e419e1b-cd30-45d1-a53c-1164d4f4dbd0",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "fec6c422-1141-46ae-8670-8630ccd86f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e419e1b-cd30-45d1-a53c-1164d4f4dbd0",
        "cursor": {
          "ref": "0032d8f0-928a-426f-a997-cd08d2da845c",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39c5bc72-9986-49da-b98e-962f988da556"
        },
        "item": {
          "id": "2e419e1b-cd30-45d1-a53c-1164d4f4dbd0",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "fec6c422-1141-46ae-8670-8630ccd86f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61caa0a-2d5e-48af-a910-73cf1927b65a",
        "cursor": {
          "ref": "b1a7cfc3-f233-4d1f-b11d-e94c3d8a2805",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ff5a0d8e-8a43-4901-8277-b716b4a3cbf2"
        },
        "item": {
          "id": "c61caa0a-2d5e-48af-a910-73cf1927b65a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecb1fe0b-2855-4532-a67c-fa38d6a8ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61caa0a-2d5e-48af-a910-73cf1927b65a",
        "cursor": {
          "ref": "b1a7cfc3-f233-4d1f-b11d-e94c3d8a2805",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ff5a0d8e-8a43-4901-8277-b716b4a3cbf2"
        },
        "item": {
          "id": "c61caa0a-2d5e-48af-a910-73cf1927b65a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecb1fe0b-2855-4532-a67c-fa38d6a8ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd13e4d6-4865-4f3d-839f-b7fddbb62d47",
        "cursor": {
          "ref": "da4302fd-dd42-4091-8bbe-fca0216378e6",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "97b5596d-db45-4bba-b513-3a4e8c7a0c56"
        },
        "item": {
          "id": "cd13e4d6-4865-4f3d-839f-b7fddbb62d47",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "6fee7d56-c936-4874-9bfc-8a713f97a7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd13e4d6-4865-4f3d-839f-b7fddbb62d47",
        "cursor": {
          "ref": "da4302fd-dd42-4091-8bbe-fca0216378e6",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "97b5596d-db45-4bba-b513-3a4e8c7a0c56"
        },
        "item": {
          "id": "cd13e4d6-4865-4f3d-839f-b7fddbb62d47",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "6fee7d56-c936-4874-9bfc-8a713f97a7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86559671-cb75-4751-8d71-f3fcfea11522",
        "cursor": {
          "ref": "054dcafb-6434-45cf-9b11-57fc0693e880",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9416b0ba-f6d1-4334-8de3-c1fb6f81037c"
        },
        "item": {
          "id": "86559671-cb75-4751-8d71-f3fcfea11522",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "1398712f-83c9-4ceb-96f7-969a33f8d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86559671-cb75-4751-8d71-f3fcfea11522",
        "cursor": {
          "ref": "054dcafb-6434-45cf-9b11-57fc0693e880",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9416b0ba-f6d1-4334-8de3-c1fb6f81037c"
        },
        "item": {
          "id": "86559671-cb75-4751-8d71-f3fcfea11522",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "1398712f-83c9-4ceb-96f7-969a33f8d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4abb1c-6f9f-459c-afcb-c6e474e501ac",
        "cursor": {
          "ref": "6046388f-ed65-44fc-a9fe-653e24677c21",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3af5f62e-f3a9-4d2e-8fc1-fe824d9d49ca"
        },
        "item": {
          "id": "ae4abb1c-6f9f-459c-afcb-c6e474e501ac",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ced1fea9-66f5-42be-8b89-930fe8a0c2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4abb1c-6f9f-459c-afcb-c6e474e501ac",
        "cursor": {
          "ref": "6046388f-ed65-44fc-a9fe-653e24677c21",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3af5f62e-f3a9-4d2e-8fc1-fe824d9d49ca"
        },
        "item": {
          "id": "ae4abb1c-6f9f-459c-afcb-c6e474e501ac",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ced1fea9-66f5-42be-8b89-930fe8a0c2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eecdd3-10b0-4768-96b6-870dc23a0d78",
        "cursor": {
          "ref": "c0edec59-c799-4f6c-9771-a75ff4e0ddb4",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a7d27fa-9996-441a-b0f2-2ecfb583b25a"
        },
        "item": {
          "id": "69eecdd3-10b0-4768-96b6-870dc23a0d78",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c62939b-dea1-4732-b5f7-3e96af23cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eecdd3-10b0-4768-96b6-870dc23a0d78",
        "cursor": {
          "ref": "c0edec59-c799-4f6c-9771-a75ff4e0ddb4",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a7d27fa-9996-441a-b0f2-2ecfb583b25a"
        },
        "item": {
          "id": "69eecdd3-10b0-4768-96b6-870dc23a0d78",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c62939b-dea1-4732-b5f7-3e96af23cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab0e59e-3ab9-4a4e-b758-91e5d98e2be9",
        "cursor": {
          "ref": "163f021f-b6de-4a15-bfaf-fe32c0997fe1",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1da4e8df-9b02-46bc-b4c8-0068570971e5"
        },
        "item": {
          "id": "7ab0e59e-3ab9-4a4e-b758-91e5d98e2be9",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "742f9924-697a-4c3e-8149-15260c3d12f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab0e59e-3ab9-4a4e-b758-91e5d98e2be9",
        "cursor": {
          "ref": "163f021f-b6de-4a15-bfaf-fe32c0997fe1",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1da4e8df-9b02-46bc-b4c8-0068570971e5"
        },
        "item": {
          "id": "7ab0e59e-3ab9-4a4e-b758-91e5d98e2be9",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "742f9924-697a-4c3e-8149-15260c3d12f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553e3021-e017-49fe-9a02-201f5f26c4a7",
        "cursor": {
          "ref": "ce5c236e-6424-41db-aff3-3a14d353b22d",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b67a8ec2-0820-4e66-8f6b-ac0dedb1e64d"
        },
        "item": {
          "id": "553e3021-e017-49fe-9a02-201f5f26c4a7",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "9eac6d0b-9856-470d-9613-00d9fde10007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553e3021-e017-49fe-9a02-201f5f26c4a7",
        "cursor": {
          "ref": "ce5c236e-6424-41db-aff3-3a14d353b22d",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b67a8ec2-0820-4e66-8f6b-ac0dedb1e64d"
        },
        "item": {
          "id": "553e3021-e017-49fe-9a02-201f5f26c4a7",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "9eac6d0b-9856-470d-9613-00d9fde10007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9c923-9eef-46ba-be7b-3088547c3f65",
        "cursor": {
          "ref": "17ff422b-e7d8-4a4c-9a6a-1ebe247395ef",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1b11e39f-9083-4388-9a86-7a8a3b4a8aa2"
        },
        "item": {
          "id": "f3c9c923-9eef-46ba-be7b-3088547c3f65",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "34d82ca3-6385-41cb-807a-04ac8a4e2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c9c923-9eef-46ba-be7b-3088547c3f65",
        "cursor": {
          "ref": "17ff422b-e7d8-4a4c-9a6a-1ebe247395ef",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1b11e39f-9083-4388-9a86-7a8a3b4a8aa2"
        },
        "item": {
          "id": "f3c9c923-9eef-46ba-be7b-3088547c3f65",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "34d82ca3-6385-41cb-807a-04ac8a4e2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cb32ad-4962-459b-b5e8-9ba49b96aace",
        "cursor": {
          "ref": "cdd532b2-0a33-43f8-9f13-a574ab16e41b",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "82c3bb8f-bd59-43f4-837e-40ab45c9b6d6"
        },
        "item": {
          "id": "f0cb32ad-4962-459b-b5e8-9ba49b96aace",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "60825e44-83f9-4fcb-aae8-456386d6e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cb32ad-4962-459b-b5e8-9ba49b96aace",
        "cursor": {
          "ref": "cdd532b2-0a33-43f8-9f13-a574ab16e41b",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "82c3bb8f-bd59-43f4-837e-40ab45c9b6d6"
        },
        "item": {
          "id": "f0cb32ad-4962-459b-b5e8-9ba49b96aace",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "60825e44-83f9-4fcb-aae8-456386d6e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ee6927-31af-4d8c-ab46-d69903e06a1a",
        "cursor": {
          "ref": "8f438066-f283-4193-a49b-f0916ee707c3",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2b0f0f52-1383-4eed-ab8f-78a2fa12e426"
        },
        "item": {
          "id": "a8ee6927-31af-4d8c-ab46-d69903e06a1a",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "9e1b71d5-2d25-403d-be32-8b03379e23ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ee6927-31af-4d8c-ab46-d69903e06a1a",
        "cursor": {
          "ref": "8f438066-f283-4193-a49b-f0916ee707c3",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2b0f0f52-1383-4eed-ab8f-78a2fa12e426"
        },
        "item": {
          "id": "a8ee6927-31af-4d8c-ab46-d69903e06a1a",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "9e1b71d5-2d25-403d-be32-8b03379e23ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b453c0-1dd1-4e68-9f4d-6f03c7fba413",
        "cursor": {
          "ref": "4f834c06-37d5-43ec-919a-3c81babaf137",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e9b2bdb2-12b5-4d84-beb9-db5dc74adf99"
        },
        "item": {
          "id": "b4b453c0-1dd1-4e68-9f4d-6f03c7fba413",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "777c7f61-ed05-4cb0-9ce1-14fffe78fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b453c0-1dd1-4e68-9f4d-6f03c7fba413",
        "cursor": {
          "ref": "4f834c06-37d5-43ec-919a-3c81babaf137",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e9b2bdb2-12b5-4d84-beb9-db5dc74adf99"
        },
        "item": {
          "id": "b4b453c0-1dd1-4e68-9f4d-6f03c7fba413",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "777c7f61-ed05-4cb0-9ce1-14fffe78fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc86d8a-dca0-43c8-8a6f-da7f90550f6d",
        "cursor": {
          "ref": "0f984de3-ec39-477b-8f8d-ab25380b5acb",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9f332da8-f025-4b9e-9735-21670d7cfe4d"
        },
        "item": {
          "id": "8cc86d8a-dca0-43c8-8a6f-da7f90550f6d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30eb472b-162d-4711-9bdf-8b625e0a6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc86d8a-dca0-43c8-8a6f-da7f90550f6d",
        "cursor": {
          "ref": "0f984de3-ec39-477b-8f8d-ab25380b5acb",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9f332da8-f025-4b9e-9735-21670d7cfe4d"
        },
        "item": {
          "id": "8cc86d8a-dca0-43c8-8a6f-da7f90550f6d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30eb472b-162d-4711-9bdf-8b625e0a6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2703ca19-6e0f-45c7-8199-fa70a12a11ff",
        "cursor": {
          "ref": "46070e08-3e50-44ac-a571-8bf25307e132",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "835591a1-d4ec-45cc-98f0-6301c83daba6"
        },
        "item": {
          "id": "2703ca19-6e0f-45c7-8199-fa70a12a11ff",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "050a8916-d9fe-414a-a32c-b8301fdb78f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2703ca19-6e0f-45c7-8199-fa70a12a11ff",
        "cursor": {
          "ref": "46070e08-3e50-44ac-a571-8bf25307e132",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "835591a1-d4ec-45cc-98f0-6301c83daba6"
        },
        "item": {
          "id": "2703ca19-6e0f-45c7-8199-fa70a12a11ff",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "050a8916-d9fe-414a-a32c-b8301fdb78f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9550fad8-c6d1-436d-a6b1-bf572332c77a",
        "cursor": {
          "ref": "9532ccd8-8541-4031-999c-9bf4ec7f2167",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9eef58d6-00c2-4364-89ab-11b65c5771c9"
        },
        "item": {
          "id": "9550fad8-c6d1-436d-a6b1-bf572332c77a",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "c248e6e3-2c57-41b9-ab2e-4961c545f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9550fad8-c6d1-436d-a6b1-bf572332c77a",
        "cursor": {
          "ref": "9532ccd8-8541-4031-999c-9bf4ec7f2167",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9eef58d6-00c2-4364-89ab-11b65c5771c9"
        },
        "item": {
          "id": "9550fad8-c6d1-436d-a6b1-bf572332c77a",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "c248e6e3-2c57-41b9-ab2e-4961c545f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db5698c-63e8-4967-9d43-388cbfeb8dbd",
        "cursor": {
          "ref": "c5583881-af92-4a2c-b269-5204b853419a",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c75841e4-c7be-4e7f-a9d9-fb5c135eba27"
        },
        "item": {
          "id": "9db5698c-63e8-4967-9d43-388cbfeb8dbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "132cc938-d071-4b20-b5b2-79bf2b1a194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db5698c-63e8-4967-9d43-388cbfeb8dbd",
        "cursor": {
          "ref": "c5583881-af92-4a2c-b269-5204b853419a",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c75841e4-c7be-4e7f-a9d9-fb5c135eba27"
        },
        "item": {
          "id": "9db5698c-63e8-4967-9d43-388cbfeb8dbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "132cc938-d071-4b20-b5b2-79bf2b1a194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a387c1-f699-4171-8ca4-e9e9696659b3",
        "cursor": {
          "ref": "9d6270bd-14a4-4971-92a2-5316d79204cd",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e957dc48-50a7-401e-b1b0-aa5f64173bc9"
        },
        "item": {
          "id": "35a387c1-f699-4171-8ca4-e9e9696659b3",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "da3b131d-6902-4770-bcc6-c45105a984de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a387c1-f699-4171-8ca4-e9e9696659b3",
        "cursor": {
          "ref": "9d6270bd-14a4-4971-92a2-5316d79204cd",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e957dc48-50a7-401e-b1b0-aa5f64173bc9"
        },
        "item": {
          "id": "35a387c1-f699-4171-8ca4-e9e9696659b3",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "da3b131d-6902-4770-bcc6-c45105a984de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8458f239-7e25-4d87-bb90-1f93c45bd048",
        "cursor": {
          "ref": "0dff201e-8dc1-4710-989c-9fc73eff870f",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "df988fbf-1a94-4025-a32b-46ce4feb96a4"
        },
        "item": {
          "id": "8458f239-7e25-4d87-bb90-1f93c45bd048",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "614a389f-b9a9-4ca3-b300-81145474f4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8458f239-7e25-4d87-bb90-1f93c45bd048",
        "cursor": {
          "ref": "0dff201e-8dc1-4710-989c-9fc73eff870f",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "df988fbf-1a94-4025-a32b-46ce4feb96a4"
        },
        "item": {
          "id": "8458f239-7e25-4d87-bb90-1f93c45bd048",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "614a389f-b9a9-4ca3-b300-81145474f4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281905f2-dc9a-4948-a5bf-2f9f3de100f8",
        "cursor": {
          "ref": "066ccb1a-0957-454c-bea5-5570f180b627",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee97efff-e94e-4927-8a14-15697ee5a3a4"
        },
        "item": {
          "id": "281905f2-dc9a-4948-a5bf-2f9f3de100f8",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "76058acf-d869-4b3f-ba8c-750d8dd81fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281905f2-dc9a-4948-a5bf-2f9f3de100f8",
        "cursor": {
          "ref": "066ccb1a-0957-454c-bea5-5570f180b627",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee97efff-e94e-4927-8a14-15697ee5a3a4"
        },
        "item": {
          "id": "281905f2-dc9a-4948-a5bf-2f9f3de100f8",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "76058acf-d869-4b3f-ba8c-750d8dd81fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb4c67b-25b3-47bd-9a3a-564bcca51d64",
        "cursor": {
          "ref": "00c9ec53-415c-4b53-8656-4888343b1a2b",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3db4ecf-824f-4bfd-9106-1145f9552bc7"
        },
        "item": {
          "id": "0eb4c67b-25b3-47bd-9a3a-564bcca51d64",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5cd79e2c-262f-49aa-9c58-ff19dd30c292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb4c67b-25b3-47bd-9a3a-564bcca51d64",
        "cursor": {
          "ref": "00c9ec53-415c-4b53-8656-4888343b1a2b",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3db4ecf-824f-4bfd-9106-1145f9552bc7"
        },
        "item": {
          "id": "0eb4c67b-25b3-47bd-9a3a-564bcca51d64",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5cd79e2c-262f-49aa-9c58-ff19dd30c292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092160fb-07fc-4b53-8f52-c908d574819e",
        "cursor": {
          "ref": "7e58c2c9-1fd9-4340-8d25-d64eb210d3d7",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6be1e2c2-a723-4543-97e1-bb40735e87aa"
        },
        "item": {
          "id": "092160fb-07fc-4b53-8f52-c908d574819e",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "9d9ee9bf-b317-4cf3-9329-ce67ab1f0f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092160fb-07fc-4b53-8f52-c908d574819e",
        "cursor": {
          "ref": "7e58c2c9-1fd9-4340-8d25-d64eb210d3d7",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6be1e2c2-a723-4543-97e1-bb40735e87aa"
        },
        "item": {
          "id": "092160fb-07fc-4b53-8f52-c908d574819e",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "9d9ee9bf-b317-4cf3-9329-ce67ab1f0f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017c71a4-c339-48b2-acab-466d8207a95d",
        "cursor": {
          "ref": "8d51715b-b254-48fc-9736-88c1b4dd5bb6",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f39fbddd-bc6f-45eb-9296-ebe6680187cd"
        },
        "item": {
          "id": "017c71a4-c339-48b2-acab-466d8207a95d",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "71e57ed4-f226-4057-ab80-c0cb5510b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017c71a4-c339-48b2-acab-466d8207a95d",
        "cursor": {
          "ref": "8d51715b-b254-48fc-9736-88c1b4dd5bb6",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f39fbddd-bc6f-45eb-9296-ebe6680187cd"
        },
        "item": {
          "id": "017c71a4-c339-48b2-acab-466d8207a95d",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "71e57ed4-f226-4057-ab80-c0cb5510b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e1ac8b-7170-49e3-bd09-0ffec1075843",
        "cursor": {
          "ref": "aff8c1eb-cf91-48c6-9ef2-d4ffae99b1e9",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f16037e-f4e7-4fe3-8e15-335f90f55973"
        },
        "item": {
          "id": "e1e1ac8b-7170-49e3-bd09-0ffec1075843",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "7385eff4-98e4-497e-a8bf-542f4a072421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e1ac8b-7170-49e3-bd09-0ffec1075843",
        "cursor": {
          "ref": "aff8c1eb-cf91-48c6-9ef2-d4ffae99b1e9",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f16037e-f4e7-4fe3-8e15-335f90f55973"
        },
        "item": {
          "id": "e1e1ac8b-7170-49e3-bd09-0ffec1075843",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "7385eff4-98e4-497e-a8bf-542f4a072421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7aac1a-3aad-4694-bbe6-cc9d66c84a3e",
        "cursor": {
          "ref": "98e9656b-e923-4c8e-bc13-a714c0b63ddb",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a18539ad-87d7-43c5-82e9-b9818bba14c7"
        },
        "item": {
          "id": "3c7aac1a-3aad-4694-bbe6-cc9d66c84a3e",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "c3a43012-cf0f-4975-9b10-1297aa88fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7aac1a-3aad-4694-bbe6-cc9d66c84a3e",
        "cursor": {
          "ref": "98e9656b-e923-4c8e-bc13-a714c0b63ddb",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a18539ad-87d7-43c5-82e9-b9818bba14c7"
        },
        "item": {
          "id": "3c7aac1a-3aad-4694-bbe6-cc9d66c84a3e",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "c3a43012-cf0f-4975-9b10-1297aa88fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d9c29-6eda-4359-a681-7355e5168fa8",
        "cursor": {
          "ref": "b5148184-dd4f-4b3c-bd33-e582a6369c39",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5a43547-4d3d-4c15-b853-5eb6d8208d7f"
        },
        "item": {
          "id": "cb1d9c29-6eda-4359-a681-7355e5168fa8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb167424-3b4e-4f5a-89fd-4a85e6ad611e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d9c29-6eda-4359-a681-7355e5168fa8",
        "cursor": {
          "ref": "b5148184-dd4f-4b3c-bd33-e582a6369c39",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5a43547-4d3d-4c15-b853-5eb6d8208d7f"
        },
        "item": {
          "id": "cb1d9c29-6eda-4359-a681-7355e5168fa8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb167424-3b4e-4f5a-89fd-4a85e6ad611e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5525bc-00e6-4f08-af36-64fb4188c68d",
        "cursor": {
          "ref": "55267b55-8d63-4908-abb6-c69c19ac8247",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f7a33469-085f-4293-bc73-ce82b8e493b7"
        },
        "item": {
          "id": "4a5525bc-00e6-4f08-af36-64fb4188c68d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "516f109b-e820-47b2-a101-38528db64b02",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5525bc-00e6-4f08-af36-64fb4188c68d",
        "cursor": {
          "ref": "55267b55-8d63-4908-abb6-c69c19ac8247",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f7a33469-085f-4293-bc73-ce82b8e493b7"
        },
        "item": {
          "id": "4a5525bc-00e6-4f08-af36-64fb4188c68d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "516f109b-e820-47b2-a101-38528db64b02",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fc3620-803f-4c88-8584-79be0f460061",
        "cursor": {
          "ref": "ec0ed85f-77d1-450b-b663-5d28f637de19",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4a19d739-4a0e-464e-a8e0-7b30f2fdc95a"
        },
        "item": {
          "id": "b2fc3620-803f-4c88-8584-79be0f460061",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3fee0ae1-bd0a-4618-a229-0296d252cbc7",
          "status": "Created",
          "code": 201,
          "responseTime": 296,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fc3620-803f-4c88-8584-79be0f460061",
        "cursor": {
          "ref": "ec0ed85f-77d1-450b-b663-5d28f637de19",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4a19d739-4a0e-464e-a8e0-7b30f2fdc95a"
        },
        "item": {
          "id": "b2fc3620-803f-4c88-8584-79be0f460061",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3fee0ae1-bd0a-4618-a229-0296d252cbc7",
          "status": "Created",
          "code": 201,
          "responseTime": 296,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c75b53-5a29-40ae-89c3-8492aa600805",
        "cursor": {
          "ref": "cd960a8d-3c9f-4aed-be3c-fdfe0f240457",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6ac44b3d-7d74-4d5b-94d4-c5cf4062620d"
        },
        "item": {
          "id": "e3c75b53-5a29-40ae-89c3-8492aa600805",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "0d09e9aa-45a9-4c1a-8ec9-e474cd86f3d6",
          "status": "Created",
          "code": 201,
          "responseTime": 353,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c75b53-5a29-40ae-89c3-8492aa600805",
        "cursor": {
          "ref": "cd960a8d-3c9f-4aed-be3c-fdfe0f240457",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6ac44b3d-7d74-4d5b-94d4-c5cf4062620d"
        },
        "item": {
          "id": "e3c75b53-5a29-40ae-89c3-8492aa600805",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "0d09e9aa-45a9-4c1a-8ec9-e474cd86f3d6",
          "status": "Created",
          "code": 201,
          "responseTime": 353,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f9c76f-f724-46a9-bb64-6a9d6ec7eb04",
        "cursor": {
          "ref": "de1d5a77-7e19-43f3-92b8-1a44ccb02fea",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3989c871-3de3-43e1-9f96-7c8718fe3f2b"
        },
        "item": {
          "id": "a6f9c76f-f724-46a9-bb64-6a9d6ec7eb04",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6880571a-4a7c-4aa1-a789-a6207376bb3a",
          "status": "Created",
          "code": 201,
          "responseTime": 274,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f9c76f-f724-46a9-bb64-6a9d6ec7eb04",
        "cursor": {
          "ref": "de1d5a77-7e19-43f3-92b8-1a44ccb02fea",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3989c871-3de3-43e1-9f96-7c8718fe3f2b"
        },
        "item": {
          "id": "a6f9c76f-f724-46a9-bb64-6a9d6ec7eb04",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6880571a-4a7c-4aa1-a789-a6207376bb3a",
          "status": "Created",
          "code": 201,
          "responseTime": 274,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "932d4ffa-33d3-46b0-ac5c-10ba06674a18",
        "cursor": {
          "ref": "ab844c8b-91d4-4ef7-bc52-78bb4451595e",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e39c79c3-b199-4437-b5b9-b9806ddac1b5"
        },
        "item": {
          "id": "932d4ffa-33d3-46b0-ac5c-10ba06674a18",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "65f29e9a-6b0b-4467-925e-f96b42c5fb6c",
          "status": "Created",
          "code": 201,
          "responseTime": 275,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "932d4ffa-33d3-46b0-ac5c-10ba06674a18",
        "cursor": {
          "ref": "ab844c8b-91d4-4ef7-bc52-78bb4451595e",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e39c79c3-b199-4437-b5b9-b9806ddac1b5"
        },
        "item": {
          "id": "932d4ffa-33d3-46b0-ac5c-10ba06674a18",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "65f29e9a-6b0b-4467-925e-f96b42c5fb6c",
          "status": "Created",
          "code": 201,
          "responseTime": 275,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e2cbd6-89f5-4627-ac39-98be5f5e7187",
        "cursor": {
          "ref": "dc50fd39-580a-4179-99e4-efd206847f19",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0810ed19-243e-483a-879c-b68f8ecfa6d1"
        },
        "item": {
          "id": "64e2cbd6-89f5-4627-ac39-98be5f5e7187",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ebd5e44-9359-4109-b951-e20d6d4ca463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "64e2cbd6-89f5-4627-ac39-98be5f5e7187",
        "cursor": {
          "ref": "dc50fd39-580a-4179-99e4-efd206847f19",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0810ed19-243e-483a-879c-b68f8ecfa6d1"
        },
        "item": {
          "id": "64e2cbd6-89f5-4627-ac39-98be5f5e7187",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ebd5e44-9359-4109-b951-e20d6d4ca463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "8c49a7fb-6b98-4ef1-89b5-fc1ad6d56944",
        "cursor": {
          "ref": "dcb5ffac-4935-4d9b-aa74-832d31c7f539",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "198299d8-4cee-4303-936b-7582ee9f8bc1"
        },
        "item": {
          "id": "8c49a7fb-6b98-4ef1-89b5-fc1ad6d56944",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "98c1c6d5-0faa-42a3-9c57-cfac5577130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "8c49a7fb-6b98-4ef1-89b5-fc1ad6d56944",
        "cursor": {
          "ref": "dcb5ffac-4935-4d9b-aa74-832d31c7f539",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "198299d8-4cee-4303-936b-7582ee9f8bc1"
        },
        "item": {
          "id": "8c49a7fb-6b98-4ef1-89b5-fc1ad6d56944",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "98c1c6d5-0faa-42a3-9c57-cfac5577130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "43779953-69ea-4414-9158-6408f0e7e071",
        "cursor": {
          "ref": "7b204d73-864a-4eac-a80d-8fde98cc987f",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4499a92a-1e7d-45b9-98e6-8b5ee335e903"
        },
        "item": {
          "id": "43779953-69ea-4414-9158-6408f0e7e071",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "836fd942-002a-4a6f-b31e-7cbaa12de7a2",
          "status": "Created",
          "code": 201,
          "responseTime": 294,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43779953-69ea-4414-9158-6408f0e7e071",
        "cursor": {
          "ref": "7b204d73-864a-4eac-a80d-8fde98cc987f",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4499a92a-1e7d-45b9-98e6-8b5ee335e903"
        },
        "item": {
          "id": "43779953-69ea-4414-9158-6408f0e7e071",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "836fd942-002a-4a6f-b31e-7cbaa12de7a2",
          "status": "Created",
          "code": 201,
          "responseTime": 294,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cef70b-5ba3-4699-8db8-af664c947495",
        "cursor": {
          "ref": "4e5e97cd-55d1-4193-aa82-b16c420a9cc7",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ae1d373c-f606-4fe9-a431-f7e80ae54718"
        },
        "item": {
          "id": "e2cef70b-5ba3-4699-8db8-af664c947495",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6ec03c2-db98-444d-bfb9-1a9a5a9ddd71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cef70b-5ba3-4699-8db8-af664c947495",
        "cursor": {
          "ref": "4e5e97cd-55d1-4193-aa82-b16c420a9cc7",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ae1d373c-f606-4fe9-a431-f7e80ae54718"
        },
        "item": {
          "id": "e2cef70b-5ba3-4699-8db8-af664c947495",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6ec03c2-db98-444d-bfb9-1a9a5a9ddd71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e04231d-7798-4d25-a8d1-9090bed1e04b",
        "cursor": {
          "ref": "560e3cb5-edb8-49d9-bb6a-9e338052abff",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28cb9185-a1d6-479c-8cf6-552fcc4d3204"
        },
        "item": {
          "id": "4e04231d-7798-4d25-a8d1-9090bed1e04b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ee36e435-2b14-4434-9130-05cb58958c43",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08634211-b0d1-4629-9a80-aab16366c94f",
        "cursor": {
          "ref": "de434946-50d7-416a-abc1-8cc09acba037",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6ce8164-5e06-4caa-88a3-80e1a876ee7d"
        },
        "item": {
          "id": "08634211-b0d1-4629-9a80-aab16366c94f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0ee49bc-1a1b-412c-afec-4c4a3b9b051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08634211-b0d1-4629-9a80-aab16366c94f",
        "cursor": {
          "ref": "de434946-50d7-416a-abc1-8cc09acba037",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6ce8164-5e06-4caa-88a3-80e1a876ee7d"
        },
        "item": {
          "id": "08634211-b0d1-4629-9a80-aab16366c94f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0ee49bc-1a1b-412c-afec-4c4a3b9b051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d62a3e-f5a4-4a5d-a27c-8352a7546c98",
        "cursor": {
          "ref": "ca744a9e-cd1b-41e9-b141-13869b147209",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7dc8a259-c036-44ea-ab8b-0ac0e7954b75"
        },
        "item": {
          "id": "f9d62a3e-f5a4-4a5d-a27c-8352a7546c98",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f3f5e650-10ca-48ce-bace-a5a28a344d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569bc19-0b4b-4f85-815e-0fc83ec17c7c",
        "cursor": {
          "ref": "a9d70c01-6fec-4f16-afee-8b2eb0232981",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aee1f1a6-36ba-42fa-b6cd-822945e74d2b"
        },
        "item": {
          "id": "f569bc19-0b4b-4f85-815e-0fc83ec17c7c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "66086b69-877b-4273-ab6d-c1953ac82d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7cc7be-453d-48e4-8261-b67262b903f0",
        "cursor": {
          "ref": "81b86c00-1092-45b5-950d-12ebc28bfe12",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "538401f4-dede-4021-ad3b-7389cf1a0893"
        },
        "item": {
          "id": "0a7cc7be-453d-48e4-8261-b67262b903f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c64494a1-2328-42e4-9a44-f6c4aa7dcb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e7425-0a5f-4675-9574-edc87f85dd06",
        "cursor": {
          "ref": "b94afb01-dac2-4070-b7f9-c67613665e50",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ac255a6f-0286-4517-b840-c2e7bee46491"
        },
        "item": {
          "id": "ab5e7425-0a5f-4675-9574-edc87f85dd06",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e40d11f-73c6-472f-9878-c73600770434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6dc156-5b6f-49f3-a214-ce2d45c85ae5",
        "cursor": {
          "ref": "370ceb9b-1c08-41d5-8a59-1baa08163238",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0277cbed-452a-46f1-8050-a12f661ba332"
        },
        "item": {
          "id": "ee6dc156-5b6f-49f3-a214-ce2d45c85ae5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5ecbda04-ec07-47a0-aea1-a14e514ae723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08066c53-5c7b-494f-a77c-16f3c068eb41",
        "cursor": {
          "ref": "fd5e6fc3-2f02-4e66-ba8f-77ca405ad76b",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf1ef79e-8d41-4666-bf0e-2406afa2048e"
        },
        "item": {
          "id": "08066c53-5c7b-494f-a77c-16f3c068eb41",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "38883149-aa03-45f6-8760-53b90b5fc59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6965bc0-59ef-4582-82fe-c34a6208875d",
        "cursor": {
          "ref": "bb01ab4c-3a4d-41af-bc02-a88311601e3e",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f664f622-2054-4b31-8ab1-a6ddc4f99e91"
        },
        "item": {
          "id": "d6965bc0-59ef-4582-82fe-c34a6208875d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1d5a36fc-1737-46ac-af0c-6d2a82d867f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fb02e1-5713-4aff-a4d9-100d6bc7e47e",
        "cursor": {
          "ref": "b761cc62-8df4-4b39-945a-b70ec5846eca",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c01776c5-c2ca-4c84-a327-263ade48edcc"
        },
        "item": {
          "id": "83fb02e1-5713-4aff-a4d9-100d6bc7e47e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a4b0a7e-40de-48fe-bf31-667777052a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d83d8c-2871-42a9-bc47-55e761af881a",
        "cursor": {
          "ref": "1e91d3ef-5bea-4c34-b570-13abf39a136b",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e0de8fcf-46a4-409a-a974-3e8c6379cfcf"
        },
        "item": {
          "id": "f6d83d8c-2871-42a9-bc47-55e761af881a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6f0eef18-69bb-4016-93a2-e9dd71bc17bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355ba21-910d-4f9c-b6d9-77a52f7ac056",
        "cursor": {
          "ref": "48276b4f-88c7-442f-b6b2-1feaf2fce12a",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "264ceccd-9bbc-4916-832c-f808660c45d8"
        },
        "item": {
          "id": "d355ba21-910d-4f9c-b6d9-77a52f7ac056",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "29f3cce0-eef3-434f-bfe2-1db96ed9227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ba7c43-ffe3-4f65-902e-dd6dda4c5786",
        "cursor": {
          "ref": "43ecb478-26e3-49ba-bcba-4bfaac9c16d2",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f1680bcb-c7b3-438b-bce6-9c3d758a0f41"
        },
        "item": {
          "id": "a6ba7c43-ffe3-4f65-902e-dd6dda4c5786",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1e547915-06c4-41d7-9d0e-04ba5cbc4292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06237dfd-30fc-44fc-9f01-a082657c9f17",
        "cursor": {
          "ref": "e1885572-a942-491a-a661-ab879d2aecef",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "242ed03e-6c54-448b-81c8-f3fc6a5514bd"
        },
        "item": {
          "id": "06237dfd-30fc-44fc-9f01-a082657c9f17",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ff69929-9a6e-4ef0-bdd8-9f2c62fca050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510ef3a-8b24-42d4-bc81-e6bd2b12fce5",
        "cursor": {
          "ref": "59216d99-2463-43cb-8c72-793e44c60242",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ebd228b2-4363-4b30-9c34-8b7d24db95de"
        },
        "item": {
          "id": "6510ef3a-8b24-42d4-bc81-e6bd2b12fce5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "13770793-ae84-4557-8c0e-a794bd368693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b731559-2af4-4766-908f-46778a96cd45",
        "cursor": {
          "ref": "403efd72-cbce-4dc7-8179-8113465fc318",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "813c8d67-154f-42c0-921e-1d954b806bd1"
        },
        "item": {
          "id": "8b731559-2af4-4766-908f-46778a96cd45",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c175942d-f990-4b90-8675-c2a67a8df7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480785f4-e258-4061-8cd9-0240d0f22e0f",
        "cursor": {
          "ref": "94641fa1-852c-413f-8107-d52e9193db95",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d142b67-6559-4c6a-bccf-76aa0e6cb1cc"
        },
        "item": {
          "id": "480785f4-e258-4061-8cd9-0240d0f22e0f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9a8f2897-20e8-4435-a4de-bd0bf28925b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00a98f5-5776-45a1-87d6-00e303188d08",
        "cursor": {
          "ref": "b8ab61b0-eebd-40df-a8ca-5b63380dfa3d",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a448202-45b6-421d-a2ef-ea9ed91ea799"
        },
        "item": {
          "id": "f00a98f5-5776-45a1-87d6-00e303188d08",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c46343e3-d3ec-486c-a060-4223acb2c1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7320e5f2-3da4-4e1a-bcc4-0c4cfb6d2172",
        "cursor": {
          "ref": "b6513b7d-a378-4996-aab5-e7f805e27e28",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b90779d7-58c1-4826-b002-11f90350a983"
        },
        "item": {
          "id": "7320e5f2-3da4-4e1a-bcc4-0c4cfb6d2172",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f6287031-08db-49e7-8673-9913133123ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c76b86b-31dc-427b-951b-6481d59c423d",
        "cursor": {
          "ref": "c64a7668-8f20-4bda-ab7a-1aed5606d964",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b9e502d0-43c9-46a7-8c4a-8d6e55cad1c0"
        },
        "item": {
          "id": "5c76b86b-31dc-427b-951b-6481d59c423d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0245c41d-6d96-40ef-98a0-d4d8e43f24f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94bfb99-0359-4c37-ac7c-b96d1db66b6c",
        "cursor": {
          "ref": "33848a4f-36e2-4fa6-a98d-6d97c4cdc8ef",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0555af77-e107-423f-8b8e-ca62dae09cbb"
        },
        "item": {
          "id": "a94bfb99-0359-4c37-ac7c-b96d1db66b6c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "322356f8-ef14-49aa-8927-d7a34065e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73299dd8-e8bb-4879-b56d-a1963181c14d",
        "cursor": {
          "ref": "65deac5e-f6e4-4b7b-b10b-121a3d2f18c0",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e0e684b-66dd-43fc-9712-e308573a0048"
        },
        "item": {
          "id": "73299dd8-e8bb-4879-b56d-a1963181c14d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d2491f42-698f-41d2-a23f-24fb11d29db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c82293a-c8e7-4ac8-8247-afccd6c7e1d4",
        "cursor": {
          "ref": "fe723272-1714-49b4-8b93-339ccd33aa73",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b8aa87ff-ab0c-47f7-aac2-f37cccf891c6"
        },
        "item": {
          "id": "1c82293a-c8e7-4ac8-8247-afccd6c7e1d4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95439474-0fd4-4c6c-ad46-338d3e3a45f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c465bf2c-ca12-41f1-8903-d2785ee6f1a4",
        "cursor": {
          "ref": "15e2a8e4-4ce6-4122-b912-398bb86bcb0f",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "58cf24d0-cc67-4968-97d4-78eabf38bc12"
        },
        "item": {
          "id": "c465bf2c-ca12-41f1-8903-d2785ee6f1a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "162a487d-7106-4f59-8695-440f361966f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6232d07-4f5e-4f35-8ccc-6d3afb6ccc56",
        "cursor": {
          "ref": "81c04af2-5d1f-4a1c-818c-9c83b204e544",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "02ffd6aa-a1da-4106-b68c-e4ebac2ef9ea"
        },
        "item": {
          "id": "f6232d07-4f5e-4f35-8ccc-6d3afb6ccc56",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef6eb567-2b4f-4454-881d-9f20131c096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b3417-6799-47e8-91ca-e1523df35fa7",
        "cursor": {
          "ref": "06639128-8f22-4170-80d0-09f8fe05573d",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3dac7c26-a47c-4a14-a6e8-5a3e53580f66"
        },
        "item": {
          "id": "b06b3417-6799-47e8-91ca-e1523df35fa7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "20c4408a-56bf-4f43-aba7-1994c04157d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d6f1b2-a0fb-482f-ad10-54e77276ffc3",
        "cursor": {
          "ref": "711227f8-2e8a-4148-8c64-88a848efa662",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d395df91-5d1d-4e2c-a1fc-a6175b7bc6f2"
        },
        "item": {
          "id": "b6d6f1b2-a0fb-482f-ad10-54e77276ffc3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fc4213ba-558a-47a8-b944-234cebc7a2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89713ac8-d2d4-4e7b-9894-a89aea7d1907",
        "cursor": {
          "ref": "c775c075-c622-4379-9994-6129999e580d",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "75306a30-1a40-44c5-9f2c-9d44617f0aa1"
        },
        "item": {
          "id": "89713ac8-d2d4-4e7b-9894-a89aea7d1907",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "59c24a00-8d3a-48ea-a1ce-f6e958b04fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e790b49a-8986-43ad-aaba-1f25e14c69b0",
        "cursor": {
          "ref": "a62c106d-0e5b-4fca-a6eb-515a082af1a8",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4a74e764-d14b-40e8-9fa6-bc560a5e2923"
        },
        "item": {
          "id": "e790b49a-8986-43ad-aaba-1f25e14c69b0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d86d333c-008e-4bec-ba19-41d52bf17ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b18378d-9892-46e4-b12b-7585ac4057f3",
        "cursor": {
          "ref": "bd98f832-6610-4a0d-88ef-b313c48215d4",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d8fce79c-b7f7-4bd5-bf9e-eaaec3e3be38"
        },
        "item": {
          "id": "9b18378d-9892-46e4-b12b-7585ac4057f3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fb6910af-0b78-47f2-9724-37ab9f345e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b047a75-1638-4dbb-a934-8239d9092528",
        "cursor": {
          "ref": "58ac729e-ba40-4edc-a29b-e45f84322acb",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97d08d2e-d423-4551-8812-9963a2a01f3b"
        },
        "item": {
          "id": "2b047a75-1638-4dbb-a934-8239d9092528",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85d259ca-dbc0-4a71-9a55-f38cf4c29ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ce112b-0348-46f9-9482-c10d6678a2ec",
        "cursor": {
          "ref": "ee859ad4-29dd-49e5-bd90-92977ce9a50e",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fe070ef8-a700-4523-bf02-86b8b9e518e8"
        },
        "item": {
          "id": "01ce112b-0348-46f9-9482-c10d6678a2ec",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "49e2890e-a1cf-4658-9b34-d6151a4eb216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c914e266-33f9-4551-92f1-b22a931f8543",
        "cursor": {
          "ref": "79d03246-00b3-4320-bac2-0244c70bcd9c",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56474d4d-a933-41fd-94c2-f32f2ecd18b9"
        },
        "item": {
          "id": "c914e266-33f9-4551-92f1-b22a931f8543",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c8309f33-4c2f-427e-8701-09c2e76e87cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb9e7a8-a8e4-477f-a27b-1576340b3542",
        "cursor": {
          "ref": "89ea012e-6cfc-459a-a097-25320bc649ad",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e539b6a4-e703-4eed-98d5-081f589e0092"
        },
        "item": {
          "id": "fcb9e7a8-a8e4-477f-a27b-1576340b3542",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c3d7069-9edf-4b25-b6c1-fc5230ac44a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8752c78-ad6c-48c0-8c59-98267aa66fbf",
        "cursor": {
          "ref": "ff9c6485-481d-4298-9e4c-0fcb86cdde6c",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e17cdb3f-4538-4e9f-8cca-783ae9606b77"
        },
        "item": {
          "id": "f8752c78-ad6c-48c0-8c59-98267aa66fbf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "50cf43e3-872e-4c88-9507-7ca9972db045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdabfd9-26b0-4b82-ac1b-d8f6bb38fae8",
        "cursor": {
          "ref": "1d6ad3db-f32e-48d6-aa50-f155d19bc55e",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "918511f0-20ca-4878-a572-6b6a65c72101"
        },
        "item": {
          "id": "5cdabfd9-26b0-4b82-ac1b-d8f6bb38fae8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "24bf4711-189c-45e9-bd4f-c223f17a9e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c89582-bc6f-464e-ac2f-305c871267bb",
        "cursor": {
          "ref": "c6ddde57-d799-48da-8d65-388bd82d29f5",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d2966c3-764e-4b74-9362-d4dd44440943"
        },
        "item": {
          "id": "07c89582-bc6f-464e-ac2f-305c871267bb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "05aef0bb-a425-4a9e-9e7b-987cb20656de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddb7170-c435-4040-abdd-74a7153deb4b",
        "cursor": {
          "ref": "b0cffb7d-cfc6-40d7-bb86-b17c9e037b64",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c224fd17-a96c-48f1-a880-9ca7e4b8798f"
        },
        "item": {
          "id": "eddb7170-c435-4040-abdd-74a7153deb4b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2aa8b1aa-79dc-478f-83f1-fc7fb083a3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d42bfd-a3f3-4671-a070-0c43bd761fdb",
        "cursor": {
          "ref": "16284b67-2955-4c1d-b029-3c5ba33b75a6",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "028db598-ff1a-429d-ba5c-b551714e45e6"
        },
        "item": {
          "id": "29d42bfd-a3f3-4671-a070-0c43bd761fdb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b1217ead-8f42-400f-b75e-31316ac44eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91713a4f-119b-44b3-86e7-733fa97d19f6",
        "cursor": {
          "ref": "319e2073-178c-425d-9c83-e33f7ba94a4e",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1e319fa-fea4-4b35-a96b-8b428322234c"
        },
        "item": {
          "id": "91713a4f-119b-44b3-86e7-733fa97d19f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "958bdf98-32be-46ac-9e5d-064fc2fab2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37347588-2499-4678-bcd2-9913b45e2d8f",
        "cursor": {
          "ref": "36144d11-fe17-46a2-b932-902394220ad0",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3f163f41-2e23-4da4-9579-2a032aac2a0f"
        },
        "item": {
          "id": "37347588-2499-4678-bcd2-9913b45e2d8f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "23349893-fedb-457a-98f6-131262e3b4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f337c6-a194-47d8-b3e5-9f36a0e77fd2",
        "cursor": {
          "ref": "3d8f1d09-8290-40dd-985c-6232e2c264a2",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f5e8daee-db62-404d-ac4f-bd766d336ede"
        },
        "item": {
          "id": "33f337c6-a194-47d8-b3e5-9f36a0e77fd2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a73e4672-e4be-43b2-b107-01df9328eb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe33325b-d637-4e4f-85e1-6fa43c2ccf00",
        "cursor": {
          "ref": "1ddc22fa-eeb9-4204-abe4-9fbebfd37c7a",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b61d5d0e-e917-4802-9d10-87a5c1e279e0"
        },
        "item": {
          "id": "fe33325b-d637-4e4f-85e1-6fa43c2ccf00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "003478a5-7aa2-4f6b-8c20-fa6c0a057c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7599472-3a4b-499c-9aec-335976134fc9",
        "cursor": {
          "ref": "4f71f3b1-668a-4379-8f07-b2f1e647c5c4",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a310f9f2-7923-448e-b9b7-0d0764340bb4"
        },
        "item": {
          "id": "e7599472-3a4b-499c-9aec-335976134fc9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f37133fa-7a0b-475d-b26e-381cbcbe5024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb42081-7d51-45e1-9869-0353e7dacf99",
        "cursor": {
          "ref": "45e6df50-deaa-4020-bc25-8ab8bfc924a0",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9b42d033-2cc5-4bd7-ae1f-abe7dff86961"
        },
        "item": {
          "id": "4cb42081-7d51-45e1-9869-0353e7dacf99",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5467575d-c473-4646-b17b-f08b0afe6da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ee16ed-2953-49e3-84a0-6a2b271b5c6d",
        "cursor": {
          "ref": "86a9e1d1-ea75-4772-b601-3ef9bca8b18f",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1b3b196c-b855-4b58-a9e8-fb19db54e8c8"
        },
        "item": {
          "id": "b5ee16ed-2953-49e3-84a0-6a2b271b5c6d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6ae0694b-b6ac-4a26-81c7-31db3d66dbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0082dabc-0e88-4545-88f0-0329f360fdaf",
        "cursor": {
          "ref": "f910a44b-8ee9-4c56-805c-62a935553e2b",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9fddf7f-9c43-4fca-861b-aa095f0d73d9"
        },
        "item": {
          "id": "0082dabc-0e88-4545-88f0-0329f360fdaf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a84de374-6ff7-45b7-b3f9-a35d240b57ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ea81c7-b6da-4596-a3ff-a146c769dcfe",
        "cursor": {
          "ref": "b0b9b8f4-a652-48f1-a39e-f3d41047dfcc",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "87cb9acb-79b2-4426-9407-1998c06ba78a"
        },
        "item": {
          "id": "d1ea81c7-b6da-4596-a3ff-a146c769dcfe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5d6fb75-652e-46ad-ab05-c1dee4f3ab4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13887758-67ab-44ae-ac7f-81be2b75aabb",
        "cursor": {
          "ref": "942e0428-8254-417b-a194-a87c870c296e",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8365edd2-3708-410b-a695-c7ad81a6420e"
        },
        "item": {
          "id": "13887758-67ab-44ae-ac7f-81be2b75aabb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "026ab85a-96fb-4877-a369-8097b97224ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611de0f-a326-40a7-9b29-021c8b87c948",
        "cursor": {
          "ref": "63878e51-6662-4fbf-8e93-8c0c0183e032",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "65c736ff-849a-46a4-b0a5-8dfb4feec4d8"
        },
        "item": {
          "id": "7611de0f-a326-40a7-9b29-021c8b87c948",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39074daf-e50c-40fc-9e86-385b29aa10f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b985da-bce5-4b58-859a-3696cb804d64",
        "cursor": {
          "ref": "8f672725-5f24-44ef-b544-b9c8994965d5",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6056ffbb-58c0-426c-b2a7-cfb072976034"
        },
        "item": {
          "id": "d4b985da-bce5-4b58-859a-3696cb804d64",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "edb4a3ad-b581-4602-8fb4-a4bb277747a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9d25d0-19c3-41bf-bc44-f3169f219978",
        "cursor": {
          "ref": "15983807-c76c-42a4-a971-bd0981a1fe37",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7028082d-f743-4e03-b762-0dc4e8fb3fce"
        },
        "item": {
          "id": "dc9d25d0-19c3-41bf-bc44-f3169f219978",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1cc1269c-8ba1-4825-8d18-cf37f4edb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8fa942-e181-495d-923f-8dc9b978870f",
        "cursor": {
          "ref": "7ee3ae6c-1896-4be3-98e7-7c8e83ee409e",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f9634095-b0d8-45fe-bad3-5bb9d32ad938"
        },
        "item": {
          "id": "dc8fa942-e181-495d-923f-8dc9b978870f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4e48e52-4151-4c65-8530-1323a05f0f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a28c3e3-49b7-4f0d-92a4-cbdbbc9b532a",
        "cursor": {
          "ref": "ef4fa235-d31d-4549-953d-39099421d69b",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e6e39ea-1c98-4685-8040-4c31c9b8f6b7"
        },
        "item": {
          "id": "8a28c3e3-49b7-4f0d-92a4-cbdbbc9b532a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d56c1ca-70ae-42d7-b4ed-8b636a0f1b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e4852e-2ad9-47b3-a5be-a04b02ff65d0",
        "cursor": {
          "ref": "f25ac210-5120-40e8-a1bf-2b7fc67c3aa9",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ebbd7792-f46d-4eb1-9134-01d4a3c8b7ec"
        },
        "item": {
          "id": "c0e4852e-2ad9-47b3-a5be-a04b02ff65d0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f6a2f45-7c2e-472c-a654-5b118cccc236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78fe9f1-8eaa-412d-9cdf-6fd227ffb9a9",
        "cursor": {
          "ref": "11823182-1df5-46eb-ba38-42d2ccaeadb1",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3a7676cc-d46e-4951-8719-c80839340b5b"
        },
        "item": {
          "id": "d78fe9f1-8eaa-412d-9cdf-6fd227ffb9a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a52a3e6e-efff-42b0-962d-6d0ec35279ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e4bf2e-ec49-4a70-95e9-cb3ca9d7f422",
        "cursor": {
          "ref": "02ad485f-58f7-4ae8-92c3-0a1c9c1c3723",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ca2cc54a-7fe0-4d8f-a362-917e7db0522f"
        },
        "item": {
          "id": "40e4bf2e-ec49-4a70-95e9-cb3ca9d7f422",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98a7e0c9-cc2e-43f5-a7f2-5efd7d6683d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eadfe6f-bf2f-4d3c-8d2e-58e6262eb71a",
        "cursor": {
          "ref": "0d1f826d-7c8d-41c2-ad84-b6758c3b0a99",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "593ced2b-68c8-4f76-b8fe-060a0efe090f"
        },
        "item": {
          "id": "0eadfe6f-bf2f-4d3c-8d2e-58e6262eb71a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c5621ec0-6931-4257-a9f9-3580d39b24e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0b7e69-da71-4e0a-8bed-af45e6a278c0",
        "cursor": {
          "ref": "873c3ec7-c83b-4ca3-a9d3-ff470ff99509",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ca5c5413-248a-4786-886c-d930841ffb60"
        },
        "item": {
          "id": "0e0b7e69-da71-4e0a-8bed-af45e6a278c0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fc00a80a-a118-4fdf-8a92-c646aa55e672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb1b949-f5d8-431e-bbf6-0b504133f01a",
        "cursor": {
          "ref": "e6c00a66-405c-4305-8a80-8c7d1062eb2e",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "05b696b0-9f7b-4965-a009-1c3cdf65b361"
        },
        "item": {
          "id": "4fb1b949-f5d8-431e-bbf6-0b504133f01a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7dca8b8-b076-48c4-a74a-81d521704d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc9cd67-88c8-4392-bc9f-bc042c3b0f01",
        "cursor": {
          "ref": "98a3261d-3c5a-4bb2-800c-6dd3ade1e3f7",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2e0caea1-668c-47ae-b94e-0d2c0d3a13a5"
        },
        "item": {
          "id": "7cc9cd67-88c8-4392-bc9f-bc042c3b0f01",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aa230a2d-1996-40db-85dd-2c9e26662634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de094369-4b02-4a56-a39d-8d4875ea1f65",
        "cursor": {
          "ref": "9bd3e845-8144-4227-a315-536d730df761",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea96eb8e-010e-4ba2-b649-052a78f4c247"
        },
        "item": {
          "id": "de094369-4b02-4a56-a39d-8d4875ea1f65",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "48de6d73-ce48-4143-9075-c7f5cf116ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995107a-3795-4309-8e50-1634aa27c9db",
        "cursor": {
          "ref": "24546e56-969a-4616-8d14-8294dbde7066",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d6018892-3c9c-41a6-b218-bb562eedc951"
        },
        "item": {
          "id": "5995107a-3795-4309-8e50-1634aa27c9db",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "458ce0ff-5a7a-45c1-a39c-4ac87f704ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c77fbc9-bfe3-4eb3-8bfb-548d060b9eb4",
        "cursor": {
          "ref": "a47f8fab-d5f6-42ca-980b-fe2feeba5ad3",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3b63d0ab-8868-4df8-af54-98da9d201ad3"
        },
        "item": {
          "id": "3c77fbc9-bfe3-4eb3-8bfb-548d060b9eb4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8ab29bdc-eabd-48fe-9783-7785de3dc422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa269c76-67c8-4756-8a29-d82749656540",
        "cursor": {
          "ref": "b10b40ca-20d6-48dc-b8f4-7171224cec27",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b597f5bc-a436-4731-ab1c-a153bfeaeadb"
        },
        "item": {
          "id": "fa269c76-67c8-4756-8a29-d82749656540",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "49ec8dca-7c45-4b5e-a422-f82129e44891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9961c-5cfa-48de-a033-7a4ea0d67944",
        "cursor": {
          "ref": "b6db58c2-eca1-4896-8b7b-d007f191ad8d",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5328b5fb-bf67-4a8e-9c3f-060510686643"
        },
        "item": {
          "id": "54f9961c-5cfa-48de-a033-7a4ea0d67944",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8f35b3d0-0150-4ac4-b98f-93dc92ff6cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a39064e-f4e8-4576-9d47-e78149cb9d5b",
        "cursor": {
          "ref": "20ea1976-b24f-49fc-9b12-8ce08f8b1b32",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c82b6d41-a4fd-45a7-a2af-212205866c7a"
        },
        "item": {
          "id": "5a39064e-f4e8-4576-9d47-e78149cb9d5b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dcd6acee-7240-4faa-a0e3-6f1fbd71285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8e5a1d-a761-4c87-a904-ac06b752336d",
        "cursor": {
          "ref": "2b8c6df4-f8e4-49a3-bce5-5cfd870151e3",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c77b4a74-dbc4-47eb-99f9-a98f84f1c2ab"
        },
        "item": {
          "id": "4a8e5a1d-a761-4c87-a904-ac06b752336d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "da05b64e-41e9-4196-88d2-e8f0fb204de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fed6f8-47b4-4880-9b61-dea54f14f6e2",
        "cursor": {
          "ref": "5e504231-4c75-462b-b620-086b27de95a1",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fff6a6a6-6f13-460f-844a-0f71daa8bfda"
        },
        "item": {
          "id": "53fed6f8-47b4-4880-9b61-dea54f14f6e2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bd032ba3-a2f3-42f3-ae65-e7b4569f7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60a061-d3fd-4c7b-894f-507ad5b01e68",
        "cursor": {
          "ref": "4db0655d-c289-4756-ac03-833ed61c49dc",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dc8d2bba-70d1-4afa-a900-8b341096b926"
        },
        "item": {
          "id": "9d60a061-d3fd-4c7b-894f-507ad5b01e68",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ef2be541-1149-4fcc-86f7-fb1eff3bd2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d8344a-d75b-4ab1-88cf-9a960b2936e1",
        "cursor": {
          "ref": "41a29e14-3655-46fd-a63e-8b2cfd279aa5",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d73c7b13-b26f-4d4c-b7c4-a37ffd0ed213"
        },
        "item": {
          "id": "d6d8344a-d75b-4ab1-88cf-9a960b2936e1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7f611034-3374-4711-b80a-bf1302277401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db239ecb-fec3-4595-85a1-eebc4375ccd3",
        "cursor": {
          "ref": "8a709ce7-fa47-4b40-bdc8-87255a93844d",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d852a1de-ce68-4031-a8a1-3a7c515e5f08"
        },
        "item": {
          "id": "db239ecb-fec3-4595-85a1-eebc4375ccd3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "02629aa0-279f-4b45-8bd1-88106fcbf29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c1bb1-7371-4869-acdb-c3a86821d5f4",
        "cursor": {
          "ref": "ba3abe50-b1c6-42f9-bae3-ac2fadf60022",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7c2753a5-8d61-4caa-85f6-8ad9bdf0c383"
        },
        "item": {
          "id": "a19c1bb1-7371-4869-acdb-c3a86821d5f4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "81a79319-d312-434d-b44f-0b52191a11ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d8e25e-8199-48a5-ad94-11595fa53c77",
        "cursor": {
          "ref": "50f65930-980c-4c2c-8d1c-2ddc32ed3e7c",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d073697e-1403-4d0c-9b50-3e462eb984ee"
        },
        "item": {
          "id": "59d8e25e-8199-48a5-ad94-11595fa53c77",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "586e6d41-7e39-4cfd-94bc-517cfcd32bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7005f8a9-a197-4d6e-84a5-bc4b0a4f2d30",
        "cursor": {
          "ref": "d60cd1c3-f2a4-4247-91d6-c39518c46887",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "56c34e6b-1b81-4381-ad92-ad9dc224b7ca"
        },
        "item": {
          "id": "7005f8a9-a197-4d6e-84a5-bc4b0a4f2d30",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eff65244-f627-4abc-9580-41724858800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24830980-18f5-4731-8d66-43157d1dec7a",
        "cursor": {
          "ref": "66a22892-d783-4348-ad59-34dd4f55a66c",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b4dc678-247e-4551-9d4f-cba0817aa97e"
        },
        "item": {
          "id": "24830980-18f5-4731-8d66-43157d1dec7a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "183fece6-35a1-4364-88e0-a748189d9609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d8c040-ccdb-463c-9d60-7ccf930cc398",
        "cursor": {
          "ref": "e545c3b9-42db-4460-94ca-7e414a88560e",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "59a0bb81-2d66-4831-9770-a03e0a539638"
        },
        "item": {
          "id": "82d8c040-ccdb-463c-9d60-7ccf930cc398",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "52ce0ca7-1389-4d25-902f-45672fc6e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4ea3c7-caa6-42b4-8861-d77bad843e65",
        "cursor": {
          "ref": "9a40ea3a-5a7a-4d83-81c0-3854ed14e2b9",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18c49038-a3dd-4c1e-b311-bd3d13d2f58e"
        },
        "item": {
          "id": "fb4ea3c7-caa6-42b4-8861-d77bad843e65",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "260f49d8-3411-4390-8ad0-70c61999554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e72cf8c-0900-40d1-8b8d-fa8c4615977b",
        "cursor": {
          "ref": "a825d49f-d345-445c-b3c8-68f6348471ca",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7c43cef0-cd6a-4f25-9a53-75c10b124636"
        },
        "item": {
          "id": "5e72cf8c-0900-40d1-8b8d-fa8c4615977b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e419d0ba-596a-40d6-8767-bd8aff8c6add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895c085-ca17-4946-a6e9-0bd55663ae89",
        "cursor": {
          "ref": "2430065f-64d8-48b2-8e26-6bcba209a49e",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6f62d05c-42ca-495f-ba05-80fc3cc0d851"
        },
        "item": {
          "id": "5895c085-ca17-4946-a6e9-0bd55663ae89",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7876dc4a-394a-43c2-ac46-765b2229510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfcf33c-7aaf-4f74-9a73-9568db1898eb",
        "cursor": {
          "ref": "09a9316a-ef72-43a1-8636-f87fd55641be",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1db96ff5-5253-4447-84fe-83a4e8d9a650"
        },
        "item": {
          "id": "abfcf33c-7aaf-4f74-9a73-9568db1898eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5c61c707-8499-469f-965c-c94ae06ce429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75865cad-ad9b-47f7-9735-1461b9ddfc02",
        "cursor": {
          "ref": "8e63a1b7-6fa5-45c9-8a98-e10a5d613a71",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "814b139c-553b-47a3-b269-2341b4267c75"
        },
        "item": {
          "id": "75865cad-ad9b-47f7-9735-1461b9ddfc02",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "05f66641-3e3d-425c-85bc-0d199d0c9856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03c8535-e32e-4d82-b0ef-33c116e90194",
        "cursor": {
          "ref": "142ad441-e77e-4b53-ad48-50981e6bba5a",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a566399f-a1bd-48b9-b58d-5b1956592f2f"
        },
        "item": {
          "id": "c03c8535-e32e-4d82-b0ef-33c116e90194",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0ebe69dc-7ac4-4374-b327-cb28e14400c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546c45e-5938-4aaf-92d9-b523d282e04c",
        "cursor": {
          "ref": "49e406a5-2775-4b34-8f65-5befed680596",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1a7d221-1ea0-4139-8082-bea4912b297d"
        },
        "item": {
          "id": "c546c45e-5938-4aaf-92d9-b523d282e04c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b5b13613-0c36-459f-8b2c-333dc27b0a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407e93d-3f9a-4126-b114-33bb5ddabfad",
        "cursor": {
          "ref": "a0779c36-f493-44a8-8aeb-df8e3291a715",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "417883e7-ef07-4841-b201-13074a7c6afd"
        },
        "item": {
          "id": "d407e93d-3f9a-4126-b114-33bb5ddabfad",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c323dad7-0793-49f2-ab4c-d4400de246ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4419cd2-b59d-4ca8-9c7f-c4dcade73f0f",
        "cursor": {
          "ref": "f77b0e12-b156-4aac-952b-8ab7d9fefd45",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c9da59df-90a2-4146-9fda-34bb557af286"
        },
        "item": {
          "id": "d4419cd2-b59d-4ca8-9c7f-c4dcade73f0f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a3e33bd5-61f3-4daf-83de-c059f97fd7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1f32f0-dbd7-44f2-829a-2e0a8d00692f",
        "cursor": {
          "ref": "e125a703-a4d2-4ef0-add8-ec88dc5c973e",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1151706b-23fe-4379-8f88-23416ef1ab38"
        },
        "item": {
          "id": "1c1f32f0-dbd7-44f2-829a-2e0a8d00692f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "625e59e0-b2eb-41e1-b72b-2882f77f3cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598580f5-808b-4b15-bd28-53c017a5ba5b",
        "cursor": {
          "ref": "0efb24b3-cb78-4c9b-8c81-1eee855cd5c4",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a6431e1e-de5b-4ad0-a81f-30675abb370d"
        },
        "item": {
          "id": "598580f5-808b-4b15-bd28-53c017a5ba5b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ebe6b9df-4a80-4314-b8d6-e4c9bd1c9de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6683f85f-de09-41ff-8de4-35d8db0432e0",
        "cursor": {
          "ref": "d0d91ba5-8778-4efc-ba7d-a93688dcd4ff",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7ecbba85-6945-4b89-83c9-94e4c0fc7cc4"
        },
        "item": {
          "id": "6683f85f-de09-41ff-8de4-35d8db0432e0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d1a77fb2-e90f-4d68-a00b-6464d4bc1065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57404eba-075f-46b0-934d-c69374335f36",
        "cursor": {
          "ref": "1deea859-873b-4f75-9ebe-5bb19cb2be61",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "63e8a29f-72f5-4689-8de0-e0c16185472b"
        },
        "item": {
          "id": "57404eba-075f-46b0-934d-c69374335f36",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e8570457-c784-4da4-a3b5-6b570a395667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a68b6d-4108-4f30-b6c9-4d3949f014b1",
        "cursor": {
          "ref": "67021bd5-655d-4b4d-aaa3-780567d02687",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c1468a18-cb95-4c6a-a396-b277c556a9eb"
        },
        "item": {
          "id": "36a68b6d-4108-4f30-b6c9-4d3949f014b1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "39d789e6-d936-49ec-b12b-a6f3d6696b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d355e-2d04-4d1e-9cf7-b52559784bde",
        "cursor": {
          "ref": "fc6bedd4-509d-498f-83db-3a68022f422d",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "43265586-2abe-4bf5-a837-242f7a2ab085"
        },
        "item": {
          "id": "2f9d355e-2d04-4d1e-9cf7-b52559784bde",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "61ab21ec-5a5f-4502-ac57-4734a1361473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d89eee-d2e8-4566-a761-bc355c74bacd",
        "cursor": {
          "ref": "b43df001-54e3-4301-b43a-fc9da69cb762",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f601592-8487-436b-a1ba-7445991a4334"
        },
        "item": {
          "id": "a1d89eee-d2e8-4566-a761-bc355c74bacd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bd2c53b0-c058-4140-b308-0d1f86d2ee7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dc8be3-6d8d-404e-8f65-792e4cb3532a",
        "cursor": {
          "ref": "ba0cca1c-7c4c-4be3-b651-cf4490268bd5",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "30f75633-ea36-486c-acfa-6a7032f94f12"
        },
        "item": {
          "id": "c4dc8be3-6d8d-404e-8f65-792e4cb3532a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be0dd838-2c76-4565-a9aa-0dd76fc8f323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db4bc65-6162-4f24-8ec1-56dde595104a",
        "cursor": {
          "ref": "fc1a91ff-3311-4cac-99d2-b99ac383f9fc",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "01a2089f-fedf-44e8-90b5-9b0400ddcf54"
        },
        "item": {
          "id": "3db4bc65-6162-4f24-8ec1-56dde595104a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b9544439-e2ed-4bc1-bb60-4ac981b3eea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5905df6-b4c9-46fb-a2e9-b2d7667755d3",
        "cursor": {
          "ref": "9a6f9aee-6318-4e86-9ef8-a698c6b5cccc",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c43c6881-3f38-4c15-855a-bdc9fd65c702"
        },
        "item": {
          "id": "f5905df6-b4c9-46fb-a2e9-b2d7667755d3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "151727ec-94ff-42e4-a122-68cceecaa0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145d3ca1-a368-491a-a5f7-f3f1ad0b9955",
        "cursor": {
          "ref": "50770903-9920-435b-9eba-e2a47b3b0054",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "36f1c6b3-9f84-48fc-8fa2-c068ee85dc2f"
        },
        "item": {
          "id": "145d3ca1-a368-491a-a5f7-f3f1ad0b9955",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "51807791-1a23-4bc4-8c53-352c197612aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83245d5d-a116-4af5-8886-7f66c2817ad0",
        "cursor": {
          "ref": "c7619ad6-00c9-4aba-959b-6cb5e602830c",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "18b36956-f10f-4988-bdff-381185885bc9"
        },
        "item": {
          "id": "83245d5d-a116-4af5-8886-7f66c2817ad0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9f5406fe-d5c3-45ee-91d4-b92db190700c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f8b01-2090-4013-9338-b0f8b6c9d76d",
        "cursor": {
          "ref": "48d8bef7-7f39-4a42-802c-e86bf92c3361",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f0a2388-e47a-43b9-9cfc-94d5dcbd6d2a"
        },
        "item": {
          "id": "478f8b01-2090-4013-9338-b0f8b6c9d76d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6a4290c4-b10c-4a69-b74e-08596e56fe0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f8b01-2090-4013-9338-b0f8b6c9d76d",
        "cursor": {
          "ref": "48d8bef7-7f39-4a42-802c-e86bf92c3361",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f0a2388-e47a-43b9-9cfc-94d5dcbd6d2a"
        },
        "item": {
          "id": "478f8b01-2090-4013-9338-b0f8b6c9d76d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6a4290c4-b10c-4a69-b74e-08596e56fe0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f26ad-6dd6-48f1-8e97-9e6ee48d7ee7",
        "cursor": {
          "ref": "15c59572-c00d-4c8d-afba-b9cf69d8f7ed",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "96800181-d0b5-48ba-b2ca-d7359d7e512b"
        },
        "item": {
          "id": "2f4f26ad-6dd6-48f1-8e97-9e6ee48d7ee7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "26aa7005-1fe1-45a9-941c-322027c51dd0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 7,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea75138-56b7-44f3-a9c5-ec35d95dfa78",
        "cursor": {
          "ref": "07d8f1ef-55a1-4365-b4e0-21bcea2f6df9",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3dc6d91c-8da6-40dd-91a6-910d00095588"
        },
        "item": {
          "id": "2ea75138-56b7-44f3-a9c5-ec35d95dfa78",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "358e5ba0-a7b0-4d25-b611-b3a18bb0ead7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "2ea75138-56b7-44f3-a9c5-ec35d95dfa78",
        "cursor": {
          "ref": "07d8f1ef-55a1-4365-b4e0-21bcea2f6df9",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3dc6d91c-8da6-40dd-91a6-910d00095588"
        },
        "item": {
          "id": "2ea75138-56b7-44f3-a9c5-ec35d95dfa78",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "358e5ba0-a7b0-4d25-b611-b3a18bb0ead7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "f1ef9812-7ca9-4831-80e4-ba8f37103928",
        "cursor": {
          "ref": "673243fc-b740-4535-8292-3b57b4dd26d0",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "45cf4195-6f3a-4a7f-9d50-49d9cbf7520f"
        },
        "item": {
          "id": "f1ef9812-7ca9-4831-80e4-ba8f37103928",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5f4f8764-56de-4456-ae3e-216b3ed34495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "4b428d78-06dd-49c9-a978-683b8c03f17e",
        "cursor": {
          "ref": "69120ada-fe04-4d1b-9225-bca2fb404558",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0024d261-c925-4c60-aaf1-7b29bf7500fd"
        },
        "item": {
          "id": "4b428d78-06dd-49c9-a978-683b8c03f17e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8699a092-3b47-4efb-be60-0c142f3b5997",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b428d78-06dd-49c9-a978-683b8c03f17e",
        "cursor": {
          "ref": "69120ada-fe04-4d1b-9225-bca2fb404558",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0024d261-c925-4c60-aaf1-7b29bf7500fd"
        },
        "item": {
          "id": "4b428d78-06dd-49c9-a978-683b8c03f17e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8699a092-3b47-4efb-be60-0c142f3b5997",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9159c2f8-f2dc-4eed-9dab-6d285f30d2e9",
        "cursor": {
          "ref": "20167385-4b36-4fa2-b783-f30a04912aab",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "87ae20a6-7685-4b96-b1cc-c369e82bf2f6"
        },
        "item": {
          "id": "9159c2f8-f2dc-4eed-9dab-6d285f30d2e9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6f9aa514-2beb-4fd4-a788-b92824cb2ed1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}