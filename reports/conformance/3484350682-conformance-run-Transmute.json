{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "22537a07-f5fc-4a6d-a7d8-fe7b67eeb166",
        "name": "Clear Cache",
        "item": [
          {
            "id": "700602b1-f511-44ce-8ed0-8d206f259b10",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "322af636-9a39-45df-ad0f-9fb65146fb30",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "334dd0e8-c93e-429f-ae68-ead155ea7698"
                }
              }
            ]
          },
          {
            "id": "6da13160-9810-460e-befb-a459902ecf72",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bde8aae4-e82b-46fa-ac47-6f423c51d295",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05ca91b0-4e56-45fc-87cb-7f523e783402"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4aa460b6-8b21-4efe-805b-84d4ba96dc2f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76a8fc0a-9cd5-4070-9b93-22b8b1f78ded",
            "name": "Positive Testing",
            "item": [
              {
                "id": "106ce10c-9105-47db-ba87-c94f287bd702",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9664c9a6-ffbf-445c-8eb7-6fcbf8f085bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62278599-d62a-4fa8-ba01-c3f0f70d246b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a6bcc6e-8e1e-4a8b-ab3b-b9bc43d2b39f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d5f09a5-8715-4cd6-bde0-51dfbd8131ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a57dd9f3-673d-4589-b682-81140cac8dd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec8bcf72-1f81-47c0-b58c-d54e65f119fd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c54ad853-52bb-45ee-8a4a-20774ee39f08",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "87b48028-a611-4e74-b753-18bc3efe2f3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b2ea8f8-1ef2-4aba-baa3-3edfe5b052c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99b2ebd4-ad73-4e0f-988c-9741cdc4b044"
            }
          }
        ]
      },
      {
        "id": "3808ad7e-9d1a-4743-92c9-5813ba9eeda6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "db11d08e-0638-468c-8804-04e3b5b7fb1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfbe1370-d92a-4484-ac89-680224c833b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf1788c0-693f-4434-8a43-4abd10726437",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e2993-22e2-4002-aee3-cafb0ad9ada9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e61d73-2994-4b4f-b747-c1ff530d203e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822df7b0-a81e-436b-a7a8-b2ab444d7787",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834b7eb0-f957-4199-9956-53b77c111de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9958b9b8-3b72-44b5-b66f-a6433942da10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a255f7ea-730d-4c26-bae0-9c233b519e43",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55107c0-2084-4b88-a554-4f5fdd519a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c96283d0-1a83-4560-b0a6-e54b49481bfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01bdeed3-1b80-4fcb-8caa-e446dff47ebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c31e7c7d-8c9d-40b4-8a3d-66af53de5c28",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1556c6-6fab-45d5-b555-6d16fe405f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b282c9a3-dea4-4403-8c42-ea2a43c7692b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f08bec4-d366-4f28-a5d8-a061882ce2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f32fc5-a75f-4761-a36f-16db3d6ba998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1f3591-9a6e-4b50-a054-53b2dc86f884",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850bc6e2-02f1-484c-8d79-cb129ed35cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7846420a-5e67-4106-a975-2acf9761926e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d74876a-38da-4a48-bb56-e74028129d0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fb2636fc-5b74-415c-a4a2-c4bcae09b338"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29841a83-5d2d-414c-83c8-b7f1938eed4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bca00afe-ec2e-47bf-81ce-b2c50af486f7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9703c953-9b46-4824-8317-18df210190ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8e50226f-fcf3-4969-9858-6b547be946a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2937bc7f-8c81-4671-b8c3-e46f900ee40c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8d7b7f6d-bafd-47be-b8ae-def23dfc9fd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb731a38-9e86-4e5b-b4b2-eaa627e0b6d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77f60de2-3d9a-4dfb-bede-dee3976d1058"
            }
          }
        ]
      },
      {
        "id": "48be6164-1531-4ab6-93fe-20d9f392091d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "faeb3b38-05d7-4611-8c6e-b0392de3e9cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0e381ba-bc36-41a7-a0dd-65162bebd3a5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68858489-4fd4-4d00-a8d4-b99058287f7d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325a4c72-c642-4b8a-999e-9f7b13ae6356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cc6ca9-073e-4599-8021-7f3170d6bfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35d05ae-7454-4bbe-ac6d-f8f18385bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecfff16e-e2f1-428c-b26a-1ef3fb591f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ba9e3a-7bfa-4d82-8d7f-cb0c0a22d881",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7795fa6-6114-4db3-98c9-86cd56b7e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1624de7-c095-44c3-ba46-b1adf4f80448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a710a543-3969-4c4e-8e89-6cba3d31f107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "927dd2af-b42f-4ee2-8730-956f4d4ada4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e43ecd-23e5-4d74-9446-23e8236646aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031b6d66-f24b-4e57-9754-31a65707e5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789f669d-fa12-410f-8af8-78b0034ddeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad36ec7-6f0b-4397-9ff2-878fadb4bbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f375b5f5-72ac-4733-a320-7d30a2017bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff994e54-c8a7-4a7b-95e7-a709b6a35503",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fc300f-8f2d-4a65-834b-e12024c4b13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a601b1-d2f6-44ad-95dd-14eba44f8ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39049626-16d2-4b27-af8d-0a578c6fc73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93cb3edd-d28f-4a1c-8932-73935d289f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4400ed3-3454-44f7-aee1-ff10079d85ef",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b34116-6117-483c-8963-6993ed25c932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4750adf0-7353-43dd-ba4c-d8956d20ed68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7eba8a-1b33-4274-a9f2-464b07826405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c675d9c2-5e2b-4b11-9e17-2687254e9cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdfe4ad-f9ec-408c-bd2b-907463785795",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4535742-791d-473e-b758-976938ab7cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9602181-f4e1-4304-8efe-f17446b471e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4c4582-907d-4b5b-b954-ce8ba52d171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76e2b2eb-e804-4540-85a4-8e28c388c954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63ad1b-853a-4cc6-b8f2-307f7e7c3fd1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32df9a-ccd2-44be-9356-95758d52595b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be986b4-b64e-4fe6-96d0-3f00af679532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e030cbea-ea4d-4f80-9faa-2348ea1dd700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4745c901-025e-4969-84e5-7a9db6aba51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd34ec8a-ce34-445a-a5ca-7b13243beac4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb5598-11c9-4509-82e7-6572477ccf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cee6a6-811d-49c4-9f49-39b065e1d2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce16702-38dc-48bc-9563-3cdc1cbe4eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2683f3-99c2-4260-a374-a6373a548faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a7997-e27e-4e98-9616-30e7c3d6ecd4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaabdf6-2c2f-4fd3-a911-ef103daf2297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed5322b-cdda-46e7-bca0-3680dc97fc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfa5d1e-cd1e-4ea2-b3c8-646dac38ed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e52d8c-0169-4e4a-9677-33ac33135ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eff70d-f00d-498d-affc-e132363d4783",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07af8604-2087-4cbc-a707-60aabab10c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4a6748-fa78-4deb-9d6e-118cc167b4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc355d6-1c83-45dd-8fe8-561c785db5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "177870ba-7c8b-4d69-9e47-c3e6db9ed949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b004bd-0e55-4801-9ad2-c9ed6635c3a5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a9d1e6-129c-4aef-b38c-ff997f6adb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d9a18f-3e82-4271-ad47-673632494df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea5576c-b237-4135-add8-a7ae5af18453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49f66be0-5cdc-4fb0-8ef9-6fd984beb5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecdbc61-b8de-47a3-94c0-2d73516d1b26",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0c6f09-ea36-40cc-a4c7-db89871ccbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dbc17a-6bbc-43af-8787-cdd1977a4c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd045c-3786-420d-99a1-a4255f26b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0887a865-5b97-46d3-8fed-231dcf18be73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326cbb61-c3c3-4217-8588-b2fbba1ad918",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b00ed0-5c0f-475e-a179-ceed82745487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c535d2e1-a19d-405b-9177-2d2515b7e955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0bc972-50c8-4090-b6ea-809391478191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e4ff5e-2a19-4e64-8e93-7404a19e1377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceed3de-81f6-49b3-b31c-e24551d76d59",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105d0809-786f-4ea1-95ff-de7ac4c34312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b120fcdb-d41c-4e49-a609-07bada0e56e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d41ac55-2f6a-49c1-9b88-2ca03ca628f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d562f0df-1ad0-4283-9088-c0e207f97998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b89a5a-62d0-440d-8017-0f9f0c48b716",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b49378-b731-48fe-bf85-c663dd42c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ec2056-1efd-44d8-962c-22a08e4981c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95d78c6-ac61-4e74-8f65-cc9920744619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21910f3-d954-4731-ae94-8b0ff4d1c680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fc3192-bdcc-4582-86d0-4afd11b37dcb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4387ec2-6d85-4087-a108-c4f397384387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8cf98d-93ed-441e-aaaa-dc890d15bf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df168ac3-86af-4e1c-bbbe-942b905e5981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b95e048-8fe7-4cf5-858d-26742b6b3ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b84c82-b5e4-469b-ab6f-a3d306d8858f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c036df3-e6e5-4556-9778-4a76cf8315b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f677f24-a867-4272-949c-91064e8dbf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6c49f-1926-46c3-b1cc-083d10b52fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3fba0a-23e2-4001-a7de-6628e5ed7581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20319f35-5227-44fa-96fc-f1208abe006f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83730b1-f411-4c90-8ebb-e5332c546bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533c25ce-2d94-4dfd-ae2c-5a795ab8cd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaac7e3-8a4e-4942-be37-7a8e2018458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52df4833-3518-469a-b79e-a794e1da11fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971f43e6-e554-41ed-acb7-531ab7002c7c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34937520-7bc2-47e6-9572-48dac7e8e004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3d3aa8-6660-4c3c-b98f-815a573a210b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb65ccf-355d-4d8f-a98d-579b032653d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c72d9f9b-abf9-4425-bea5-6068983e621c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084a9544-f2e8-4450-8213-3c592c5b9b79",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645f7066-1df6-42d6-9780-9aab3f9252c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1394943-397d-460b-afa0-8919a8cb4619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80b0e5-c06c-4d16-ab33-526987f93ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb4fa91-721c-46f4-b270-faae516c7eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643fc88e-f9a1-4c06-b9a8-15c16f44791e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4547b9f2-92f1-4429-8cb2-556e56417256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434d95d9-cbd7-4c4a-a4e3-08d6854d0055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77532463-404a-476d-8b54-aa7fc61ad0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d7d739-a63b-4001-9dcb-28fbab0fbf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f5e78a-5500-4efe-af62-4d44152d0d72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7b62eb-998d-4c0c-8516-714e928d2b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405f4460-0143-4330-a1da-fac66e9ff6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79794d6-60b9-4192-ac7e-5419c957a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b902b77-5e91-4231-a36e-e128e87d5334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e866eb-94e5-4bd9-b8ca-741a53d7eda5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f5e45-8251-4466-842a-64008e5cfa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95362cb-cbfa-40d0-b5df-911034f87711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513f052a-ae1d-47b4-92d8-b5b2fd002dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6351f8f-c603-4085-b337-a3875b7977ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f08aaf8-6a11-40c6-a05f-c75728c48540",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e3f5aa-6d1a-4d88-9bf6-677f75e17e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f1c715-1c1e-4c02-9344-5a7fec2ce029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27896c0c-d2f5-4de1-b779-1b3cc067f1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a1aa99-faec-44fb-9de0-f4c7988a43fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b07ed0-9453-4803-a7bf-8bf1bac1c0d6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0621ff-5308-4f94-a516-61b33d08af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6781a14f-0654-4045-975b-ee3db4aff604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c089c-3cc1-4935-9391-050daf664a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d901a71-e081-4a0a-a745-e3adc04f965c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61cf8f-178b-4528-95cc-781e66ffd977",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c56f517-e356-4cee-8b4d-959cf735daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b159980-f442-4059-8e87-dab1356eec20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72ba4f9-c547-4c67-b002-b0acb39a212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7362359-8e32-44c5-a544-cea6161bbce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f73c36-c333-43d2-bca4-51f84c60816f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb44201c-8711-478e-9c04-78abdb828a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fff9476-c436-4780-a04f-2e088275ba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea0b7ad-983a-4f13-9bb4-f8282c20d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef4edbe-c9d0-4b38-9771-7dda2d713cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6d5284-8f73-4f86-8b33-d3e1aa6f7463",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fe079f-ec63-45f9-b286-a1ebe0decd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6ef9d1-e60a-4489-a537-63373e6c2e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4186c93-eb5b-47cf-9d29-5865d14e0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fe0fc0-38c2-49c4-bb5e-cf56c54f9749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30a4bea-3792-404a-b5a8-34a725ee8407",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e87a6a-0798-43ee-a3e5-54849d20ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a23c0b9-9691-45af-813b-7efcdf975790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4a001a-6141-4f9c-922e-8cb55c5d4f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23911b80-e689-4e70-8456-3cc36d82a2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7c2392-875c-4a1f-bf0b-3a5d9bfe0cfa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ab969b-3942-4748-8634-0be0d0a59e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2277c31-2815-4a07-a04a-8f8e9a96fd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87528328-6996-484c-8db1-668942db2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1b3099-8069-4581-8210-015676f76da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7839f24-b52f-44b1-b95b-b005589b41c6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e8890-10cc-4bd9-8862-b7cfd8730d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a5aef5-e79e-49bf-9d86-aa9d3bd25677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cae58c-df45-4ddd-8910-5f28ff09d97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42d3573-8e47-4a9f-80ec-3a43442e3635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fe7c29-f77d-48a1-b3c6-294670e44229",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9b1b34-7c5d-4d95-a81f-65f5ca7724e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7382278c-ea21-4a95-9a84-1b042910242f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c357f37-cdf8-4c68-9603-8b788c976e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d138c9-dcae-4d02-a23e-78c59040337e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110eb1b-6b50-4788-8b8f-007e950ea160",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bb6537-0564-4ebc-ab66-f83cc1f32257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7530b7-bc57-4c93-9bff-404e61c965af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c8d8b-53b9-4050-ad2d-81d44e929da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a852b71-8d36-4665-9cc4-ea02c894ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a2f48-d4a8-49a4-a6d0-63c146438dcd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a51ecdb-6008-4a6c-be17-49f9a75892dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16566989-e722-4059-b691-1d89f4b7daed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfc37c1-92a3-477d-b0b2-393b125097e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "566af847-d975-4900-9e62-25fb6502674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645a627e-d64c-441d-8bdc-ddd92b3ebd78",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b9ca15-e951-4c51-adba-8e225a1df13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cc7286-c362-48f6-9e60-ceb9e3d0359e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9f481-0679-4bdd-9a5d-ecdca5f961c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7e914-91ed-4c2e-910c-fec79fe0d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b121c-c232-485d-a07e-34a740f00e39",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef0fb8-c578-4cb2-949e-da81fc9b4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad3a9b0-d744-4dd3-8142-587a3c1c6bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97b92a3-487d-421e-92c6-7306ae675ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc3d8dc-b87d-45dd-90ee-fadc132e0ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e6abe7-c571-44bf-85f6-d36fc34a6267",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50caf76e-2500-45e7-8671-ee1d018d8599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b35e080-1b3d-4fd0-93b8-3cdd3db51039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fac65-9ffc-4cb6-8c82-777cf8966c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "882b33e7-11e7-4e53-a681-1c83ce1a6e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699be692-4067-466d-bd43-f9fe96b1df16",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c79cf6-0ec4-4b42-8f3e-72fb45e3f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3298e7ac-6da6-4fff-aa91-b020f6618e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131695a5-9f2a-49e8-ac77-2d364f26af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3398ff6-67a9-47e9-8df0-35599dab0831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcc445c-1bb1-4d3f-b28c-3040e80f46f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca48bfb-3a91-4fce-ad8b-7add1b042df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2cd619-89af-40db-8c71-c6fa03b2a4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d8fac-fe7b-478e-b6db-0e2df9a76019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3141fb70-f81f-4c2e-92ef-8c0f88f8aa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70c6a9d-9e46-4a74-8344-cae8e77afdaa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cdab16-f1e0-4ce2-8dac-26f954814342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bc46bc-c30d-414a-996f-2a319daf9f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95e812e-3a87-4923-8885-b019909ab548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2e1c5b-c4bf-4b0d-943a-1afa832eb05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b12a4-22fa-47b8-84ba-82b630702768",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16bf06-1657-4908-b6cb-a61dba76b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9323d3ab-eace-4deb-b0cb-76e665c8b027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad97743-a760-4995-bbcc-d484c2d8004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb21fbc7-9614-4520-b3bf-c43454cb09f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ee9cdb-af30-4fb4-a2f2-9747482bfe37",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445f4344-4f8a-434e-a2f5-20e253033dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29349961-9b79-4746-9d89-d52bbf5630f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a0ed21-57c1-4af6-bb1b-83636660604a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "64a46dba-4fbf-42e9-8f84-59edca470adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f879325e-ed9c-4d4a-8fb0-9297b943b48e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b488d418-f0f6-447e-abfb-5a1888fc0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b96c41-ed25-42ae-be3b-94e8903d816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308cdc94-dffe-4506-b42d-f61dea3a179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "33c40fbb-becc-42b7-85a6-79fd2fb45eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef38063a-fb66-4704-8364-b282818de09e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2d4265-a6cb-414a-abf6-825afa67b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b1a91b-f959-4bf9-8385-237faced2501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632c4ed-9aa4-4427-b91c-b5e5887b61ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3823320-b599-44bb-9600-e77467fc1ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de2452-0ceb-4a62-9aa6-289bd5547d45",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05e8b8c-4d5a-47aa-8e25-add7da9eee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecc5b5a-4fc6-4ad9-8704-4afa8bdb188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e1584d-a88b-4fff-ae4d-335f54bc86e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbf1353-dcf6-4aaa-a3bb-179ff9e278c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d83523-633f-45aa-b307-89c73b708f09",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5ed2e6-52ba-46d7-9824-1f05f254f169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e9fb71-21db-4baa-8859-ec4dd7cf75d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab06fe1d-436d-43a7-b3f0-f7d417a2de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fc1683-9099-4c63-91f3-82f774d54cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb84761e-bca4-4428-be06-b7bb83e6e6dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb96e018-c602-43ee-b3d8-4b910bbef9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae0c0f5-6fa4-49e1-99c2-ed039edbde30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9859857-9fda-4d92-825e-1c45e91d50f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2db673-08cc-41bc-8a04-886f8595a586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124b715-5dea-4127-b1c0-bc3c99ecec4d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ead017-44c7-4dca-9094-296c7318859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca280b43-2b1d-4924-bd8c-3eb5523e10cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f910bb03-b71f-4ec5-88b4-e0dd45dbc876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3faa3da5-7dba-47c2-8c56-b7529cdbb1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025be499-b89f-4ce6-8ca1-672bbeab511b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f324cbd7-e5fa-42fd-ad44-72adc6bc5f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc66807-fdd8-4654-85e4-f674636894ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cf3ce4-11a8-4b12-b715-7c5eafa030c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f70219d3-61b7-4006-b772-7b34e28cafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161bb960-1b48-42a5-8d72-6df8ddbaabc3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db637085-cefe-4654-a305-c68f4842ba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e922c8-cc07-44f0-ac85-6a0993b89eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7877541c-6950-42d0-b8a8-69b4a189ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c49fa34b-8b24-41d5-9a5e-4615bed39e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc33a3b-e35b-499b-8358-2ba890d0e65e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ac574-276b-4abb-8ba8-80184add8d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f83263-1257-40b1-84ac-1d9f55626950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ff146-e512-4037-9f97-ceb45e1f5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6651a4-f433-4e56-ad86-e2f45a389312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8107ce2-a2b5-4155-b27f-dcb1ed9a6c4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378810f-149a-4e24-83c3-ff59bdc44b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe41fc7-424e-4ff6-b204-06b1d96e8f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b1a0b-7cb6-4623-8632-df9f708a1d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1369e7-aa3b-4d53-8cd5-2d00f280e040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0cb355-9a32-40cd-b547-50961a20aa07",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0f6806-75b8-4eb7-9ec1-967320826944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdda9c40-e1f9-4307-b20a-ee1f8f35875a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e60e94c-784d-4a4c-88b0-11ef4028986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ac1f52-c079-4197-8d01-858443c24b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b97a2f-4abf-4f29-83de-0805b5115f99",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354ed026-fe34-4add-8538-ce2708a721df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89441450-374f-488a-93a4-b4c6a3d5d229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ee01bf-2f83-4ccf-83ca-e330ed2d4541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f457e4c0-a92f-4e73-b5c1-8554b1bc047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b956a0c-4a23-4086-8dee-447c98f2ee1e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d856e8-75b6-4c69-a6a8-de9f342481a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd8d317-bf31-46f3-8165-cd40958901c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baf0015-ebc0-4ff8-8965-789b0618040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "719f18d8-f7ab-4969-bd1f-83e076b928cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34928e-75b5-4d08-a705-0532fb38aa24",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c33e3c8-ce5b-4377-b26a-f7e7d769d5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c989f684-94d2-4603-84ad-db8f5ca61502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293895e5-306a-4cc8-9a32-bab9ca356761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd2b75a-171d-4696-bea3-2752f1d27ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab70cdcc-fa64-48d7-9c50-7ae733a57cd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e26629-3278-4722-a962-1426c69ffeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803727e5-57c8-414b-bd6b-959dfb6d962a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fb3b0f-407a-4b57-a48d-572cbbfea318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a017763-ab4e-465c-bee8-93300a69b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3f63f-eb51-4140-971c-7e6261bb0ef8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a99f67-d57a-4db9-883e-73b6b8bfa7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7276f3e9-f359-4692-81c0-07472f85af3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372496a2-c764-409d-a937-9d5d4d041605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50cf3b58-3acc-4cfa-ac67-8b75c0d02841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b996ee9-1f8c-4595-bb72-91c490cb7c33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a6e702-daaa-411a-a028-c02f2487ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bc9e91-11d1-4724-bc2d-0bf448ad8c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b49a28-bb6f-427c-869f-6887837c21ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdbf80b-1256-4bd6-b301-2db38ebe3537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe02afda-a21c-4c12-bd06-79f0aa00b4b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebfd82b-080c-44f9-b62b-10ccb873cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7010117-a6b7-494e-b7de-890a93beabc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8e5036-4e89-4542-8a1a-2f39c81b98ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1393844e-1644-463e-8073-9c1cc28c8861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0e6f9-b9b4-4408-9620-4601d08f584b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e57dc7-a355-42ea-a2ad-d4e1299f450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1a9bc-7606-4e49-a127-992114f41af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71607046-219b-4aa2-a3d9-5fc9b792df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21db5630-ab6b-42da-b8cf-73628419a2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb2680-b7c9-463f-976d-f94134094269",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42796103-d9bf-4f64-92e5-56eefe7ff29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacb6c3c-ad2e-4527-8946-bb6e6f9b43c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cccc660-b45f-4dcb-baae-6f8140fd13a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bf730a-806e-4567-9841-486ff2f2a913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9139bd-190d-43f8-8170-c58487b5c50a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea68102-04dd-4cfe-9161-063fa6c5e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeb80a9-e2cc-4635-8df4-8ee612f72dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d6058d-1107-477a-9a26-84adeb27b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "830a61ba-3550-40b4-b3a0-5b6a5b4eaad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92047884-9bb1-47d9-8af4-01e3472b0f8c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba967206-fba8-4f71-8bde-b6dcf803f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c70e1e-cf8d-4bc6-a591-60917a79412d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954e2de5-1fac-4ffc-bd0d-129eaff1a6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad1ba5e-1d5a-46f0-9024-ecb28e16a29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110a25d3-ecfb-4362-83d4-a375634c337f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b5d3ee-d453-4749-9a5e-10f857e4204a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae070d6-ad89-4060-ac97-88f8a1c3f650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d9e423-61a2-476a-b194-577a2075026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdbf72b-3aca-4472-9483-a2f4d93c9019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee35a340-b285-45a0-b1ff-74295b4f363f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f521648c-adb2-4f01-ac1a-0708c2351c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e986fa-9c1e-4a41-8251-95e2fc3d286d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409d3b81-73e2-44a9-9a45-bc56802f2b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "437d95d4-42f5-4654-906c-02cc85f07067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380fc8e2-50dd-47ab-bff2-ba5da82f81a3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0644362f-36f2-4508-bbeb-9238f2c03609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6b6301-db94-4dae-90ad-003da5baee8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32be3942-eb33-4942-8941-ccb6e19b4021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b10c4a06-2185-4a36-b9cb-83dd59724334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4a587f-3d1f-4e23-bc00-cf72753aa83d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fc0c14-fe16-4168-88bc-0e6fb0e26def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006b7e2e-6770-41be-a55a-1f34cec332b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a65c8a3-b004-4c39-8856-c488026a9ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be91c44-495e-41c8-92f7-e6a87787280c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8b4ff6-b39b-4112-a4e6-61d6914ba340",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17038eb4-cfc3-4f9c-b4d4-6036c09a0369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159a2d4e-1163-4351-8afc-39bf7d9a0596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b170aad-bf7e-44c5-b513-4eeb3e5e0ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2d3762-3013-4dfe-b025-2225c3d1b8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f83a67-7ef5-4435-895a-06c4e7d4371b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bb06b-817d-4409-b66f-fa07e2c230e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81e0210-ea13-429d-8b21-9a7bad90c9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2edef43-705e-467b-9c29-669c8f503025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac40712-5806-49b9-ba10-d8779d96c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27772636-3ed8-4417-9e95-32de2dbfc384",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe3a870-7ebb-498a-9682-0a85640b1b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b933ea-40e2-4ec3-83c0-5269637cd3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b439a095-9844-4198-a1c5-2096019255ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9291c01-b4c1-46c4-bf07-5b1cb9c26c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4839d5dc-fee9-4e5b-904e-8e3a7ded3102",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbadde51-04a2-4550-a254-8930ab26b96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03316f7-42ff-4efb-87b1-6cd1f4e1151b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab165c-ec14-46e8-92ad-9dd911bdf7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca468c8-f403-4704-a772-984b20439ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814860e4-607f-4629-981f-8181c370e4d2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2196ae18-0d15-4cd9-9174-77d03cc0db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e076ef7-de4f-4d1d-8488-f264551b9253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73dc3f-4b86-4747-a4ff-a07ce6fcfd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f356da9f-6381-4bb9-bc4b-911cb7caa956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd2974-eb1d-4793-89b2-b2240c30424d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0077cd9-a010-4ad6-ba71-8825d04af00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2df7e1-9fce-45cf-99fc-185c5c7e2b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81af682-5a18-4c5c-9a62-473a26fb7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b089a2-3246-46b5-b33d-9365d35e7b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665a1baa-eb3f-4d70-8a58-cd47d6fdb636",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84902e64-19db-4a05-9037-fc383b9be0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0893e07-a31e-4eb5-a6a0-15ea410cd6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d91bb9a-467a-4ae5-b966-1e9e091328f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6a1f64-5aa9-460a-b326-843fa0e113d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6bb16e-bd8d-43b4-a767-5e5041f7abab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00735f5a-d89c-487f-96c7-18d2e5bf0afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fd1873-39e9-4810-9267-5c14066522fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f352b3-6026-4c9b-b0b9-cc5b7ae75c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64443aa-2cc3-445b-8800-0b0e5d200921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d3f55-9e47-4272-9f38-920f7a601ced",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28781ce-6333-4031-824e-e2a594cc3d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112a0579-ffe0-4b1e-8cb7-bc15819aea78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179facb-f71d-4a02-b3d6-2fa9221dda11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e477029-0c76-406f-8b45-8f2b6d2e552b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e7e762-c559-44c4-8783-9ad049861f25",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0787f4e-1b6d-48af-be9c-c2ad73bed7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b265519-831e-46a7-b329-0b4813e76168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577f5641-7167-43fa-9977-74fee9d7df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18953531-e4d2-4d80-8f2a-e98ec8440e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de37ec7-026b-4a17-9b92-af30a21b7f65",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782000e6-0b97-4400-8c1a-3663b7551774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b731b85-081d-423a-aa65-465751e73eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d00de11-2880-422c-a31f-4c624b0d3051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "375b1623-6ee4-4cdf-ac56-26535957ed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64e3c1-7af3-4747-838f-80624b17cc0c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20482fbb-913b-454a-a960-344c1aaa585e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fe7cbb-9426-4f09-b884-e178e8d053df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb3fcc2-e896-4a09-b7d7-b8a3c374f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a25ce86-2b59-4b90-ab5a-9c64dfebfeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64316c-36df-4888-a845-46a457ea3f36",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582df9d-ccfe-46cc-ba5e-94c1d55ea09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74e79ed-f8c4-49bd-994f-b4e5ffe35cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49f16ab-bfa1-405d-b81a-c80a72a590f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f81ff0c-eda0-46e9-812f-5df51c8c26bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb30d64f-666d-498a-967b-650f1236baf0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7ffc33-f8ca-463c-aa6f-e48ed0f07070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fece78fb-30fa-4485-b058-2daec6d5089e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf460a1-122a-475b-ade8-57583d799f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ac7842-f2a0-487d-8828-f161e7d2300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a180dc-dfcb-4cbf-b9df-406068789da6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658087d0-87ae-4f56-a5ae-68321a695ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2795a5dc-1895-494e-a043-6e075eb6e685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46950cb-99ae-428d-9262-1b556aacd3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6b7e66-5e8f-4543-bc4a-0a2442ee692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8d26fb-d506-4235-bd48-dce448de3c95",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aae5c1-9cee-4a39-a97a-edae5a18978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd67ca26-b5d6-4dd8-9f15-14ed6f8f2326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e636f9e-df14-4360-a890-48f0be3c9a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7292414f-0eaa-42a8-935b-588d88a7df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a226f9f-2044-4ee3-9cc4-22736c3bdf33",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605adfce-2e12-4114-af55-998bfd6abc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059583bb-c3e8-4a84-8fbf-124b2a84b5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a05e40d-9dd0-43d3-9192-4899d3c226e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b03de02c-365e-4fb4-a31b-ae20f7e03870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb334173-f2f4-437f-a4ae-bc1c8b8fca2a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd4e6bb-6231-407b-8534-8664f7b7ff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5da5ea-4e09-42f5-a784-9176b9ba8de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc78e93-7dce-460b-a18b-84e8c4ba835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b40a7604-9bc3-4e46-9f5f-e92d089fd35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ac9a92-4d30-4af6-847f-8fb5664954c8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8fe7f6-76dd-4d38-8abc-c807e2529d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe7255f-a59a-401a-bea6-d1be9b0e9359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4dd9c9-69bc-4562-9de9-24a55f9c3b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e518d98-6c84-49cf-a51f-f1bed237e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fbc5c8-b4d0-4502-8de2-928dc278edcc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dbb4b2-185b-4bc1-a23a-e426b470036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77094ae5-a3ec-40f0-ac31-0b3120c18b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b595563e-76dd-4f09-8e2b-7683da3ce174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a891514-d3f9-4f21-beb8-3d62dbbd8c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c39114f-90bc-4b24-b510-f1b87382603b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce209946-44c1-44e1-aab4-2c9bfa5010e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252c76aa-5c6a-4549-80d7-976a480a04be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61719a6-5ae5-4fe3-b5cb-880a22b3f345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fce5b6-8338-4982-8887-d4cc9a3a15de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6e1fe8-bbba-4331-ae8b-658fdd385bfc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ea7577-65ef-46c9-972f-1934eeff4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4433b22-9628-440b-9744-998f61821863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196a8270-fb02-4d16-810f-2a67ee9afdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d083f68b-1057-4d9f-a907-d5e2fb13c1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d54ebe-d219-4e1a-aa9f-ca755def9ffd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a503a453-0830-47f5-8578-aaabbf0259ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6497d2b0-869b-4a0e-af6f-20422ad8eeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95649e5b-0bed-44a5-a47d-5c2f192a3073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09585abe-9f24-4524-97ca-a9b55b80dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b3729-46e1-4661-8cde-255e304321b8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac5ce4c-7310-4ff1-973c-fcf183d3d039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "349129b5-99c8-483c-a729-79fb54728083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65a17b5-e31c-428d-85fd-786789c404f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c64f10b-0a53-418c-b91f-8e73b4811aef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78ca556b-61d5-4836-a501-dfa8b2afe195",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68bd9dce-8ee5-4d3c-8f02-3398d5b95877",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be203eff-ee89-4358-8e4f-5c10e2467487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4e971ce-5837-4378-9739-0f9ffd965df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79b4d33-c06e-437c-99c1-86fa98ae707a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "417e3576-2278-4b8c-8091-fa43790c4965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb4abad-1b6c-412b-ab32-c8521e6d11b1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fb1ca3-6902-4462-84bd-130aabd6c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "092d6b90-b2c3-4655-8a43-d77fb5a6b8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a032b79a-4359-45da-af60-10fe387552ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dffe3421-10af-4724-825e-bf1e162972e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3ae600c-60e1-4fae-ae11-7b637a914859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "792ef82a-ca15-4242-9981-8fbdae78888d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bf716d-471b-4384-a262-29c580c4252c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d047ef7-47c6-4370-9cb1-cbd7d8bc8646"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d631d0bc-7e8a-4b2a-a4c3-83c593aa7a7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edc3eae6-4578-460e-966e-f9156aea33d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d82e6eb8-d1fb-4053-9998-a11f67697e50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff8babd7-a76a-48d2-8097-02da7129eb3a"
                }
              }
            ]
          },
          {
            "id": "b5d94208-d804-4d58-b8f7-e53cb1e4c5ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f5ed19a-0f2d-4af8-b50d-8c4eb1ef15e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e308288d-a052-44e1-837b-e7ff96ef5c09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64578a0e-8ccb-4e55-8e40-0e2bed88306e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c7d888-428b-49dc-bf78-0dc0f3bb198b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ab31b94-0260-48de-93d2-1e265fcb3127"
                    }
                  }
                ]
              },
              {
                "id": "e98cf4cc-842a-4770-8ecc-27e40b97710b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1a048b7-ff90-46af-a88f-95048fceb007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f27fde3c-4c60-46d9-a9f3-b21f208c26da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa5aa016-3a1e-4c02-ad42-2ed90db17f27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f040ef1b-5587-41a2-a70c-51d777064bd2"
                    }
                  }
                ]
              },
              {
                "id": "e729c8fc-91f1-4ddf-b754-209da55f5d5e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56d2b83a-b729-4fd2-bd6c-b30172a9cc7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8598e144-57ca-40a5-9cd3-23969733400d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38a8200a-c645-47a3-b4b2-f70deab95a42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cf519bd-ee9a-4ecd-a820-061a9dc0a557"
                    }
                  }
                ]
              },
              {
                "id": "f7357a84-5a0c-44d8-9bc9-8933c6bdb615",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a55422bd-6ddf-4d77-b31e-d8c76aa28a46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feafdacc-8f46-4cc2-9eff-f1a5b23afa20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca44dc54-b69e-4a5b-9feb-5019b368768d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2949d676-412d-44ae-8ea5-ecf68379d879"
                    }
                  }
                ]
              },
              {
                "id": "1ab73f69-b821-46dd-8703-e53bcb0ad2db",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44594cb5-ac60-4402-af3b-8a30c85ec18e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a21ef075-7e09-449c-8f29-ea47b113baf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6690c820-132b-48f6-b1b0-bb0fe4476556",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bc6a93f3-0f94-4e39-878c-d8e77a4d8698"
                    }
                  }
                ]
              },
              {
                "id": "486fdeb1-c084-430d-904e-fd9158a6d5ea",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5e6ffc8-fef6-488a-b782-25d0fef2a3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a34c648c-c3ed-495a-a606-e2f7598a4a7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ba8b431-1ea3-46ad-9c2a-a2cef9d6c677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "975298c8-825f-46c4-9418-9ffee8f83cd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03f44824-b85c-4c75-90fa-578907149fbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "999bc986-8395-41ac-ab79-83fc203cb257"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b455eda-ecbf-412d-b4c0-fcbfa6176807",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc820b22-cc27-421f-bae3-43202ccd8d3b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f29351b6-b003-45ed-812b-d7a66f51604d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "df5e25e9-5cb8-483a-8b43-1bd0d6d3a4a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac56115e-9ee7-460c-b211-247c2e372e77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "927fa7e4-f7df-4bee-a509-b1de9e58d77c"
            }
          }
        ]
      },
      {
        "id": "579cadab-206a-457a-945e-9bd10807b73e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e2858bc5-fd67-4e6a-a01a-b1feee1c5c03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "732ca6f9-5552-495e-a6d7-c6769a44a220",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23fc5b90-9b25-46ec-8968-b3d1637e4f2e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10803d2e-413f-4016-ac02-75b26a83841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d2529-b97c-4623-9dbd-37f293a7b142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1912ca07-ebf7-4ee8-aac8-622113b68dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa1524f-0bce-4461-9f5e-8dec43ad097c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7c4ea9-9bc5-416e-8c3d-e4892b3e9354",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2891208d-85f9-454b-98b8-f068fc32d700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5b1fa8-1f93-4609-b3b0-89605950aa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc56ad9-bb84-4534-83b2-c08b20373192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4140198d-e5b6-41b4-b216-c03331430342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c54ddd-6d9b-4ae2-9fbe-2be280520e14",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d8fbbe-d5b7-493f-88dc-1c17f195cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17715bd4-2de9-4ecc-b51f-51d5658ca877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c0f73a-955b-4c31-af52-021d21bf652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a605a-cb64-487f-854a-c8c9f2542be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b993da7-b878-4e30-b128-b084e2d17672",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f90a3-2896-4b23-8014-cac98ea75e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa9ce26-9af1-47d4-b0c1-e8e2e604a8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3a5140-adb2-45bf-9221-af6d6f40bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4371bc5-238a-4b84-94da-450bb54a638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0459e18a-2b87-4760-96c6-9820767c301d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86801c6-2792-47e3-ade0-bb255e03af00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6851a418-577e-46fa-920b-9d1318f25188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86bf3fa-210e-4b6e-8869-5aee6da99d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95df51f5-1bc3-43ae-9a82-6f5e0194d2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341380f4-fe8d-491b-9db7-59faf575757e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24fe0cc-c1a8-435c-8950-1ab37bb71609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82f7a87-ae66-4b37-99a7-b06f332474e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a45dd10-2c00-4965-958a-96d5a6f63a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1be104ec-e694-401d-82c9-d81eef8d8f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141ae1eb-94f9-42e2-a6e8-71a9c49da62d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b760daab-f631-4b6d-a52f-cdd814fba04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf19357-92be-4adc-b4dd-fbc42f9791cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97988fa2-b8a2-4512-a406-469ccfcf6ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46f0109-3a10-483f-aae0-8457fc5dcaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e74ae15-89c3-490b-bc4e-00baf553d2c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d48d9fc-3f19-495c-8a94-f318028b5297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4318e36-3f03-408e-9c09-c08fd9b525d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caa1b7c-d360-4198-9915-828db84159b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27cb571e-aef6-49d7-8e08-1aeb913c005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481d4247-3ff7-4dd3-96d3-5ad7c8ec6106",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287b0548-7be5-4815-bf39-5839ca2c786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bd8202-b9da-4d41-9b84-f66a0df1b65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70e8406-bd1b-4e3f-89ac-485548c1d8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a667186-1048-4829-aef2-c525a74453c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1266987-14c4-4502-a326-7257d0ecadab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a872f-78d1-4270-b331-081254e9f016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7e5bce-4045-4c6a-a6c5-5cbec200d520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bc9f74-2d14-4d27-8daa-2dd79422612a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04abed9f-b05f-48c8-9e85-d6f746d1aefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc277f2-6257-4478-b174-8ea33533f24d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9867bcf7-e532-413f-be70-f0b7a50d7560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41851be7-06ba-4875-aa72-c38ce6617883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e12ab3-ef29-45b9-bc88-1537e1db85f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "890395f1-4743-42c8-b887-420705d04a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a614ce72-7ad2-4537-bced-e9e597d149bb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed285179-7692-47bd-85e0-6c8d3cd5bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed0883a-c0fb-4e09-844d-f5aac4462f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954b53a0-302f-4824-b28e-b10f68e88dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e9211e-ad2c-40b7-b68c-bb9c3f752a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0a3a9e-0155-44cd-a15f-e096cd30c95c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dbd8d8-9ace-4175-99db-e130a42ec473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423367bd-8376-4674-a835-59777a255edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60be479d-a864-4791-99ea-9da5f9c224dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "608fce51-b170-4684-ac55-553c00e23c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e77c74e-78a7-442d-8909-c41ac5104e72",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0670396-6b5f-49c5-bb84-79f5457b3646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3b800f-46ff-4967-8a41-56598c8d29ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a3a8b7-6758-4d92-860b-059c5e3064e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94e5b87-29f8-4361-8031-9c39a4734e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d2b541-9db1-41d4-ad51-9f3bb6a984f7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef54a42-dea7-43b8-9789-91d577571db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1e1f68-8bb3-495c-8cba-eaf128dc0c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846ca317-9eff-4d12-8595-8dee69df2b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b10657-ab55-4ecf-b507-70789284d748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ac2cdd-c511-4dd0-84ac-65cdc5425fc5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c904a79c-5b1f-49f7-a64a-3c4f346c5037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89ee5b4-040e-49fd-b048-ca4c582db774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6390c72-4203-40ed-9407-e924e7699a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0bc3d4-7767-4c11-8f86-c7e8116c4542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f02591-4f74-4e7b-bfdd-670570a56ade",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9738e198-aec8-4d3f-a742-bde1a9f91a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f3c743-9a9f-4cda-8336-ac74b36973d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761bdb60-3599-467c-b1ca-64544f65ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77db5ad-b58a-4fb6-a502-c35e1b30ddb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786c60c-7b6c-49a7-85f8-e57fdb9fdc01",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6733dbbb-2ed8-4f6f-9837-aa934204471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e3239b-4b2f-4d8f-8c0f-40fb498efd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e673e34-488c-4619-8909-b47322a07621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f161d71f-e129-4127-a2e3-88ce5754ba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916dc423-bb08-4839-9a4c-b4c6f3c9cad1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40616f8-de59-435c-9365-53f5919cb6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea5cd03-f8b5-4965-b4b2-62375063b324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2c271-fb2e-44ea-b670-97f6ab1226c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8d8251-2871-4adb-96b0-b39be5ec77fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16f5689-c6e0-46ae-8679-77694bbe5d74",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd80558-58e1-4714-b610-2e8c775553f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df8a0e6-ca9a-4edf-a624-ba1f934d9c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab164446-cd45-427a-87d6-571f69fad5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9de32c5-ac37-4c31-ab08-1261a99b9d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17e9635-1240-442f-b106-49775dafb2a3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffcbec2-58f6-46fb-9a47-385439f7fd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d57bae-f29b-4b09-a406-c64bf6bc065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d848d837-4481-443f-972f-ce7468f7efff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae1b394-1bd1-49aa-a2b2-4ae43cd22138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96126821-16f4-4013-ac82-92cc7e348200",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f627654-5b26-4fe8-897d-daae40a35d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbd692e-37a9-4c97-b648-b610d3385253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb02301b-1296-4206-9c67-0c48563ca812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13f761a-215f-458a-9691-f0970ce250c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90994775-7e1e-413e-8068-2818053445a1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8eda73-2318-455e-b4c2-2deeeba4bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20fb8f7-4fb1-4519-9c12-9fa2ce8ff1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf676d26-c4e7-4e80-a6d7-88a39f822640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4372fc6-17f9-45a1-aaf0-b16f8a58cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9637b163-b895-43d4-823c-eee2abc64e82",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c27113b-355e-410f-8803-0efc4c27e14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d7f908-943c-4d04-a744-6353ffc833d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59cbf1a-9b20-4435-95a9-ceab9665d588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4509d9-184e-4232-8d3d-e9d92e4bcae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9f39e6-ec04-4371-a19f-2799e8f72fa4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b59525-139d-43bb-b03f-76f1b548c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2a3cf8-b72a-4b52-b2ed-2c49d58a5e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b69c476-f73b-498f-849a-2c478799e617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca6405b-e8a4-4e5b-aed6-b8fb873734c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b36a6a-52ce-4f2c-924b-ea87e5c9f966",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4465fe24-c10f-46f5-85af-abc61307ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6261ae-8016-40d4-af6a-323fda3b4741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756106d1-951f-4e35-905e-c4015e9fafba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6d5d6d-66c0-437f-8210-2ba21359dd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac05b645-0681-4118-85a2-fcd895bb88ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b095f6d-c779-4223-8890-586e6fd929bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a09c8b-f139-44b0-badb-fffa40b6109d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5860a86-54ca-4f44-8d7b-87abbc390080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7b5ee7-dc79-493c-a159-4a18ab93ba63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa51e71-6b8f-44d5-bd3c-79e2fccbbed0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8729ff-3cb4-468f-85ff-14af77adc53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7467f3d-cd2d-4123-8abf-19f4da3ecf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068c6633-a604-4ab7-be88-1ef622bb99ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ad8904-dd70-4214-8361-9006e36a2914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10189936-3b76-4bee-9140-a2a1a3e64dd4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41120dc-c9c2-445d-87fc-476c44d38b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc73bb2-5509-4389-a89c-43f17e7bd875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d454e2bb-69d2-4283-8699-909e368a5859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4d8677-c8ed-4cfd-8250-4d0d4172f53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6871e738-f7a7-411a-a654-42e317074894",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101c06a0-f0e4-444f-b7c4-0aa41d4200b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd3e467-0a06-47e5-bf53-222d2c4089fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59efa617-7aad-4120-b225-41ca18b946d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a74e47d-0d96-45b6-9fbe-0ae046ed3026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051bdec5-09ab-48b3-be4d-ba64e3fc08aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f0456-4da6-4d8a-9cb1-ff4a6adc77cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce9afbb-deb8-4e85-81a2-09b2653fff39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0055c4-8e3f-4dfe-8e49-45045f2f5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c27c0ba-a7eb-4fd5-b46a-96d25b514d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db893d4-a407-44d7-b0f7-99683d8f377b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a026fd14-3a60-4d24-95f3-5fbfae561f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823592df-37b3-44da-b4c6-aee0a2cedb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9396e6b7-5035-4e48-811d-18f9558a1c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ce2f0e-01ef-455a-bd7e-1154124bbdfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18e24aa0-8d61-4461-92d0-9cb1cc305297",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28e4df1b-5ef2-437d-888d-0d7850dc4982",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8116941f-243f-4386-9714-1f5377f3fced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3430f216-c660-4650-9824-5e9d95e9cecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051e84f9-23df-4c87-8cfe-f73d7a019c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b692af3-320e-4fca-b55f-f6a9ba88d4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b80744-fd5c-4cd7-bae6-e6fe95f20077",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408ad40b-0769-4174-a88d-66893ed39ad1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "bebae461-3921-409a-bd9c-13e66eda36b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e50a1ba-284d-4a42-846e-15fd62aaf7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "601ecf6f-3b91-4968-ba04-fc47c2caf480"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4304286d-149b-433c-b72d-7f2fbe912193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0c2aeff-4451-4627-9030-0f7eb148d0ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46000cac-dfe7-45b1-8263-05e7a775a752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67ce8a5e-1cab-4976-8bf9-e343ebffc6c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46fb4752-3d19-4849-8ce0-3fccb06f2888",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "772ce747-bceb-45dc-b187-68c7c03cea6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bc0e840-fc93-426c-8198-ac82d261b9d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13b1ec01-307a-4281-a1d3-f58a3a4daa0d"
            }
          }
        ]
      },
      {
        "id": "c8440e07-9a53-4a57-84a1-a128b4658787",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd5eefb9-8d5c-4ebb-a5a3-46ef29e64a56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8d77728-cc08-4e7d-a5fb-44d013baeadd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0bf4421a-e492-4327-bbbf-6b852fef15f7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b4cf5c-8443-4382-b875-4e2ed8b3f2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61137ac3-f651-47a0-8014-b91576e3222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822c7dd-1785-4acc-901e-a9cd9b0e91ab",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7485f339-ed80-458e-a28d-ae5580ebcfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb15dd31-cd0b-45f1-b47b-29f4202cec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa882917-4eef-4c93-962f-43b955f4278b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b078c94-32e1-49a2-9098-2a57c2de131c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbdb108-893e-4a0f-95a0-af851eab5cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5406cfb7-d787-46df-abe8-e1e5816917e6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6fcfdc-dddb-4f81-bb0b-3cb5fd56b140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2098e6-9063-4397-bb13-adf9f7dcbec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53850667-189d-4b8f-ac43-30d754e6b48e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fff313-9594-44e0-94e9-5583dd037c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ea5704-e4a4-495c-a396-f2f9ab9dcd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868570f7-7578-40ed-befa-5a7405201b1a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdc2e10-e651-4eb9-ba68-0f15765d9750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f0f442-67e3-4953-b030-1fce048a7eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06670e5e-ba78-4f68-b4fa-85d3a6986dc5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7839702f-cd5a-4973-8a6a-7f13c7dcb12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd179ad-12a0-478b-acec-3b91c317102c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694e79f6-4fa2-4c8c-96d2-396d6ed14650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5464ca-96ee-4c35-a6c7-37c3fefa6e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6954bedb-e7bc-4dbb-8820-e289d8f502a6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c05256a-ea5f-4722-8d18-caed6de53604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9fb1d2-61c6-440f-b18f-c6df6413058e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff112c2-b672-49bf-9103-f0c0c50c6f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a81777-242d-45ac-9840-9ca1b1068e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a942c-0c95-4a57-b9ac-5c58c21798ad",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fb081d-e706-4187-95d7-35bb8541af9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee59e685-67e0-486f-9095-13f89a268fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e886169-e2c0-44e1-9472-c723680e5247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bc7ad6-9efa-471b-93d0-d9f5a682e0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1802ac1-c0bd-4711-b7f8-1e03a6dc2c47",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f679a11-ab70-43e1-860c-577d2f5b8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c4e56c-004b-41e9-86f4-25317bdc4988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09277ded-98bd-40e6-a256-2356a3aad171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98016785-3fd9-4192-b041-6bcef9c5dd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722aefd0-af8a-4f64-a568-ba770e8f489b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae7d9b-9b6a-4f56-b35e-5cbc4947fd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dc59ea-184e-4279-894d-679703a2514f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf91d91-1296-42b5-b4d8-5b1aff2d52a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cafd04-665e-4724-87b2-1d45effaf5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e35f18-32f0-4ec0-a221-b60a1b9358c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf2cce-3c8d-4fdc-b7ab-8ebaeecbdfab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fd5333-94bb-40d2-a218-c91b39b1afef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f9e173-2886-4dc7-b976-b5fe2b45201e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e96ffc7-9bd4-4573-ba07-5fe8f0faa711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bec909-b7cd-494b-97b4-76800326cda0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0bc4aa-7f56-40cd-bd66-36fa53e9defe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4ad3bd-5f0d-4749-8963-d7128ce16392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2074b6de-a789-4506-b57d-a9e278febcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37458e54-00c0-49f9-95e3-db003069eafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b472644b-c4c5-496b-83a8-91e39822c9e4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914baf22-f44f-409e-a73f-a153d7505bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86dd8ad-f684-43ff-b189-9ede90b91cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373abc63-7bfa-43f1-b763-d354ad3b1dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6b9935-7a7e-417f-bc1c-7ce4c80e570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70f0cf8-fa38-4d8c-9ea4-a017e77cc166",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465e0e67-0e73-4221-8bd2-df1efd65b36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a401c67f-e3a5-4822-a5a6-7afaf22d224c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce324de-3d56-4b5e-83e9-523b967b9a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bfce8d-175f-4391-a92e-6d51f4e70e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fc4587-b359-42ae-9fac-3cfcb54459db",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58a41ea-c220-4ff9-b9b8-1f7626ecb2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d327e05-3929-4c05-bd80-921f1548064e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356fe4e5-e997-40d0-975d-1b9e3f391669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61904aa5-a5ab-4068-9bf6-d6e319860d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247e1e65-5ec1-4755-b18f-fe2e9948ddef",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c535602d-b684-4f1f-9dce-322aad1cc82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e70430-1102-4916-bf30-42bb7a56d816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b94681-e587-493c-9e48-79c29a881c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb7445d-cd06-479b-9a2c-e23ea31aa046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e039e1c-477c-48f2-9877-0114ca81ad69",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591f9973-7625-404a-bc9f-e7837528414f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0089d4-618a-4603-87c2-b0311718c4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e7bf81-3275-442c-97d8-ec107fe7d350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae5f313-9aab-401f-ad13-5a99df1fb631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1bb1b9-cb52-4795-9961-cc30e21b9b4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a56b19-7baa-4dc2-accb-e4cdbb45dcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61bd350-d949-4c09-ad56-bdf3994d9fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c81062-d9aa-432d-8522-6e55c1b48898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b46b81b-8f7e-49f9-aaec-775c23858bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874e1d87-9105-4651-9ee5-21e43605fcc7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38defa85-5f36-4957-9090-3953fb0bfdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7f346b-121e-4934-99b6-99b28823162b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cd6e00-e949-4ae4-a4fb-02608b34033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074d0793-1f65-40a9-869c-c40c9874282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91214661-e785-4a1d-b872-3b4a6b40a80b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328c133-795f-44f8-bdde-67a7e39850ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018dadab-d9ff-495e-af2a-e4f817f1f2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffe721a-3c79-4b2c-967e-6b8705b288f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de2a340-bfb1-4ab5-a902-d4e17e98102b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34941dc0-c4d3-4614-aae0-d53e1a999fec",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11346c03-0c64-4f9b-b67e-1f07ffd1d748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ea102-b5cc-4e91-9f6f-480b2ff35a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4096b7-7ba6-487b-a168-3a9161bb4129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c3521e-4841-41b2-81fb-1d73d3aac3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9f0280-b373-4406-85f4-bcc614ed3732",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7326c3da-6d3e-4acf-b485-a314b0c760f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae52c3c-436f-4807-b99c-556ca036db10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dc3ca7-33b5-4583-96c2-dfbf6f1932f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e14c2e9-15ae-42db-9933-a66182bee9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb96b2d-f79a-41dd-b7c5-2c9d2a953ec7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea6ad21-0ccf-47c6-8867-f0230183061b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0135cb14-1ecb-4f9a-bdbe-e06d6f24102e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8105656f-a0b6-405d-a4a0-bd0e04cdf06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1f6d28-291b-4319-9df7-116f7493fe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd711a1-1315-44ab-8594-7ba6a087bc3f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923cfadb-0313-44e2-bdc4-15ea7615aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46aa606a-d232-4b14-9339-bc828c7e24b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9dafe5-1d2d-4e3b-9790-f8d826b73c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513e76ca-d44f-4bc7-9803-9da867e7582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280dc86f-b58c-41d9-b5df-2085ecbe28d3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa97298-7617-466d-b5de-4a1746d060fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f02764-be1b-4feb-ba52-8cdcab1aa0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f847365-476a-4dba-8209-fd9bbdd7c725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7399a05-8072-4dbd-b3dc-547b315e13de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeac1af-d330-4bef-8f49-58d1b79bdd96",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094db05-7412-47d6-bab4-45931a7962a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a80a68-b78a-48e5-a597-8e3717278c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8633a46-9b08-4884-bac8-3e9f53c13d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb6c760-2a77-448d-b2a7-06c1dccb7912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97be28e-c540-4954-9ada-a9efc12d022d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae00b53a-14d8-4e30-8719-d2b7f3dbc9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaf1874-4dc8-466c-9375-071e260affa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e9cd3e-de12-47fb-af0e-227e1845f9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d827b921-891a-44fb-9d67-44a5cef12a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5374e0c5-71f6-4dfc-9477-9c7ba047dbc3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5fa2f-887e-4f02-8c56-bd6296958d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4b7ac1-710a-4f8f-9b77-9905408cb6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0d7315-10e3-401c-9fec-44bc6f3c1d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6230121-36d7-47a0-b93a-c7d0dc399fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c32651-aadd-4982-92cf-9c2f1c16bfc9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c5d34-4332-42b3-97e1-c418d3ec485f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b11e383-28ec-4ef2-9add-d801361c5465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928653a-e8c7-4578-bd3b-b65169b61453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd96a0d-9a7d-46a0-a8a7-f4a48ef8fdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1c6e73-8556-42f2-8a18-35eb0b8de584",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3a543d-71ed-4385-816a-2eed0f387caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba61c959-f941-4c92-b026-bae440e6ac5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b214a1-9b89-4a73-8958-96d44543ec99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c991d4e4-b4ac-461a-8de0-6a1900e5608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d22ba2d-d83e-42da-8ce1-c9eaa409151d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a514ab7-25ea-40fb-ab0f-fea4315ea5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc8e31c-b77f-4ba1-8b61-a50ca252c192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4416a8c8-0967-452c-bd70-b76e0b33d26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b95503c-8afd-41a2-85c5-93d823a9466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2410d9-0cee-4e2b-bbda-bc42767bcf71",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b431d9ac-d6b3-4d80-9672-efb4306bdb38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06b2997-26dd-4e6c-bd0e-ae01fa10f65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b16e9b7-455c-4bbd-97d8-e625f6167bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61f5050-f1f1-4aec-8f92-c212954eb014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b360659c-c0b7-4da9-b9d3-947b43ceba29",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966dc966-373f-4863-9647-83919429d788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9fb11d-b4f4-49e5-842b-e90a9dee0c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7976ac01-6d4b-4a77-b72c-0f90bb9b80f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220d92c2-d112-4f3f-afeb-9f8e5c0385ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0717928-41aa-49de-b620-5e005f15b337",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990be528-eb5a-4624-aace-6f6b20ff8f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9db98cb-7b0a-46d9-802f-98109f5457fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60af5f2b-97ae-4dc3-bb41-6440d0dd1134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbcc8ad-9ea3-4895-8073-61b7364c469a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf96010f-fbfb-4957-a4a3-351b0a623ad8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f4faf-acca-4963-9164-7769f6910949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9654afdd-b139-4c80-ad4c-7c9c4ae641f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618626a7-48ca-4d61-b59a-4b50bc0878ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e65a349-7d4f-4f4b-8157-887f1f8858f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc54c749-47c3-492b-8a29-89af847d4e9d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7864a1f9-8ee3-4d95-b9ba-558e8231144f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0270becf-9d85-4642-b454-1c1dc296774d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b881a7e-3ad5-4adb-88a1-2fd92a242676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98756ab3-e8b6-4849-a2bc-8ef086178136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe78ef8f-10e4-4f7e-81d0-01432d2538ed",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd94ba-a3e7-4800-af3c-4dc6462e1f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d28d93f-32a6-48f0-9a1f-7d19d5979746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9ce5dd-4e64-463d-be78-6e992910f3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82049777-417c-4c40-8862-cf3353c61f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5155a285-0c90-444c-86bd-8fe197a230b5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e63590-7bd8-41b2-9aa9-705267e119b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06963903-349d-4c74-a452-3519fa6808d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999da2cb-c0a4-469a-a454-e9117e460bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797f2745-ec3d-4ca6-916a-3362adb3ecb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3963bd2d-af7e-4afe-9577-e6ee6127df41",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b66db8-bb4f-462b-8142-bbf98e1eca81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839f9f12-4078-483f-a364-6013b4bbc525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b152ec-54c0-4657-b76d-41b3fb4b46d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9631325d-6d91-489f-976d-cf23e0c7dc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cd1c48-566f-4852-a8da-b7ebceaf8044",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96bb86f-4817-46e1-b650-e87aad740c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5a3c76-15d9-4717-b7dd-68953590a2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37114ef-5f2a-44e9-adb9-1cb334941b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c18c030-cfd6-42d1-a05e-23b8abab009c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8071431-19d2-4c17-ac61-aa3323c29c1d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddcf30c-5a10-4170-825a-0eebe6b1365b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fb8633-1e98-49e8-b9e5-a248e21a47e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d59dcc-5051-4d15-9b18-5a7770fdf27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bcd6ea-352f-4692-807d-adce8c703247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36f91c4-6061-4b55-939f-a3cbd918d5c5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c576e19d-7a4b-41e4-bb69-395531186896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8c5e2b-b2b5-4347-8582-dbfe618ea405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2baca4-5c2f-4ffb-affc-8672da5c6eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c4808f-b881-4909-a081-1dbb379dd383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745e0521-d5d2-4af9-8a1b-f820f66e76df",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7cad1c-ac26-433c-ae00-6712f5e9fc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae035208-e35b-4bcf-a01f-7c77397fb6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29680f71-3724-49eb-82b4-916b89a65f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d0f840-7e52-43db-9760-217e6db27c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a7e191-95e3-4c67-a630-7b72bf6434db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab8d371-b07a-47aa-8874-8d65027222be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb21a9e5-0573-4d5f-b310-0394e4f19779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0b91dd-9af9-40e1-9b83-13c44d8a97d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f185000-b252-4ceb-bfab-97c06d433a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2300381-6816-4053-ab20-d2e942a8af0c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd47eaab-76e9-4a46-8271-30951aa14b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a587003-607b-4daf-b839-78c5308975a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326a7985-4056-4005-ac03-9ddf313bf40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653d7dd1-4bce-4ff9-b67d-2e4f3cdb6c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db73111d-c97a-46f1-b28b-0d7e2a771272",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17422613-9069-46dc-b793-8d8e1dd64d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e3bf74-c199-4945-9df0-7c45ab74a832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10014286-3086-4894-a994-730161df9309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b2eb25-b4fe-4cb4-80b0-f0bcc2ae77f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62d816b-91c3-46c5-a8d9-6224a037b0c5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab8fa46-e3dc-44ba-9703-7486cda5991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c5f710-0b7e-4161-80b8-73f2e2ee5df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9b2011-9caa-48f7-8bf1-6b16116568b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b57a86-7e08-4793-8426-ad0d08d2c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002bfc60-c8a0-4cee-8eb4-ba6106c41c26",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbf1d27-d1f8-463e-8134-935a6760cad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e067bd1-518c-445f-ae4f-e68fe7cc7b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10002e0d-e64e-4c07-9c8e-5da497caa5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0e9b10-8f3c-4158-a95c-815646ec0488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70f82a0-a138-4ae8-a2d2-b39ad4947fdb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9a2ae0-44ee-4505-9e02-8cf6c8398809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b6191-2c4e-488a-8f33-a27e7f56e25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18419fc6-0888-4f49-95bd-4dab3db8ecba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd2d8bf-8328-45da-9cdc-6159a262f51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01676a2-6dad-4dc5-bb8f-d244ba8ca9db",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e83af3-b718-40b9-af78-8100be051462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98db6feb-9246-4877-bf39-5d9695e54ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f2f4fa-922d-4a52-b652-ad70ac2094ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a620e9fa-df48-452a-9c1f-8c46cbbf8c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1fca72-fcfe-4edc-8f8f-83f2df089df5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d64ca8-663a-4599-90c0-22fea946afba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d459a444-c7b6-4521-a9b6-4e6aee8ff360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c65d470-ec1e-4d9b-bdda-335f29b6861f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b930881-35da-4369-a0d2-65cb7dcbbc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb04a24b-029e-4643-aea2-e5fef3293ee3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dafee94-3d9e-4d1c-a4de-3cee30d58a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40374037-0c55-4b0c-a489-81facbbf2b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6802f7c6-a184-4d7a-ad6d-677851d60a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6410e3-1cf7-4818-a886-85e159457c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76bd02b-8362-4af1-b0dd-9f4a4e59ba68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e171f750-7653-4749-9fd6-72ea4fed083a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0fa2fe-a443-4a51-9996-ccc3c0742af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0436830-b353-420c-8640-e6343ea297ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c56df9-ec62-4878-872a-6b40faf3d560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fac5ad-46d1-46eb-88c8-57fa9ba4ea08",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155c38df-f15c-49a1-9394-6af0a8b0fab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a208f6-1062-45bc-bc0a-0d14ac83963a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ba5f85-1a48-4183-aabf-61a8e0a5eaae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52532bc-c29b-47fe-a729-ea4a709d6fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58bbaa4-8be8-4c70-a10b-00282a053676",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b19e0ed-6908-4173-bb7e-a533dac858f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee44346-9a4a-4c67-b1b3-dd20c4cb7274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f3795-23f5-4319-82e1-9cc6af2726be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99684188-da22-45d5-b2ed-f29e6178ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad65ac-6792-46ff-8ac5-36f47c9a96f8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302314b3-f43d-472b-8fec-c5f3604910c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84b8f07-e82f-411d-944d-f7cd7a77806f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0e5632-cd16-46a0-8e0b-c711e9a88966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaf8434-14b6-442d-a168-fb5cbda48cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b23a04a-71d2-4eed-b0be-7fecba7fd38e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2157f-72af-42bb-945f-1837c66bfd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba6f0bc-0afc-4aeb-9e25-6b87e2071c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad3aa3-ccad-44fa-830b-9c951a7c1cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58489f95-43ba-449a-b0f1-c91f03020289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d19e87-691a-41ca-8e11-10bdff2118c5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2cf5d4-ee5c-4efe-a898-2b42091eec27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f5fd2b-affc-4f0c-9247-782ed48e5ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a025d2e9-952b-4bf9-8638-65774e197f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627423de-855b-4bd9-b936-b19e4eab6d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3312901a-3c49-4d35-84ad-907c8568e180",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caa0e1f-6483-4f35-8abc-aafb78ffc0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ec72e8-3344-4c0a-ab40-3a27b3fd8e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79fd76c-aaee-421d-9c10-1e2101a82525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43bbda3-5326-4ca5-b9c1-10013cd12291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de7e0e9-544c-4553-b19d-04e018fba208",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739656c6-9102-4e66-8143-dd6e5fc02876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdbf224-e51b-4bf1-af06-1422d7c79768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f621be4-6cc4-489f-bf26-957522e6697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abd073d-f6c3-4ef8-a7f3-f9ccc1dd7d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc0d0c4-dad8-4554-89fe-244080035628",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350c0e2b-9452-45a5-9714-c5160a2e8af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a80b21f-0fb8-4da6-b573-c20203c923b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407458e0-7f33-4b82-8097-1bc9c73c434c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18afc7c0-a59a-4aaa-9a52-d56e3fcd6e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42f7b74-26ef-4c95-aa08-4b83cf842ca5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4576d1-9615-475b-b4a5-d76cb200a9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc10059b-29c8-460d-ab16-73b7985ac0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b713cc9-9eed-4e59-bf27-f14b9cb8b2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fccd3cd-a13b-402c-9e3e-76661d43fee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ead055-8e1f-46ca-8e7b-9326b3ea994b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fea2f-b09a-475a-b03c-c26da4c8b90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ada02f2-ae32-412e-bcc5-30007cccf86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d83ccb-367a-4575-b41f-35c3799e49a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb3395a-8c1d-4235-a4f5-3f2f2fc4725a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdccc65e-c0aa-4e26-9d73-aa64ca08e165",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ca05c1-dc13-4fb9-8cff-c520613cfe1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2939ab4-985f-4b13-b04a-6d693ef80804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7501780e-df6f-4e2c-9c25-553e0950c145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a96db1-36d2-47ca-839a-77cc57c8299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5217ab5e-d748-44d6-b99a-960c8919a36f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79344a33-c34a-4a8b-ab2f-860b5955f0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332352b3-2ca5-440b-9cde-a371ed7cc7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21567ab7-2b67-4673-ac5b-2850518a28ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1664f54-aca6-4e26-b5a8-f0a1de594c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfff5e3a-694a-4768-a086-d20967199c92",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de889fd-36d5-491b-a5c7-47871d0a178a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81749dd0-9f7c-47b3-a03d-7e06a44ba474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30e6fb8-d082-45fa-88ae-fcd30c361e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdcc1fa-c18c-439f-9278-016fd83c92cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598a9f09-b5d6-4eb5-ab7d-3dd52fdd26c5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f5f606-2880-406c-8418-11d576dd0ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbaacf9d-0a39-491d-a881-d2b04ab9f4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e695b85-0c0f-4368-b5c8-d529f60c163c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb2e5aa-8b46-4ed1-ba7c-11255e436605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc15ab64-d7cf-46a2-b705-7ad308a8ae51",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438f24a-5f4a-42ab-99a3-dc4c14e98495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96f11a9-c081-4d15-add2-071b4e00c7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b376377-17cb-4dc2-ac2d-6c9f42d89266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1987fb61-5b67-4335-b79c-06ea27711d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcc671d-c2d7-4676-94a0-588a1a641b92",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e84d70-91dc-4138-8bc3-94de715e3d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7070329c-7411-4e99-85ca-899a128d96bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6552487-93cd-40a0-8f00-772a7ecd1b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfba2c8-82cf-4ec4-a54b-3da9f5177f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b003d2-08b8-481e-a3ce-cb5a92fc3ba2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c3b70-a709-478c-944f-e3b6342dbcf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b3c6f4-6ff8-4429-a528-03a56e969ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d494fa-a662-4086-844d-355599a94ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62586226-c7a5-4978-a488-b0c782e46bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9a1fd1-985b-4bd4-b3e1-4fdc67f89f76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2ce1ad-a8af-4a32-a728-d1a0f78ba2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12065f31-1ab9-43e1-b027-829423d1312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6953c3a5-e139-4293-abba-1161c49eb93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0842dd41-ab27-4686-b28b-a76095643b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c87cd-1fef-4082-8011-4e2254b48c61",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50788b33-0592-4c0e-8c38-169076dceca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61677767-ef20-41ae-9478-f0ef6eb5c0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eb5ffc-79a9-41f1-a70a-d0ee28e90e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faffa07b-118e-4240-a037-71303d352ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31950f5f-92b3-4893-8e8c-6863875df11d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1f7d4c-3bef-47be-847c-cddab1462fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff0ec8e-44d8-4592-9ade-4a06c9897504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c1a153-2445-4fe5-9821-b9184fc46680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00179ac-5d05-4c98-aac3-5de3bf42d318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61d3560-0154-41c4-a60a-6db1410aa2d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d313463-056c-4039-a46c-3ddc56a9bb14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc73dd70-c7d1-4b1f-b5ce-6243ae74cdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1abfa84-f6c2-4634-a7ff-af08640efaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6e7eb1-ee0e-4699-897c-2828bb34e2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2f1b5-71f6-4e4a-95ee-9d236f8736a6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548f8bc5-1c41-4fc0-b148-9fccb1925d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a08d48-ff7f-4482-8153-f3ef7f6d8693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e92daa-4d19-409d-8f5d-16cff5d4da0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413aea32-5444-4885-8d6d-b332f5eb35d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cf5c8a-4be9-4444-ab3d-f24ce53a3c18",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f064f65-14c1-446b-be32-f285f8642621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ce30e3-560d-4eae-85d0-325103410c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78cfc5d-55a6-4256-95f4-66f1a11ac59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5140d936-6545-4805-a0d2-80713ffeafa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d7556a-63b1-4fcd-9dce-f6e377cbc5cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd8a612-aba4-42f5-be4f-a8cfc8015b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582237e7-c178-44e3-bd50-d3406fdecca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724be8e1-0642-4946-9ba1-2d517e9507eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbef7376-1cfe-412e-8691-9ed4befa5fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa21f02-47b6-42fd-9527-83b2f54c9344",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b73c21-11a2-4505-a717-3f9efe3f0dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3284ff38-9e3b-4227-bf87-4f8b364e3433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ee44b5-5657-4545-8481-d6c61a7ee350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3e56db-a98c-4630-ad73-418f08fd6820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3db4e1-fa04-4598-919e-ea88a3252ccb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfaf90d-88b8-45f9-81da-7d5ad459a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c77096c-f4b4-4ee9-8ebe-bcf7ece927af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fda7f7-67a2-4f93-b890-f0d16418e392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf13da4-a545-465e-af2b-706c4d23437e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11aba0-80f4-4068-96e5-b9f2cf46c97f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaeb192-f4b1-4688-87ff-a630876540de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70a4e59-cabd-4f28-81b2-7567b3c093d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef485f7c-14c3-4026-96ad-2de0b36c2d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66ceb7e-db5a-4d20-9cfd-29d7490034e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e76d03d-bd64-4d6b-a8b4-83e08064cfa3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5326fa8-838b-430b-bd82-ce5cd021c79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4f70f5-69fa-4230-8392-1c6ab836e70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d85082c-bfc2-48b6-afb1-0c36c1ca2112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57d6be2-6c55-4e88-9d77-1e1b2a34132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b749ca-f683-490b-9448-a4c840c665df",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eca24b-d45c-4547-80d1-357029f19532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abbe0cd-d6ae-48be-bc33-5a145a59c56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037d4c0-809d-41ec-93dd-070be093cdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb536ffb-6fc9-477f-9ed4-deae63cb7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0695ff-c542-4d3d-b728-8d3505b8be4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d1b0d5-4ae2-40d5-96c1-d33b4759bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b93b394-f7cf-49de-ac56-3611dff82775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f04716-d4b7-486f-ab5e-6b1ff964ad79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fbb099-7af6-4f4f-8e6d-38b8dc1b6aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3c92f2-0d96-427a-bdf6-ebfa134e7369",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3bd42-14ca-4a62-ac36-c37f9f43439d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4717b6ea-9404-4fd5-865b-5a1017ba29ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa46c61-f9c0-4b1b-8517-3681b4183eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22713867-e6aa-4514-a822-f70d89a87d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd3c9b-5f87-4b2c-9db4-7dfb61a9c650",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c514149a-122d-4824-8916-8fd0237c5bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1673a65f-35b5-4a96-aaf4-3f2428f9869d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d99cc8-283a-4a21-8628-ff9b7e1c356f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f3e7bf-eb8e-4c9a-bd26-8c790e4873f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bee747-ed05-4683-9c53-7d2b5d688006",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46671feb-6a9a-47b3-831e-51ca58e79713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937195a8-bb79-432a-bf8a-dad742231091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0132c50-7849-4612-83fa-17e0719ffd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c4fa9e-730f-4c4b-a85f-94fea4bec50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2316b33d-3ce5-44e8-a0fe-034815b48bb3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb5de3f-638e-4e3d-acf9-c9b371e27801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b0e064c-1149-466f-949f-c40b374640c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cccfeb1-7a0f-46a5-b416-10e953e566a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8febb2ac-a86b-4411-baf8-b2bf6164e907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27095ea2-3eee-4742-8a19-0d0fa052f14f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc2890c-b61b-44c8-bdfb-e973f97ec91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5dacf2-b505-45d1-a777-b18065accfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8d9f5e-d5e3-4d4b-bb61-0c7fe744b2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7058ea-ad92-4c4d-aa3a-0c78e004c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9863308-b5e0-4d85-be03-b387858b17dd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5552cfa7-2bf7-43ab-8da6-c3fa0f562c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed333104-aad5-4edb-9cf1-f8e22401d91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e731fa-6343-4a1d-96ae-2f62bfec1fd8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1712aca-72cd-4835-aaa5-aac2fbec9d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41289b04-51a0-40d1-a5a0-a4fed7be7618",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b808c01-67a4-4b6e-93a5-e9a254874268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb37a40-abfb-4014-beac-912d27355321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a8f5c7-11f1-47a6-8830-805eefeae81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cff9a98-33bb-488f-9897-c740fbdd6f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9757c2-6359-4b4e-ac67-d11673792b13",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41591ca4-a054-4ce6-b847-f7171a49e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48d5c0e-9917-471a-ad30-7adc4d2b5816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01475295-bbf2-4de5-aed4-bec2d767047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5065b60-3772-4286-8c98-bfe1b101f61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc79041-cc09-4f71-b4a1-2910478a47f8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dedbb55-cac1-4d55-a0d4-45ebd3b60eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484feaf2-00f1-4836-b68b-484184592e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6783e794-6b9e-4452-a57f-f18590ad1df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd36ebe8-af42-4d63-bdec-f906a65f15ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f43276-9935-47a0-b247-3237292c5a1e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5779bba6-fca8-4c67-bd28-295ea086adfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dab1af5-1877-4f14-8552-aa6d5a8aa0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683fb8af-a39c-4d23-8e7a-1ae89fcb80ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db506fb-83f4-4d4b-9c20-54f9f2ca40d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5018f2c7-ac8e-4ffc-9230-1d54ba8cfa12",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d590a272-d6a8-4b60-9258-12d35a3e1329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25369b5-7239-415b-88c1-7c784518b1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe9a9c-20f7-467e-b9ad-974e8a8a2610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fefa400-c764-4dd4-9abf-64d38aef1b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c35d628-8ded-4695-8828-052e14d98391",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677d39ff-d38f-42aa-8fc4-3ca9c9fd7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7919a3-fe38-452a-b0ad-e5810ca998ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a5325-e214-423c-b8f9-4caff87d56d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45459b66-e283-458e-b7d4-8942acca6e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77671ea9-11f8-4a20-952f-8ac85f8924c1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b923e24b-ef2f-4060-b677-296c18fc604e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660c056c-5c81-43d7-a803-f82f25aca3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b72c85-a17c-4f3c-bad1-352aad5a117a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07d068b-2639-4fa7-968b-e75528faac71"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2a7e7f3-e3d7-40fb-ad7c-5b74dca4d7df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c228bcf2-5fbc-4c18-88d7-6786ba22c923"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd6d743b-eb99-4ee6-9c55-28fb4d044bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11dbd782-0a2e-46c2-879b-4d9f0d31a898"
                    }
                  }
                ]
              },
              {
                "id": "7a0f5fcb-9a64-4957-abf6-9fcfa1899253",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b2bd619-51b6-4df2-8995-b94a1bc7be20",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a07a9-2698-46fe-a0ca-d6649a61aff9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b5f3ef7a-ea65-438e-9407-30f143bd93a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3f9759-31ab-4fe5-b896-543ba446cb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fefc809-c169-47f5-8709-f77e59582b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579c1ab7-bd4b-430e-a195-2f53398402f2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d3edd0-f5c8-486e-89e2-b7c9094b727b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb2e7d22-88f7-4492-aab1-2fd4774fde50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4f1a6f-bd4d-415d-8c1e-225fc49802a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59d75ffc-5075-46d5-a94a-0eb946e4b1fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf483eb-3460-4eae-94b9-8b5b0e490d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "789d893a-2479-4240-afda-09d6a3ff754c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28ec456c-3146-45bd-9f58-3badb03e9c46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63d7cf45-be8c-49fb-b460-f23ce243630d"
                    }
                  }
                ]
              },
              {
                "id": "a4a3ff39-5f60-4881-af82-96c370124c63",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d90469e-a6f5-4caa-9999-8af9f2b6c67e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3349db4-3beb-43a4-a287-3691e5d273c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b449bed1-a5b3-41bf-b6ac-6a901b842a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c71655c-6f3e-4966-941b-ebfce8becf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa10973-7299-4a47-a978-70b4b247cddd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bbf6b95a-8467-4860-8251-1cc023b917ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a537c37d-1f8d-483f-b782-5339fce22229",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c412ff0f-3c8d-4d4b-abf2-88f5398ee06c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1ec13617-fb44-41f2-9968-0fb5480fcee1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac7b4d6-154a-4846-8f33-abae6517ac5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56c284f9-a920-4eaf-bc73-8826e367844a"
                    }
                  }
                ]
              },
              {
                "id": "028edf33-b606-4332-a66d-ad88f88cb4d5",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03f21445-6051-4e6b-be81-ba6220369f37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b2eaa075-2509-48a3-a456-e9ec468d76a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d051881-594b-44ed-862f-acc803304448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54363d9a-e99d-4418-9ad4-1f14d0b49567"
                    }
                  }
                ]
              },
              {
                "id": "2693ca9f-59f5-4cd0-bd2b-a2c66ccd8696",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48dd1095-8709-4e61-b176-1e7392b5e9e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1d16a90-6a90-4be2-b458-faac0a2c6eb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d380f9-1a94-4142-abbd-0d9f5fb18f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd7b911e-be06-40af-a9f5-108740b9ae1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4672198f-6852-48b7-a647-ca9ee01d3cf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa5a2bd2-7dfe-4704-91a0-b65dd5b67e2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c32a659-b010-44c4-8848-22d985e70155",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c168b32-741f-4ff3-9956-9df217d70c77"
            }
          }
        ]
      },
      {
        "id": "59b18b4e-fbc2-4892-9140-a1a5fec4d5e5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7810f1be-3894-4060-b98b-4cb781b3be81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "376ad982-5973-4511-86ed-106fbc6ec986",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0adc8e-f69b-4f37-9f00-aeedcd29df4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "64d892c3-502f-42f1-aae8-79c91c0e98d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0b0199-954a-44b6-92f5-ced676def1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f27fbb9-c228-4bda-b87a-de7e5ce63dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c30b91-2ee8-43ce-9919-15cdbe9b82f2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8411ebb9-4d46-4765-995f-22ca03ed5b74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1474217b-ac6c-41aa-89f2-b6cf86d159fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91652bb7-7e90-4069-894a-cbd24c8b9cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d80049c6-75f8-4600-8b19-e273bb2fef3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "790b6e9c-1f34-41b9-ac26-353052839336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b32be19-964f-46ab-9b9b-232a8433fc13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2e9b935-6cd5-49d4-ad37-35d7e69148ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a904cd74-0589-490e-95eb-14399b363a17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "780dec62-c07b-4857-ba50-1cfa596cf1ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a3bb366-977c-467b-98c5-e4e47be84e3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9d52f08-02a6-4e47-bf80-68447e47898a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c40f94ab-85a0-4834-9f3b-dfaee94a4370"
            }
          }
        ]
      },
      {
        "id": "46038bcd-61b3-468a-96cd-74e396368778",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c4c5fe3-23de-45a2-b887-73a56ebe3807",
            "name": "Negative Testing",
            "item": [
              {
                "id": "262f677b-f196-4551-8ec6-baa1d84b1377",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc0faec4-2a1f-415d-8c99-488397543b88",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf2debc-987d-485b-a325-9d5b46c6c8d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "005ce530-1950-40dd-9785-6f0cfcae65c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a5d281-aacb-4ec7-bb61-cbb2471af1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7414b9d-c48c-4bb2-a85f-e7225f1d635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecd06f7-6d2d-4de2-8a24-4b0b01be34a7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f900d00-f73f-4f8c-92bd-c9a282379e36",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1bd492dc-705d-40de-84a8-3362e4fd3002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d994e64-01cc-4a99-8dc2-79ffbc80bc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233650d6-2b94-4aad-8e40-a35843dca924"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c35972e2-5038-438a-af6b-10a3f0ace85c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9baefa2-42a0-43ef-9d99-3df320ad6415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1142e78-6ef9-4c30-b864-67a5e350dd07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89add58b-6f62-4f67-8d6a-36174800e2fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c4ebc69-c749-456f-b0aa-776adb93a3a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "289bf122-0b4f-4f3f-b72a-e56bf859965b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70e12e43-41ed-4197-85a3-ef886b668abb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6308711-68c8-4571-b86f-37caa3345118"
            }
          }
        ]
      },
      {
        "id": "dc7302a0-907d-4bac-9dba-223f705985a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "180f3c37-1ee8-43b4-b36a-903c47b272ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85ad3320-6468-4b5e-a909-214153d8a0b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae4618bb-c2fc-4524-b976-d18cc59b2de4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d34743c-dfcf-4e2b-ad93-dcd8ba6a6776",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "faee8320-6a86-4cd4-85f7-84e0d14f184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c082df44-1d1f-49b5-95ae-cd6e05cf0b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43f18a01-24c1-4a36-a87e-465eff98bc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b82b29d-75f7-4608-97fb-0a2fc1a5f8cf",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2541d8ea-715b-4874-8454-3d6e5496cd2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "41d65ac9-bd3b-433b-8aa6-8a7fe9ee05da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3125b63e-8edc-44fe-bed7-134ba6e8f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e7edd07-f50d-42ce-bfdb-734ed1764b9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8e4f3d0-5057-437d-8471-28b9ec6cd46a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d163728c-2003-4442-b62c-8ca501fec8d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e3528f-b808-499e-81b3-0c35c8c3ec17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ed49c12-8fcd-4f28-af5b-bc2a9a5d467e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb07f049-9127-4eba-a3b5-6c953cbf1139",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "62936bea-f0c9-411c-9c88-a9672c76d81d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acff85ec-7630-405a-996f-020fb139b297",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e03c961-808d-45f9-95b1-37af26f48ccc"
            }
          }
        ]
      },
      {
        "id": "a6316509-09f7-44ae-9e96-3d8951c8d2d4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd4b2710-6583-454f-a13b-5eff6d53d258",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8b4bb3f-2493-4a9d-a48c-f3d8a3b38a1a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "401f94ae-462e-44f6-9585-488bdc211b82",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3b5d528-49da-42cb-8311-1214acf34ef8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd766bea-753e-4615-b03e-e29ddc1a1fab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 484.4329501915711,
      "responseMin": 6,
      "responseMax": 6684,
      "responseSd": 514.2954116152878,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668645821414,
      "completed": 1668645958745
    },
    "executions": [
      {
        "id": "700602b1-f511-44ce-8ed0-8d206f259b10",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fef86d13-6b52-4351-b769-cab3824d1b9d",
          "httpRequestId": "a2b82e30-23aa-4455-9ffb-a19a58a93d9a"
        },
        "item": {
          "id": "700602b1-f511-44ce-8ed0-8d206f259b10",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4ab1ea63-f273-4e2c-84e2-11cb7b92f64d",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "6da13160-9810-460e-befb-a459902ecf72",
        "cursor": {
          "ref": "f3b6f9f7-abda-4622-9b4e-f146062f329e",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f856e74-3e3f-479d-90ee-718382db7741"
        },
        "item": {
          "id": "6da13160-9810-460e-befb-a459902ecf72",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "373fbdcf-3f3d-42dc-b0d2-fd6e13ff3d11",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "106ce10c-9105-47db-ba87-c94f287bd702",
        "cursor": {
          "ref": "2b358e08-da76-4596-be10-e88c7f68a3e3",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57d9ac3f-60dc-46fc-94c7-6207977b8ffc"
        },
        "item": {
          "id": "106ce10c-9105-47db-ba87-c94f287bd702",
          "name": "did_json"
        },
        "response": {
          "id": "a66dc650-8e8e-4baa-acda-193f485cf1d8",
          "status": "OK",
          "code": 200,
          "responseTime": 763,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1788c0-693f-4434-8a43-4abd10726437",
        "cursor": {
          "ref": "cffc4852-fd1d-4404-81ce-90abbcf54362",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0d0777b-2c52-45ee-8eed-70b548108281"
        },
        "item": {
          "id": "cf1788c0-693f-4434-8a43-4abd10726437",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c322824-f7fe-4016-9452-bdeae926e2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1788c0-693f-4434-8a43-4abd10726437",
        "cursor": {
          "ref": "cffc4852-fd1d-4404-81ce-90abbcf54362",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0d0777b-2c52-45ee-8eed-70b548108281"
        },
        "item": {
          "id": "cf1788c0-693f-4434-8a43-4abd10726437",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c322824-f7fe-4016-9452-bdeae926e2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822df7b0-a81e-436b-a7a8-b2ab444d7787",
        "cursor": {
          "ref": "b6a712d1-875e-479a-9235-39bd2e282caa",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c7a27d5a-3049-4eee-9e5e-ae856946d35a"
        },
        "item": {
          "id": "822df7b0-a81e-436b-a7a8-b2ab444d7787",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9468ce3-054b-4b18-8c64-79abbc15d7bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1051,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a255f7ea-730d-4c26-bae0-9c233b519e43",
        "cursor": {
          "ref": "cc8fdbeb-0a47-486c-85e5-55d5a6925f02",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0eee1da7-a1ca-4269-a324-946eacbffbfd"
        },
        "item": {
          "id": "a255f7ea-730d-4c26-bae0-9c233b519e43",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5f4d5189-7d7c-43b9-b687-0785e4728c61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 932,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31e7c7d-8c9d-40b4-8a3d-66af53de5c28",
        "cursor": {
          "ref": "5acb02c0-3ca8-4b73-a451-731db3d8ea47",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aa067f62-49ff-43f5-a78c-0e3af7ebacf7"
        },
        "item": {
          "id": "c31e7c7d-8c9d-40b4-8a3d-66af53de5c28",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "61641f22-fe6e-4470-9de0-03e4fb551e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1f3591-9a6e-4b50-a054-53b2dc86f884",
        "cursor": {
          "ref": "7a2c0dbf-c58e-41d6-91cf-c600f25b240f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abd8fe5a-50ad-41fe-a5bf-4d8ce1ccf7b5"
        },
        "item": {
          "id": "dd1f3591-9a6e-4b50-a054-53b2dc86f884",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "28d97031-8f51-4bda-ac78-576f75990652",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 676,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1f3591-9a6e-4b50-a054-53b2dc86f884",
        "cursor": {
          "ref": "7a2c0dbf-c58e-41d6-91cf-c600f25b240f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abd8fe5a-50ad-41fe-a5bf-4d8ce1ccf7b5"
        },
        "item": {
          "id": "dd1f3591-9a6e-4b50-a054-53b2dc86f884",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "28d97031-8f51-4bda-ac78-576f75990652",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 676,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca00afe-ec2e-47bf-81ce-b2c50af486f7",
        "cursor": {
          "ref": "d513ef07-6383-4761-b59f-0c397b982ccd",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2e116803-1d1e-41b2-8d2b-6c4f658d1322"
        },
        "item": {
          "id": "bca00afe-ec2e-47bf-81ce-b2c50af486f7",
          "name": "identifiers"
        },
        "response": {
          "id": "f906b0de-2f2a-42ad-ab61-b7d9d7cd4bb7",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68858489-4fd4-4d00-a8d4-b99058287f7d",
        "cursor": {
          "ref": "eaa2f055-903b-40d8-a096-4235515587ec",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "49cede7e-2036-4e5c-856e-a24abde5c8c1"
        },
        "item": {
          "id": "68858489-4fd4-4d00-a8d4-b99058287f7d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b1e969c-3f50-4880-a989-4d7928c20a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68858489-4fd4-4d00-a8d4-b99058287f7d",
        "cursor": {
          "ref": "eaa2f055-903b-40d8-a096-4235515587ec",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "49cede7e-2036-4e5c-856e-a24abde5c8c1"
        },
        "item": {
          "id": "68858489-4fd4-4d00-a8d4-b99058287f7d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b1e969c-3f50-4880-a989-4d7928c20a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba9e3a-7bfa-4d82-8d7f-cb0c0a22d881",
        "cursor": {
          "ref": "3db19e0d-6502-4434-8622-4e335417633f",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f1211de7-dad1-40f7-9669-ab4a261c007b"
        },
        "item": {
          "id": "d4ba9e3a-7bfa-4d82-8d7f-cb0c0a22d881",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a4e32cab-3d83-4a6c-a5d5-6b74bb409da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e43ecd-23e5-4d74-9446-23e8236646aa",
        "cursor": {
          "ref": "de6db0aa-60ef-4810-8a2f-b181a55a2a81",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e443f601-ddc8-4b1b-8e6a-95f97dac6815"
        },
        "item": {
          "id": "53e43ecd-23e5-4d74-9446-23e8236646aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5b338769-c0cb-4ad0-8645-5b7b3909f0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff994e54-c8a7-4a7b-95e7-a709b6a35503",
        "cursor": {
          "ref": "0b7fd04c-c07e-4a27-b7f2-5d91dd21081e",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "baba8dee-4bc3-4275-a603-60b818b9cef0"
        },
        "item": {
          "id": "ff994e54-c8a7-4a7b-95e7-a709b6a35503",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "24e35acd-621a-4cce-9f98-48dd22ad86d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4400ed3-3454-44f7-aee1-ff10079d85ef",
        "cursor": {
          "ref": "9a99197f-1974-41a0-88ad-3311323d5474",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "045add70-67f4-42aa-b5c4-c092e684f9c5"
        },
        "item": {
          "id": "a4400ed3-3454-44f7-aee1-ff10079d85ef",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "64be5afa-d189-487b-a3f1-8735eb5f335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdfe4ad-f9ec-408c-bd2b-907463785795",
        "cursor": {
          "ref": "27c3c854-9337-40c2-937e-5b4eec89f1b5",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e508a088-2050-4e3a-ba03-e25abd228611"
        },
        "item": {
          "id": "1bdfe4ad-f9ec-408c-bd2b-907463785795",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5aa65c92-5b63-446d-a419-965944f61dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63ad1b-853a-4cc6-b8f2-307f7e7c3fd1",
        "cursor": {
          "ref": "c3f62fa9-c0db-4522-9e66-04b80b716ce6",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c123c113-fdb8-4ad5-abb0-6cb3f207be04"
        },
        "item": {
          "id": "bd63ad1b-853a-4cc6-b8f2-307f7e7c3fd1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf74bc33-996a-4e81-aa06-0b53714dbc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd34ec8a-ce34-445a-a5ca-7b13243beac4",
        "cursor": {
          "ref": "55a04762-f5d4-401d-8a31-559b45b4fbb1",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "edc0f409-c5e8-4ef7-a8d9-80df4b9b2026"
        },
        "item": {
          "id": "dd34ec8a-ce34-445a-a5ca-7b13243beac4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d2c5dd19-7cb5-4c7e-a890-8111481a0746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a7997-e27e-4e98-9616-30e7c3d6ecd4",
        "cursor": {
          "ref": "2f50b8b7-7edf-4591-ab03-fcf81fe5ac4d",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "afc169aa-6e5a-4ba8-85b4-29b60279b282"
        },
        "item": {
          "id": "709a7997-e27e-4e98-9616-30e7c3d6ecd4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dea01cef-e5f8-4b59-9a4d-874ca38ae299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eff70d-f00d-498d-affc-e132363d4783",
        "cursor": {
          "ref": "2f812d95-b2e4-4940-b9fe-1ac1d44c785a",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc024013-23c0-4d60-b3dc-09b6f6183817"
        },
        "item": {
          "id": "e1eff70d-f00d-498d-affc-e132363d4783",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f4af9c0-44e2-4251-9c67-97c3f4785cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b004bd-0e55-4801-9ad2-c9ed6635c3a5",
        "cursor": {
          "ref": "f6ae4c7c-ba28-4f30-bc83-62d5df5492a7",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d83f92e3-f769-499f-b1fa-b040a9e2657f"
        },
        "item": {
          "id": "04b004bd-0e55-4801-9ad2-c9ed6635c3a5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d49a2ab-dff4-48fd-ac14-d8b9bbfda5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecdbc61-b8de-47a3-94c0-2d73516d1b26",
        "cursor": {
          "ref": "90bc6f21-3703-4394-b475-517f841fbd71",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c87635d0-98b2-4491-a7bb-9bb86389d55c"
        },
        "item": {
          "id": "4ecdbc61-b8de-47a3-94c0-2d73516d1b26",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "020dc3e2-ab49-4df0-b3eb-33ced035781f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326cbb61-c3c3-4217-8588-b2fbba1ad918",
        "cursor": {
          "ref": "c43dfd53-c119-4f92-a19c-736033ea8920",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ad48f85-6084-486b-aa6c-17eec751da85"
        },
        "item": {
          "id": "326cbb61-c3c3-4217-8588-b2fbba1ad918",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b563e0e8-c3b3-4f64-8771-08a191f8c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceed3de-81f6-49b3-b31c-e24551d76d59",
        "cursor": {
          "ref": "6f9a827e-dbc9-46c8-b66f-f58ad34ee314",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27d2123b-4873-4ac1-85dc-22cdd29f404b"
        },
        "item": {
          "id": "4ceed3de-81f6-49b3-b31c-e24551d76d59",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70114730-103f-4925-a969-58891046d923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b89a5a-62d0-440d-8017-0f9f0c48b716",
        "cursor": {
          "ref": "fe9f461f-bbed-4b9a-a1d9-fc9a33895676",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c3a0f558-0b11-4612-b9b6-f7315f5b781c"
        },
        "item": {
          "id": "99b89a5a-62d0-440d-8017-0f9f0c48b716",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "efb928ca-ddc1-414f-aa22-cfebe29d13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fc3192-bdcc-4582-86d0-4afd11b37dcb",
        "cursor": {
          "ref": "dbddf6c2-bb21-47da-988a-86ffdc2fda7b",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b32ab7e5-8e5c-48b1-9413-2cb44b6c6966"
        },
        "item": {
          "id": "28fc3192-bdcc-4582-86d0-4afd11b37dcb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "759d417f-6ece-4214-af58-103e99c5bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b84c82-b5e4-469b-ab6f-a3d306d8858f",
        "cursor": {
          "ref": "bd1745f5-d3f4-477c-8367-7710b82b8149",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c40f1795-62e7-4ddd-ba37-325c7bd2f6d5"
        },
        "item": {
          "id": "50b84c82-b5e4-469b-ab6f-a3d306d8858f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b950aaa7-37da-4b9a-980e-4713b1f67654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20319f35-5227-44fa-96fc-f1208abe006f",
        "cursor": {
          "ref": "cfdc0921-21c8-4c83-ba66-6d3fc603267a",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "156d2c8a-3d85-4076-81aa-79b6218eade2"
        },
        "item": {
          "id": "20319f35-5227-44fa-96fc-f1208abe006f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "01f9415e-00bb-4b8c-a844-db0bf4e262e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971f43e6-e554-41ed-acb7-531ab7002c7c",
        "cursor": {
          "ref": "975c3c18-6500-4402-897a-97ffbcba1ed5",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d134dd51-d299-4505-9e2c-5328302b185c"
        },
        "item": {
          "id": "971f43e6-e554-41ed-acb7-531ab7002c7c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6b45323b-2d27-4785-8cc4-19791bf40f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084a9544-f2e8-4450-8213-3c592c5b9b79",
        "cursor": {
          "ref": "ffb579af-b2ad-43f0-a1c6-3faeea7b8a6a",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6b297f3-ff28-4002-a055-b7dfef1642c9"
        },
        "item": {
          "id": "084a9544-f2e8-4450-8213-3c592c5b9b79",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "96045376-4e89-484b-b133-2150ed74fc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643fc88e-f9a1-4c06-b9a8-15c16f44791e",
        "cursor": {
          "ref": "41cb244c-414f-4d6d-ab97-81f5c7ccb098",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "88ae887d-8d68-484a-b7b4-b398a1a7abec"
        },
        "item": {
          "id": "643fc88e-f9a1-4c06-b9a8-15c16f44791e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "527a6f46-89b6-4da4-a17a-a911d05451cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f5e78a-5500-4efe-af62-4d44152d0d72",
        "cursor": {
          "ref": "ccd36172-cb2c-48f8-9680-dc42ce2b4583",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78d71844-c307-42e7-807f-f865f7618db9"
        },
        "item": {
          "id": "e4f5e78a-5500-4efe-af62-4d44152d0d72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2e86691a-ba5d-4436-8190-1f1b9f8dbc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e866eb-94e5-4bd9-b8ca-741a53d7eda5",
        "cursor": {
          "ref": "bdad1c9d-9b00-4cf8-9c2b-ad9c9f789727",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f4f6e5c3-f3ae-4712-81a9-bec1de29faaf"
        },
        "item": {
          "id": "35e866eb-94e5-4bd9-b8ca-741a53d7eda5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4045153b-e5dc-4c48-8469-784c010432f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f08aaf8-6a11-40c6-a05f-c75728c48540",
        "cursor": {
          "ref": "e349db73-998f-4cbe-83eb-b934e0d4e01d",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d573b37d-e5d5-40da-aa6b-e4332bcf78a3"
        },
        "item": {
          "id": "4f08aaf8-6a11-40c6-a05f-c75728c48540",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "154d3255-4b34-41ff-bb57-9f3c67ff612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b07ed0-9453-4803-a7bf-8bf1bac1c0d6",
        "cursor": {
          "ref": "cb4717c6-27d5-42c0-bd5e-8a357004f2fb",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d2827ac-b1cb-4b11-b6ba-42a516c9d348"
        },
        "item": {
          "id": "94b07ed0-9453-4803-a7bf-8bf1bac1c0d6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8ade877d-3ec3-4bb6-9bd9-fb32e4f0d4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61cf8f-178b-4528-95cc-781e66ffd977",
        "cursor": {
          "ref": "64f46f1a-4454-43a1-815a-192fad695bca",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6fadb98-1151-43af-b7c4-e31458294ac6"
        },
        "item": {
          "id": "1c61cf8f-178b-4528-95cc-781e66ffd977",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d17ef261-f9a6-4067-bbb2-94da34bda00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f73c36-c333-43d2-bca4-51f84c60816f",
        "cursor": {
          "ref": "260db06d-ad54-4aa3-b6dc-aecbc04c54d7",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a728abee-a6cc-45b1-a277-d6cdb233fbf2"
        },
        "item": {
          "id": "32f73c36-c333-43d2-bca4-51f84c60816f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "01c13454-6c60-47f9-8e90-083ea015b8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6d5284-8f73-4f86-8b33-d3e1aa6f7463",
        "cursor": {
          "ref": "8ad941b1-596d-432f-8280-806cf4a4bc8d",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7aa6e6fa-747a-49f7-b8a4-6bc8a3a4c08e"
        },
        "item": {
          "id": "3c6d5284-8f73-4f86-8b33-d3e1aa6f7463",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "819c2e90-4d5c-43f6-9f8a-8d83f1187d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30a4bea-3792-404a-b5a8-34a725ee8407",
        "cursor": {
          "ref": "55ab4dba-ae57-489e-8263-46c7838a82cc",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5ebe0ce-59e2-42ef-b145-53b117f363f4"
        },
        "item": {
          "id": "b30a4bea-3792-404a-b5a8-34a725ee8407",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c587f880-88ca-4114-a11f-546eb6b9ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7c2392-875c-4a1f-bf0b-3a5d9bfe0cfa",
        "cursor": {
          "ref": "7cf1f0be-b343-40bb-8b60-825a02f29514",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4321f449-9edc-48fc-b801-90305da8d72e"
        },
        "item": {
          "id": "cd7c2392-875c-4a1f-bf0b-3a5d9bfe0cfa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2537003d-9d73-4751-a882-23032a270c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7839f24-b52f-44b1-b95b-b005589b41c6",
        "cursor": {
          "ref": "e9531c7e-1d51-4f86-9456-98831d8a861f",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4d42f3dd-0784-4e0c-ae44-4a2743b35c30"
        },
        "item": {
          "id": "d7839f24-b52f-44b1-b95b-b005589b41c6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6bb3be90-a7d8-48a8-ae72-364163750dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fe7c29-f77d-48a1-b3c6-294670e44229",
        "cursor": {
          "ref": "13dcaa62-445b-4f3f-922b-6d0f22f4d686",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "85d62367-6a0a-4129-97b3-be78702fff33"
        },
        "item": {
          "id": "61fe7c29-f77d-48a1-b3c6-294670e44229",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0316abae-74a1-4fc4-b8ca-975a37fd4269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110eb1b-6b50-4788-8b8f-007e950ea160",
        "cursor": {
          "ref": "66b42499-d17d-4c91-ba9f-7fe6994a3fc5",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a13059de-5d06-4b2a-b913-5c44d5c6c945"
        },
        "item": {
          "id": "d110eb1b-6b50-4788-8b8f-007e950ea160",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a5ef98d-c74d-4656-8227-cf126be711ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a2f48-d4a8-49a4-a6d0-63c146438dcd",
        "cursor": {
          "ref": "faf4ee19-5d7e-416b-bc73-febbfec82f75",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1a4fd78c-b716-4b4b-a6c5-2494055b0a3e"
        },
        "item": {
          "id": "298a2f48-d4a8-49a4-a6d0-63c146438dcd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4120373e-2af1-4159-adee-a851603d0bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645a627e-d64c-441d-8bdc-ddd92b3ebd78",
        "cursor": {
          "ref": "6da4d3b4-2795-42cd-8ec9-d940060ce708",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ad676efb-413b-4b1d-91a0-8a41a6b02ed8"
        },
        "item": {
          "id": "645a627e-d64c-441d-8bdc-ddd92b3ebd78",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8655a14-1578-4209-a0ee-422b124e8f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b121c-c232-485d-a07e-34a740f00e39",
        "cursor": {
          "ref": "4eeb8aea-527d-4a96-b21d-2908a6bcac85",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7da5d84a-63d8-4f8f-be3b-e18af271da61"
        },
        "item": {
          "id": "504b121c-c232-485d-a07e-34a740f00e39",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8812a89c-3081-48c4-bcc5-08f6fd52255e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 538,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e6abe7-c571-44bf-85f6-d36fc34a6267",
        "cursor": {
          "ref": "c2e2f516-14e9-4c57-a975-203f5058f373",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "805967b4-7eba-406b-b082-b6e4385868de"
        },
        "item": {
          "id": "c1e6abe7-c571-44bf-85f6-d36fc34a6267",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9c655d64-f04d-4d08-a957-c9666430ac48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699be692-4067-466d-bd43-f9fe96b1df16",
        "cursor": {
          "ref": "f42e3984-c799-499b-a542-338a3496bb85",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cf46a339-2bf5-4d50-aa48-08bd65797e21"
        },
        "item": {
          "id": "699be692-4067-466d-bd43-f9fe96b1df16",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "437cfd2c-9fa1-4764-a20d-3708465704c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcc445c-1bb1-4d3f-b28c-3040e80f46f7",
        "cursor": {
          "ref": "17d4979d-ec88-4215-adac-ff32db2fc715",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8dc49e44-5cac-49e9-8eeb-53bf44a8858c"
        },
        "item": {
          "id": "9fcc445c-1bb1-4d3f-b28c-3040e80f46f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "152c56b5-5523-437a-ac9d-604fad342da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70c6a9d-9e46-4a74-8344-cae8e77afdaa",
        "cursor": {
          "ref": "47f96d52-5183-45d8-a0ed-1a7d9662d970",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1d9ee6a7-9e92-4cee-b90d-5309fa0b823e"
        },
        "item": {
          "id": "c70c6a9d-9e46-4a74-8344-cae8e77afdaa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f59208f-796d-4362-868e-39050f993258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b12a4-22fa-47b8-84ba-82b630702768",
        "cursor": {
          "ref": "2c9cec68-4e88-4703-8ca9-8b9021ac5852",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d5680be4-df4e-4cb8-9d6f-b6694cdd4606"
        },
        "item": {
          "id": "a60b12a4-22fa-47b8-84ba-82b630702768",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7065562a-fb36-4a04-9159-5339125a5624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ee9cdb-af30-4fb4-a2f2-9747482bfe37",
        "cursor": {
          "ref": "5736445e-21a8-4369-9420-73f651d02c27",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6626c91b-6ddc-4a8f-8e50-26a803bc4430"
        },
        "item": {
          "id": "43ee9cdb-af30-4fb4-a2f2-9747482bfe37",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1fa488e-25cf-4141-94b1-1d42d332bf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f879325e-ed9c-4d4a-8fb0-9297b943b48e",
        "cursor": {
          "ref": "a79fc44c-2eef-49bb-994c-76fc280ff32d",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b253bdc1-7a78-4be7-ad6d-5b4e06c9c427"
        },
        "item": {
          "id": "f879325e-ed9c-4d4a-8fb0-9297b943b48e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d97e66a-3f15-47e8-b41a-a74e30ce5116",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 494,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef38063a-fb66-4704-8364-b282818de09e",
        "cursor": {
          "ref": "713224aa-ba08-46a2-9e8e-eaa584080c81",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "87c0e630-c754-4910-baf8-e2d5c3f49b5e"
        },
        "item": {
          "id": "ef38063a-fb66-4704-8364-b282818de09e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b319b5cc-d654-4f86-a07e-4927265a1c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80de2452-0ceb-4a62-9aa6-289bd5547d45",
        "cursor": {
          "ref": "7ab6ee6c-fa6e-4d84-b1ae-96372fdcfe32",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9bb99318-d798-4327-89c2-4ec863852e1c"
        },
        "item": {
          "id": "80de2452-0ceb-4a62-9aa6-289bd5547d45",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "447a3fa5-4584-4f28-9e78-c9a8d5bec0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d83523-633f-45aa-b307-89c73b708f09",
        "cursor": {
          "ref": "7d04af76-e338-4b83-87a5-a8fe67a15177",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fb86e696-a498-4270-b91f-bb5e7261c263"
        },
        "item": {
          "id": "c0d83523-633f-45aa-b307-89c73b708f09",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a6b57bdf-caf0-4d2d-bfbd-7b85bf6c7f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb84761e-bca4-4428-be06-b7bb83e6e6dd",
        "cursor": {
          "ref": "9e1fba77-a0b6-40b3-b3dd-1fbd62a6bcc7",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "106628bf-7877-4ac8-90be-a314e9a1483e"
        },
        "item": {
          "id": "bb84761e-bca4-4428-be06-b7bb83e6e6dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0e748889-4b09-46b4-8fe4-852fb2c83de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124b715-5dea-4127-b1c0-bc3c99ecec4d",
        "cursor": {
          "ref": "1e1247f8-073d-47e4-acbd-7aa946384a19",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3561e624-91e7-4bf8-813c-2c47ebced8d3"
        },
        "item": {
          "id": "8124b715-5dea-4127-b1c0-bc3c99ecec4d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2bda460c-50e1-46d1-80ea-321ed5dc6f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025be499-b89f-4ce6-8ca1-672bbeab511b",
        "cursor": {
          "ref": "aa1cc055-10ce-4156-a1a0-276001b3de62",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b37091f9-f0d7-46e0-9cb5-6fb24fbba6ae"
        },
        "item": {
          "id": "025be499-b89f-4ce6-8ca1-672bbeab511b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07f5dbb0-705c-4917-9268-a827d4f5c3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161bb960-1b48-42a5-8d72-6df8ddbaabc3",
        "cursor": {
          "ref": "06101d55-d42b-40a2-9421-143d82477122",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c82197d8-3ae1-452e-9eaf-e78c22036512"
        },
        "item": {
          "id": "161bb960-1b48-42a5-8d72-6df8ddbaabc3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6604de03-c13f-4e3e-9a63-e7a25c6abd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc33a3b-e35b-499b-8358-2ba890d0e65e",
        "cursor": {
          "ref": "55f69062-7990-4c2d-a0f1-43ad9f796709",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "80f318fb-be84-486c-a0ac-9c59aa9de35f"
        },
        "item": {
          "id": "1fc33a3b-e35b-499b-8358-2ba890d0e65e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "376fa2a6-24f1-4330-a4ea-aac8d0beed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8107ce2-a2b5-4155-b27f-dcb1ed9a6c4a",
        "cursor": {
          "ref": "ba05638b-9a00-4488-ad8e-75506f8ab1f6",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5084fcc6-aa50-4729-8b90-e3532cb4ea29"
        },
        "item": {
          "id": "b8107ce2-a2b5-4155-b27f-dcb1ed9a6c4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2608306b-d54c-4c34-9dc3-4c8a4bf3012b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0cb355-9a32-40cd-b547-50961a20aa07",
        "cursor": {
          "ref": "46572834-1a97-45ca-a8be-6616075776ea",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c73aea9b-a594-428c-820b-a0efac5700fb"
        },
        "item": {
          "id": "ba0cb355-9a32-40cd-b547-50961a20aa07",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9687e6e8-9a73-4229-b607-07bef4a7f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b97a2f-4abf-4f29-83de-0805b5115f99",
        "cursor": {
          "ref": "ea49538d-b4fa-406c-a6e5-17c2b1057072",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "643afdf0-385d-4ca0-a8d3-c36f12bf2033"
        },
        "item": {
          "id": "26b97a2f-4abf-4f29-83de-0805b5115f99",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "33dff549-de4b-4e16-95ef-ca0089d875da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b956a0c-4a23-4086-8dee-447c98f2ee1e",
        "cursor": {
          "ref": "70114862-c792-40a7-9e26-c462aa1f267c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "487b96b8-0eb8-4ece-9827-7706a9540a5f"
        },
        "item": {
          "id": "7b956a0c-4a23-4086-8dee-447c98f2ee1e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f7a9e676-222e-4fcc-98d2-3077af3a5ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34928e-75b5-4d08-a705-0532fb38aa24",
        "cursor": {
          "ref": "4c694766-b3a6-4977-8364-f3be5e6ecfc3",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6e9acdac-3a94-4c19-939d-8ec59b4c5e5d"
        },
        "item": {
          "id": "1f34928e-75b5-4d08-a705-0532fb38aa24",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99bc9897-4141-4135-bcb0-fdd4043bf6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab70cdcc-fa64-48d7-9c50-7ae733a57cd4",
        "cursor": {
          "ref": "e54bc461-22cd-4c93-9cc4-5682112b87a4",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "40a197b7-cb24-4c41-ae87-686c000940da"
        },
        "item": {
          "id": "ab70cdcc-fa64-48d7-9c50-7ae733a57cd4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e71b7894-6781-44e8-aed5-d818b00db4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3f63f-eb51-4140-971c-7e6261bb0ef8",
        "cursor": {
          "ref": "fa0835c5-73d2-44ae-849d-998cf6dea055",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0cfc51a8-51b4-4135-b730-52333ca0980f"
        },
        "item": {
          "id": "60c3f63f-eb51-4140-971c-7e6261bb0ef8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a880706a-0029-49a1-9ea8-ff37e1d65d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b996ee9-1f8c-4595-bb72-91c490cb7c33",
        "cursor": {
          "ref": "b63849eb-4b8a-4016-ae25-71f6b515e3be",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bb8d7df7-f248-4967-ab0a-5ee05800bcbc"
        },
        "item": {
          "id": "5b996ee9-1f8c-4595-bb72-91c490cb7c33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "62b6f9f3-327c-4781-95a4-cad550ae809d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe02afda-a21c-4c12-bd06-79f0aa00b4b5",
        "cursor": {
          "ref": "383e502f-8822-4630-8e61-20cb2c3827b6",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1b23b944-fb60-4da7-bf0a-d88bd2fe6892"
        },
        "item": {
          "id": "fe02afda-a21c-4c12-bd06-79f0aa00b4b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fa548c4c-94d7-44c6-9b08-5df4656ac44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0e6f9-b9b4-4408-9620-4601d08f584b",
        "cursor": {
          "ref": "974e95be-f07b-4fc8-9260-a3c3b3bceb2c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4c79589f-c41c-4587-801a-b96e968c0785"
        },
        "item": {
          "id": "eac0e6f9-b9b4-4408-9620-4601d08f584b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a9e4809a-29fe-4b19-a529-42b09715e9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb2680-b7c9-463f-976d-f94134094269",
        "cursor": {
          "ref": "1737c499-a3f9-45da-9f9b-fe7da1511339",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cc712d11-4e40-4cfb-abba-f812e945151b"
        },
        "item": {
          "id": "30eb2680-b7c9-463f-976d-f94134094269",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "50966f75-02da-450e-9347-47aa6270b5e2",
          "status": "Created",
          "code": 201,
          "responseTime": 2109,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "1a9139bd-190d-43f8-8170-c58487b5c50a",
        "cursor": {
          "ref": "b902da02-6328-4552-b127-78553603dda0",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff39696f-7bc0-4d61-b27b-c1d0894ce857"
        },
        "item": {
          "id": "1a9139bd-190d-43f8-8170-c58487b5c50a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aa70cd30-051a-4c3a-9beb-a1a4befa01ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92047884-9bb1-47d9-8af4-01e3472b0f8c",
        "cursor": {
          "ref": "5790c71d-590d-4544-8216-bf923ceeb957",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8c98fe71-bf6d-4562-b362-55c2c7468159"
        },
        "item": {
          "id": "92047884-9bb1-47d9-8af4-01e3472b0f8c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c30e59a3-0ca3-42c8-a075-5d6d1dc83787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110a25d3-ecfb-4362-83d4-a375634c337f",
        "cursor": {
          "ref": "647a4bd6-5b59-4fc5-9e6a-7d8de284ccbc",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ec482a6-1925-4212-9741-9bdce9335d15"
        },
        "item": {
          "id": "110a25d3-ecfb-4362-83d4-a375634c337f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3655ddcf-7b39-4912-aede-9a2f96449c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee35a340-b285-45a0-b1ff-74295b4f363f",
        "cursor": {
          "ref": "189f603b-bee1-4abc-bd61-aee2b690c74c",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "47be36bf-4dc3-4b30-9c7f-36a216309519"
        },
        "item": {
          "id": "ee35a340-b285-45a0-b1ff-74295b4f363f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0f5153e2-dcc6-4317-bac8-490ae526691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380fc8e2-50dd-47ab-bff2-ba5da82f81a3",
        "cursor": {
          "ref": "bace49fe-eaa9-491b-880f-50897c346f8d",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c448a7a-b1d5-436b-bfa3-2f3e114d45e9"
        },
        "item": {
          "id": "380fc8e2-50dd-47ab-bff2-ba5da82f81a3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f5e57c1e-27dd-4823-94e6-0838ee122c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4a587f-3d1f-4e23-bc00-cf72753aa83d",
        "cursor": {
          "ref": "d0b68ba7-822b-4317-9c83-cbb9152ad216",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7eeb895f-b159-4372-94de-cdbda2e4f3ed"
        },
        "item": {
          "id": "aa4a587f-3d1f-4e23-bc00-cf72753aa83d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f49c4e4e-24c6-403a-986c-d271286d3908",
          "status": "Created",
          "code": 201,
          "responseTime": 2031,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "6c8b4ff6-b39b-4112-a4e6-61d6914ba340",
        "cursor": {
          "ref": "0afe2d98-55a3-4123-8bd0-9acf7e2671d1",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9c3f6ad8-527c-4219-8332-c253bbc00c95"
        },
        "item": {
          "id": "6c8b4ff6-b39b-4112-a4e6-61d6914ba340",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6ae669ec-69d0-4070-94c3-5675090d2462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f83a67-7ef5-4435-895a-06c4e7d4371b",
        "cursor": {
          "ref": "9fafaa2f-8b99-456b-ab73-68a60226e396",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bdee5ac6-4e28-4504-99af-9668a325a5f6"
        },
        "item": {
          "id": "23f83a67-7ef5-4435-895a-06c4e7d4371b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da7e822a-a323-4890-b103-b15421087957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27772636-3ed8-4417-9e95-32de2dbfc384",
        "cursor": {
          "ref": "10cc3904-e1ca-4881-b41a-f68289dd1772",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9ee772ee-bdea-464e-9590-8ca7497c0667"
        },
        "item": {
          "id": "27772636-3ed8-4417-9e95-32de2dbfc384",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab249b98-17bf-40d2-8829-5f7df2acbdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4839d5dc-fee9-4e5b-904e-8e3a7ded3102",
        "cursor": {
          "ref": "516d4e27-fbf0-4e59-b753-e8d6a034573c",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2b5f734-a4e9-4e98-b38b-6fd44a6cd97c"
        },
        "item": {
          "id": "4839d5dc-fee9-4e5b-904e-8e3a7ded3102",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "474f3b7f-81ee-4814-8b60-3024b9f2f3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814860e4-607f-4629-981f-8181c370e4d2",
        "cursor": {
          "ref": "4ce6b8a0-6dac-4985-b8c8-2984d08027a3",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a2f182a3-945b-45ba-8d70-94b73019099b"
        },
        "item": {
          "id": "814860e4-607f-4629-981f-8181c370e4d2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0e437ca1-37c3-4810-ba77-50f2495ea288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd2974-eb1d-4793-89b2-b2240c30424d",
        "cursor": {
          "ref": "9f063e38-af70-4f7b-8cae-9df1d26c5a58",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ffc70942-ce6d-4dcc-9ad5-c6bccc81afc7"
        },
        "item": {
          "id": "f8fd2974-eb1d-4793-89b2-b2240c30424d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6501f0e6-63e0-45bc-8b82-be9f4f8e0f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665a1baa-eb3f-4d70-8a58-cd47d6fdb636",
        "cursor": {
          "ref": "5e381cf5-b1cd-4221-867d-bc1c41f18304",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "99d2390f-c718-4c9d-b79c-6c1b9324b02a"
        },
        "item": {
          "id": "665a1baa-eb3f-4d70-8a58-cd47d6fdb636",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1eb85673-05ed-47fc-9eda-64926de220d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6bb16e-bd8d-43b4-a767-5e5041f7abab",
        "cursor": {
          "ref": "a26e9af4-08c3-4a76-aaf2-e720780c2390",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6c2e1401-4317-481b-91dc-d0772680735b"
        },
        "item": {
          "id": "8f6bb16e-bd8d-43b4-a767-5e5041f7abab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b7b4eb76-ef83-4158-9324-fe64db19c11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d3f55-9e47-4272-9f38-920f7a601ced",
        "cursor": {
          "ref": "aaf7088f-0ca4-47a3-8992-a87204ccd2ae",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a90541af-46d9-4f48-86ba-da8a4da465db"
        },
        "item": {
          "id": "ea8d3f55-9e47-4272-9f38-920f7a601ced",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "75a9b5aa-2c6a-4346-91a5-d08ebbab4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7e762-c559-44c4-8783-9ad049861f25",
        "cursor": {
          "ref": "bfecd649-3f9b-4a6f-a89c-c91a58399db9",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "983d2eb3-9bbb-4210-bdc4-45830f65aa5b"
        },
        "item": {
          "id": "08e7e762-c559-44c4-8783-9ad049861f25",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f83618b5-0fe1-49a3-b643-bdde59076909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de37ec7-026b-4a17-9b92-af30a21b7f65",
        "cursor": {
          "ref": "4a8ebb09-7277-498d-a271-7d30cb644c7b",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d71aecae-399b-47ab-b96f-f8b61a875cb8"
        },
        "item": {
          "id": "8de37ec7-026b-4a17-9b92-af30a21b7f65",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f9ce74a0-fa32-4eb3-a533-4fbcbf823515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64e3c1-7af3-4747-838f-80624b17cc0c",
        "cursor": {
          "ref": "fe365a35-b084-4e03-9eb8-c32f8f4dd501",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34b23202-02c2-4c30-bec4-46c80004ac2a"
        },
        "item": {
          "id": "8e64e3c1-7af3-4747-838f-80624b17cc0c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a9a201de-086f-4d8d-bd34-d977b12dc2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64316c-36df-4888-a845-46a457ea3f36",
        "cursor": {
          "ref": "d8a542fb-0175-46d1-b35d-0216dd17e334",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b20849ab-e2c6-43e8-9c0a-747c8f5b066c"
        },
        "item": {
          "id": "5c64316c-36df-4888-a845-46a457ea3f36",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db313561-6d05-42a2-af25-32a8a04d8326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30d64f-666d-498a-967b-650f1236baf0",
        "cursor": {
          "ref": "8ccb41f2-8cfc-4e16-9793-5bd669a47583",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3558918-3342-4c17-9a27-0df1bd6d36bf"
        },
        "item": {
          "id": "eb30d64f-666d-498a-967b-650f1236baf0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0033a97e-f37f-4d65-abc1-61c176469f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a180dc-dfcb-4cbf-b9df-406068789da6",
        "cursor": {
          "ref": "d23c8dd4-3727-43f9-b2cd-0736a1557945",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e25cc10f-8787-4b36-b85d-d73faa8b0644"
        },
        "item": {
          "id": "b6a180dc-dfcb-4cbf-b9df-406068789da6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2d9f651a-0dca-4f97-ac30-998c344a6c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8d26fb-d506-4235-bd48-dce448de3c95",
        "cursor": {
          "ref": "3d29d775-e50d-417f-b28e-66b51d39e363",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ecd23d00-c273-43e9-9e05-bdb56896af6a"
        },
        "item": {
          "id": "8d8d26fb-d506-4235-bd48-dce448de3c95",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a1f643e5-49ec-4357-a10a-8a52649113a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a226f9f-2044-4ee3-9cc4-22736c3bdf33",
        "cursor": {
          "ref": "fefd191b-d370-4fe1-ac07-135b9a29f2d8",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0e1874d0-7020-4417-8ef1-c09bd321f127"
        },
        "item": {
          "id": "7a226f9f-2044-4ee3-9cc4-22736c3bdf33",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ed00cf12-8b2e-497e-94dd-f8758afce636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb334173-f2f4-437f-a4ae-bc1c8b8fca2a",
        "cursor": {
          "ref": "af450783-cfbc-4051-b667-d448f73cd7a7",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3afaa80e-a3d1-4d8f-849f-bad2e0d15f07"
        },
        "item": {
          "id": "eb334173-f2f4-437f-a4ae-bc1c8b8fca2a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ed1eb5b7-9c59-4d44-b07c-5e2f8d92a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ac9a92-4d30-4af6-847f-8fb5664954c8",
        "cursor": {
          "ref": "6bed6f72-a51a-4ba7-806e-422110ab8eb5",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fbc62cbd-8b7e-498b-a751-03c18dbca825"
        },
        "item": {
          "id": "41ac9a92-4d30-4af6-847f-8fb5664954c8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5dd4d326-596a-4c34-a646-543f038e13a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fbc5c8-b4d0-4502-8de2-928dc278edcc",
        "cursor": {
          "ref": "af3e30f2-66ba-4b83-910a-f1c58c2c3612",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb07dfb8-31ac-4ce5-95d1-64a825376fcc"
        },
        "item": {
          "id": "85fbc5c8-b4d0-4502-8de2-928dc278edcc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d24bc6e3-d9f2-4574-b942-901a17d02ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c39114f-90bc-4b24-b510-f1b87382603b",
        "cursor": {
          "ref": "7830d29e-30e9-4c01-bbbd-fc05394e3b56",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b7527371-cc3b-486c-b1b0-e1569d10c870"
        },
        "item": {
          "id": "2c39114f-90bc-4b24-b510-f1b87382603b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1b174866-7154-4d91-b458-19eb910598ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6e1fe8-bbba-4331-ae8b-658fdd385bfc",
        "cursor": {
          "ref": "9e06001a-d13e-4dbb-a6b2-d431617d5c7e",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5e740cfe-ecb3-44d2-a114-03e9c4fa488a"
        },
        "item": {
          "id": "9f6e1fe8-bbba-4331-ae8b-658fdd385bfc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8a4915ec-0fd1-44c4-9d68-440cefe556d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d54ebe-d219-4e1a-aa9f-ca755def9ffd",
        "cursor": {
          "ref": "efdc9bbd-07a0-4c50-a521-02fdacdc095e",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5de41674-1ce4-46b3-9bff-aea148040e86"
        },
        "item": {
          "id": "48d54ebe-d219-4e1a-aa9f-ca755def9ffd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e1a83cc5-398f-4a5b-8ce2-df1a733fcfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b3729-46e1-4661-8cde-255e304321b8",
        "cursor": {
          "ref": "e6c8e596-ec7a-46cc-bab4-72406aa0e7f5",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "37e12130-42df-448b-af19-b49ea9d6285c"
        },
        "item": {
          "id": "128b3729-46e1-4661-8cde-255e304321b8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e2450e22-7300-43c1-abad-6719a6e9ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bd9dce-8ee5-4d3c-8f02-3398d5b95877",
        "cursor": {
          "ref": "412866e8-91ea-4dd2-96c8-1d5a1e8153aa",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5413d74c-0130-4705-ad65-fe8826ff83b3"
        },
        "item": {
          "id": "68bd9dce-8ee5-4d3c-8f02-3398d5b95877",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bc77b6c6-347f-49a7-9381-69dbf2c6f469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb4abad-1b6c-412b-ab32-c8521e6d11b1",
        "cursor": {
          "ref": "314c767f-87f2-48f4-b659-5095857fac16",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d13954a9-60eb-450f-9a27-33250ff52b5f"
        },
        "item": {
          "id": "1cb4abad-1b6c-412b-ab32-c8521e6d11b1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "69d9d967-57e8-4a93-a475-5822b7e5d06e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 462,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5ed19a-0f2d-4af8-b50d-8c4eb1ef15e3",
        "cursor": {
          "ref": "1425cc57-7b2f-4007-bb83-b2bff8a475aa",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "78ec3b96-7ece-4226-84ff-59d51cadc4b7"
        },
        "item": {
          "id": "8f5ed19a-0f2d-4af8-b50d-8c4eb1ef15e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "530b9293-ed19-4f35-852d-4df87f38ab58",
          "status": "Created",
          "code": 201,
          "responseTime": 1947,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "e98cf4cc-842a-4770-8ecc-27e40b97710b",
        "cursor": {
          "ref": "96ad8809-ead4-40a6-8131-13006d77115c",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bf3dde1c-2f3c-4752-a9bc-2dbeec8473e6"
        },
        "item": {
          "id": "e98cf4cc-842a-4770-8ecc-27e40b97710b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "e9b29c49-61e4-4b7f-a0b9-4b69e3944539",
          "status": "Created",
          "code": 201,
          "responseTime": 1986,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "e729c8fc-91f1-4ddf-b754-209da55f5d5e",
        "cursor": {
          "ref": "f99e3679-1bf4-4180-8d8c-19afc2b2ef31",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b4dc245c-32ed-48ad-844d-c246f069a36b"
        },
        "item": {
          "id": "e729c8fc-91f1-4ddf-b754-209da55f5d5e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0dc21b72-21e0-4eaf-9da1-66f366e66920",
          "status": "Created",
          "code": 201,
          "responseTime": 1914,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f7357a84-5a0c-44d8-9bc9-8933c6bdb615",
        "cursor": {
          "ref": "816fc9e8-2553-450c-ad41-a725b214e619",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8d5f051a-f35f-4af1-ba90-c2124d331d32"
        },
        "item": {
          "id": "f7357a84-5a0c-44d8-9bc9-8933c6bdb615",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a73f9edb-61f1-49e6-8f41-9cba1dc73784",
          "status": "Created",
          "code": 201,
          "responseTime": 2056,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1ab73f69-b821-46dd-8703-e53bcb0ad2db",
        "cursor": {
          "ref": "df2cd99c-6bc8-4f18-abe2-483d7926794a",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0d8710f6-3db9-444d-9853-1dbb337dc3af"
        },
        "item": {
          "id": "1ab73f69-b821-46dd-8703-e53bcb0ad2db",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97febc17-fd61-4569-8845-ea5458812f33",
          "status": "Created",
          "code": 201,
          "responseTime": 2014,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "486fdeb1-c084-430d-904e-fd9158a6d5ea",
        "cursor": {
          "ref": "e9b8542f-6d55-4e70-acc8-33dd7f647949",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "993291d0-440a-41ba-953c-a9b931ee6300"
        },
        "item": {
          "id": "486fdeb1-c084-430d-904e-fd9158a6d5ea",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "15e571fd-ff30-4954-a20c-41571c159dd1",
          "status": "Created",
          "code": 201,
          "responseTime": 6684,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "23fc5b90-9b25-46ec-8968-b3d1637e4f2e",
        "cursor": {
          "ref": "be547993-aa64-45fa-86e3-736b009d1987",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5123902b-9058-4f66-9be3-f21d59153f0c"
        },
        "item": {
          "id": "23fc5b90-9b25-46ec-8968-b3d1637e4f2e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "049c9ff8-e158-4389-b738-23ce31e97c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1251,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fc5b90-9b25-46ec-8968-b3d1637e4f2e",
        "cursor": {
          "ref": "be547993-aa64-45fa-86e3-736b009d1987",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5123902b-9058-4f66-9be3-f21d59153f0c"
        },
        "item": {
          "id": "23fc5b90-9b25-46ec-8968-b3d1637e4f2e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "049c9ff8-e158-4389-b738-23ce31e97c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1251,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7c4ea9-9bc5-416e-8c3d-e4892b3e9354",
        "cursor": {
          "ref": "2dbc3153-8edf-4a8a-b657-0a3c89e38a43",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ec35ec80-f691-4d3f-ba17-1d586c01ddbb"
        },
        "item": {
          "id": "cc7c4ea9-9bc5-416e-8c3d-e4892b3e9354",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbd67d75-1b1e-46b9-88e3-5c6ae44bdec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c54ddd-6d9b-4ae2-9fbe-2be280520e14",
        "cursor": {
          "ref": "5f8cd686-3888-43a6-8a24-7ff661a9b409",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed190584-1d8c-4925-a8f1-2e83f2c11b6b"
        },
        "item": {
          "id": "56c54ddd-6d9b-4ae2-9fbe-2be280520e14",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4de50f7d-ca0c-44c3-9953-d03ae67904c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b993da7-b878-4e30-b128-b084e2d17672",
        "cursor": {
          "ref": "75394080-fe9d-4439-a343-d2b44ba4cc31",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bee7eb8d-ca4f-40f8-91a5-026f8cab743f"
        },
        "item": {
          "id": "1b993da7-b878-4e30-b128-b084e2d17672",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3cb72eb-b471-4de2-8490-f0309cc3aa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1553,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0459e18a-2b87-4760-96c6-9820767c301d",
        "cursor": {
          "ref": "801fea56-848a-4fd7-9ad8-4633d0005287",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dfee0126-3e9b-4831-bbf5-525a6385febd"
        },
        "item": {
          "id": "0459e18a-2b87-4760-96c6-9820767c301d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f06d5a02-d401-41e9-8a61-ee80137ea975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341380f4-fe8d-491b-9db7-59faf575757e",
        "cursor": {
          "ref": "7361af20-3c26-4ab0-9e76-6c393351e14f",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "00a85802-e9d5-4dad-ad34-45743cda3817"
        },
        "item": {
          "id": "341380f4-fe8d-491b-9db7-59faf575757e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bbfcdb5a-3e93-4e8b-ba97-1d5cd74670eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141ae1eb-94f9-42e2-a6e8-71a9c49da62d",
        "cursor": {
          "ref": "71ef1945-706b-43e4-80a3-01f3a0710f79",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "641227e2-8523-4bce-be39-a1c7d9934193"
        },
        "item": {
          "id": "141ae1eb-94f9-42e2-a6e8-71a9c49da62d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c6b9274-f312-43a4-b1ae-20d4cf9ae089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e74ae15-89c3-490b-bc4e-00baf553d2c6",
        "cursor": {
          "ref": "9075e50e-ed87-4e4e-a419-4d0730ecbb99",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c7a707ba-61b4-493f-b5d3-2b04daa495a6"
        },
        "item": {
          "id": "1e74ae15-89c3-490b-bc4e-00baf553d2c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c149288b-42f5-4953-ba00-b2e1eed60a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1205,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481d4247-3ff7-4dd3-96d3-5ad7c8ec6106",
        "cursor": {
          "ref": "dbd33c08-471c-4333-afa8-772b8093d346",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8136176f-9dee-4397-876f-beec5af4a171"
        },
        "item": {
          "id": "481d4247-3ff7-4dd3-96d3-5ad7c8ec6106",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f8870c1-e7fe-4343-9b48-d32953ab928a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1266987-14c4-4502-a326-7257d0ecadab",
        "cursor": {
          "ref": "00827499-2165-4cdb-a8b8-13f4736f5c32",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87706e37-5f83-4f4d-a161-f7adcf4eb6f7"
        },
        "item": {
          "id": "d1266987-14c4-4502-a326-7257d0ecadab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c08e49cb-a15b-4a2b-a595-cc4444895884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc277f2-6257-4478-b174-8ea33533f24d",
        "cursor": {
          "ref": "03dde265-d3b2-47ff-9b47-eb726d1deca2",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cfecd492-3e03-4840-b308-54b33b9ea8bb"
        },
        "item": {
          "id": "edc277f2-6257-4478-b174-8ea33533f24d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5a716168-fa04-4595-bcf1-5e4e719d483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a614ce72-7ad2-4537-bced-e9e597d149bb",
        "cursor": {
          "ref": "1951439b-434d-4e02-9347-8df03162c52d",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f136ec85-5ed1-41f0-9980-8678a15bee4b"
        },
        "item": {
          "id": "a614ce72-7ad2-4537-bced-e9e597d149bb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4990313a-d892-4326-a634-17a2dccdc2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0a3a9e-0155-44cd-a15f-e096cd30c95c",
        "cursor": {
          "ref": "ecdcfea3-2bf3-4355-95cf-3567f622d3f3",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d3f7a3d9-6796-4d99-9b3e-b35503f66be9"
        },
        "item": {
          "id": "6b0a3a9e-0155-44cd-a15f-e096cd30c95c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "24250ef3-960c-4a44-8bab-cdb212521cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e77c74e-78a7-442d-8909-c41ac5104e72",
        "cursor": {
          "ref": "25737eac-cbd9-4344-8ca2-6fb6451867b8",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23635318-3a5a-4472-a1c6-9b018faafca3"
        },
        "item": {
          "id": "3e77c74e-78a7-442d-8909-c41ac5104e72",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "234ca587-9b7b-4296-8abf-334052345c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d2b541-9db1-41d4-ad51-9f3bb6a984f7",
        "cursor": {
          "ref": "0bfac797-cc04-49ea-b23a-0e3862eb2857",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "523dc78c-4397-46b4-ac3b-7bfa7cdf1692"
        },
        "item": {
          "id": "a7d2b541-9db1-41d4-ad51-9f3bb6a984f7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d5c26eaa-6ff5-45ea-80d9-8ab8660384eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ac2cdd-c511-4dd0-84ac-65cdc5425fc5",
        "cursor": {
          "ref": "44de9aa5-04f5-4697-a814-eb12c93ba5cc",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1a0796e2-4a35-49b7-b74e-dfc6aa43792e"
        },
        "item": {
          "id": "68ac2cdd-c511-4dd0-84ac-65cdc5425fc5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a593dca9-86d0-4a95-945b-0b52e9e14d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f02591-4f74-4e7b-bfdd-670570a56ade",
        "cursor": {
          "ref": "1608af45-094f-4e49-919b-f3445e21a6b4",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4f66fe5e-7033-45a4-9e5a-7667829e0e8a"
        },
        "item": {
          "id": "49f02591-4f74-4e7b-bfdd-670570a56ade",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83bfc042-6086-4a34-85c3-e6562f9ceaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786c60c-7b6c-49a7-85f8-e57fdb9fdc01",
        "cursor": {
          "ref": "17e147e0-45c1-476f-ab83-80e626ab580e",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9aed7cd6-f146-41b8-b6cd-a013b9ebcf4e"
        },
        "item": {
          "id": "9786c60c-7b6c-49a7-85f8-e57fdb9fdc01",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "684f8678-169d-4c0c-be2b-0c29bbf7451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916dc423-bb08-4839-9a4c-b4c6f3c9cad1",
        "cursor": {
          "ref": "fabef8e2-8fcc-4158-a696-d3bf36857f21",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97aff92e-41c4-4673-8ba7-480630537622"
        },
        "item": {
          "id": "916dc423-bb08-4839-9a4c-b4c6f3c9cad1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7de1aaa4-b773-4b92-b2b1-ab0ea7c174ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16f5689-c6e0-46ae-8679-77694bbe5d74",
        "cursor": {
          "ref": "29d8c6d8-f4fd-4200-a441-6c20a1ac1460",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "81ec3924-ffdf-41d9-b820-79e04b490188"
        },
        "item": {
          "id": "d16f5689-c6e0-46ae-8679-77694bbe5d74",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "167340dd-19d2-4f70-a2fa-64aead80e693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17e9635-1240-442f-b106-49775dafb2a3",
        "cursor": {
          "ref": "0c19b9c9-d91f-4dd5-8055-3e77f3830426",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5d6080b5-5c68-4033-8801-42ca1fb0ad05"
        },
        "item": {
          "id": "a17e9635-1240-442f-b106-49775dafb2a3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b707d69e-e3bc-4f8e-b9bb-ed1f6191b4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96126821-16f4-4013-ac82-92cc7e348200",
        "cursor": {
          "ref": "50a5d07c-952f-4f36-a5e2-c3564f094330",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "de067d82-1669-48d5-8bae-1dfd287e2f85"
        },
        "item": {
          "id": "96126821-16f4-4013-ac82-92cc7e348200",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "47b371bf-cf0a-4c59-85d8-5c149d34777b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90994775-7e1e-413e-8068-2818053445a1",
        "cursor": {
          "ref": "edbed5f1-8952-455f-ac3e-9203f0627bc6",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fce15b93-cf76-488f-b267-b729c8fa7632"
        },
        "item": {
          "id": "90994775-7e1e-413e-8068-2818053445a1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a247f848-0c2b-4a05-b637-8da2db3bc278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9637b163-b895-43d4-823c-eee2abc64e82",
        "cursor": {
          "ref": "1cee005a-68cb-4d8a-aaa2-7bcd56f8cb95",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d3524107-3dfc-4b37-9367-032907717118"
        },
        "item": {
          "id": "9637b163-b895-43d4-823c-eee2abc64e82",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b938861c-a9af-46f8-b312-a9ab26f5c3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9f39e6-ec04-4371-a19f-2799e8f72fa4",
        "cursor": {
          "ref": "2a2af6a8-6d32-4aeb-8d09-e59e0dd96e49",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7434a395-8de5-4625-94e6-8f5215ec639d"
        },
        "item": {
          "id": "cf9f39e6-ec04-4371-a19f-2799e8f72fa4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e163cf5f-0dcf-4916-941d-abdc526fec65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b36a6a-52ce-4f2c-924b-ea87e5c9f966",
        "cursor": {
          "ref": "f4139ee1-97c5-4df1-ab9e-c68b8218ed31",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "31cc0d49-7dcf-47f9-bb09-474ccff112d9"
        },
        "item": {
          "id": "35b36a6a-52ce-4f2c-924b-ea87e5c9f966",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7f9e4f81-42c5-4122-94ce-1cd7b5488716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac05b645-0681-4118-85a2-fcd895bb88ad",
        "cursor": {
          "ref": "9b44d0f2-cef4-4efb-aa34-4b36b94504f1",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c62f39a1-c03f-422e-bf6d-ca6314ac187c"
        },
        "item": {
          "id": "ac05b645-0681-4118-85a2-fcd895bb88ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99fd4600-e65f-45d0-8302-5454edddcf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa51e71-6b8f-44d5-bd3c-79e2fccbbed0",
        "cursor": {
          "ref": "f560595a-3876-417b-a8f9-d3fc115f7ac1",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7cdb1696-6f96-4dcd-a0d2-811ae9001ca6"
        },
        "item": {
          "id": "9fa51e71-6b8f-44d5-bd3c-79e2fccbbed0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49e01fa0-0292-4d27-b374-a0332e65d56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10189936-3b76-4bee-9140-a2a1a3e64dd4",
        "cursor": {
          "ref": "be27183d-4724-4328-879d-2be19d409d0f",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a97b6882-5621-4554-a7ca-fa2344efc480"
        },
        "item": {
          "id": "10189936-3b76-4bee-9140-a2a1a3e64dd4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0a7cf04d-79ba-4164-b688-e4f919e71a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6871e738-f7a7-411a-a654-42e317074894",
        "cursor": {
          "ref": "41877377-a8c0-4d67-98c3-2dd7109cf6f5",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "baf177a2-b091-444c-860b-ec9ce09e2ff8"
        },
        "item": {
          "id": "6871e738-f7a7-411a-a654-42e317074894",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e0498983-4a13-4865-bf18-f02dec3ecc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051bdec5-09ab-48b3-be4d-ba64e3fc08aa",
        "cursor": {
          "ref": "ac286a37-35dc-412d-bb8f-23a50c90b378",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "77e81bf4-6bb5-40e8-9be9-99c5e28f11a8"
        },
        "item": {
          "id": "051bdec5-09ab-48b3-be4d-ba64e3fc08aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b30de54e-89e6-4cdc-863e-1ebe65ca9475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db893d4-a407-44d7-b0f7-99683d8f377b",
        "cursor": {
          "ref": "1f928e64-5337-4333-b033-f57f5d68b50b",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46740752-aec5-4e36-a597-db88987a2e07"
        },
        "item": {
          "id": "9db893d4-a407-44d7-b0f7-99683d8f377b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3cf2edb3-7c80-4748-b684-961f715535fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4df1b-5ef2-437d-888d-0d7850dc4982",
        "cursor": {
          "ref": "6699af52-dba9-4175-b999-456ed529595f",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "942d3cf9-8ec1-4d3d-a42f-6f889391e415"
        },
        "item": {
          "id": "28e4df1b-5ef2-437d-888d-0d7850dc4982",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6cd8e6aa-a1d3-4ed6-85e3-9a9d3dd0e58f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b80744-fd5c-4cd7-bae6-e6fe95f20077",
        "cursor": {
          "ref": "1ab884fa-4b93-4d59-8fba-bfd1ba5509f9",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ae0521e-2270-43a4-8ee7-c635dd7155f3"
        },
        "item": {
          "id": "72b80744-fd5c-4cd7-bae6-e6fe95f20077",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "88fc8c31-de00-4bb1-8228-97f86a4e7014",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 464,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4421a-e492-4327-bbbf-6b852fef15f7",
        "cursor": {
          "ref": "7dcf2c7d-e29e-4b32-bd7c-71554ab79062",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b887739-04bb-4475-9dab-95e1a94522df"
        },
        "item": {
          "id": "0bf4421a-e492-4327-bbbf-6b852fef15f7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2d932e4f-7c76-450c-8567-678456880fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4421a-e492-4327-bbbf-6b852fef15f7",
        "cursor": {
          "ref": "7dcf2c7d-e29e-4b32-bd7c-71554ab79062",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b887739-04bb-4475-9dab-95e1a94522df"
        },
        "item": {
          "id": "0bf4421a-e492-4327-bbbf-6b852fef15f7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2d932e4f-7c76-450c-8567-678456880fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822c7dd-1785-4acc-901e-a9cd9b0e91ab",
        "cursor": {
          "ref": "d2d768b0-b9db-4f41-afc3-d4668d78755d",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "96518baa-9e2e-43d2-a127-ee7f825bf477"
        },
        "item": {
          "id": "7822c7dd-1785-4acc-901e-a9cd9b0e91ab",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d84e18e-488d-4f37-9014-6b3b3c327417",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 250,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "aa882917-4eef-4c93-962f-43b955f4278b",
        "cursor": {
          "ref": "29ba580a-7644-42bd-864b-6d5d216655c5",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8e7121ef-0b85-49e0-9190-39a2242e07f5"
        },
        "item": {
          "id": "aa882917-4eef-4c93-962f-43b955f4278b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89e830de-5d9c-48be-8df7-3a60065c14c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5406cfb7-d787-46df-abe8-e1e5816917e6",
        "cursor": {
          "ref": "e627ce87-9601-4a34-b328-ec32847f5148",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e4d983b-089c-4eee-beac-0887583d1853"
        },
        "item": {
          "id": "5406cfb7-d787-46df-abe8-e1e5816917e6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b1299bf7-3f7c-4c44-b536-d1d782b1c764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53850667-189d-4b8f-ac43-30d754e6b48e",
        "cursor": {
          "ref": "b5bacad9-dc42-4e29-a90f-a6ab3594eac7",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d8e130bb-578e-4417-8216-3604e15c5cd7"
        },
        "item": {
          "id": "53850667-189d-4b8f-ac43-30d754e6b48e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e8334a3-efba-4bb0-9272-5ce9f8296a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868570f7-7578-40ed-befa-5a7405201b1a",
        "cursor": {
          "ref": "fc7d974b-898b-4b8b-94e2-7d8147a8b8d0",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5c31ad2d-940d-41e2-92d4-9c6652d85a65"
        },
        "item": {
          "id": "868570f7-7578-40ed-befa-5a7405201b1a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7fe0c10e-02be-4c7b-b8be-f04c4af81757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06670e5e-ba78-4f68-b4fa-85d3a6986dc5",
        "cursor": {
          "ref": "2b9e2d95-104d-4636-8681-ffe27ef97695",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "24a85bc9-daac-4be7-9c00-f0c2a088dae7"
        },
        "item": {
          "id": "06670e5e-ba78-4f68-b4fa-85d3a6986dc5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d457f246-27f5-4022-8040-bfb51c224d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6954bedb-e7bc-4dbb-8820-e289d8f502a6",
        "cursor": {
          "ref": "0403d36b-77ae-4472-b25d-9d708f25f757",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "61457234-2fa9-48cf-ab98-134740a9f649"
        },
        "item": {
          "id": "6954bedb-e7bc-4dbb-8820-e289d8f502a6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e961e967-6b2c-40af-87c8-8989af592615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a942c-0c95-4a57-b9ac-5c58c21798ad",
        "cursor": {
          "ref": "aaa3c0db-f31f-4ccd-9a91-7ba29caddbc2",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f1778540-0c3d-46d7-81cc-216997198bfa"
        },
        "item": {
          "id": "dd8a942c-0c95-4a57-b9ac-5c58c21798ad",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "03472b39-d4f3-4595-af12-dcbba0da21ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1802ac1-c0bd-4711-b7f8-1e03a6dc2c47",
        "cursor": {
          "ref": "a73ed77c-dc2f-47e0-bea7-1e3460af3e07",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3b71049-30a9-451d-ac23-5751d44b851a"
        },
        "item": {
          "id": "e1802ac1-c0bd-4711-b7f8-1e03a6dc2c47",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "243621fc-bab9-4d68-810d-7b9e470c484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722aefd0-af8a-4f64-a568-ba770e8f489b",
        "cursor": {
          "ref": "2f855c1e-95d1-44d6-93fc-18d21fc89226",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b5425b06-909f-495a-b1e0-6bdeec6ed278"
        },
        "item": {
          "id": "722aefd0-af8a-4f64-a568-ba770e8f489b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c681baeb-7355-4205-aefd-24ddf8eb32cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e35f18-32f0-4ec0-a221-b60a1b9358c0",
        "cursor": {
          "ref": "b1250c89-1a0e-40fb-85a5-49f039f982b5",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "13fc2b23-c69a-4ad8-8641-af707071c9bf"
        },
        "item": {
          "id": "e1e35f18-32f0-4ec0-a221-b60a1b9358c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3fb5768a-4c2c-4f9d-89b6-913c376c02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bec909-b7cd-494b-97b4-76800326cda0",
        "cursor": {
          "ref": "d75bc443-40d0-4049-8f3a-5eaf39baa9e1",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ca73ecfd-af52-4bfb-b341-41e7cbc8db25"
        },
        "item": {
          "id": "d5bec909-b7cd-494b-97b4-76800326cda0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "97ec9525-9082-4fb7-9ad5-8d9297ea3687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b472644b-c4c5-496b-83a8-91e39822c9e4",
        "cursor": {
          "ref": "3b400f5d-bf30-4db5-97f5-fea0ad543f35",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b7847490-7bbe-4731-9ee9-06d5b9589971"
        },
        "item": {
          "id": "b472644b-c4c5-496b-83a8-91e39822c9e4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "46ba2ea3-fd84-458f-9441-07f394b8137d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70f0cf8-fa38-4d8c-9ea4-a017e77cc166",
        "cursor": {
          "ref": "b84d5799-312f-4c81-8ca2-3abd06526bbe",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5ebba41c-d843-4bdf-9731-01638128f8f1"
        },
        "item": {
          "id": "b70f0cf8-fa38-4d8c-9ea4-a017e77cc166",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f2593ce1-aa8f-490a-892e-7a3bfc61e5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fc4587-b359-42ae-9fac-3cfcb54459db",
        "cursor": {
          "ref": "f143601c-6628-4a9a-b018-054b69bf5f1a",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2a7a4f35-ab16-41c0-aa46-023c50866bdb"
        },
        "item": {
          "id": "f7fc4587-b359-42ae-9fac-3cfcb54459db",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fb47440a-a127-4d8c-b177-d9b66772c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247e1e65-5ec1-4755-b18f-fe2e9948ddef",
        "cursor": {
          "ref": "ae1e9dd8-7486-4179-8f10-f20528b02804",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e3d81ef-9fbb-4eff-8129-70b22d274105"
        },
        "item": {
          "id": "247e1e65-5ec1-4755-b18f-fe2e9948ddef",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5e883875-efae-48a9-a668-fcdfd2170a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e039e1c-477c-48f2-9877-0114ca81ad69",
        "cursor": {
          "ref": "78269491-77ba-4140-9c12-d055c2f52071",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "09894264-7fce-4da1-a36d-ff358d2d3324"
        },
        "item": {
          "id": "7e039e1c-477c-48f2-9877-0114ca81ad69",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3bc89a02-ec58-45df-84fd-bd8b03067428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1bb1b9-cb52-4795-9961-cc30e21b9b4d",
        "cursor": {
          "ref": "147d983a-3acd-4b99-b647-63cfe78f496e",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f01e785-786e-4cae-90d8-f8216f71c171"
        },
        "item": {
          "id": "ed1bb1b9-cb52-4795-9961-cc30e21b9b4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d2e278f6-475c-4b6f-998e-8aa79c882549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874e1d87-9105-4651-9ee5-21e43605fcc7",
        "cursor": {
          "ref": "d31f2c2a-8bb3-43d8-8e6a-c58e22799808",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "16f6d370-2191-4500-878a-597534fa6b81"
        },
        "item": {
          "id": "874e1d87-9105-4651-9ee5-21e43605fcc7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0294ffcc-7da0-45a7-b9c5-c33088cad016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91214661-e785-4a1d-b872-3b4a6b40a80b",
        "cursor": {
          "ref": "2350c65b-46c5-46f3-adbc-a72a05096a3f",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "23aba425-f232-456f-a8c0-99cbab01eb67"
        },
        "item": {
          "id": "91214661-e785-4a1d-b872-3b4a6b40a80b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45ab63fa-cfa9-44e3-ab42-400d986f78ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34941dc0-c4d3-4614-aae0-d53e1a999fec",
        "cursor": {
          "ref": "0ff4f5e6-f7ba-4c6a-8676-8d76c9cdf63e",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65fd6860-42bd-4ea8-a8aa-80b2d6740d79"
        },
        "item": {
          "id": "34941dc0-c4d3-4614-aae0-d53e1a999fec",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cd91ed67-3b1c-477e-8a2b-2f9760380e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9f0280-b373-4406-85f4-bcc614ed3732",
        "cursor": {
          "ref": "9eaf4fd9-3d48-4dbe-98af-7b6cf38344e6",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3855fee-1168-4b93-a48f-ae24a3bf9bdb"
        },
        "item": {
          "id": "6d9f0280-b373-4406-85f4-bcc614ed3732",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "46b5ff6d-2137-422a-861a-97e52a03ded7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb96b2d-f79a-41dd-b7c5-2c9d2a953ec7",
        "cursor": {
          "ref": "ddc6c64d-7cfb-4da2-a17b-6a0117040ad3",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7d3b7b44-1cbf-484e-a604-c1085907afc1"
        },
        "item": {
          "id": "afb96b2d-f79a-41dd-b7c5-2c9d2a953ec7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "912a54f3-3fb2-4de4-8472-57af6d42bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd711a1-1315-44ab-8594-7ba6a087bc3f",
        "cursor": {
          "ref": "53f54e6c-000d-46e5-824a-64004a54bc87",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7e61095-640e-4357-a100-21f45bc3d998"
        },
        "item": {
          "id": "0fd711a1-1315-44ab-8594-7ba6a087bc3f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12fb90bc-c1a2-421e-a134-61403d6f8b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280dc86f-b58c-41d9-b5df-2085ecbe28d3",
        "cursor": {
          "ref": "5b5e2bb0-0e9b-4fc8-b686-089d257fa11b",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81fd59a5-cdef-4e56-939a-cd709a13a2ce"
        },
        "item": {
          "id": "280dc86f-b58c-41d9-b5df-2085ecbe28d3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "189feea6-01c1-4b02-944e-fd5dc949b0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeac1af-d330-4bef-8f49-58d1b79bdd96",
        "cursor": {
          "ref": "bec0957b-a464-4203-a963-b330e1b8cbe4",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e5fceee8-5fbd-4da6-a307-5c760af0c1c4"
        },
        "item": {
          "id": "bdeac1af-d330-4bef-8f49-58d1b79bdd96",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f7bf3c0e-64b0-4a48-9766-9a5e1f84a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97be28e-c540-4954-9ada-a9efc12d022d",
        "cursor": {
          "ref": "c475d288-6ff1-4984-b105-74a1e0f1e651",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0207d5d8-a354-4fea-ab04-ee0572b9bd56"
        },
        "item": {
          "id": "f97be28e-c540-4954-9ada-a9efc12d022d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "886b9a22-02b9-48a3-9818-d29ac3add1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5374e0c5-71f6-4dfc-9477-9c7ba047dbc3",
        "cursor": {
          "ref": "b2d881e2-4fe5-4139-ad14-ad9a3ed00a28",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cb3a5414-79a9-446f-bfe7-2c73a1c163c5"
        },
        "item": {
          "id": "5374e0c5-71f6-4dfc-9477-9c7ba047dbc3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6ac6bcab-f14c-465d-a158-f8a55c1ca4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c32651-aadd-4982-92cf-9c2f1c16bfc9",
        "cursor": {
          "ref": "21237986-5262-49cd-986a-0409b22675be",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ead979ae-8eab-4a12-8112-639b166c37d2"
        },
        "item": {
          "id": "f4c32651-aadd-4982-92cf-9c2f1c16bfc9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9e3a4165-5886-4c4b-8026-4ba93703be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1c6e73-8556-42f2-8a18-35eb0b8de584",
        "cursor": {
          "ref": "fd945d4e-fa92-4e32-a7a5-731ed9b87ca2",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "97cdff91-e9d4-4e4f-8352-fd0c7c14fc98"
        },
        "item": {
          "id": "6d1c6e73-8556-42f2-8a18-35eb0b8de584",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "72a87042-f649-418a-9f71-d5e6ae30deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d22ba2d-d83e-42da-8ce1-c9eaa409151d",
        "cursor": {
          "ref": "6b10f7ed-b67a-4db2-8fca-f0ddc72c8fda",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bf4f59b4-74c2-40e4-a154-3d058e266d46"
        },
        "item": {
          "id": "3d22ba2d-d83e-42da-8ce1-c9eaa409151d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "89b64822-0f23-49df-a51c-d7d0d4ac795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2410d9-0cee-4e2b-bbda-bc42767bcf71",
        "cursor": {
          "ref": "fce21f3a-aaea-446d-9cbc-d4fa26d2adaa",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e0abad28-945d-4fbe-a77e-ceaa697b874a"
        },
        "item": {
          "id": "8f2410d9-0cee-4e2b-bbda-bc42767bcf71",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f1452197-afda-4dfe-a9f2-c17cb843f081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b360659c-c0b7-4da9-b9d3-947b43ceba29",
        "cursor": {
          "ref": "58f99440-1674-4b51-b9ff-321768131687",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bd15b515-1352-461c-8dcd-a1db7c418219"
        },
        "item": {
          "id": "b360659c-c0b7-4da9-b9d3-947b43ceba29",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1539d9b0-75e9-4b48-af71-b41a8f12fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0717928-41aa-49de-b620-5e005f15b337",
        "cursor": {
          "ref": "2ed75442-dd69-49b7-aaf9-0b975802f6a7",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9183b35a-eb18-42ce-ac3d-401fd3888a47"
        },
        "item": {
          "id": "b0717928-41aa-49de-b620-5e005f15b337",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a155fd9-71a4-47db-9ae7-18d778f2ad36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf96010f-fbfb-4957-a4a3-351b0a623ad8",
        "cursor": {
          "ref": "321d155a-0a8a-4603-8bc4-0505dfd374d7",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e9d4abfb-96a9-4862-b581-9dac42fb1694"
        },
        "item": {
          "id": "cf96010f-fbfb-4957-a4a3-351b0a623ad8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8bcbc9fd-34fd-492f-be93-766ca339e09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc54c749-47c3-492b-8a29-89af847d4e9d",
        "cursor": {
          "ref": "ba472f9e-db00-4776-9fef-6dbaaa1e062f",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bb23c23a-958a-4353-a875-fcd17c7d04b0"
        },
        "item": {
          "id": "cc54c749-47c3-492b-8a29-89af847d4e9d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6fd72676-a9d2-409a-b715-81946f601df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe78ef8f-10e4-4f7e-81d0-01432d2538ed",
        "cursor": {
          "ref": "94bf88ab-e2a4-44cc-bd5f-e5e891764de2",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "274d0ca3-1fa3-4def-b993-f763e20bf8f6"
        },
        "item": {
          "id": "fe78ef8f-10e4-4f7e-81d0-01432d2538ed",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "229857fe-e1b3-4fa2-b4a5-04523bd26b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5155a285-0c90-444c-86bd-8fe197a230b5",
        "cursor": {
          "ref": "f8b96d56-42ca-463b-a254-97036870a913",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "65dc8119-6da3-4f33-a44b-4947e58f3e78"
        },
        "item": {
          "id": "5155a285-0c90-444c-86bd-8fe197a230b5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8aae5ad8-c415-4c85-bda1-a350056217b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3963bd2d-af7e-4afe-9577-e6ee6127df41",
        "cursor": {
          "ref": "f890ed32-ecf3-4e95-9771-643d5da6c4ae",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2dfe3346-c4e0-4697-b630-967651288087"
        },
        "item": {
          "id": "3963bd2d-af7e-4afe-9577-e6ee6127df41",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cf8cd442-cb8b-4fb4-8dcb-cb7ec218abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cd1c48-566f-4852-a8da-b7ebceaf8044",
        "cursor": {
          "ref": "cd542ea5-9da5-469a-ba35-533d014376d3",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "431bc826-e57d-46fe-ad07-fbb19c686f43"
        },
        "item": {
          "id": "d4cd1c48-566f-4852-a8da-b7ebceaf8044",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7928b729-ee38-4bad-9b0b-2e98ed419949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8071431-19d2-4c17-ac61-aa3323c29c1d",
        "cursor": {
          "ref": "bc831ba2-e9bb-41d6-87a5-4e421619e038",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d01443b9-d0a2-410f-b63f-749c3518e8b5"
        },
        "item": {
          "id": "b8071431-19d2-4c17-ac61-aa3323c29c1d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8d258727-44ae-4eb4-95bb-968a51c47f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36f91c4-6061-4b55-939f-a3cbd918d5c5",
        "cursor": {
          "ref": "3322f4fd-b0de-469f-ae04-827dc1fd62f7",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "506bf6a5-181e-411d-8ceb-53f6496eaf6a"
        },
        "item": {
          "id": "b36f91c4-6061-4b55-939f-a3cbd918d5c5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5708cfd8-fb69-463e-b238-376cf2c2ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745e0521-d5d2-4af9-8a1b-f820f66e76df",
        "cursor": {
          "ref": "3c7ce62b-dd0a-4a44-abce-12c51a7348a2",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e4f17a79-e7c1-4234-89a1-4f52414c7ce2"
        },
        "item": {
          "id": "745e0521-d5d2-4af9-8a1b-f820f66e76df",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4bc2f84-d314-47c7-9c30-1ef0853e22aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a7e191-95e3-4c67-a630-7b72bf6434db",
        "cursor": {
          "ref": "86e34af1-f32f-48f9-a5bd-19d8d6b1083a",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4e02d6aa-0e42-40a2-917c-55c55ad856aa"
        },
        "item": {
          "id": "33a7e191-95e3-4c67-a630-7b72bf6434db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18ecf63a-66aa-4047-84d7-e48219d17947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2300381-6816-4053-ab20-d2e942a8af0c",
        "cursor": {
          "ref": "496893bf-691d-4781-9ead-08ddbf5c969b",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c9b2410-3d58-4d1c-8761-fd6ac8d3527e"
        },
        "item": {
          "id": "d2300381-6816-4053-ab20-d2e942a8af0c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "32418f7f-2bdc-44e1-82bc-61bde3544948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db73111d-c97a-46f1-b28b-0d7e2a771272",
        "cursor": {
          "ref": "1e9eea51-e75d-49c2-a87e-a182235e0c45",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ceab949-c5d5-4d19-8dbd-6582c99a1955"
        },
        "item": {
          "id": "db73111d-c97a-46f1-b28b-0d7e2a771272",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f59846b-7d34-4e66-9dbe-ecb02c1df8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62d816b-91c3-46c5-a8d9-6224a037b0c5",
        "cursor": {
          "ref": "547db305-fe15-47bc-acd2-e7c240f7fa8b",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9e4bd3d9-cdbe-466c-9c6b-10fbcad52a37"
        },
        "item": {
          "id": "c62d816b-91c3-46c5-a8d9-6224a037b0c5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "20ace1d9-0c87-4443-b6e3-e8b3e8306ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002bfc60-c8a0-4cee-8eb4-ba6106c41c26",
        "cursor": {
          "ref": "6dc38db7-bd64-41ce-9dbd-c5a2c8ba06c0",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aae6be80-4ff5-4d9c-a31f-11b0cdaaf0ed"
        },
        "item": {
          "id": "002bfc60-c8a0-4cee-8eb4-ba6106c41c26",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "785f557e-8efc-46d6-8f31-65718445e2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70f82a0-a138-4ae8-a2d2-b39ad4947fdb",
        "cursor": {
          "ref": "185dae66-a02f-4601-b2f8-9589d1bbc8d0",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "51c2e44c-bed2-4702-8593-1ed6300c08c5"
        },
        "item": {
          "id": "f70f82a0-a138-4ae8-a2d2-b39ad4947fdb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ce7014a5-040a-4060-bbbf-4a630fdfee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01676a2-6dad-4dc5-bb8f-d244ba8ca9db",
        "cursor": {
          "ref": "ee63cff0-4489-4918-9073-36519b46a4c8",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "52041111-f72a-43e7-8d28-f889e4e0a1a1"
        },
        "item": {
          "id": "d01676a2-6dad-4dc5-bb8f-d244ba8ca9db",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b1c4d219-aab8-4eea-8486-d960eba02718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1fca72-fcfe-4edc-8f8f-83f2df089df5",
        "cursor": {
          "ref": "4e52573e-3395-4ce8-9855-3213652cd999",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8e617f1a-08cb-405d-8753-0674bd6c0603"
        },
        "item": {
          "id": "be1fca72-fcfe-4edc-8f8f-83f2df089df5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "49c66101-c2e3-40b3-bb62-1a598ecfc16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb04a24b-029e-4643-aea2-e5fef3293ee3",
        "cursor": {
          "ref": "9f96658c-147f-4d55-9fe8-5bcd3d416c40",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a43c1041-79a5-499f-99d4-6fc906160525"
        },
        "item": {
          "id": "eb04a24b-029e-4643-aea2-e5fef3293ee3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ef5281e-d33b-478f-a7c1-46c642200c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76bd02b-8362-4af1-b0dd-9f4a4e59ba68",
        "cursor": {
          "ref": "20a91fb0-bfa2-4f3a-b8c2-b53876e0ebcb",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1106c92c-d725-429a-a94e-a99d0b612ded"
        },
        "item": {
          "id": "d76bd02b-8362-4af1-b0dd-9f4a4e59ba68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fcf1e2a4-bfbe-4e52-8667-556b96095097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fac5ad-46d1-46eb-88c8-57fa9ba4ea08",
        "cursor": {
          "ref": "d44d672c-3e7a-4904-9057-b5d4c44ef48c",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d99ff820-4c68-47a3-80a2-e1f62f801061"
        },
        "item": {
          "id": "d4fac5ad-46d1-46eb-88c8-57fa9ba4ea08",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "57de4ffb-803e-4c95-88ec-2e8d5366f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58bbaa4-8be8-4c70-a10b-00282a053676",
        "cursor": {
          "ref": "f6c34f6d-7884-4b45-ab5d-b84a45e48588",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "50087cc4-26fd-4a89-8e4d-e33e55eb171b"
        },
        "item": {
          "id": "a58bbaa4-8be8-4c70-a10b-00282a053676",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cd4160b4-005b-4361-8005-e293b7271f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad65ac-6792-46ff-8ac5-36f47c9a96f8",
        "cursor": {
          "ref": "6b6179a5-7206-45b9-b664-205fc1b3f753",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2cbb1a92-e6dc-4600-a042-6cad89560b5c"
        },
        "item": {
          "id": "e0ad65ac-6792-46ff-8ac5-36f47c9a96f8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e00c752-bf84-49f3-99cd-f5d962ac028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b23a04a-71d2-4eed-b0be-7fecba7fd38e",
        "cursor": {
          "ref": "3720ab0f-80e5-4693-90bc-e4f60d0fd3cf",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "feebbf67-0503-48b1-b9be-edbfcd657193"
        },
        "item": {
          "id": "5b23a04a-71d2-4eed-b0be-7fecba7fd38e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "12af0a77-b1e6-4e9f-93c8-53401e4bc188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d19e87-691a-41ca-8e11-10bdff2118c5",
        "cursor": {
          "ref": "1dc59de5-e199-4863-a884-7bc201957eac",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf03fc1e-d262-4577-aaac-d4701d9b1969"
        },
        "item": {
          "id": "91d19e87-691a-41ca-8e11-10bdff2118c5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4124b22f-52d3-4e1d-b82c-67673489bf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3312901a-3c49-4d35-84ad-907c8568e180",
        "cursor": {
          "ref": "dddba0aa-eed7-47bf-98ec-838e2cebb562",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a400894-a629-48c8-b933-ca9ab3be0b43"
        },
        "item": {
          "id": "3312901a-3c49-4d35-84ad-907c8568e180",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "deff5dba-7ca1-4e52-a079-6c4507759357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de7e0e9-544c-4553-b19d-04e018fba208",
        "cursor": {
          "ref": "2a26b7f5-80fa-4283-98d4-09bdffaadeba",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "98766d42-9b80-461f-b434-a276d8e0be06"
        },
        "item": {
          "id": "4de7e0e9-544c-4553-b19d-04e018fba208",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c6f749fa-90ac-492c-80c4-3088b91c766a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc0d0c4-dad8-4554-89fe-244080035628",
        "cursor": {
          "ref": "0e7c308d-c71f-45df-9d26-daed61d1260f",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c3694602-5de4-47b4-b496-b0e99326d8a7"
        },
        "item": {
          "id": "bdc0d0c4-dad8-4554-89fe-244080035628",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "38cf0f8d-674f-4c16-b719-b9056211b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42f7b74-26ef-4c95-aa08-4b83cf842ca5",
        "cursor": {
          "ref": "a6df3b7b-b476-445e-8b48-c9fd36fdac66",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1746779a-e9da-4ef2-9066-f7615efecaef"
        },
        "item": {
          "id": "c42f7b74-26ef-4c95-aa08-4b83cf842ca5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77ced599-6437-45d8-b620-007993dca0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ead055-8e1f-46ca-8e7b-9326b3ea994b",
        "cursor": {
          "ref": "bf36e4a7-c573-4e1b-b0fe-5f9d9065645f",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f7331c7-d9f5-4e45-80a8-69149adbc688"
        },
        "item": {
          "id": "30ead055-8e1f-46ca-8e7b-9326b3ea994b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "34db12cc-063c-4855-a267-32baa270b1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdccc65e-c0aa-4e26-9d73-aa64ca08e165",
        "cursor": {
          "ref": "a3bad735-9047-4f5f-8d4f-f7ca775f7520",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a153c52c-d887-4a85-8569-3b67abb1ddf4"
        },
        "item": {
          "id": "bdccc65e-c0aa-4e26-9d73-aa64ca08e165",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6b11b0bc-62c1-4c4d-ac86-24799eef28df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5217ab5e-d748-44d6-b99a-960c8919a36f",
        "cursor": {
          "ref": "2704b311-3ff7-40f2-ba55-27294dc8ab7c",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de0bb9d7-5c84-4d46-92b6-5da33c99c171"
        },
        "item": {
          "id": "5217ab5e-d748-44d6-b99a-960c8919a36f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "38567f8a-4148-4b99-a033-768d2c14c30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfff5e3a-694a-4768-a086-d20967199c92",
        "cursor": {
          "ref": "0b3b5d6b-48e5-48c4-9a22-f41f2abc2e5b",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c47f445-ee83-4302-b262-d573bf163075"
        },
        "item": {
          "id": "cfff5e3a-694a-4768-a086-d20967199c92",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c7034f36-001b-40b9-899d-23e4a229c6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598a9f09-b5d6-4eb5-ab7d-3dd52fdd26c5",
        "cursor": {
          "ref": "75e94702-5fa7-4783-9d67-0ece241f40fe",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fbaacdc2-921f-4fa6-91fe-4cd7b9f35ba3"
        },
        "item": {
          "id": "598a9f09-b5d6-4eb5-ab7d-3dd52fdd26c5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bea43c35-a26a-43bd-af09-d5bb2589655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc15ab64-d7cf-46a2-b705-7ad308a8ae51",
        "cursor": {
          "ref": "b2a2223e-6aa4-4009-b003-9fcda705cb8a",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "28ea9d38-98d8-453f-806b-d71f65568697"
        },
        "item": {
          "id": "dc15ab64-d7cf-46a2-b705-7ad308a8ae51",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c4b9f21-3146-434f-bbd9-5b133ff531b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcc671d-c2d7-4676-94a0-588a1a641b92",
        "cursor": {
          "ref": "9127972b-060e-4da3-b08a-25726e6bfacf",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ffb81078-5803-44f6-9324-ebed1fd38cc3"
        },
        "item": {
          "id": "dfcc671d-c2d7-4676-94a0-588a1a641b92",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e3db0e06-99db-48ac-8778-d5f228d04712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b003d2-08b8-481e-a3ce-cb5a92fc3ba2",
        "cursor": {
          "ref": "abc267ca-7d4c-48cf-b7b6-36afec6dd29d",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8f0e014d-df39-4aa1-aab9-ec8e61ac041a"
        },
        "item": {
          "id": "01b003d2-08b8-481e-a3ce-cb5a92fc3ba2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f7f04c24-9dd1-46b6-aad5-6ce70ce63570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9a1fd1-985b-4bd4-b3e1-4fdc67f89f76",
        "cursor": {
          "ref": "7fa17808-2b2f-4a4a-bfc3-1d78d21a75ab",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7b8a3ca4-10cf-4219-9360-7313d9d81f73"
        },
        "item": {
          "id": "2a9a1fd1-985b-4bd4-b3e1-4fdc67f89f76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c0154ec-301a-40f7-8e8a-74777c1a8490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c87cd-1fef-4082-8011-4e2254b48c61",
        "cursor": {
          "ref": "1a4e611f-98cd-4788-81d8-080d919848e6",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b0836dc8-71ca-4853-b193-dcbe05d9dd72"
        },
        "item": {
          "id": "d20c87cd-1fef-4082-8011-4e2254b48c61",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a0bdb418-bb99-4806-9835-d3a35bf279da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31950f5f-92b3-4893-8e8c-6863875df11d",
        "cursor": {
          "ref": "d7fec2d0-f0b5-4126-8359-990d2041edee",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ea68ccf6-306e-41cf-b2b0-e4bf0996820b"
        },
        "item": {
          "id": "31950f5f-92b3-4893-8e8c-6863875df11d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c5106cb-00bf-49ce-9c6a-918c6ad2e476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61d3560-0154-41c4-a60a-6db1410aa2d9",
        "cursor": {
          "ref": "58a2ac7d-49e3-46eb-9e54-6db39f328e41",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e2f2b7b9-f718-4128-b19b-178891732c9e"
        },
        "item": {
          "id": "c61d3560-0154-41c4-a60a-6db1410aa2d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0be446e-cf8c-4d24-83d6-1c12724d2e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2f1b5-71f6-4e4a-95ee-9d236f8736a6",
        "cursor": {
          "ref": "c1e8d53a-0649-4ced-b541-4d70ad039446",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6be5f480-09e4-4002-a515-64a493fbd2cf"
        },
        "item": {
          "id": "70f2f1b5-71f6-4e4a-95ee-9d236f8736a6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12b8212d-a4af-4176-871f-6704277fe9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cf5c8a-4be9-4444-ab3d-f24ce53a3c18",
        "cursor": {
          "ref": "ab314430-760a-4ebf-a5e8-b201d4eb90d3",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "26055d80-2f33-4e22-a23e-496a7ac1af95"
        },
        "item": {
          "id": "b8cf5c8a-4be9-4444-ab3d-f24ce53a3c18",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56352699-bea6-447c-9e13-6f6322d8b175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d7556a-63b1-4fcd-9dce-f6e377cbc5cd",
        "cursor": {
          "ref": "6c6b3c7c-8e5d-4cf7-ac8a-78414741239d",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "05531a53-94f2-4d53-8036-abd052b4bb47"
        },
        "item": {
          "id": "e9d7556a-63b1-4fcd-9dce-f6e377cbc5cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9d2bb615-8b9b-47a0-a128-198cde2e5789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa21f02-47b6-42fd-9527-83b2f54c9344",
        "cursor": {
          "ref": "2735d61c-a05e-45eb-9d70-40fbebb3012d",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "264157d9-ec24-400f-9d43-fd71d0cd86f6"
        },
        "item": {
          "id": "afa21f02-47b6-42fd-9527-83b2f54c9344",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8bd5cde7-6ccf-496c-a3c0-e6eccefd0b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3db4e1-fa04-4598-919e-ea88a3252ccb",
        "cursor": {
          "ref": "758da7f5-ad63-42fb-940e-40e041e4ce54",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2ab2634b-e5df-426e-9cda-076c6676956a"
        },
        "item": {
          "id": "8a3db4e1-fa04-4598-919e-ea88a3252ccb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "309f950b-f3e5-4003-a129-cf7667ef7a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11aba0-80f4-4068-96e5-b9f2cf46c97f",
        "cursor": {
          "ref": "e0b7cfcf-c70d-41f2-9212-884db4dde682",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d02661fe-88fe-41ae-8822-2e960f2fefb9"
        },
        "item": {
          "id": "9c11aba0-80f4-4068-96e5-b9f2cf46c97f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "47a74253-9b48-4ba9-bed7-930744c0aeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e76d03d-bd64-4d6b-a8b4-83e08064cfa3",
        "cursor": {
          "ref": "f56b9d2e-8c76-45f5-bc78-b6333a18f8c4",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5b888f56-8bab-4b00-8f11-213bf2eecca4"
        },
        "item": {
          "id": "9e76d03d-bd64-4d6b-a8b4-83e08064cfa3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "95aad07c-4145-487b-8984-8fe9c9742050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b749ca-f683-490b-9448-a4c840c665df",
        "cursor": {
          "ref": "10e5d632-7b04-4533-9f4e-85305f65cea6",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d952f199-f2e4-4b45-bae3-8c8215be67ee"
        },
        "item": {
          "id": "14b749ca-f683-490b-9448-a4c840c665df",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "775a9634-048d-4187-8330-1b055976ce6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0695ff-c542-4d3d-b728-8d3505b8be4a",
        "cursor": {
          "ref": "551fa9fb-f449-4deb-a886-873ce1ae23d8",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a94ec8e6-a2f4-4143-a0ff-66c33d6f7924"
        },
        "item": {
          "id": "5b0695ff-c542-4d3d-b728-8d3505b8be4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "86cb4fcc-e5d0-465c-aa6d-442357210ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3c92f2-0d96-427a-bdf6-ebfa134e7369",
        "cursor": {
          "ref": "edabe1b0-d8da-4845-b584-b29c259cbaa0",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43d9f694-a2f4-4055-82b1-766a4c9c59fa"
        },
        "item": {
          "id": "3c3c92f2-0d96-427a-bdf6-ebfa134e7369",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b891487-25f3-4909-89c7-e3384af24df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd3c9b-5f87-4b2c-9db4-7dfb61a9c650",
        "cursor": {
          "ref": "5527f902-a804-41ea-9a67-b55e5c39d007",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3a6a56d9-4eb1-453c-b589-a22557ae7686"
        },
        "item": {
          "id": "4cbd3c9b-5f87-4b2c-9db4-7dfb61a9c650",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "95deb183-416b-47cf-9b30-355342d7b18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bee747-ed05-4683-9c53-7d2b5d688006",
        "cursor": {
          "ref": "4c38b3a6-79b7-42c6-a517-658544816aa4",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8787cbc9-f6c7-4740-8f90-3a505af465df"
        },
        "item": {
          "id": "b3bee747-ed05-4683-9c53-7d2b5d688006",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "99da677b-3ae1-4be4-bcd6-bb60fb6e9d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2316b33d-3ce5-44e8-a0fe-034815b48bb3",
        "cursor": {
          "ref": "f6f1f5d9-0343-4d80-82a4-3224ca3a2c15",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "65a3b693-6268-40b8-a32e-76b024b9c68a"
        },
        "item": {
          "id": "2316b33d-3ce5-44e8-a0fe-034815b48bb3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "395128e7-ab02-4e1d-8471-b828e209f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27095ea2-3eee-4742-8a19-0d0fa052f14f",
        "cursor": {
          "ref": "cf484466-4f44-40d7-a983-aea88fda6fee",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07568532-7527-49bb-a9c6-7d8c9fca3b5a"
        },
        "item": {
          "id": "27095ea2-3eee-4742-8a19-0d0fa052f14f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e151d8ef-5c4d-4d0d-893f-c1586de2978d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9863308-b5e0-4d85-be03-b387858b17dd",
        "cursor": {
          "ref": "96fb5fce-8ffb-40c4-9449-62c3415b3a89",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b61348f3-16f7-4890-b0c4-3733b8c2d489"
        },
        "item": {
          "id": "b9863308-b5e0-4d85-be03-b387858b17dd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3dd635e4-58ff-4345-ab9e-ad5247e819dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41289b04-51a0-40d1-a5a0-a4fed7be7618",
        "cursor": {
          "ref": "c2200ee5-a6a9-419c-b956-9414ad910504",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d3e20529-d3b2-4338-a8f5-1c89abb174c6"
        },
        "item": {
          "id": "41289b04-51a0-40d1-a5a0-a4fed7be7618",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c9cd7652-e1cd-4b6e-8cc6-d192554074b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9757c2-6359-4b4e-ac67-d11673792b13",
        "cursor": {
          "ref": "277ac68b-3c2d-475d-b367-c1c3ab2d8b4a",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95ea7337-1a75-40e4-901f-c82b2b46f23a"
        },
        "item": {
          "id": "5a9757c2-6359-4b4e-ac67-d11673792b13",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "31e51e8d-7a60-476e-9ee6-19bde7189658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc79041-cc09-4f71-b4a1-2910478a47f8",
        "cursor": {
          "ref": "f3fc47e6-e787-40e6-b94e-40d94db9098c",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b5fcd18-ceca-4e8f-95af-91491d0313de"
        },
        "item": {
          "id": "5dc79041-cc09-4f71-b4a1-2910478a47f8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "27c03117-3533-418b-91db-0b603874ca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f43276-9935-47a0-b247-3237292c5a1e",
        "cursor": {
          "ref": "35b6c7f2-7d33-4afa-a6be-55e95840dd31",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67a6a683-96b0-4651-b07d-f60cb87ef7e9"
        },
        "item": {
          "id": "07f43276-9935-47a0-b247-3237292c5a1e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0c842766-44f6-4a94-88db-000933a89da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5018f2c7-ac8e-4ffc-9230-1d54ba8cfa12",
        "cursor": {
          "ref": "86319dcd-052b-40a3-9003-bf44993990c1",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "606e5176-c08e-4512-a43d-9e07ff2aaa7c"
        },
        "item": {
          "id": "5018f2c7-ac8e-4ffc-9230-1d54ba8cfa12",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9f2076e5-4dbb-4375-b87a-e0e26cab116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c35d628-8ded-4695-8828-052e14d98391",
        "cursor": {
          "ref": "4300e9fc-5c13-44b1-bbd5-478adeebe458",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ad24c762-8487-4380-aa57-94d7a6f49a2e"
        },
        "item": {
          "id": "1c35d628-8ded-4695-8828-052e14d98391",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "abbeead9-f7aa-4644-b3c9-9af8c4261bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77671ea9-11f8-4a20-952f-8ac85f8924c1",
        "cursor": {
          "ref": "b0cd6916-9e33-497f-ae74-2bf2f652a3c5",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4461732-0c39-4b29-9baf-1d0ef163366d"
        },
        "item": {
          "id": "77671ea9-11f8-4a20-952f-8ac85f8924c1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b950f045-68c3-40d5-84cb-2fee4c9fadd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2bd619-51b6-4df2-8995-b94a1bc7be20",
        "cursor": {
          "ref": "2fdbe27d-f631-47fe-8255-0ba1d8e9ca2c",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0cb79d6c-6c5b-40b7-933f-e0ff34163424"
        },
        "item": {
          "id": "1b2bd619-51b6-4df2-8995-b94a1bc7be20",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b07e4073-34c7-4a03-8490-0dc55bcf5762",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579c1ab7-bd4b-430e-a195-2f53398402f2",
        "cursor": {
          "ref": "e960ea8d-a31b-4dce-90ff-e7697af060b3",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "afcc7a0b-8e80-4a17-b368-4e81ce5b9d24"
        },
        "item": {
          "id": "579c1ab7-bd4b-430e-a195-2f53398402f2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f89fdebc-c0bd-42e3-a0b9-9dc87e675ce9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 231,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d90469e-a6f5-4caa-9999-8af9f2b6c67e",
        "cursor": {
          "ref": "32f7cea4-ec97-4d91-a00e-09e29979a1ca",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6ea09446-f2dc-4401-abff-4c6618af8770"
        },
        "item": {
          "id": "1d90469e-a6f5-4caa-9999-8af9f2b6c67e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9a71cdd5-261d-4d41-ac55-4cbf4e80a657",
          "status": "OK",
          "code": 200,
          "responseTime": 368,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a537c37d-1f8d-483f-b782-5339fce22229",
        "cursor": {
          "ref": "d4d295a4-1b1f-4076-8cc2-c4170fa845ed",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a86f40e5-eb03-4448-b918-1f975f51f1f9"
        },
        "item": {
          "id": "a537c37d-1f8d-483f-b782-5339fce22229",
          "name": "credentials_verify"
        },
        "response": {
          "id": "371781d2-c1ee-4cfc-bcc8-8d17357d1278",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "028edf33-b606-4332-a66d-ad88f88cb4d5",
        "cursor": {
          "ref": "c12b0681-63a8-4def-afe9-ab174ccb3941",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e0af486-7745-4a9f-97e6-856428b2ac09"
        },
        "item": {
          "id": "028edf33-b606-4332-a66d-ad88f88cb4d5",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "bf277a77-d1d8-4895-ba3d-14a3c7619d9a",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2693ca9f-59f5-4cd0-bd2b-a2c66ccd8696",
        "cursor": {
          "ref": "16ee998a-ac76-4150-ab9c-c27ee5398ff5",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8446839e-9345-4fac-b939-7f5d94c65ddd"
        },
        "item": {
          "id": "2693ca9f-59f5-4cd0-bd2b-a2c66ccd8696",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a9096471-71ba-40ce-8ae9-25a60c4e60fa",
          "status": "OK",
          "code": 200,
          "responseTime": 349,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
        "cursor": {
          "ref": "4284b9e3-b4f4-4488-838c-6b9fa44edf10",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47aabfec-fcd0-40b0-bb9a-287656d8f2df"
        },
        "item": {
          "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c377b15-1b6d-4b05-993f-a7de426afc75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
        "cursor": {
          "ref": "4284b9e3-b4f4-4488-838c-6b9fa44edf10",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47aabfec-fcd0-40b0-bb9a-287656d8f2df"
        },
        "item": {
          "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c377b15-1b6d-4b05-993f-a7de426afc75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
        "cursor": {
          "ref": "4284b9e3-b4f4-4488-838c-6b9fa44edf10",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47aabfec-fcd0-40b0-bb9a-287656d8f2df"
        },
        "item": {
          "id": "40382eae-7a9a-4c36-b355-e518115c0bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c377b15-1b6d-4b05-993f-a7de426afc75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c30b91-2ee8-43ce-9919-15cdbe9b82f2",
        "cursor": {
          "ref": "c800224d-6820-4310-bc5c-b10dc0660f15",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "462d0528-5e60-4504-a7bd-8b116f0be0e1"
        },
        "item": {
          "id": "77c30b91-2ee8-43ce-9919-15cdbe9b82f2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "52e41265-cb74-4de3-9c70-ffd488165a7d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 236,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0faec4-2a1f-415d-8c99-488397543b88",
        "cursor": {
          "ref": "8408102c-b874-4e44-bb84-d3e01eb4db51",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "32b40a43-2e59-4c92-9309-563076b268eb"
        },
        "item": {
          "id": "fc0faec4-2a1f-415d-8c99-488397543b88",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b8b22c1e-4101-4353-a060-4c84ccfaa136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0faec4-2a1f-415d-8c99-488397543b88",
        "cursor": {
          "ref": "8408102c-b874-4e44-bb84-d3e01eb4db51",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "32b40a43-2e59-4c92-9309-563076b268eb"
        },
        "item": {
          "id": "fc0faec4-2a1f-415d-8c99-488397543b88",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b8b22c1e-4101-4353-a060-4c84ccfaa136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd06f7-6d2d-4de2-8a24-4b0b01be34a7",
        "cursor": {
          "ref": "16de77c0-0538-4104-8e53-a49bc539fe1f",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6655daa7-21c5-46bf-ac07-5931bc13c5aa"
        },
        "item": {
          "id": "fecd06f7-6d2d-4de2-8a24-4b0b01be34a7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ec3aa09a-5ea2-48fe-8b72-2ad0fdc5ddfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 477,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4618bb-c2fc-4524-b976-d18cc59b2de4",
        "cursor": {
          "ref": "ebe89871-408c-41c9-ab12-4be032fd5b33",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "94554f08-e361-41d0-a448-1f9f780765de"
        },
        "item": {
          "id": "ae4618bb-c2fc-4524-b976-d18cc59b2de4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fabb51e3-eb2d-4525-b043-880825a03df3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4618bb-c2fc-4524-b976-d18cc59b2de4",
        "cursor": {
          "ref": "ebe89871-408c-41c9-ab12-4be032fd5b33",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "94554f08-e361-41d0-a448-1f9f780765de"
        },
        "item": {
          "id": "ae4618bb-c2fc-4524-b976-d18cc59b2de4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fabb51e3-eb2d-4525-b043-880825a03df3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b82b29d-75f7-4608-97fb-0a2fc1a5f8cf",
        "cursor": {
          "ref": "70e9e7e4-c403-4aeb-bc0d-6221132615f4",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8d099dce-4f5b-4cd0-be0b-6576cdaa90da"
        },
        "item": {
          "id": "6b82b29d-75f7-4608-97fb-0a2fc1a5f8cf",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "57778ed3-4904-4e30-ae1e-87343abe5088",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}