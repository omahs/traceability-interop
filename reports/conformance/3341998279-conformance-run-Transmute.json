{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40dbbae3-eb62-4b1f-903f-740a38939f7a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "95dbbe2a-3c83-4933-b285-aa026d8dc8a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0974eec2-1f13-42a1-afe2-9b06e3c6f56a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "131c86e9-d993-4910-9960-de95caf24c30"
                }
              }
            ]
          },
          {
            "id": "ff114759-825e-47ba-b97d-0685a86e6dbb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae47ef3c-dc8b-4b34-86b5-a1e1097af3a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2a7d58d-6dec-46b6-8989-0fd8b120c34e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3f51ce0-c3e4-413d-b346-2174e13bd003",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c83bccc-79f0-4dfd-9539-bed057fbc850",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f540ede7-af81-4e1b-82c2-38e10d36d695",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cafd2aa9-bf0e-4b44-80e9-45d9e335e2b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90880b47-5968-431f-aa51-7735dfdc2e52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d89621a9-bb95-45f3-848e-6dc625a02f89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87b1ca9f-93af-45e7-8266-8138b7b0435c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "767e176c-ef65-4482-be06-730772602360",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44d3c75f-a707-4422-b604-1968e3372ac1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44a1d07b-da30-4fc9-9d45-7a16d8cd221d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e71c24f5-839c-4a1c-9836-e5502f671436"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2135d024-799d-47c6-a92b-ff396a44dbcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "202e0590-e418-4dd0-9f20-fb3f8c457496"
            }
          }
        ]
      },
      {
        "id": "8837fa46-e1cf-4036-850f-ea00e5720094",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4146efd5-61a1-4fc9-9965-b1cfcee86331",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a764fb0-03d1-4739-9bb8-6b17e374a783",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da083ad9-57c3-4482-bc6a-a1054704eb44",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff09e31-f661-4a96-b6d5-d61bb539d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6070ae2-0924-48fa-90e9-47d856113637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040b652-fb25-4858-b41e-923bf517ccba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df7f5ff-6a5f-4e17-8082-447689e8ca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bd1cd66-cad7-4888-a2d3-b2ee73fb5848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492bb4fa-97a7-41f3-b325-dfde064b69ab",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5350dd-6f8d-48d7-8484-c44cd08a1ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3205e045-5aa4-4c57-aaee-3b40d715be88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a43b60b-1248-413f-9928-44f9591dadd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6287e2ea-6a70-4d16-a460-4b668091c2fa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebab87c-f7eb-4cb5-871e-b372fab5e6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc0dccb6-f7dc-4d61-aba5-f2ad7710e229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e231ba41-0b03-4922-a0f7-739dc2712879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec77897-7084-450e-a6d8-bc5ac7b45854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc59e7ed-c30d-4535-a997-cf6896d7e3ac",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b83193f-eade-41ca-9b33-73a55f52e224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a113030b-4857-4860-af8e-1b3ae6b4dbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b112f-bcc8-4719-a859-629c8b08f4af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "258ed6e0-503d-42cc-9ab5-8a45a73db342"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b7fea62-70e0-4e85-8eed-641398d744b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5409e075-d10f-44ea-8281-cc6d9347dbbc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14e75adf-661f-4458-87d2-4a7f6d6e242a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "25091edb-7b20-4020-a8b8-9213f3ddc8e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0fc626-c6df-48a7-81b6-52df4907c8bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "18ae5df3-1da0-41e3-b818-2a197ac1617e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ec0d28-2f3a-4d35-afa4-6ef328ac8a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0f2c9b3-5b7e-47f7-aaff-1ca34db22710"
            }
          }
        ]
      },
      {
        "id": "075f94a0-a42c-4a1e-9252-e195e059c3e9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fffa673c-4ec0-484e-ab72-e028ee8b2c66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bbdb9ab-bbc1-4393-8a0e-df850fbe0c3c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1d5a2f05-fe7a-4817-a687-1b50c94c4429",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9318dfd8-0861-483d-8d65-da574c4a5917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e83ddb8-6f08-4f82-a2aa-b274e9f57eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959b35bf-3001-428b-8aba-115b4f41aaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa7b24db-6f2d-45f1-b51a-ed82909ec90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc9db6f-8094-4dc2-bd1f-ac08dd0023b5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b7d990-981d-4a6d-9ccb-726e061762d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa618c9-6ed1-48ee-8d47-b0ecabf99548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ffd491-75a8-4d16-8aed-09c3a7691e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58386851-c8c9-4637-be94-8ac6f7103c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3c9aae-5c5d-47c0-b142-6e8227260fb5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22796832-a3f4-4962-bbfd-244914eabcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69823a79-83bc-4abc-8637-375966359016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a55e81a-c8b1-44d6-99e2-af1ab8fbc7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dfbbeb-2b62-4fd0-bd2a-59158267f41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49bcf99-e5b5-45a9-ab29-b8e69e54ac59",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b418ce5d-2918-4eb1-8211-faa7077c019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e57132d-286f-4ba8-958e-200e86a68aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d5d4aa-f601-45c1-aa55-f285f1477b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d11a8f9f-9d2d-4bd7-832f-11733c16688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf05ed6-78fb-4764-9c8a-308ed9734d8d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdca5c4-ada5-4bb6-a160-851301b219f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e0f23e-9df2-4fba-828d-bd14aaa6ae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997d8e1f-78b4-4e8f-bae8-aeed531c46d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0acb866f-e63b-425b-aeda-bdcc7e6a36c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d260e6-4ab2-472c-97a1-e906acab66f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5883ce05-7b11-46b1-b14a-a75281d9bf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab1bac-ab0a-4a03-a87c-cc104bf316e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f06772-985f-4ab9-a07f-a9167c96b213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f373be7-8c55-41e9-b9c5-e4be5fc557c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77661aa8-6ce0-4c9f-b994-6223199b0796",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a89a73-1481-4944-9da2-3b65a7668aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889d337b-901f-489b-ad24-6259610b46a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af64ef0-c860-4d21-a825-7eb57a7ebc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e2d14a4-e8bc-415c-9ff4-48af4ca0d6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e550622a-9ba9-418f-9b50-1b62aeeed1dd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf283b9-d5b8-4964-b145-68c3df5750f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e85b1e8-f783-4592-a0ad-242be4f59eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a582c667-26f2-4d2f-896d-576eb425a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74c461c8-a42c-4083-ae62-3f951c36c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef6ca83-b4c3-4904-95f4-9edd30c949a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83210abb-ad84-40fc-8bd9-c088311d077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9019eff6-2a33-4376-bb01-dd76a9ae9e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5897725-6f75-43ab-b50c-4d9d1b13019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eab787e7-1d2b-49d2-8235-98ad97b2a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2234b860-f85c-43eb-ab0f-ee10037767d4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416344b2-70f2-4235-8553-fb6fdededfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd1607e-7854-4427-9d9d-b7252ab5cf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39365e8a-f6bc-4921-9f28-0a3d04c19319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4943b5-5e46-4b97-a457-f88f21177c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe7fcf3-b501-4af3-a0bc-9dc01cd3923e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e4b4e4-de7b-4764-9c62-420727082b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d771a6-8415-4681-9900-d99447a05fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676a2b9e-5d62-4791-88af-757eb077dd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a543476-892a-453d-8e0d-a7b7e3739282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594b549a-9378-4493-ac4b-5cb436f406e0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1d595-5fa4-461c-b85b-e62f65e0d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dc1f9a-448a-483c-84c5-785cc0273cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7395ca-e76a-4935-8ea6-ad1016a8b055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2472b244-a0b9-4a18-8745-df1d1e6031f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8883797-5e01-46a5-a63f-eb5aab890966",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c22cf9a-e1e6-44e4-a36a-530d23d3f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1886284e-dec8-4416-b6c9-3b3af09a6702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d4fd89-135a-4547-ba0a-89df1d311096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ff197b1-6543-48d3-b610-5c30b1a48dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a64c13b-ab22-447c-bc7b-32a03fcbd38e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a408493-5063-445d-bbcc-f579663a9b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa5ede-0195-41a4-bd02-48f5688e77d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00037c7d-790b-4e76-8776-17939be45e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143123f6-1809-4ebf-8ba7-acb6548667c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5610c3e-fbec-4494-9d99-53ece7385fd6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919aca7c-3e01-4f3f-a4f8-2b7c3a1791f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36c734b-4853-4a85-bfa8-0f4b89ec9769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994be592-8255-4faf-b336-7898666ded58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc373b00-290b-4e25-8f8e-a35cb36c2fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249e132f-58dc-4143-898b-8e1400ea564e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf23535-0b3e-42c1-beba-05607a8f2131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfca49c-e94f-4bb3-ba83-4542f3d985e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7152ea80-0281-4870-8862-8983f6bfef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f1a5fe5-4595-4d0d-8341-29bd5955f964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd73acf-b120-4ac7-84e6-2eb10820f6ef",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef2686-ef03-4019-9cec-63ef6e45e9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d402f287-c7e8-4c3c-9ce4-f37986b55445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f0ed8a-dd36-4e4b-9644-4e81e9c586a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ec2b011-31ef-435e-9d81-82364a7070bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b058c1f-3eda-4ab4-8257-84dd4e651f6c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba6a41-704f-490e-aacb-56ac3a061076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5e4652-1480-4a77-8e57-d453b23c90b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6da6aa-6554-4885-aa5b-5f91a4e53df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "545e3976-c8ef-4f9f-b77a-78767abb0c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c952ac57-87a9-44f2-a75c-a599d397a3eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b6c26-7328-44b2-b8fe-1d2fd3721e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c203dc4-a82f-4f25-a424-621208ee69c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bf2819-4816-4d2b-99a0-53432bf0a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a88a3a5-e4a4-462c-9cf9-22b960a062f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bdf869-8b5b-42da-a9e4-bebb84c1d6dc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62f27c3-6ab1-408b-8773-63c0301df9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5a6ef9-e80b-459a-8d38-dfb0086c3ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339666fb-dfa3-40dc-9499-bda58e8b8fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bff59b-8abd-44a6-bbda-3f74e64dcb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8e86c9-0bc1-4f63-b38e-e0c3e066dea7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee021ce-11d9-45a6-a232-f966ecc8be77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9feea48-1ef9-4695-9316-5c0937d6a758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d6cd39-a93c-4b0f-a357-507146011f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11d0ad2e-132c-4af6-a8b2-bb3c3c15b171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a11e50-c2ef-46fe-9fae-c2c6628a71b0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a0ead9-5183-46ff-833c-a98de4b35e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bd7bf4-a4fa-418b-9b1f-5f1d8010e69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2645b5-f293-4983-aad5-0b55f4ba161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef5a4f2-cf9b-43dd-a7fc-35f6052b281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f81337-56e4-4894-a2ba-a317eb295e5e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8970e287-9532-4468-a313-0686c43fd84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07a3fc3-3544-4d34-b963-fac281e37318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bddbb75-044a-4aa6-a99c-53d52525f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88c69a4f-8c42-4031-93f1-59c69d47dd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4462a1-465f-470e-ae86-afdcf75844a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c91fdf8-6e5b-424a-a53c-e4cc7f9b044b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600b789f-233c-4729-a2b6-61e1128b6ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1572ad20-cd64-477f-a39d-9982dbb1a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9153e9c3-0c8b-449e-abf1-55383cc2b74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e40d5b8-9b2b-4433-85cc-f7104c85b56d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79855dd-4c56-4f03-afdb-c0adbbb11acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4366f5e1-a866-438f-96f1-c7f7d2948c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfe006-52d5-4190-bb9c-ef3b7b34c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a28347e-f600-4aad-a383-3a719146d452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f01590-11fc-4163-b012-ef0ddae12baa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453c7467-0d45-4df4-b250-e9344c9f2655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50818b4-f306-4cc1-a6a6-1142ea4d8f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ab0622-c51a-4a6d-82c8-0f748463a134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4303d7a-1d98-4728-a7e1-3562e33a7256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13256c79-3651-4717-b76e-a348a00859de",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4927547a-5768-4e81-b18c-698d1302fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a77b82c-4bd2-442c-a795-d835612b8946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28b3551-182a-46f0-9750-2fbba838b34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec345a8-6d3e-4261-bcd2-f4e4478e92c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd31253-d744-4215-aad4-5a5fa03ecfd5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d76e10-cfb1-4590-81af-d5325d13a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c61d8f-8704-4448-ba34-d6fa573bf47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa93f89a-c2b4-406e-8481-9d9621f56220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "980bed96-aab8-4d67-8d41-a5eac39b3b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df91dfb-3cde-4d3c-944f-f89fa0f02390",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c6f0f5-d9a5-44dc-a2ba-2ea92364e191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1e5b84-19f3-4823-aa89-dbd6881b14a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b84b08e-426a-4835-9c9f-aea4a10d9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47a6a8f-c638-4bbc-8fea-7913d263751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e0c4ea-27d5-41e8-baf9-8aba2d726bd7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eccce13-9fef-4c51-b889-6887d999e127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff29da2c-8129-4065-a8a2-192eea8e4b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec1bfdc-997b-4ddc-9fc1-27e01aca0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b114a4b4-0854-44fc-b629-08bd0c0d191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdbae15-66dd-4acb-8247-6bd2d4e7ce9b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827ad0e4-675f-4c50-8594-25a3e6904e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b5e74f-e503-4c96-97ea-b56d267391d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6342251-d6ae-466d-be57-36c77daba080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4af62f-8cc5-47a4-ba3e-9730b5161d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeff4842-6a44-4426-8466-2f35243b209b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac08f9d6-6285-4405-8a37-e343ebc610df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2118db4c-fee9-4543-9454-ae7167e6b175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373e0ece-677a-4d41-8122-a430c42be9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c83a54e1-f8be-47e0-8468-7793933b0d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44281311-9f8c-456c-aa93-5094d67610c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c1fad-a15a-4d9f-90af-87dea8ae5d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb369e8-84a6-470c-9aa8-ef55e9c48e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a567fb1-0b70-4dbd-a520-9c7a7b1253db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37a1356-f5fe-4626-bf5e-e51149bcd70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed26561-1e27-4cd2-87d8-d51cc6d30be4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8611a2c-cbb1-4b9f-b155-60de8417e298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d62c56b-8f02-459e-8294-03caad9720dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecbe8e1-b802-4fc1-a97e-4024c8c611c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1e141b-7b8f-4b2a-bd65-0bf8e9d0ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5394257-d16c-4cab-8437-f321c8a13858",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab843f7-f7ac-46d6-9de3-f0b6c7b92748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004c6a9e-39c4-48d9-acdc-b2988262303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f8b60-53d3-494f-aa72-610dc70c112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c94104d-62cd-4712-877d-f25bd8b11e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90037cda-b7d4-4ba5-b520-c7fe5c284b98",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622b37b8-59c6-436c-9711-6f1dce93d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63943e20-c4ee-4363-b84b-f72b70649d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c30981-ee40-4d48-9333-5ca03e3ff19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8fbf88-a1ec-4dff-b33b-7108aec6cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e299da-c8a9-45ed-a064-ccc8857085f4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3ddc67-6562-4612-a9d1-005ce2e6d18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823ea9fc-1857-40c5-8015-ac963cbe1bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626b10b7-0b6b-4e38-8ff7-344870b39e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e51254-6539-47b2-9236-f6d2dcf22f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fe8428-1382-4273-9027-c5fc25653555",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33fd1ee-0521-400d-884d-a9654697cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe9bbf2-09b2-40c7-95f3-ed9b436c800d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff34585-ba37-4cec-9f1b-29673ba31801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf175b6-cee7-469e-b1ed-1007c29da7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3b173-2710-4771-9a41-0f89f036f000",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7de2f5e-1f2b-4245-8131-577c1928a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcabd8fb-8b6a-4bb3-b141-6f0917ccec6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521e4511-f2fd-4974-9c26-c54d86a48b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cae77b0-b839-45a0-802d-b177ab574ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd0d2f-1212-4449-92d8-8dacb0e0196b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4531a-f39d-4698-8439-0649de055808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3709a1e2-2135-4e89-a7c6-6075e36d3214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c9ee57-c6d5-489b-938e-ed8ad99af0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ce8c20-edee-4dc3-8368-1cbddb8eb7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d7dc6c-11c2-41b6-b85b-3ba6e859c21b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43893fe8-a7fe-4b09-bb4b-69b4b6581175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bfb2e-97ca-41e8-ade2-5be12d8d4094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca04547-3a2a-4153-acc1-3f2f3e7faa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41d0bc6-aa62-4465-83f1-060b71da9874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f9c195-7573-46fb-85aa-f78e5b3d9886",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de36974-1dee-41da-82b6-4aeb1df16d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1744986-1504-476a-8e23-3390949ebedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20224b5f-1772-4856-b107-a2d8aca35f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "99d61c28-560f-4dbe-a876-19c5385bb6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a677eb-e286-4517-b377-69da2068f51d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3472e8e-2fa8-47fb-afb9-35dd0d0164a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41942677-ef56-4aa3-9184-b313b77f8e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e03f1ab-0c85-4b83-9111-e1fd9f16843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19fcf20-a5e9-47b5-b549-09cb8e3fb0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1406855-4c07-4441-a0df-4440ce56d845",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01492650-0cd9-4c90-bf77-e57e53ccfb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a7738e-71b3-4462-bf75-4a72c7fc7331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151917f7-cf84-40ea-8f68-d9b69ab4dc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81a86b7-6d57-4db7-957e-a510cfab8076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23003881-6b80-41b8-8b8f-af600d25aed9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d1337c-5754-4913-9ecb-3be1db91bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cc22f7-0c83-4b42-9748-ffdb19c6f246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b65db1-b7aa-44c7-ae82-1a0056b28873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0259e14a-cc25-4025-a72d-b674e30ae2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69366f52-74e7-438f-aea9-876e2beff774",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b04392-6364-4fd1-81fa-1cc23e699855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf37ef5-aa80-41f3-b153-160850d7e89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff1c10e-e4a7-4905-b757-3a4224f5d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bba0dd5-d24d-4fed-ad29-8f0679bd8528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69658788-0122-47fb-a99b-2132732abeb9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021064e8-7729-4a70-a943-aebdfbb0c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a135bb5c-0b54-481b-8cd8-23318f702a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5b0e7d-9564-4f08-9fd2-75db5d86a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1260e3e0-f7bd-4050-913c-e210ac206b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b40f59-0bf7-4a02-980c-14b8f170b977",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32a37c5-8e6e-420f-abbb-a4f59ad6495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7059a73a-30d8-4877-99ef-e5fd19147780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649f5c0e-46c2-4a5c-9233-2e7f434dea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7ec4ea-a0ff-4bca-9267-5d9d27ca9b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc6695-2b62-4669-a443-8ec1e48f788a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980ee6a9-eb47-440f-8387-989f20b58585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d018a436-118d-4ceb-85e1-98664fd084a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498863ed-3321-4de5-9f13-95c607def4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e394dc-16e2-443b-91b3-517f20a787be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ee51f4-ed84-4c82-8bb8-fd789323c2e8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad87c182-ed4d-4718-8a7a-38761f5bdbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f0f9ab-22a8-43b7-b323-b0240a183de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c39b3eb-5c6e-40f2-a2f4-42a82980b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a42a737-0ab2-4592-8526-fbaabd8adbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8730b03-e231-4069-a598-a3a7fb197b0a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca839564-5fdf-4f65-b3f5-eff594c3492f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49df8dc-4806-4952-b570-cf20decc70b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7991a6-6c11-47f3-9b8e-ed77f8cf5f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd2de0f-2d59-4f9e-a2e5-1f3fe6537078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b0cab8-0a72-43aa-82e0-6419e75a2215",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3969ff-7d86-4e95-a21b-5a8ed878ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434fb7ff-e727-46ab-8ea4-8e16eebfcf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19e6d1f-b99d-49d9-b6fb-457aa61a1140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4ef114-343a-42e8-953a-675a0bfafca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc5fe6d-597a-4b05-9f4b-047261ba97c6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253dbb93-89c4-4243-af69-a1f960457a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0ab488-ef86-4abb-9e44-c550629663b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d615fb3-8eab-4d18-8b7c-3f8f797048db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4501632a-4c3a-442d-aa9c-b91e4292b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f91a8-edcd-490e-b1d9-d0e967a4b4cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e2000f-67d7-4ca1-9bd1-e0eb73d9f347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9745faa-9fd5-4f62-b5b2-777aaeaac7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9b4bff-32da-4f68-b16b-0842663d6c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "878d74b9-bd73-4689-a294-b2fba11a023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6f2ca7-5ff4-45e5-94f5-2c1fbdecd776",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6369e232-843f-4934-8eb3-0dd6a0b747f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0943be-ffaa-4bc7-9ef8-6779bd23bdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad638908-8782-466e-a5f8-e75cf17454c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4460015d-937c-46c5-acdb-4c7350eb1f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23e1872-a139-46bc-8875-03e75d27c52b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ab2a51-cba8-4c6a-8903-f0c7cf1fd322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87eecca-d06d-414f-8c80-d8ba3dfc18b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bc3ccb-3efc-4dee-9d93-28488548a57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6139b47b-8a58-4653-bd63-a5049e00b116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a765cc4-3946-4668-bc22-43483dc01f87",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da2d07c-9552-4d4b-a779-02927b628d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196179ac-8e95-44af-9e81-87a9b716f7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d79957-7554-44fd-ba0f-67fc43fcfc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4b5841-c7c4-4f5d-b32b-5de60a256d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096216a9-96df-4570-bdc0-30dbad3880a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5289bf7b-0d62-44e2-80aa-e17980cbeaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a1d4cd-58a1-4bb4-a5d7-55717c6dd935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254a8b2a-d3e1-41b4-9226-9d73c0dab3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ee50ca-b406-4495-aae6-a5cb6acdf721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d89bf2-f6b5-4070-ac0d-ead0e190c556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eaf586-fee8-4592-bb60-cf12090a1fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b169145e-54c2-4993-9600-cb1a88e3e109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1242c0a1-dce4-4f65-96cd-facdbdf5e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ea1bcc-f14a-4ba5-a211-08f1a90edecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75ce53-2b8a-4d45-902a-40a84171bce8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b49fb-346d-4f8a-b73b-9588e1148b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d66713-420c-43a7-9ce4-eeb68e8d2a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776d29ee-013c-4890-98a4-1b76589c3c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62346f1a-d45e-4a10-be20-6b578eefbab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb30c3b6-deeb-401b-a3b6-e046f2a3f22a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073e300b-d96d-4dbf-870d-9ac272b268dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd607da-5e24-4c2e-8d4b-9cdbb31f9ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a384c265-f41a-417c-9015-26f378e95bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd9a84f-10be-4248-b4a2-8fafda5bae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c457723a-6828-4851-b49a-2ba6fae9fc59",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a2d241-f44f-476a-b00c-e3b6f3a6d3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0a7db9-53c9-495a-83eb-3fd2b5c1e9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ee0ff4-6fde-47bc-a942-d935244e81e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81d2d14-73e6-42d5-b440-fc40e05e186e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7216f759-d1ba-41c7-bb59-71b2d7518afc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f08b8f3-2ec1-49a6-aeea-23c4f5db5a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b207338-8d01-4311-9822-68ed130f04bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29dfacc-7700-4d81-a3a3-7d5df33695de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a4eb2b-714f-4773-a717-89e1344cebe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d437a64-cf1a-41eb-ad05-96e6a0761470",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a2a01c-d7a7-483d-bfeb-203f7a1ee10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b297be5b-928b-4149-ad62-6cae845edea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe829c-dd43-4fba-909d-4fa1a0436398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e499212f-4ec8-4581-9d6a-b0ba0e28b150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdf4381-2c76-4b23-94b2-b89f75a4e224",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e487666a-0fd1-43f6-8395-7b2332f4105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d01a0c8-2bd3-4e8a-a741-6793191f9b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532065f2-d2fb-43c9-9efc-9aa5c61151dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57aae237-e017-47e4-985f-3f11b104df6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4663aa-3ca5-4278-b576-eb01f3bd3210",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64f6dba-1276-41a6-a9b3-55116c91ca97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259d108b-8dc2-4f3e-b580-170a6267f77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c47024-47f6-4427-8a9c-6dcde70c81f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49199edb-d093-4067-986f-f97afcf7b1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4c3989-1f0c-46e6-ba87-ce3b718ac908",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e9eab-9599-4b24-91dd-504f6d2817f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56a5e9a-f9da-4a16-9d4a-5e1507424d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed75d9-8fcd-4094-aebe-3f5c77bc6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "748e57b4-0338-421d-82cf-cd21f3d49963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551d46d6-e838-4812-aab2-3ba8ec953698",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0a4f15-2526-4037-adea-e93c1c895378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d554a46c-aa4a-411f-8ca5-7752d05f087b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c4ef39-5f5b-4419-8f26-34e0cd7bd28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d7dc0c-eea0-4777-a95b-dccf718850cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad7f375-cd77-45bb-91aa-f212d72ac49f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e343deae-2e55-4de3-9a16-a0d917c00e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66502ddf-0224-473a-82cc-3cff2ca76c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2ceb14-8a4f-4f47-8617-5ebed52bb3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b4312b-dc86-4aa2-8e68-2a08bfd0b1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f2c4a9-4795-4bc1-98a6-4118753652bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962694d9-1bc7-41fe-99c5-2dc6748adf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc26b89d-c914-4b5e-a10a-8b74a83c64ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fcbcde-c4f5-4937-b1c5-b5d1e64efcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae8cbcf-bcb1-455f-a5d9-56958a923620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f854695-6e8c-432b-a2e8-dea4143e747b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46482052-5acb-4f75-b39c-397406519050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a61d633-2b7b-4af3-8e1c-7f86dda9b140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81b7553-1847-4019-ac4d-ef9e22d3e92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3638f304-30b2-4749-b13e-17c1f7e2b246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97764e18-6751-48bc-ba7c-3c10fd6ccb3b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cecae1-0c07-432c-b89b-ae26272f0207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086fe01c-e4d1-4ff6-b8a6-d0238bdf712f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3387c384-c7d6-4558-ba3e-5facb878d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ef6da7-bf3f-4197-bafe-ed6f8ef8ec6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f694edc-46e2-49db-a826-cca1c9fdfa72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b021c31e-39f9-4a57-aca0-2fe48ba84898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bfcd23-e564-4d96-97d8-35457bec92ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca6b8ad-fe5a-4eb8-b549-2f0db314fd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61cd331d-4d67-4b01-9ece-e8729c80ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e435c937-8b75-4441-9506-7e4e43bd5a36",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffb0943-bc8e-4bc9-9b55-8e47b80aa6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289855f5-a95c-4caf-90d9-8abea2b506b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d563ee4-78fe-4a9b-a667-25df475ba96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5634c12a-cc62-4340-a2b0-c649e1a82cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef889d2-9564-489e-8431-2ce70870ba97",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca439589-87d1-46ff-949c-3dac9e7cc2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc7ec6b-d1af-4363-b166-6da6b5de4402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4c632b-f08e-40ec-98b3-91726756dc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3219429a-656b-4c2c-b508-54a196a872cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed3ee6f-b9bb-4c39-bb31-ad71ea4ed205",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dbb760-f059-40ff-aa39-eb25bcb5cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591fec9a-d421-4263-8207-1c996bb011f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3e8943-9b1b-4868-9a26-784af56b4969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06177df-35bf-41c1-8a6f-d2797ce0e0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f31fee-57e0-4f7f-9b98-128a55372cd8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08792ec5-9bcb-47e5-bbb1-fe90f1ddfde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f3752c-bd87-4f9c-bbff-a1753176c633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3faed2-2dfd-4aed-85c0-e66d13018a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed5a127-d7bb-417d-983d-754e236eba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfae6b32-b6eb-4ce0-8b16-c5234d746eb0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500445d0-2a25-4903-8471-eb8eb4c81fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c364027d-d3c6-4017-a04d-50d5b58308cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d9b8e-e4de-4b9a-a287-be6cf2d94a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded05cea-e0c4-47a6-a794-a0ac2722b694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffc6b6b-1872-4288-90e9-43b5e87941e9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1529abc-d022-4f40-84d1-ff7e2e7444ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a55994-f63c-49f6-89da-8aa5691e0614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748544b1-2808-4d08-af23-7acda274e503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b70ee2-27bf-4a47-8990-dd95af7336eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81147d1-1ee5-4178-9349-79aa883e086c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0c5488-d51f-441b-b6bf-efb40dec8941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94f2018-e91b-4a3e-92c8-84c29e9bbcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c14a773-fff6-4ea3-b60e-66187995941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c22baae3-0e48-4161-9170-df0f1d037bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9030e-08cf-491e-97ed-b12548593707",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016e729e-aff4-4737-bd0f-73cae5284bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac06b2f-85dc-4b10-9c98-b202aa9969e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c839060-a9e6-439b-931e-2377c26ba76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35cd876-fcfa-4853-8a9c-8a20bfbd52b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22509a30-72ad-43bb-ba86-423ba7f404fe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dffeb7-90f2-4eef-ae11-4588c9a5b482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d64e1c-5ce9-4e0e-9978-0de30d9b2a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ad5c39-0648-4c6f-abe0-b5116884b7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66005172-e775-48d3-a2cc-f7929f01ca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d408e6-f149-4799-9dd6-98869a451591",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae8f790-0a3c-40a8-93c1-252ed1b49970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d684c9c4-5f0b-4d38-b39c-e8c1e692e544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6330511-6f6d-45b9-beb0-96cbf42b1323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5f85f4-1375-447d-a751-62b79ffa05ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8216714d-b770-4c41-be12-59c6dcf46247",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1441df-ca7d-4edd-87c6-b48cfe64f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589d3f9a-7b86-44d6-8329-581a59273ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f413ce5f-79ec-4a0f-bc42-65e54f4d0c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f54ba9a-2f2f-4920-81f2-1bd7ea1862cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd26119-6e6a-47f7-b6f2-1b78f625890f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1231a8-fea4-4bba-9105-395fcee7f53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640684ae-6555-4f51-bd07-88af723972b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1c857f-ded9-4078-b0ba-270056932ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb43fe3-f5af-4e77-86ce-feb3f9276e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c6fd83-dcd2-409e-bf66-035b3f0725e4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60564b5-5780-451b-9d26-7d5928183c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec659d0-ca21-424c-a0e8-de5801711f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51278150-d59b-429c-bb35-a9943ea1abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "364f25a3-9839-489d-98e1-c21eb578fb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0512d1-b7f7-4590-bc8d-5ae018ae14a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b4e573-fa8e-49e4-b66d-2acf54c7bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac10c17-4dcb-4275-ba20-25fb8f8fce82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65776dc9-a876-47ec-a088-bfc97af36abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8550d71-c9d0-4e13-8aa2-32b1939b008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f586d973-047b-42ba-a6bc-7e2bfa44601b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83d1002-ed8e-4e0e-a181-d2a4291ed0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9362f9-b974-4600-aa47-e5e6cf61ae80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4bca4-79f2-47e2-96eb-8f1669207cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0926d3e-7f8c-4b21-9a34-cf4a4273f353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975f0425-1f36-4f39-9093-03aa4cc154da",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3940d826-45d7-4325-b8df-1b59dce4d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fd2c8f-db97-4674-942c-65aad6825f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddad40a-deeb-4db4-b2fe-1f0b28862316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3354906-4b82-4deb-857e-df8b67526f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e84ec-e139-46e4-86c6-86bccea04443",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88adbddb-e4b3-4571-9ff2-4aad7e1bb2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9d0e80-2865-4f96-b863-a75e4c4d5994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1552335c-5bd1-46f2-8b85-1a72a0088fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5278c019-13ff-40c2-b622-fd0610ddda4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979f429-e132-47f5-bde9-079280333158",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a833c8-1ae4-47a1-8b8f-33b20fcc7393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40285cf6-1626-4bc7-9691-ad8d3ba13c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba56596-0c20-4e69-bf7d-6fe3ce70b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ba82d4-9044-4868-b3af-d4f86d9fc292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d23268-4ed1-476b-9429-56efcc80ae0c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cef353-96be-49b9-a64a-2a3e0fffd720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "695eebab-e759-48fd-a1db-10b658ba1562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b155a3-1554-48f8-9fe8-65d7a77ac3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9644fc1-56a2-4197-a67c-50e70f96b8ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66f041f4-f8a5-4ef9-abfe-9eaa8fadb0e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "817bdb0a-e1db-4119-87d9-0ce09afba9f8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55033e25-5286-4db0-8c95-4ca1d4ba1084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d43e5e3c-727c-47ae-bc5a-e2b007b474d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71911fd-622e-4142-a73c-f9b959530165",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "050f0a3f-7829-49db-9284-cc9185e39b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cfe7f2-76c5-4f94-a399-d287a7b0a4b0",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a3075f-37b1-4968-846b-e875296842c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41fe950e-3abb-4ed6-bf22-a95e6e6f8bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64049601-8398-4a1a-bb08-e50f9e3fcf52",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "11708fdd-22e7-440b-ae12-9b8d15cb996f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "179c9f01-4787-4e34-9991-87364cf440e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64ca5fa3-f1ac-49a0-bdd9-4b6ad183f95a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd0f9b78-8ba5-4c84-8777-2260b43c6f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eff15212-3f2e-4a44-8217-c6e9554509c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11922e4d-5e3d-48bd-a1b7-ca5bad3c07a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "136408cf-4b22-4191-bea9-56f3afab15df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b68abfa-dd06-4c18-9622-d8acbf1aa711",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3625246-6727-4242-8683-0340998d44d7"
                }
              }
            ]
          },
          {
            "id": "4edfea4d-93c5-42b8-8379-5436c96554fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de1e4343-4762-476a-8d14-3058687f5780",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7083b92f-6a8e-4961-b9d3-b42e039747b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d744df1-c988-416a-b48f-9888b57a1235"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de9594b2-b810-4e0b-acef-fc822ca09c43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45edf93f-a22c-44e0-a00a-f1af6c6a0382"
                    }
                  }
                ]
              },
              {
                "id": "75276a84-64d8-4352-864c-2d972604a003",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f139ce6-0ff7-4caf-b685-0428aea74441",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d58e7c6c-2247-4922-b9a4-94329290cdc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a342cecc-c1e3-4ead-8b2e-13c19fc66e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1966374-ef7b-42fb-af53-87d35d58eb9b"
                    }
                  }
                ]
              },
              {
                "id": "217f7483-4401-4913-9c2f-11c0ad793a3c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e059ed41-55e4-43c5-9b14-d82963b791ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f3ce08e-d1f5-4e1e-b1e9-f26eee2f025d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c824a4-a2f9-4856-8699-fa25569683b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8724625b-6390-44dd-9761-a9897ab2e985"
                    }
                  }
                ]
              },
              {
                "id": "e0a888a5-74d9-418f-bf38-a029ffedde0f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e989db38-6367-4cff-92c8-62d3f4fdb7c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38061d3f-17af-4134-b620-1cad9a172db6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e929c2e6-b7d8-4046-9319-8ea35eb163f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a6c54941-9217-4d62-a80d-bb1bb6dbf8aa"
                    }
                  }
                ]
              },
              {
                "id": "4b0afb39-852a-4e30-9805-83f47de27487",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3f3a37-f0a1-4000-bd34-92a3c0300b3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d68d704-a1c4-41fe-a21f-814769550ac8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28726e43-51b5-43f1-86ce-ebeaf019759e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d0261a2f-052e-488a-a00e-02e7c407a9a4"
                    }
                  }
                ]
              },
              {
                "id": "aed88f17-360b-4528-8c6c-07d1ad2ea437",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a24bd6f-30b8-4498-910e-ed47a2012a0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96f0cd78-743c-47f0-ad37-86d4c0169a5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f267e41c-a620-487d-9b86-7682b22391c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "240c4a95-4873-4d6e-8639-480377cacc36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d05f90b1-fbc3-471a-9610-0723266538f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56349aa3-f2ef-4e11-9887-3b17696ee069"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "950b4eee-a1c3-481b-907f-2402858db163",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "694524f9-71f9-4643-9ced-0b989ba00e16"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a554e0f-b3cd-4bd1-b0e2-7fbe11f7ecad",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eed5aa53-7fab-4c7c-9913-835a7bacf422"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75782102-ed0d-4b5a-a75e-ed6b6b9af053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93f016ee-3fa5-49b6-82b3-80577fe06cf1"
            }
          }
        ]
      },
      {
        "id": "3290c92f-f0db-4131-9c11-bc7e18a84628",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cf1aea68-2a4a-4ce4-9541-092c347d425e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d4d2285-e9c0-4102-99a5-b47a39b6a03b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87466935-eaae-4191-9b7e-8853413c24bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d76969-034f-4c5e-a7f2-ec2d7d4967ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce485066-babf-4868-80b6-02a19c8dd863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e6355c-7d0a-474e-bf06-4a5adacb997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "310b105e-a494-4c7f-a511-2506c9e3989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234fc737-fbc9-4a24-9808-dd3c409dc845",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd0d2cc-de40-4dcd-baac-2f48675b55fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf73400-d29a-479a-80d5-8643b2bd3777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d8e5d-0b7a-4109-8e16-7e990a3725b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0ecc95-c78b-4f1f-9e19-4b4c86569a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4202ee-e65b-432e-ab56-f1f00db3806f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0834b314-3018-4b9f-b5c3-a930cec9b645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b3e6aa-4cb7-4060-a902-13ba0ab49d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bd8c08-e0b0-4455-bf05-313159cbaf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf27eac-d7a9-4866-83a4-c238a71761df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352adaac-b21c-4d9b-b7d6-b4c6236165e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9ec78e-897a-415a-9809-099296c172be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dad71f-5023-4927-a504-7fec608bf281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e22da-3ea5-4077-b394-2fe28378c16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b43ddb3-821d-46f6-8ab0-a472737774bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8efb5a0-8172-42ec-85d8-f3f9a5aaa9d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783b228d-5a2d-40e9-9641-ba86b305826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2adfe0-379c-4812-b144-be5c82bddbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36f2eb1-534e-44df-9aa5-560ae7bafce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "970c14d9-fad0-47f5-9bde-b5a8a2c374f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acb7e17-eed9-4e0d-83b6-5904da61643f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd4e64-2c21-49f7-ac41-315b26f84fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b69f55-8e75-4337-80fb-f9480f5519bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02e44c8-2c5e-48a6-b0b3-ab21d6bd55ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08376996-3a59-4a84-a0b4-5b5dd1f0dee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fd447-a436-4cc3-a236-181007ac9ed9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4dbc02-7496-46cb-b21c-efa30ec92307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ab8223-7288-4b54-96e9-1448f1dd4fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6a213c-872a-47a7-8edd-c8d513b2b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f37d5d9-ac49-4217-ba2a-cfea934e0777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ffdb5-02d4-43e0-9c06-59746ef7e099",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b808f6cb-9537-4a10-8fd8-7b51fac6de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b25a46e-c97e-4fbf-9df5-5e49086adcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605051fe-71a9-4a8e-9ee9-cb97b121932b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a27c28-a44e-45b8-9025-87a2d1fb42ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5a0c2c-991e-48c9-a149-6efa41b40583",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68795a61-61fe-4196-8a40-c915612a8f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001e0c0c-c52e-4408-9967-449a61c31cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0b11ac-5cd0-41af-88d8-e9954335e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c385913-925a-4c53-9286-de70723f55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343540a-865e-4882-ab19-4b908934b042",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385b5b50-2805-4955-a669-f33c64d72af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3962ff26-5494-4f40-9d43-a714bb63bd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e192960-3e3c-4c09-9c85-b6dfaf230852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bab665-d5c0-4097-a3eb-865259063926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a107329-cec9-40fb-a83d-11139273619a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eff74b0-8aaa-44b2-b1cf-c469c1e67739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015458c-6060-4510-9e88-c0022d2d218e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e2bec1-14e8-4e32-a21c-87be9efd86ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78af4895-bf74-4637-8f15-b4e385502f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b5861d-f4bb-4743-acb5-43ddef8b3a1a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdfd132-e9c3-4cf6-8065-fb09a598e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d72bb0-ca05-4cbb-a2c2-9efae3e78882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee07bf3-64e1-4a4e-823d-fbf9b2b9f06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5779548b-b3d9-4405-a1c5-90627e55a7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70739f1d-ebf2-42c9-8a84-3724be43a67a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3ce9cd-ff93-4dd5-b823-9d35ae948a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe94c00-a1aa-47c0-bc01-98490db01880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eea0c9d-a62e-46fb-829b-e9eefd6bcdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b0cd66-5d79-4ff5-8198-d638d5792a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8f98bf-8fc6-4e0a-b664-28664602293d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa06c01-90d2-4920-8e9a-2e575219b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c3f499-84b7-4db7-b9a3-91991a1a7597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dffb0fd-046f-4dac-b031-ec771a4a3ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "adcc5c33-55cf-4686-927e-17fe6f32b3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dc6df2-3ad2-43d9-b2cc-bce6d7dacbf1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516d946b-a3b0-4beb-91d7-e5116fa42460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c8d00d-316b-4cde-9f0b-c3d3028a267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39a8f2-2117-49b5-a242-9c9f8bc4eb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b465c655-121e-48de-a194-6d7976db7b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869cd1a1-d948-41dd-930d-0dadbee17cf2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ec5d6-23d4-4ced-9807-0c4b726bb92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b06ab8-a9d1-44b2-bb5e-32d1f249ffbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e013a7-15e1-4bee-80ec-2c0aab693da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76bcccc1-2d9c-4f0b-a36f-d8319133dd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac34597-738d-40af-b0c2-3d09310ea72b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0919f1a-0185-428b-ad87-7fe7ea709e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb2f72-644a-4ca7-82ca-87fc788c7ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a24572-8c5a-49b4-83ca-08da192c7f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be8b7053-52b4-40cd-a37b-e72bd23fab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792504a-0692-4770-b8ea-0a66700c70b9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3671e75-e122-4102-885c-5fd627604a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc913b4-5fc5-46a4-bdd4-8488e4952d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69029af4-212d-44ae-ac91-359073d28f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2128a6-3b9d-40ca-8da5-91517e8ff7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7f10b9-b869-42e7-af65-1d23b3a22413",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78215a82-d875-4ed2-bcff-70b29ae55720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aeba14d-4890-4561-b656-2e89173437bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20115939-b6e8-4445-b214-8eed548e76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b98ca4e0-6d1b-4e9c-a600-6f3d1524327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd13a528-1c56-4110-8b8d-29ef56e7da4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6df0d22-7c57-4e8a-940b-256319012b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e5632d-7a4c-46ff-8490-96dd43a6439e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0125de-a53f-4594-8a9b-daceaef49877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590dc485-5d33-4647-a9dd-8794fa8720a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983073ac-134a-4424-aa5d-220f1ed7216d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25160575-6701-45fb-a6b0-aca432cf13df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455da5b6-01f2-41b2-a187-52c9f4ac6197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8915c30-4761-44ee-9082-4ad8d58cbce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88053623-1e1b-44a5-bd68-e29e5117e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe5348-eef8-4583-a056-7debc3dfdc5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d4eab3-c6dc-4c1b-82f1-18788d99c9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342c3ab0-c54f-4d2c-8119-0b4c007014ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1973aac-4f88-47a7-a371-f9da5621aac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a262d84-712e-4d13-85d4-c15b77ce8eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f88b8fa-fab8-4323-b9cb-5802a274ec7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32e8a30-6f12-49e9-9d11-54d306432dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cb7a65-5765-4100-95af-7064a0d14e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a319dd-b059-43ee-999f-f92f070d8f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8266d1-531e-4692-bb8c-eca9b908acca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c04c49-b66c-4cf3-9a20-345fe5b5fce8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7576a8-32fe-4862-afad-1ce1c20b29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0c435e-f399-4d49-bb3b-029799e13d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0b19c1-ba9e-48b1-8a1a-ddf7029203bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a73440c-c251-4830-bf98-ae9a83f768cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7970ec-47ec-46c3-8fdc-474210e42e03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6be79e-2e7a-4de3-9eee-47ada6ea2371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e42d97-4543-4539-9d13-4cab0e2e4800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed47c44-96ac-4c40-8fb6-a04f31b42653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80dbd22-9ca4-4d8d-b568-c1a2758ceb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a8b05a-5333-4897-a9df-f2599319736e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b6ae8f-33a3-43fe-b6e5-dd01eb4ed67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c731b052-13a6-4aef-813a-d5ca89aff18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a368756-025e-4f09-8ef5-4b91baba463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372d2a1f-b10e-40c5-90d0-e149250d1dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cf359c-b921-414b-9041-b3707a49a543",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3a7fd1-adf4-4fb3-a4e8-71f269f18a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c93b64b-343e-4f09-afbc-17bd0c28f69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab2cf0-70f2-4519-9ebb-419268ed1528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06548186-53f5-4917-89e3-e1ae3816ebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261465c0-ff6e-4ad9-a549-239bff2d9113",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8e33fc-edaa-4910-9643-ae5ec13ca0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a0bc78-ce86-4a24-8426-d2aefed18c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6805a378-57ab-4058-8cc4-eb0b3b9c4382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3546c04-252f-473e-9bce-ea483dbb957a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576010cb-0a34-4c83-99e2-87f8ff944a70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73c80ac-624a-4aca-9314-eff4bf0898af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a04259-ff8d-407d-881f-2f13ea56a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffc3d43-9642-4d7b-b8c8-a2c6179e10a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5633deb0-00e6-4e55-8477-a23ca9518fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e646448e-1e77-46cd-b37f-ad59751cb981",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439e3730-0839-4bdf-a7e7-d09d414b8f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86a9b47-6bab-45d9-915a-51c9499c720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d285a484-5ddc-4a20-995c-aaae979a698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee2934c-7454-451b-9c6a-9efa4a7c74cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c902b8d0-7580-4f30-a0dc-4038cba4cc75",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f1e1f-2ca1-4793-ba9b-2c09805b4fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff6fbe7-afac-408c-b3cf-81f9a2ac55fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71336dbc-b54b-4e58-a9ff-c4d6d85dc087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b9bd63-9c1a-4beb-8e9f-aa7cd8a4fffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d8005f-f583-4278-b9cf-a039c5592932",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133f5a8-07e9-4355-93e9-f5e687159667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eccca0-dce5-4eea-b220-916099c681e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2507b460-09f6-49a2-b770-af372de268ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "462b86ef-0826-48ae-a8b2-957eaa264cdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a29c0d9-0b6b-4342-a46e-0be737abc875",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1a19785-2b38-4b00-a759-b75b89d869c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99ef5fa-cf35-42de-8a87-d20cd2f8c7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8440b412-e667-4cc9-ae19-9dafd4345d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ad48fa-17db-4ab3-aed4-339b8e585776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee2fd908-b4b6-4ce1-b9b8-bddd694e7328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f56fed-75c4-4555-8792-0bd757d7ba62",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06408a2a-3900-4a0e-850a-b9d3f8652bd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "139af502-2ea7-4255-9db3-c4a0645d8bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf068f0-025c-47dd-ad85-6e8726666bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4fb89e9-621f-402e-8ae7-86874f9f3b5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d963408-2975-4327-aea6-8aec35857346",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ec83720-d707-4d2d-bda4-e018d72dd86f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a535e968-da21-4cd9-a99a-054c9c123257",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3a51e1-16a0-452b-be7d-b9307f993fa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9a50947-8b05-4729-b1c2-5833d5a237b7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07520a64-1442-4a95-a5e5-a0bdc2582ef3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ac1847a-fe3f-412f-a0a0-ab8c39208726",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbbb3000-df53-4e01-860e-89c9d850d32e"
            }
          }
        ]
      },
      {
        "id": "1fe954cf-dae6-453c-9394-dc6f23395dfc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bd6dace4-c8bb-4b52-adfd-e6dcd08f84bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c915f4d7-fbd7-45f6-b3ee-7357584e21bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23ca2f63-af69-4d12-a85f-949234887d09",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63893669-2c63-4735-8dba-239de6283b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff95e33a-1f9d-4a10-9583-b3f90ec51841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755d6dc3-08c9-4b8b-a269-1b537c08a3ac",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e310107-e669-4ded-8591-6a988c2da98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70f1719-ec8e-4c9d-9bfb-aa948116d05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb23523-80ca-49ce-9759-ae32393c6392",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8bfffd-2f5e-4c7a-a42d-c292a502767b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9493de1d-0a01-4280-98d9-d6500a26ded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa758a-dfb0-4eac-a090-738bcc685e2e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e06eef-1275-41f0-81be-2e63f08962ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bb5c83-ed4f-44db-94de-85d95e679966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e648560c-0a8c-4ab7-88c7-e387710a4491",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8d0f66-6174-469a-8ce5-361260f6ba18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd66c19-0741-4b98-bfd6-22601a1aaf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23904ee7-651d-41ea-95be-31db506a8590",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be68a7a-902e-481f-9acf-38e318b3dd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efffee64-1d1f-4c8e-9181-0153af990564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6379e8ac-6b71-4866-84e4-66bdba229694",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ce24d-3b63-4aab-81c7-2384bb1e1e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a815408b-f7a2-4df7-bb59-d0056465401a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1776309b-3b9a-43d3-b4d6-fc140d8b1fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d30e95f-dd0e-4fd7-9ebf-34ebe2f555e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c956e24-5c54-4716-8e88-4455c6df19c2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6bc7a5-19f4-4f30-9f09-2e02e90f3cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23600b6f-e403-432e-8643-30af4bd20445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1924a5-3295-4bd4-82a6-33455d0914c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc04a94-f4d3-43fb-8565-979a9974376f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae05ebba-2b10-4b38-8658-3abada7ed553",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57cac2a-120a-4f6d-bed2-d27c454888c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142afc01-3f32-40f3-a439-3a7c3858bfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511d675e-9ca9-42ee-8b75-709e589c9653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad4725c-358a-4331-8586-2797fef4655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6a3468-8f42-4d8b-b839-cef3d3a16a7b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7c74a5-b654-467c-bcc2-472ddc6a415d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1616f33b-afc2-4b69-a5cb-c98c7e8d1e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501861fc-d6e4-4632-bd2e-d8e1045a782d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a6f027-29d4-49b5-aa1b-bbb57d6bacfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeb71f2-ad90-4bb0-9960-2c089efc3e55",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec83bbc-b145-4dd7-9d08-f87810cf98f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43a8efa-502a-44d1-a8d9-08540ee18bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aad925-5c1c-4308-b599-63bad7a0ed68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fa5483-c3f9-48f8-9c87-b52f2a08950c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ce0fb8-cf3d-4b6a-8305-a11defa86dd8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f06d141-5dbb-4fc1-9215-edb982058ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d99170-7bff-4f4a-8e27-ed29c752b5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c2528-45d6-4cbf-b0e5-fd66c1da97be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296e475f-393c-436f-b3ce-3d726976b3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f56e4c3-82b2-40e4-bfa5-10a5ddfca09b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1dda23-abde-4761-81c0-df89724a007d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dacac3b-6a2c-46a3-bfbf-3e7999c0f496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc23a461-e0e9-40a1-aa1c-f445d0120db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbbe11b-385a-44ba-a442-6c4f688d8dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5ded35-c460-4edf-a3e4-e330c7608065",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6d9248-cb6d-4fd4-82e1-10d80ab2022b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844414cc-aafa-4c80-8b41-121a1613cc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddb8aff-fdbe-486f-ad96-9ae768ab3658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2835b055-4f7e-4e6e-8ee7-2b453268d530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b7bd81-61c6-4fe3-80df-5d49e6165ac3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fc8bfe-a9ab-474a-ab02-004d1f11337c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6dc611-b194-4854-8055-a0d918f446b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f440d3a3-8f27-4a39-a9de-dd7772393246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b609afa-3180-4db4-a2f0-bb7b6c3cd568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98fdcd-ada8-480d-ab14-a96eea5a2d16",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5e4ff6-905a-439c-b14f-09713a8cc926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a5c56e-784d-4ed6-a8b0-33dcba889b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7e42f1-4174-4921-9889-050dcdb27fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2174ff22-bd2c-45c3-9b97-80c54a1d7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cfd5aa-0dcb-48cc-9689-62a7159277a9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3357e931-0334-4e70-862f-5327a6e2dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc89c4d-b0b6-4855-938d-8a531999feba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973a9d27-35c9-480a-bb09-de48d58a1186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087e9569-e0ce-4c25-a16d-0f471d4586ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f3c7d8-df18-46c1-a168-d1d14f738ef8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263be250-8440-4c41-90fb-cc7499a60aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e75dcc5-c0dd-497d-8b9b-febe2a068a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9065bd-33b7-4653-aab8-1057d9797669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66039ef5-d8dd-499a-b896-9ba8fd3972ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403231ea-a459-4282-9211-d8ae8de9f090",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d1166a-de50-4fa4-a4ea-0eae4a284072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c108d07e-4e41-41df-ad88-91ded4dda8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decb5256-c206-4584-ab25-c8d983328882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d49b7e7-d25c-4e81-9a59-044ead359641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9704be23-7846-4b9b-83d4-d0c57259e36a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8560386-5740-4f68-b994-6c676005c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524ae936-91b0-4837-87a7-b3f371ff75cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714389dd-25b2-4f81-8abd-3c6e5210f330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0289e572-69a6-4b64-82c9-e8078aa3e6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91386e58-023c-41b6-bda1-7dc35826c006",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7508709b-d0af-4ab0-bb23-4445254b3eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d2e167-b26c-4f93-a002-2ef822e283fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0991869a-b681-42e4-851a-488943b88a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d74c854-a899-4aab-b345-e07fb4c69c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce99c33-5c7d-45a9-9a85-395e37353fe6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de78f408-e81e-44a3-9129-a70d19fed79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2c15a-6cbe-4685-8e11-9036e3ac3162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b6df05-26d9-40b1-8337-619f55c98051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7251772-f535-4567-ab94-342502277295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8b0cc-1c05-45cd-80b3-ecf7d4ab9e91",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95aae51-b104-43f7-80b4-372b55ceb32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc1f33f-f22f-4903-af2e-adabd9c6b545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5040f549-2a1c-4e86-abe7-6a3547195575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd887c6d-3997-47ca-a5b7-656ac18b06d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bb57bc-d63e-4084-8d98-0eaff79baf0a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f31f253-724e-47f9-988e-b67d71bcfe78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539c8de1-8cf1-432a-8967-907e56a3b46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2bdb2e-4acb-4bf3-ac72-a226f7b4146b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028eb970-2867-4fea-b2ad-9402dafe495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40608a6f-35de-4c08-a6b9-40c342e5645c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc1f07-28a6-4c5c-9f70-8a9c3d6313d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def2574d-ed53-41dd-a0c6-92f1235a2a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99f292e-1b86-4c06-a0e7-78455a3baedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d932ed28-0e48-4bf1-beb3-043e7858546d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67083247-f23d-4776-9da9-fba91c793f64",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d7a91a-32d7-4647-8762-d128439c893f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f4f2b9-e30b-470c-be8b-86330afe1025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3050da10-432e-49eb-88a7-c4753d3c42f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d11f2d-4f7b-4256-844d-2f17141a9390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f39ae9c-1bbb-4938-98ab-5d81c897446e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a677415-3b54-49a2-af1e-4c622d99c965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "389d1342-ef04-416d-a17f-66750abee014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dd8775-8ee8-4b82-9e9f-147849d26e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5aa24d-97a4-4647-8dde-a045cf2725a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d686e-05a3-430f-bc20-3b33d61e4722",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba781475-13e4-47fd-981b-4899c8990556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6c294e-890a-4dbe-9dbc-d7e37b2b387a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493398b6-1d8b-4265-9232-f3218d2dffd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d58b2e1-863f-4d15-aa44-0cbdc1320ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7076f97c-3b60-44f0-a3e9-73d54dacbaf0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adbe4d6-1d9c-499a-89c0-9b9db335adea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569d2eb9-f128-47d9-8b2f-8dc120350022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5268ce5f-f883-4aeb-984f-106786fc555c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9661b587-09d4-4207-a2b6-2fa314808278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a54cf0-d534-45c7-8159-dd833be618ec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a5dc3e-ea52-4cce-a817-5344e12abcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dab3607-8301-4b76-a7e1-c3dec9fabcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c4149f-dab5-4302-9970-1c31eb3814ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2962d5e-ba73-4322-b711-d38ce9048200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46fa778-8eed-4c83-9578-f61d254bfe9f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b7f6d6-23a8-4146-a0c6-5cfe537375cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9210155e-c28b-42ad-9261-55e6eadefde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5a1512-b301-48f1-9cc5-b789b8ba3bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5aa9e6-80dc-4f38-bb35-1db2ff1f0182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e12ca-74fc-4f4c-8bbf-97b8c7c9795b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fabb03-06bd-4852-b5ab-1cab063d4d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20684b8-46b0-4703-badf-c3e3924a03c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9b359d-1f9d-4441-b021-20d61060018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb1a4e6-3bbf-475c-9469-3318ecf173fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a527448-54e9-4150-8470-a60149620277",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddf3796-de7f-4c6c-95b3-6e66c87635ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42661e6b-8818-4bbc-932d-511afb2771e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc59617-023a-4835-9c81-7a086998879e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b012bf2-388b-4c64-aeee-c1282ca819e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85732c4-5c7c-4a25-b45d-28509822b1ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23dba9c-234e-476b-a063-caba28145252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bcccf31-5f7a-46d0-af3e-4bf75ec33ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200be5d9-20ec-4961-9e0e-ce59970a6f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69744c2-983b-4152-beba-60f308780ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c63d08-ecb4-468c-8068-3af5327eca25",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc073b-94ae-4092-ab2e-7d2cec3a7ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c43ddd-3674-43ee-bba2-7e5dd49a60e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2c004b-d841-4f71-aac6-f0b82f4dd41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e2d535-4725-4902-8674-5d0fdf50b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e389ff7-3873-4410-95f5-9deadac626dc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbcdba2-e957-4aa2-a9fd-3b67d58fc087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18879bc3-dafa-4354-8755-a16d9bb93cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1164ae-561c-4554-97cf-58c89ba5b6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69313890-a4ad-41ae-a44d-b7cb5479e294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a74f43-e4cd-47d9-813b-13134329fbd2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf248492-3f60-4d33-b463-1c46f6c94b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30a6116-9608-4a36-afae-5c0eb7ee59ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0256de4d-fb2e-41e4-9724-b1ce5dc873a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853936de-bec4-480a-822b-5146f51ce9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7527d69d-67f9-4ef7-850e-41a014e8b77f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb5ec1-3dec-4b63-85fc-08b139b6b33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ee3dae-6e53-4181-b789-d690cc1f780b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb885855-3dde-492d-b72d-4120fe081da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6dcb0d-24c8-4924-aba6-c26d64f9578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7f890c-c45b-4539-aeed-d7162e263b9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04e2dfc-4ad0-4f94-afed-817eca029397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754971d4-1b76-4848-b862-9fbc4e2809f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8972c73-3822-4969-81ae-ba2f7b36915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e9561a-2d8c-4074-875f-953e315be8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f62da-d617-45f9-90ce-3c7d79fcafe9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcde2da-ac55-404c-9004-809454acfa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824ece6e-3b6c-4766-8f33-c181b38259dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee04a1-205b-4c0c-9c40-4504c686ab31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc320c6c-6ed8-4a58-b0eb-f6686988ef56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572e1807-4c33-4dbe-bdc7-cceb8236330e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d4bec8-d365-49b4-a823-7ee618f2e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba4b5b7-cb38-4b40-84e9-b2628b0d01d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0ebd1-b66c-43a8-b2bd-8b02194358e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbe0dbd-3874-4f68-8aed-066ca21c93c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580935d6-c52e-4323-b692-2ae4e036b7f4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a2f46-f780-43de-a8ec-518eae9c9a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8f5e11-c372-484f-a533-ace2a2142c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eaf03a-bf3e-48b2-983b-037549cbab8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7470d4c0-b5f4-4210-9de9-0fb9748d288b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1da3846-9b9a-49cd-b580-3c2595dc4097",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753bf465-651e-4202-87e9-65cf384459cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f331e4bc-7388-4a84-b24d-1158a6c78a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac34e86-89f9-4f35-a437-9a8d1746ef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1071dd1-948e-44fc-a1e0-d31c3a4aeb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175a0216-3a91-4c9b-9252-87ce85d35129",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b7098c-ba36-4c6b-b6f8-66dfd4b8db58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56ce639-46fe-4102-b79b-7e3d55612467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e371b1e-98b2-4d0e-93fd-0fe31e083fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0159b138-b327-46b7-87d1-85d014c9d11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546279b9-b50b-4f1c-bbe0-d5d37561e309",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700886ab-1937-4843-bea8-a288690d1e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b408bc0-f3fb-49a2-86de-5053310df5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c7ac92-f531-4f8e-8c08-05fee78db38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15dd0da-5ac7-4a0a-a992-a6a71a6687e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b21b74-aeb7-4851-a98a-b3ce26bb3fae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a359b2a-5e24-49c3-b323-cb23354ff943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ba6a8f-2494-40c4-9b19-ddfa9f35460b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e178f-4d8e-4d02-816f-5916c167fed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ba19f2-180e-41c4-9bb3-ad767bbd2f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6ed286-7859-46ea-b7ec-649424a177be",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab73ae1-056e-4075-becd-46c9b6044d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2783d06f-8861-49f3-8919-568e2816924c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c151cc-42e3-44b0-ab8f-53b437f76187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4144f5cb-5ea7-4157-9538-85f07734dca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e49d98-8b69-4374-8ace-d794c408405c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75276b0f-014e-4ccc-a6a8-5e3153e1c0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af976d0b-80a4-42fb-932d-b2383b6426a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff633c-dd34-4df6-95a3-495e0542f5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac11006-fddf-495e-99af-be86712ba33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e729f6-daa6-4f4c-b48c-cddd5e696d53",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cc77e6-77e2-4221-ac84-c07ad0181884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274cd8d5-731b-4853-8dba-9f08fbceb620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fc4756-c065-4b14-9035-dd7d922f4bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5413731f-bb9c-4c4c-ab52-5e476fab1d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6341adc-d0f3-40ca-8670-34e03355819c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e69b8-1a2f-4355-83ae-80836374a1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82808ce8-8445-42f8-bb26-7e6ea8eaa820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed0a6da-1ad9-4e65-aaf6-4a0253a299b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded1f166-7144-4779-97d9-bd25da138567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfb0209-c748-4cff-aa5d-6fc5ec0b845a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f235f89e-01c3-403a-853f-c2a99b2ddb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb7b086-c58e-4647-bac7-cfc37e6c7546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6badee3f-5ced-4ba7-815d-09d4a3c96cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e66d856-f628-4f9e-a582-dc68f3717dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3578622-8635-4b58-aed7-7962d41a99e0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b4fc9-2a93-4bda-ae5e-a7a225d7f532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd456b7-64f5-4580-b12c-729dce53e8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a952adf-42e8-4792-9373-24de01380b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8281066f-4b38-49ba-9aad-27f5e6ffcfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7c2e42-1bf2-4237-bc8c-24d61622e284",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cec6f37-5c76-4947-baa0-ba95e0cedcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de85ada-acee-4bbe-95ad-de3c774e5bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034e237f-33d1-4ba2-85a4-ae7604d4218c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5819f98-a0c0-47a8-8cf2-5be099182e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89c5912-3d68-4737-8dcf-32e790820eb9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6214ffce-345f-49b1-80fe-d1faa1b631dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09635617-c513-40bb-824e-4db5c42d2530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4248a498-a9fc-4b8c-a2fa-642bb0a498d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdf9838-d2d6-4198-a633-83497f91183b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141cc1aa-101e-4287-9cc0-35ea1db92f26",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed9eaf2-eef1-42eb-86a0-c97454892853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be65ee8-16aa-486c-ac5f-037ce9473217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bbce27-bdec-4692-8043-730796f76365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f15752-45dd-4ce7-9832-f27be4a6677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70227e4-d6e2-4faa-a7c3-d78d83a3b5a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5019d096-5306-4612-b73d-e43b4585ea19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d23a86-0709-4457-ab4f-39e93e4c957a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e89589f-cce6-40de-9703-fe7899383650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49da35d5-af7e-41a4-ad2b-377a635f859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c039e391-8fd8-453f-a05f-47dd6da70416",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd158a7-6b5c-4e4e-8b1c-7acc40a7e315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4125fce5-83d6-41c5-acdd-f54de0d2db3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4255fec1-b19c-4106-8827-2edc7061bf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9a73a2-74ff-4767-9adc-8e9619f406b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fe4ce2-bd88-4fc6-8038-d542f1b26214",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e54ecf-e852-4488-a6e5-f60d47a1ae19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea0690f-ec19-4918-9e92-4dd53becff73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731764d0-bdbe-4a29-9f76-022253834f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6720c84-4790-4a5b-b207-9fe004a42b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7e70ab-3c11-471a-996c-77105469691a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01336be8-cae6-4cc1-989e-0c492c3e99d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac697ef-89cd-4c5c-9764-8009c3827e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d99c7d-2f7d-4749-8cc8-680a75a0f886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263c6809-ad5f-4acf-86a5-f434e0b51611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257bfcfa-317c-43a3-870d-5b44c1a085bc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c28605-ec80-4998-8ba3-e9532c854c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eece59a2-ca92-44ec-994f-26c6d717278d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52804fc4-686c-4d9d-aa18-e97f0a1a4f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa17694-78e1-4ca2-b18e-f6a5a3d1ff84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17e24a4-4360-4c1e-90da-ebf8c2264076",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41785610-c5bb-4ed6-8150-18a2b2ddd909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49468eed-9736-4f26-a1c8-6bf000d6b8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ff2c06-4681-4e4c-a87c-c398e657ff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd731d2e-d2ae-4a09-aff2-41f8ea8ace56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db41ac6a-547e-4687-b655-3af6bb33e310",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0d883-c6ea-4573-a314-3d98fd4f957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78399051-d4c0-4e47-a8c9-d02dc4b98a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a837f64b-d914-43cf-be31-ed73c11ed9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798e4a00-95a7-4bbf-ac85-de983c646f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25985c3-4135-4a41-8bce-d8f792720a23",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd10c7-7766-48e4-8249-49e6e5b97757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2d6433-202f-49d2-b5e1-5fc2122cda6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a565f3-fd99-4e22-b203-cd2363431549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af594f-f707-4786-96d3-53f52bd8b000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc6fe74-c853-4d6e-b77e-2dbeaf958660",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e068ac70-b5e2-4cb7-bbbf-900145e0fec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03e7edc-722d-4281-8268-45a506c8af2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd352a57-2b1d-4f3e-9e8f-86a1f680e91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f5b62c-208f-42d1-be35-b4b5cd50861f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a801d790-ccfa-4baf-a2fc-850ef8bca79d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb9cb7-09e1-43b8-89e1-92721b6c835b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453d303b-5941-4ebc-80b3-41383dec06d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f815cd1d-bea1-438c-ab67-fcc004d1f82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b404c455-a0af-4cbe-84b1-e19ae2989fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0098d7e3-4079-445e-b1ed-c9baae25315a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fadb42c-9bd0-4d3f-bee4-3bc8f5909cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f575143e-27a4-47cc-933b-66c1db7b5bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0f5ce3-e30d-4935-a052-41aed395646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f8449d-f768-473c-90eb-d7ab5e77db4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c633f3-a487-4e4e-8ea1-7bc770d0872a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7f2a54-5ae2-4bf8-a53f-048958fa29b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fef6ef-f307-43c3-9aee-57f6f82a5c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5008774d-1e13-4147-93bb-0364a9adfeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedbd158-3ba6-4615-97c8-fb688b61f0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3166f960-cf82-42a9-83f5-d126a4968694",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4f971f-8692-4851-80f9-c2025808160b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7a4e4f-8c15-4013-b10f-4d7fa138420b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeae8ee-503b-488d-ab8f-f927577b7626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4de5e8-bedd-4bba-989a-80163d1ea174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4807e8c-1f2e-471f-a025-360e792a2f20",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0705932-cc3c-4281-8c68-9e65ca21bb8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848aa6c4-ce87-4dd4-a096-460a0dd6a615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f99c076-e67e-4671-99e7-7497f3b14958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29697c02-83fe-4769-a663-c1dbb2da27b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5917859a-048e-4f7a-8c45-33c219d87c58",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf17fd-ec9f-4206-921b-655a386488eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f739c4-0ee2-49c5-9cc9-19bf3f585c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3479e-fc07-4aac-b233-2a0f441a54bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7f6cad-0704-4920-9abc-17bc73f75230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ec22a6-d150-4352-9cb8-97aec67cd2ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988d46d0-4e0c-4644-b3cd-f3458f18f71f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0a131b-3f20-42ed-ad5f-4093cb24cf2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fd46cf-2b48-4a1d-8ea3-585290e69f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1297e7-d128-46fa-9d8c-9a579e04910c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283c703b-d33f-4f2f-ac92-c273e2d4e8d1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9316cb9e-0d5f-4936-9bc8-cc319501931f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a8e4fe-9403-45dc-b8cf-dac06d480618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d85103-740d-4f4e-8346-f5acc5a079cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eedae9-9466-45ce-ae4e-ec10e08cb906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad4c04b-e711-4cf2-8ede-95e288ba9a16",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed29ea-8e7f-4795-9162-774934f28159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27086f8f-fc13-4b3a-ba60-f3eac01e2999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113ff037-a950-4d7a-b38b-1eecab80ad32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69eb9fff-7654-49e4-bda0-d19b0f1c2f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc966f17-fed1-4687-9df5-912250898ee9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc3b6c3-bcbe-42b8-bd76-d4401d583139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16453440-cbb1-4619-af90-7ac3aa1c7bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e95af6-eba8-4d03-aa7c-061db5c26b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9e5872-78a4-4a0b-a79c-97d62c5d0bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219f9f2-245c-4b3a-bb8d-875c34eab915",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134f46b8-581c-4ee3-a458-4579c6e75da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4d086b-bd86-4102-aa44-89b4b499809b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53df347d-ea1e-40b8-8f2e-f5eea01c5b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e16de09-701a-45c5-8b57-b0f13beba0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f245b-19e2-4d6e-8773-971d3e8768f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522e2413-0e5d-4e22-8116-0facd9854410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc28055-9fb4-4718-8d4b-879f33bc3c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de598c6-e718-4c69-9ef3-5a9894e36413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c1c2e6-fb63-48d6-bdd6-9c05bbd21a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabeeba0-c743-45bc-a869-d5b4759e5cfc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e9e29a-e107-46e9-8800-0a7f6e735105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb11fce7-24b8-41f2-8c97-d8e0e6b7f820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c68cb5-1deb-46b4-afc9-c71f9548a8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836b2073-ccbf-4767-b708-3d84eb8edf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3887c536-a5a8-4df4-a72e-18483e9423b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb63086d-79ef-44fc-a418-bbd9360b595b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ed8fd1-ecd6-457b-a172-6635cffa675a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a042c-b2f0-408a-b4b4-6f785c841ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f852e7-b9da-4a23-8888-ab3c1c63e44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfe8aa5-db79-45ba-8bac-78e2faa9eb86",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa8a0f-bed7-4e15-8375-6f713e511f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fd19d5-e8a9-43d8-a3f0-f6626cb8d0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cf6b30-9296-457e-88e5-2b606d5ec0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a5ef5f-d145-42d9-89ba-582df43d88e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7144d7e-d92f-4679-b77d-cdc970ba2069",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975d4cb8-fc23-450e-967f-2de1b80c0b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f15fd43-c114-442c-9340-47a449514751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a32509-2d53-4cfa-8d23-1545077e06f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ab9c7c-cd79-4a92-8e63-f4478c90569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0559220-162e-4995-8aaf-aa9d21b00700",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f78ac8-7182-4718-9deb-37cf490b2470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab74a6bc-04ab-44de-96de-980e4f94ce8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a525b1c-659f-4591-86d2-2ee872da7cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605575b7-a3ba-4130-ba02-593e71828008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e618681-0959-458c-a306-2f230cb5a5c3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc80335-7483-4fff-85c7-7fab88d4c946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ee80fa7-1c40-4ee3-ae51-d655e8bf0194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd8f5ef-1c64-4a08-84cb-0bf0ff9755ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed85a902-201d-4f2a-8f41-da806c6cc246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78717994-3f0f-4400-8e2d-19ee9ab5c951",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7720b3-3533-4d22-b801-2a5dee51ee74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bba6d5-0465-4a45-9794-5616aac6149c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8c47a-777b-440c-ae41-a41fa99d92cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08574a09-b388-40d8-bb81-236ac7ad5fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44867e14-c7c4-41b2-aa3c-e0b508f7a28f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bebb56b-46e6-4747-8fc8-c095fb817010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02854129-35eb-4ae7-bddc-444bcdae5e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e9b9e5-b81b-4aea-a0e0-5f727b9d62a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb80706f-7f84-416d-b6a4-36c47a9ac6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f577b3-5b7b-4310-9824-524f3028ab79",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0057385-d225-43d7-802e-c65c6a1716d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1da2781-91b6-461a-a29e-901d5b8bbaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b0bcd6-25bb-4234-8c48-5ee97e8d5b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6950bc3-6b16-4fb9-bfa8-f58fef9a543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d129c2-1bc5-47d3-8207-004c4f3cf1b8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e943545-0a57-4ef1-b55c-1dec50e9b07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6cda70-bd98-4735-a318-f402f83e24a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b27c64f-5f04-40ea-aea2-c975f6381e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ffc32a-07f8-4d3c-8737-02f496d25f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75442b1c-0d30-4e8b-9e75-bd221dfd2702",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614dc0fd-e120-4062-a05c-6060549aa6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f51aa8-18dd-4447-8cb5-ebedf26aa72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35750439-ec2e-4ae7-957a-14477d8eb132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d63bc2-8ba2-4421-aab0-b3242a4c831f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9ceeba-fa0a-47c1-a329-f2c702a063ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb665a9-18db-4752-9991-3178c47705c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb52905b-d9cf-41ac-b79f-0b817a7220bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc7b345-43d0-4958-9e87-9bffaaf7eb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a96693a-64af-4aca-af35-a20ad922a139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e28878e-df1c-4f9a-a01c-b7940d7a6cb8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750cca37-965c-455c-8933-4ef481d31b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8479667a-cb74-416e-bf2a-acab838c9bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a42199e-abcf-4322-a0e0-f0938b932f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0e19f3-2efa-4d73-a5a9-0ff3dad3846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f045e0-3e54-47d9-9346-ec2f964d0552",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0721def3-f9dc-4ccb-afc9-82ee5cb62be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c78e087-165e-48b2-8caf-aa3b8e1984e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a8afb5-db60-4dea-ae4c-ea6515676c73",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191387ac-c4ad-4241-9a69-95c5dc06d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb05ce20-1be0-4217-b31a-0adf3ab93705",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4565fe-6bea-44a4-b1bf-f0e5dcbb2259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6be273-c4c9-4a08-a26b-eb2f01f1b32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8308ab8-af71-4b78-927b-0009b2b907d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4482211-6d37-4a80-9d8c-582cb1c62183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555081b1-e5bc-43d2-8a33-ec06660f23ab",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa98d9-5dc4-46ed-8b60-77e355347713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583cfb97-2f28-458f-92c8-578a1ce3fe79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cc7002-4cec-4a92-b292-ba3fcc45a89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029c072d-4c0d-4698-98e8-99db488bf231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678f27e1-c28d-4873-9de7-f974af307f1f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4404a2ff-30df-4917-84d7-34edb2f9b6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf1d52c-06fd-48ea-b4ee-c707dafa4213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be69f07e-5e22-479a-95e4-f0ac23f66a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1309ef02-0274-422e-ac6b-7abc899cb18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d22008-83d8-42a5-ad45-a428d6cdbad7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c815b73-a862-445b-a887-5e3c8b2e4d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ccc729-8c2b-4320-9c19-a7430638ed6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f46db5d-01d8-4270-bb4f-2c121a4a26ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cee868d-7dd7-4e31-bac0-61c20f509b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c548e743-fd27-4d94-b203-6496a9b0233a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41366112-735e-4b21-8cb7-59f0393f0a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ccf01f-7ee1-4ae5-874c-d00b7799c567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8b7990-ed95-4158-ad2d-cf54651f896d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432a0a4b-050d-42b8-b16d-af1e534fa61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61b911d-49a4-473a-82e7-8ea7754d6563",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9048d2-07ed-41d1-a500-6fd59549e384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8ff279-1724-4cde-aeb3-1b00c4439e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b4ff1c-28c3-4c0b-be55-524d9f6b29ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2043455-eada-45c5-9ec4-92f08edae2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b53043d-632e-48e9-8faa-f8e5ed7a0007",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8757ce33-2b34-4555-ad62-9984740c4621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808298d4-f150-4b21-afd6-cff987107bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6e9608-c77f-4552-8dba-b725fd261737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7851e43-7067-4bff-8bd1-b0b609124a04"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f1e6d6f-53ca-4aea-a5dd-60ea9f9607f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b34b879f-5a15-4e29-83f3-9f7181f6cf05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc234b76-f35f-46fd-953f-b923f01a902f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c12d2e9-5695-47ac-b424-cc9c50d5fb8a"
                    }
                  }
                ]
              },
              {
                "id": "a961e814-04eb-4e32-9bbe-30daa8528a75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cab21f59-610f-41de-9a97-6caed6534934",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023ca7aa-5137-45df-8eae-fd89bd2fe734",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "378b3d88-ce7e-4e64-9c53-98c944dc416f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0060bf7d-84bd-4808-a041-917d71f3e23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074eb03d-0d33-4da4-8871-1c12e1429359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b7396-6c3f-4beb-9aff-5c5152487c43",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75ed2da-29ba-4744-b759-200cb7bf3438",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "12eb15a4-748b-4562-bc05-3dcacc977b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3a49c6-6308-4d9e-b8bf-6b1715faf6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c931161-61e5-454d-8990-16e16b602f08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af6a875d-dc77-49d6-b873-94c4bfd60fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2120f6f-0df1-4513-8c05-cc06ba352f93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8228ff9c-0959-42a2-8f94-0501a4639dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "673c9e84-8546-4596-9b23-ca094c608dc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "0c8a3dc8-b45e-46ec-b520-fa222ef02852",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f831437-4cbc-4b4c-9800-f8fb7b880076",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eec22c7-e3e7-422d-8504-174a85f230ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1510251d-39b0-4f28-a482-dc17266ff606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17319f9d-bdfc-46a1-8dec-c947627dc370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4855436d-d64b-4f09-b953-6ae7a9191042"
                    }
                  }
                ]
              },
              {
                "id": "948654e9-bb1d-48ce-8dc6-8e0a9d73ecc2",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b94451ea-257d-47bb-b011-fa45f4f65254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c5253d2-141b-44b9-813d-3d02241b7561"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a4c126-a90f-4864-a58a-35145ba8b84f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cee9647c-683d-444e-a44e-841be998868d"
                    }
                  }
                ]
              },
              {
                "id": "5f3bb3b1-337d-46fc-85b7-c09fd65ab903",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9403585-e9cb-49bd-ad26-1bc3e27f8f0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f36a2ec-4e2c-4f88-a81d-c0e5470985e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8df3d1ba-0236-43b0-8d80-0ff5689e33ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cef0b338-64b3-4c19-93c5-05e3f6ed4954"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3e076b8-abf8-400d-9d4f-5b2cd12b64d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4e2d63dd-57f5-4bc8-b773-778a962d8049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25de601a-390b-4cea-a93d-d55e4ae648b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc5cc557-4c46-4d42-adc8-a480a056f742"
            }
          }
        ]
      },
      {
        "id": "8c5cc0a1-398d-4792-8bfc-20c1e575aefa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c91e1b48-1690-45ef-b515-e67ce059c4ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68c5b6df-6b2d-4d1f-9d85-b41c6e6d9ec6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39b83eb-42df-4163-b046-d9ac996423bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "73aaa5b2-a4e6-4c27-98c1-08660a3d695b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e71b22-37b3-4d09-ab2d-bd57fa8471c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f35bbd69-6770-43da-8b38-649c07222b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05124274-38e1-463f-803c-1f3b4545d03e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8497ef53-9086-4985-9732-5c56a5dce1de",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfc3718c-d64f-48cc-87fa-ee12a58c6d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c74a46-38f0-409e-892b-4ea83233f130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db44663-d0a1-468f-b49d-fc32bd6ed6ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "731689e4-ceea-40c0-8ea5-b2f9d95caaa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d20c843-f76f-439c-9790-4e09be628aa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26fbaf35-e97e-4552-8596-f513c4dca183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66273a23-b0cb-48f7-b68a-5bd40a4dd575"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d347fff-8f44-400f-aa70-611d384069c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1d8f3b8-e581-4b7f-a14a-9fe224ba4bae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3373bd1-7ba4-4b55-b536-8073508723e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "067af35b-bb51-448a-89b6-3d204628f559"
            }
          }
        ]
      },
      {
        "id": "9d4a831c-fdd8-4c01-b6b4-01161b039b95",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f4ae9dc1-94f6-4c5e-af92-a3c09286621e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b55c37b3-9f71-41ac-8381-1b920d6595bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21157583-d9a7-4306-8773-f68901d8c321",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefd2943-83a1-4c6e-9816-282826a6ac94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "71ebbd9d-aebb-460c-aa61-90efaeaf38b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3684bb3b-62b3-4f9c-8391-ec30c83cfa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0a4f0c2-e1d2-4a82-bffb-0ac6de081d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a53eee0-e340-49d8-83be-f55bbdd488dd",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a286beeb-2771-4df0-8d23-1d32fe82467f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d5693bc-0ab7-4be8-b180-124975d0097a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e01e33-ec59-41ca-9030-3a80cefee9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a0b7678-bde1-4bce-b436-76e4d82cd95c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d23ebc7-3dd2-46be-a093-34f9c62edee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16342ece-25bc-4454-bed1-817c4f620408"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07956ec8-967a-47b4-b66c-d9192bb7c2c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcb9b342-d460-424d-af28-906ad6504c9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fbc5304-add3-4c33-b6b5-76a1c31e04dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f0def4c2-9b35-4168-833d-f53d33e4e6c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8724a54b-540a-4a1b-9af7-2d4a8af68eb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdbc3334-a5eb-4b29-9e77-0a6b7f586fe8"
            }
          }
        ]
      },
      {
        "id": "bece7f49-e926-4ecc-a912-c7ef16840e0f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd5dc071-ff25-468c-b134-b82d2e86f13d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ad53cc9-7254-4730-8077-e2dce720acb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78ece4ca-48c2-48af-af0c-02674f5d13a6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4a9a07-3679-4ed3-9c29-9b85ef45ca75",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "653950fc-270a-4074-bac2-74f69522a48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e69eab-4ee4-4839-b9e5-752e6a0b37cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03dfaac4-7864-4a70-9921-788b8f656577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b13d99e-da56-448b-a6a3-8ee53a16eff1",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1cab33-6a8f-4abf-bb17-70299b72d463",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb7c198b-576c-4eb1-b68d-8b0839275b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef67e8-5ad1-4cd1-be7e-83b9e1b94c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71ee8e94-61bd-475f-bfff-b1cc7e0c38dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ee41003-35b7-4056-b923-d6d2042ac316",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c4ed56a-dbc7-4cce-9b27-794eea08b976"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e83691-b06d-41bb-881d-bd2ee7ae6525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c758c28b-aa16-4dca-afae-435c4e2c19e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27794af4-4083-4c7e-8c4f-91a9d855f012",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03552b2c-ce45-4022-8654-84791bc9d2d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1adbf349-cb57-450a-a8eb-3f2d0a5c6b72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13ed9fec-cad2-4457-aad9-8a9cef667556"
            }
          }
        ]
      },
      {
        "id": "03244695-0dd6-4824-bef0-a3f5d17d04b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c56fae85-dd10-47f7-88dc-95cd1c4b83cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6d37a2f-edd6-4b55-ad9f-1c3c124192b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af325940-9390-4836-98b2-5467a6cd6f8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccf29b9d-6514-4df8-9f7f-41d3766c50e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff92484d-afec-4854-9af1-4075075231f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 443.4961538461537,
      "responseMin": 13,
      "responseMax": 4160,
      "responseSd": 496.7411994348524,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1666918555276,
      "completed": 1666918681874
    },
    "executions": [
      {
        "id": "95dbbe2a-3c83-4933-b285-aa026d8dc8a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0aef0328-72bf-4ea1-9001-ae7a289cb56f",
          "httpRequestId": "c91a23e1-36ae-4851-b29d-eb943a4b8807"
        },
        "item": {
          "id": "95dbbe2a-3c83-4933-b285-aa026d8dc8a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "311565c1-658a-473f-ba2f-a6d5d69885b5",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "ff114759-825e-47ba-b97d-0685a86e6dbb",
        "cursor": {
          "ref": "0ef67405-8682-4171-9709-2d5cca43de6b",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5294840-8f6a-4a1a-ad81-428cb592f219"
        },
        "item": {
          "id": "ff114759-825e-47ba-b97d-0685a86e6dbb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5ed3bb7d-63e9-4758-8aca-cd5148b6bd2b",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "f540ede7-af81-4e1b-82c2-38e10d36d695",
        "cursor": {
          "ref": "2b791c4c-5862-40d4-9d51-e681344357f6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "46884cf0-b38e-4d2c-9841-475965ef3f96"
        },
        "item": {
          "id": "f540ede7-af81-4e1b-82c2-38e10d36d695",
          "name": "did_json"
        },
        "response": {
          "id": "bd0b96db-443c-4ee8-be6f-9dd5801a6c90",
          "status": "OK",
          "code": 200,
          "responseTime": 885,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da083ad9-57c3-4482-bc6a-a1054704eb44",
        "cursor": {
          "ref": "e604bf51-39a7-4edd-90f4-968a1078fd0d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03c476e1-ffe6-4540-939d-0e519e4d464b"
        },
        "item": {
          "id": "da083ad9-57c3-4482-bc6a-a1054704eb44",
          "name": "did:invalid"
        },
        "response": {
          "id": "7743d918-9edf-46a1-b765-c35d072f192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da083ad9-57c3-4482-bc6a-a1054704eb44",
        "cursor": {
          "ref": "e604bf51-39a7-4edd-90f4-968a1078fd0d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03c476e1-ffe6-4540-939d-0e519e4d464b"
        },
        "item": {
          "id": "da083ad9-57c3-4482-bc6a-a1054704eb44",
          "name": "did:invalid"
        },
        "response": {
          "id": "7743d918-9edf-46a1-b765-c35d072f192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040b652-fb25-4858-b41e-923bf517ccba",
        "cursor": {
          "ref": "77e2957c-ff75-4d22-a5dd-94bdbc0c2aaf",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "786e8083-023a-4afc-90bc-f3c4718399f8"
        },
        "item": {
          "id": "5040b652-fb25-4858-b41e-923bf517ccba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce0fa06f-402f-4bb0-9611-e069fb138e0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492bb4fa-97a7-41f3-b325-dfde064b69ab",
        "cursor": {
          "ref": "2cd5b84c-b210-423c-883b-423b86dff92c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf23fd11-f52e-426b-8431-4fb2585b4b15"
        },
        "item": {
          "id": "492bb4fa-97a7-41f3-b325-dfde064b69ab",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aaac2086-3d27-4d79-ba03-dcb7eb79aa18",
          "status": "Not Found",
          "code": 404,
          "responseTime": 429,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6287e2ea-6a70-4d16-a460-4b668091c2fa",
        "cursor": {
          "ref": "a7190305-defe-4382-bb64-219a94c12a62",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b9b860c-3a4a-4e21-930c-e7526c13ccfe"
        },
        "item": {
          "id": "6287e2ea-6a70-4d16-a460-4b668091c2fa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "667d5b34-c9b6-4be0-bf57-c4994311ca43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59e7ed-c30d-4535-a997-cf6896d7e3ac",
        "cursor": {
          "ref": "efb47984-9a39-4f02-b900-4a1a34d1f983",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "18d43b89-9b3d-43d1-8602-a872048c63c0"
        },
        "item": {
          "id": "cc59e7ed-c30d-4535-a997-cf6896d7e3ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "80ea1e89-f002-49d8-b283-248f4d3be0e8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59e7ed-c30d-4535-a997-cf6896d7e3ac",
        "cursor": {
          "ref": "efb47984-9a39-4f02-b900-4a1a34d1f983",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "18d43b89-9b3d-43d1-8602-a872048c63c0"
        },
        "item": {
          "id": "cc59e7ed-c30d-4535-a997-cf6896d7e3ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "80ea1e89-f002-49d8-b283-248f4d3be0e8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409e075-d10f-44ea-8281-cc6d9347dbbc",
        "cursor": {
          "ref": "cb76983e-74e1-4e98-b716-0100765d3a8a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dc3180d7-62ba-4ff0-8d13-7f70e2165956"
        },
        "item": {
          "id": "5409e075-d10f-44ea-8281-cc6d9347dbbc",
          "name": "identifiers"
        },
        "response": {
          "id": "32b1152d-d990-4daf-b259-0798a73c0f12",
          "status": "OK",
          "code": 200,
          "responseTime": 703,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5a2f05-fe7a-4817-a687-1b50c94c4429",
        "cursor": {
          "ref": "f147ccd5-f9e1-4309-944b-143088416d11",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b72bb5eb-0de4-4702-b104-0f86892b524c"
        },
        "item": {
          "id": "1d5a2f05-fe7a-4817-a687-1b50c94c4429",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1027723b-f719-47bc-b336-bb79b9d9d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5a2f05-fe7a-4817-a687-1b50c94c4429",
        "cursor": {
          "ref": "f147ccd5-f9e1-4309-944b-143088416d11",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b72bb5eb-0de4-4702-b104-0f86892b524c"
        },
        "item": {
          "id": "1d5a2f05-fe7a-4817-a687-1b50c94c4429",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1027723b-f719-47bc-b336-bb79b9d9d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc9db6f-8094-4dc2-bd1f-ac08dd0023b5",
        "cursor": {
          "ref": "717001bf-13ca-4858-ac84-ded4fc9991f7",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4d995592-d8fd-4485-912f-5371e012b551"
        },
        "item": {
          "id": "cbc9db6f-8094-4dc2-bd1f-ac08dd0023b5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "affaffe8-2043-4aa5-adf6-3c2f487c29b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3c9aae-5c5d-47c0-b142-6e8227260fb5",
        "cursor": {
          "ref": "497e2273-a4a1-449f-8032-f000586ae66b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "98a44835-03c5-40e6-8881-2a9815691c46"
        },
        "item": {
          "id": "fb3c9aae-5c5d-47c0-b142-6e8227260fb5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3cd22004-46ed-4ad9-a66c-464975f8a1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49bcf99-e5b5-45a9-ab29-b8e69e54ac59",
        "cursor": {
          "ref": "72189eab-1ae3-4685-93a9-8b3a243b6a63",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a90469bd-55f0-4017-b6bd-13ef43230a57"
        },
        "item": {
          "id": "c49bcf99-e5b5-45a9-ab29-b8e69e54ac59",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f13f41da-20af-43dd-9bc4-966735237216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf05ed6-78fb-4764-9c8a-308ed9734d8d",
        "cursor": {
          "ref": "e5630b41-6c24-412a-862a-1d690610f656",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f45c67ea-9ccc-4452-94b6-8f1b04365e3f"
        },
        "item": {
          "id": "ccf05ed6-78fb-4764-9c8a-308ed9734d8d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05861247-de0b-461a-9dd9-608edc0f0319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d260e6-4ab2-472c-97a1-e906acab66f6",
        "cursor": {
          "ref": "92e8cc77-085c-4482-bc97-da7cf9f700f7",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a42b7c3-8360-4ffc-9db6-0a3e37be9042"
        },
        "item": {
          "id": "90d260e6-4ab2-472c-97a1-e906acab66f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af12292f-bc0e-4bfe-baac-4853c5a742cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77661aa8-6ce0-4c9f-b994-6223199b0796",
        "cursor": {
          "ref": "d49b355f-44d1-4193-8ad4-97ffe61d7b7f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "103b288a-4a31-48f9-9097-688a08b031df"
        },
        "item": {
          "id": "77661aa8-6ce0-4c9f-b994-6223199b0796",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "408a1f3f-7f4d-43f3-8346-9c38d3eabc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e550622a-9ba9-418f-9b50-1b62aeeed1dd",
        "cursor": {
          "ref": "d1592dca-9e3f-42fb-8534-4298191b5dec",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6c2f9299-ba3a-4071-8e2f-b626ec31d94f"
        },
        "item": {
          "id": "e550622a-9ba9-418f-9b50-1b62aeeed1dd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9d14b2b-b535-4f9c-8dbb-54407406c729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef6ca83-b4c3-4904-95f4-9edd30c949a9",
        "cursor": {
          "ref": "5d7e8ddc-017f-46c9-b568-ee9765e8b559",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7e312ce-70cc-4ed3-a3ef-e17c13773039"
        },
        "item": {
          "id": "9ef6ca83-b4c3-4904-95f4-9edd30c949a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "feade8c2-c37e-445e-94f3-d3356b1d6bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234b860-f85c-43eb-ab0f-ee10037767d4",
        "cursor": {
          "ref": "48a90011-9a32-4793-afd4-8a1f2ce365fc",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6d8f102-6a62-4c49-9c4f-6e7f2d67f7f7"
        },
        "item": {
          "id": "2234b860-f85c-43eb-ab0f-ee10037767d4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6421ee2d-2759-4cc1-9606-9a15e0d55dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe7fcf3-b501-4af3-a0bc-9dc01cd3923e",
        "cursor": {
          "ref": "f1d38bd7-74f0-4a08-8362-63c4f8073214",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "caafe23a-2e94-43b4-a1ff-c98635f2f0ce"
        },
        "item": {
          "id": "4fe7fcf3-b501-4af3-a0bc-9dc01cd3923e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9ffb6ed-be55-4b88-b670-9b43e302685e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594b549a-9378-4493-ac4b-5cb436f406e0",
        "cursor": {
          "ref": "ab6d362f-3e70-49c9-97ea-d2ab6e86de3a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f3e3c7bb-3571-4545-8ea5-900276d3b66e"
        },
        "item": {
          "id": "594b549a-9378-4493-ac4b-5cb436f406e0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e6f4fd1-545e-4d5b-8993-60709a687070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8883797-5e01-46a5-a63f-eb5aab890966",
        "cursor": {
          "ref": "f5d8a611-bcc7-4da0-978e-f1d6e055b650",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aef804d2-8d6a-45b7-9a7c-cd16ff3438e8"
        },
        "item": {
          "id": "b8883797-5e01-46a5-a63f-eb5aab890966",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ad028bc3-d495-4f47-953d-52c3b9561a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a64c13b-ab22-447c-bc7b-32a03fcbd38e",
        "cursor": {
          "ref": "9b18e6ce-6bc0-4439-9792-75cda7eaed33",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2202ad5f-757c-40d7-a269-db292d80063e"
        },
        "item": {
          "id": "2a64c13b-ab22-447c-bc7b-32a03fcbd38e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cf28fbdd-012d-4edc-b00d-e48903843cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5610c3e-fbec-4494-9d99-53ece7385fd6",
        "cursor": {
          "ref": "f77e1373-b7da-4434-a9a0-6492d3561029",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "52aa2bc7-9329-4496-bbed-5c47146d1791"
        },
        "item": {
          "id": "d5610c3e-fbec-4494-9d99-53ece7385fd6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "770e4a42-547a-468c-94d8-44a971d94063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249e132f-58dc-4143-898b-8e1400ea564e",
        "cursor": {
          "ref": "c4c9fa36-e2cb-451c-bc46-fed4dde62e9d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0e3c4b62-46ba-4bb1-a6d0-857b9c19db96"
        },
        "item": {
          "id": "249e132f-58dc-4143-898b-8e1400ea564e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46141703-ddb7-4b0b-9138-30c2cb93294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1248,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd73acf-b120-4ac7-84e6-2eb10820f6ef",
        "cursor": {
          "ref": "20b35e2a-ea2d-4bda-978a-2da13c8e1142",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d2ae8825-7851-4113-952d-9bf35a60e34f"
        },
        "item": {
          "id": "2bd73acf-b120-4ac7-84e6-2eb10820f6ef",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d24b591a-17e2-4f73-b078-59563ab053ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b058c1f-3eda-4ab4-8257-84dd4e651f6c",
        "cursor": {
          "ref": "ededff91-805a-4da2-a1bf-bdeb66979150",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e862790-7933-43a7-adb1-69ececca9e94"
        },
        "item": {
          "id": "8b058c1f-3eda-4ab4-8257-84dd4e651f6c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2e2c4969-72a6-4b5c-b5ac-418339cb96df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952ac57-87a9-44f2-a75c-a599d397a3eb",
        "cursor": {
          "ref": "19dba8db-7475-466c-a5d4-c3f9f5fefa03",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "809896cd-c7c9-43e9-9319-9b67ecc1fb6f"
        },
        "item": {
          "id": "c952ac57-87a9-44f2-a75c-a599d397a3eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a00043b4-aab2-4720-ae3c-912a44664afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bdf869-8b5b-42da-a9e4-bebb84c1d6dc",
        "cursor": {
          "ref": "6e25afb8-cc0d-43e0-9d41-5aa3b2213f5e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c72643d7-8c65-4a78-84b8-9cc41743342d"
        },
        "item": {
          "id": "c9bdf869-8b5b-42da-a9e4-bebb84c1d6dc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f80dd162-33f0-4722-9ba3-8cdf1af9920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8e86c9-0bc1-4f63-b38e-e0c3e066dea7",
        "cursor": {
          "ref": "c3a20418-bcad-4002-ad71-74ebb88debc1",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4c1b403d-4b95-498c-a5c1-0b14053b206b"
        },
        "item": {
          "id": "8c8e86c9-0bc1-4f63-b38e-e0c3e066dea7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5d6d268b-a8c0-4675-ad47-464adbea84b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a11e50-c2ef-46fe-9fae-c2c6628a71b0",
        "cursor": {
          "ref": "59862d93-9a57-41b4-986d-75f13feaea57",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "93bfb384-4373-41c1-a8aa-834719420217"
        },
        "item": {
          "id": "30a11e50-c2ef-46fe-9fae-c2c6628a71b0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb0791d8-5b64-45ec-9ca2-bc6cdc28d5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f81337-56e4-4894-a2ba-a317eb295e5e",
        "cursor": {
          "ref": "a64eedab-fe9c-456a-9afb-2c183116ded5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f33d699-9884-47b2-98ba-35d058915cab"
        },
        "item": {
          "id": "01f81337-56e4-4894-a2ba-a317eb295e5e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "618f1ac0-a675-4781-a8d8-bbe4c2c6503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4462a1-465f-470e-ae86-afdcf75844a7",
        "cursor": {
          "ref": "c8376bce-874e-47ab-8682-a873717e09c9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "941b6056-4ec3-48cb-9ecc-90c5cfa947c9"
        },
        "item": {
          "id": "5d4462a1-465f-470e-ae86-afdcf75844a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8823018b-1057-4abc-9b5f-d8f26a3a063d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e40d5b8-9b2b-4433-85cc-f7104c85b56d",
        "cursor": {
          "ref": "e583dc4f-c1ab-4096-bbf7-a19dabc420fc",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3447d75d-74ef-48c7-82ce-52d6c1a0c12e"
        },
        "item": {
          "id": "4e40d5b8-9b2b-4433-85cc-f7104c85b56d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "39e5aa51-6542-4305-a341-cb7fa232cd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f01590-11fc-4163-b012-ef0ddae12baa",
        "cursor": {
          "ref": "c417fedf-6880-441c-8b3f-c80a07ec9fbe",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68591850-52e5-4ccf-b484-45c32284b40b"
        },
        "item": {
          "id": "f8f01590-11fc-4163-b012-ef0ddae12baa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8e2f9c51-08a5-4fb6-826b-e52aa7431f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13256c79-3651-4717-b76e-a348a00859de",
        "cursor": {
          "ref": "ecf7c5f3-55fa-47c6-92c4-9312e1578b0c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e4e2e72-36da-44e5-9974-60d8d5ae92d4"
        },
        "item": {
          "id": "13256c79-3651-4717-b76e-a348a00859de",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "098d6f61-d2df-42bb-9406-d6d35aed13f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd31253-d744-4215-aad4-5a5fa03ecfd5",
        "cursor": {
          "ref": "faa0287c-9c33-48d9-94e8-29e2dac8e5ea",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eedc29c9-fe86-4801-a827-1476e6658760"
        },
        "item": {
          "id": "dfd31253-d744-4215-aad4-5a5fa03ecfd5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "485ff61b-0c90-4bd0-ab03-89e53347b929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df91dfb-3cde-4d3c-944f-f89fa0f02390",
        "cursor": {
          "ref": "fc5bf60d-8e3e-4a53-9b6c-0e6ebf141c95",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fc748fbe-c25f-432c-9bad-a6049c4685d3"
        },
        "item": {
          "id": "5df91dfb-3cde-4d3c-944f-f89fa0f02390",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98329772-4b03-4ef3-9ef2-e153e41b38b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e0c4ea-27d5-41e8-baf9-8aba2d726bd7",
        "cursor": {
          "ref": "f9d4d3e8-e29b-45cd-9355-8197f575e70c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "09511412-6005-4043-a0df-4c6b8bab3da9"
        },
        "item": {
          "id": "97e0c4ea-27d5-41e8-baf9-8aba2d726bd7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f92be434-4a07-475b-87ef-5ef334ba8290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdbae15-66dd-4acb-8247-6bd2d4e7ce9b",
        "cursor": {
          "ref": "a8891608-04f9-4c4b-96c0-14644c33913e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28c6e87e-d04b-4fea-a6da-441eb57f5379"
        },
        "item": {
          "id": "cfdbae15-66dd-4acb-8247-6bd2d4e7ce9b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1979d3d1-35c5-4ddc-ad64-7e4e720406a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeff4842-6a44-4426-8466-2f35243b209b",
        "cursor": {
          "ref": "de21755b-6e18-4c91-8383-298ae0cd55e2",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "65c9d826-7c7d-479a-9db9-6b3b2ecb3cb4"
        },
        "item": {
          "id": "aeff4842-6a44-4426-8466-2f35243b209b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f73e03d7-c723-4c9f-8ab0-396846b84e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44281311-9f8c-456c-aa93-5094d67610c5",
        "cursor": {
          "ref": "6f3cc08e-ac09-4941-b71c-89539a69990a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6e9a06ff-265c-4199-93ef-1d99e47f421d"
        },
        "item": {
          "id": "44281311-9f8c-456c-aa93-5094d67610c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ee3a4bcd-d280-4c0c-a4a0-c72d0e14d6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed26561-1e27-4cd2-87d8-d51cc6d30be4",
        "cursor": {
          "ref": "2aa75888-5ddc-4b0a-b33f-ea36925a17ba",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "474efb6c-f043-4b6a-bef3-e9f773f88fe6"
        },
        "item": {
          "id": "fed26561-1e27-4cd2-87d8-d51cc6d30be4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "53b6711d-6e40-488e-b4da-3092a64dde52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5394257-d16c-4cab-8437-f321c8a13858",
        "cursor": {
          "ref": "c81dbb6b-2dd5-40f0-8783-4a4eb3b4dc8d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "828d1cc4-bc23-4ef2-9177-ec028d3209bf"
        },
        "item": {
          "id": "d5394257-d16c-4cab-8437-f321c8a13858",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0f264d5e-0815-4f4a-99f9-c8cff2ed8c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90037cda-b7d4-4ba5-b520-c7fe5c284b98",
        "cursor": {
          "ref": "e1a964b5-a1f9-45cc-a810-8d93a1f11c2e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38011d83-a3b4-4778-a89d-0441945f6ac0"
        },
        "item": {
          "id": "90037cda-b7d4-4ba5-b520-c7fe5c284b98",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24bb1d36-9aff-46a8-aefe-e4bd26cd86f3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 535,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e299da-c8a9-45ed-a064-ccc8857085f4",
        "cursor": {
          "ref": "f685c8b0-892a-4407-b465-90f75f7e3cd2",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a814bd02-15c0-4038-acc7-3a72b8babc44"
        },
        "item": {
          "id": "02e299da-c8a9-45ed-a064-ccc8857085f4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b4b8083-3540-4bd8-9090-c116d8fdbe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fe8428-1382-4273-9027-c5fc25653555",
        "cursor": {
          "ref": "e0a7c52a-7eea-4bac-b25b-e92c9637c686",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2354af12-9cef-4139-807e-62d99113bc89"
        },
        "item": {
          "id": "f4fe8428-1382-4273-9027-c5fc25653555",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6c363e2e-2fd9-48e1-adb9-3c4ca6028f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3b173-2710-4771-9a41-0f89f036f000",
        "cursor": {
          "ref": "b6c78621-6823-4849-89c1-0696ed0d99f4",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b35b5f7b-5f8d-4ce7-80ad-cd1ff694bf02"
        },
        "item": {
          "id": "f7c3b173-2710-4771-9a41-0f89f036f000",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "927ab6ba-5d58-4662-bc86-f1a3cec2c641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd0d2f-1212-4449-92d8-8dacb0e0196b",
        "cursor": {
          "ref": "f1fe3d20-8fb5-4196-8818-28b436d123f1",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "839fe392-9fbd-4eb7-9bc0-a4cd790052bb"
        },
        "item": {
          "id": "cebd0d2f-1212-4449-92d8-8dacb0e0196b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dc30c9a6-ab7d-4cac-8f82-4032cb9e98b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7dc6c-11c2-41b6-b85b-3ba6e859c21b",
        "cursor": {
          "ref": "be4a985a-9bb2-4fcc-ba3d-82ce188d6fbe",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a8035c7-d20d-48f3-84da-e5034ac1955d"
        },
        "item": {
          "id": "d8d7dc6c-11c2-41b6-b85b-3ba6e859c21b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "895990ae-ab8e-4696-b286-d6ab7830c080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f9c195-7573-46fb-85aa-f78e5b3d9886",
        "cursor": {
          "ref": "9d0ee6b8-3d4a-47d0-b385-da1c92161b79",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae6730ad-577e-471e-9c95-2ea639895b6d"
        },
        "item": {
          "id": "38f9c195-7573-46fb-85aa-f78e5b3d9886",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6fdbbcc6-f01b-4f49-8bbd-b2cf20f15827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a677eb-e286-4517-b377-69da2068f51d",
        "cursor": {
          "ref": "a4868520-4922-4292-ac8c-c08a8cedce12",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a1b2691b-74d1-4924-9866-f3bfb83fef7d"
        },
        "item": {
          "id": "90a677eb-e286-4517-b377-69da2068f51d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "efbf6ac3-6d05-4e5a-9c7a-2232536d52a0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 460,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1406855-4c07-4441-a0df-4440ce56d845",
        "cursor": {
          "ref": "f49b8a9d-2b0d-4bf9-8e15-92f0f4754446",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eb27521d-75a6-4e12-a827-abb565bf1347"
        },
        "item": {
          "id": "c1406855-4c07-4441-a0df-4440ce56d845",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0251136-5cbb-41b2-891e-f4a623c700c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23003881-6b80-41b8-8b8f-af600d25aed9",
        "cursor": {
          "ref": "032a40f6-196f-4a89-906c-6df67a4b99de",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c6c7c8d4-738a-4556-bb08-3d0455b9bc7a"
        },
        "item": {
          "id": "23003881-6b80-41b8-8b8f-af600d25aed9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e842a5b4-48f6-4526-9545-2a6823d5e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69366f52-74e7-438f-aea9-876e2beff774",
        "cursor": {
          "ref": "75f07e0a-8896-46c0-9d63-d71f47886f79",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a0c26adc-6715-42ed-ada7-ef70402d1da9"
        },
        "item": {
          "id": "69366f52-74e7-438f-aea9-876e2beff774",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dd9710e5-a9f2-4d41-8b19-d6af0ce75d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69658788-0122-47fb-a99b-2132732abeb9",
        "cursor": {
          "ref": "e281e9f4-d7dd-45ca-9d7b-3a5d8ce8b2d9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d78315f-3e97-4378-ba9b-9ddd949274ea"
        },
        "item": {
          "id": "69658788-0122-47fb-a99b-2132732abeb9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "db5c4876-1cb2-4c34-b857-d445acd4b888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b40f59-0bf7-4a02-980c-14b8f170b977",
        "cursor": {
          "ref": "d5813516-c68e-410b-aa1a-3408c89e08f8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "51968e6c-1544-43ed-8a0b-68c0cc3b713f"
        },
        "item": {
          "id": "47b40f59-0bf7-4a02-980c-14b8f170b977",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8fe8f141-8a7a-4fa0-8165-b6415601233e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc6695-2b62-4669-a443-8ec1e48f788a",
        "cursor": {
          "ref": "41abc6e1-b6a2-4015-aa02-7469e0f701aa",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea342408-ef41-4780-a4bf-ea2176884ef2"
        },
        "item": {
          "id": "fafc6695-2b62-4669-a443-8ec1e48f788a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2a2fbab-1c26-48c5-918c-1a6c14c902f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ee51f4-ed84-4c82-8bb8-fd789323c2e8",
        "cursor": {
          "ref": "e0770269-23b1-4623-ac24-30c8ac7a3447",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f80d33c6-f565-4b68-942d-b44da03c50ee"
        },
        "item": {
          "id": "56ee51f4-ed84-4c82-8bb8-fd789323c2e8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6c62fd00-a0e0-4574-b4f4-c983ce0ccd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8730b03-e231-4069-a598-a3a7fb197b0a",
        "cursor": {
          "ref": "d752e6f4-2e76-4f85-bff1-dd4ec51ef1ea",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "897ada09-86ce-4a70-98c5-1e6722965b98"
        },
        "item": {
          "id": "e8730b03-e231-4069-a598-a3a7fb197b0a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b35cf7bb-519b-46f4-b576-264f53c4323d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b0cab8-0a72-43aa-82e0-6419e75a2215",
        "cursor": {
          "ref": "2591a7df-e6f0-4a18-8983-5dfd4aee2b4a",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9063a51-7095-49c3-8da3-94703a659155"
        },
        "item": {
          "id": "72b0cab8-0a72-43aa-82e0-6419e75a2215",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7359bd26-7f8e-4312-9edc-58cf7b2b1d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc5fe6d-597a-4b05-9f4b-047261ba97c6",
        "cursor": {
          "ref": "26bb527a-6813-46d7-85f0-951205bf29c1",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f6b7bf84-2969-438a-bfab-6282870881bf"
        },
        "item": {
          "id": "7cc5fe6d-597a-4b05-9f4b-047261ba97c6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a9ae0434-b57f-413d-8d65-c8b58e5b0275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f91a8-edcd-490e-b1d9-d0e967a4b4cc",
        "cursor": {
          "ref": "65b47480-d849-4a01-9581-00c5d5bc075b",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e8b10e8d-352b-4d93-87d8-d458c38b3a54"
        },
        "item": {
          "id": "e45f91a8-edcd-490e-b1d9-d0e967a4b4cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7dfda62d-540b-45ac-a210-b9169f50c98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6f2ca7-5ff4-45e5-94f5-2c1fbdecd776",
        "cursor": {
          "ref": "1b888ef8-0554-42f6-ae26-62b37d1130e1",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0ef05ce2-44c4-414f-950f-dce3a1dbc0c3"
        },
        "item": {
          "id": "eb6f2ca7-5ff4-45e5-94f5-2c1fbdecd776",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d4e7f955-83a0-45ea-b586-49311507e871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23e1872-a139-46bc-8875-03e75d27c52b",
        "cursor": {
          "ref": "fa6fad7e-d37b-4f84-89be-7c92d37d3a16",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3ed82e64-631b-49c7-92d3-e3aee37156a5"
        },
        "item": {
          "id": "e23e1872-a139-46bc-8875-03e75d27c52b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9e499af5-e2cc-48fd-aaeb-a461d9794692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a765cc4-3946-4668-bc22-43483dc01f87",
        "cursor": {
          "ref": "0dedbde4-df74-4b2b-b5b6-57b9f2261673",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab79abbc-507d-4e75-b3e7-ff042673cd5e"
        },
        "item": {
          "id": "3a765cc4-3946-4668-bc22-43483dc01f87",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78a3b8ae-f773-406c-9711-e1b7b31c5035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096216a9-96df-4570-bdc0-30dbad3880a5",
        "cursor": {
          "ref": "545a3a13-9d6e-4936-ae05-04846c927c61",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "82e48838-1a67-400b-9a4e-3bd0548ef61f"
        },
        "item": {
          "id": "096216a9-96df-4570-bdc0-30dbad3880a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "22203c9d-6e27-4d98-b416-8111a06ff997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d89bf2-f6b5-4070-ac0d-ead0e190c556",
        "cursor": {
          "ref": "2f768648-1e4f-49aa-9af0-47c9440b3766",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f473e3f6-a2e3-4ce2-ae71-c3bafc66b7ec"
        },
        "item": {
          "id": "92d89bf2-f6b5-4070-ac0d-ead0e190c556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d74409a2-2b43-45f7-8df4-4b7b9350ca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75ce53-2b8a-4d45-902a-40a84171bce8",
        "cursor": {
          "ref": "99bda983-3936-4366-8963-ca6fd4e48fd9",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b710c685-a85a-41bb-9216-92c75578d652"
        },
        "item": {
          "id": "4b75ce53-2b8a-4d45-902a-40a84171bce8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "075a72be-824d-433d-9b67-ca99767c0736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30c3b6-deeb-401b-a3b6-e046f2a3f22a",
        "cursor": {
          "ref": "8219ac7b-b8f8-44c0-95ab-5711279126f3",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c0d7dd67-d3f0-4f72-aa92-b7ac1de4e426"
        },
        "item": {
          "id": "eb30c3b6-deeb-401b-a3b6-e046f2a3f22a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cf284ad7-a6ca-4944-9a7b-7eab9d5e8e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457723a-6828-4851-b49a-2ba6fae9fc59",
        "cursor": {
          "ref": "24d1dd03-ff16-42d7-aef5-cd1080980ba8",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2a99c0fb-b3b2-40e8-8be8-3686e2630b65"
        },
        "item": {
          "id": "c457723a-6828-4851-b49a-2ba6fae9fc59",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7056d49e-8e9c-4838-bfca-b2a77b57e24b",
          "status": "Created",
          "code": 201,
          "responseTime": 1991,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "7216f759-d1ba-41c7-bb59-71b2d7518afc",
        "cursor": {
          "ref": "fa37e6b3-b63c-4b9e-844e-8661f34343d9",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dc3dc5d5-e053-4230-8e2d-456bb649161f"
        },
        "item": {
          "id": "7216f759-d1ba-41c7-bb59-71b2d7518afc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "467bb544-9941-4bb7-86f5-7ad86c005049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d437a64-cf1a-41eb-ad05-96e6a0761470",
        "cursor": {
          "ref": "37564b3d-0ca8-4920-bcd4-69ffab0fa8b9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2cabde22-6959-45c4-b1c6-8ed7d479d99b"
        },
        "item": {
          "id": "7d437a64-cf1a-41eb-ad05-96e6a0761470",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7d7b1b53-5986-41ba-a15f-01c00858b4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdf4381-2c76-4b23-94b2-b89f75a4e224",
        "cursor": {
          "ref": "7dd2c992-d52e-4d51-8465-4a8bb58a392e",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fbe84bf5-faf0-4b1f-b3ad-fb5ea688635d"
        },
        "item": {
          "id": "afdf4381-2c76-4b23-94b2-b89f75a4e224",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9c16c42-a82e-45e3-aded-f8df0f76b3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4663aa-3ca5-4278-b576-eb01f3bd3210",
        "cursor": {
          "ref": "899a8995-9efe-40e7-a67b-067e4a76f163",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d3630773-aca1-49ac-a524-2edd1a792786"
        },
        "item": {
          "id": "dd4663aa-3ca5-4278-b576-eb01f3bd3210",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "317e9125-4421-4c23-94f4-1a3475e2e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4c3989-1f0c-46e6-ba87-ce3b718ac908",
        "cursor": {
          "ref": "9d7fe98c-a4a9-45e8-894d-7c76961953f9",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "15e5b0c1-f31a-40a3-969a-5e46f1a4040b"
        },
        "item": {
          "id": "5a4c3989-1f0c-46e6-ba87-ce3b718ac908",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4138eaef-65ca-48ac-a52f-9ae7e38043bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551d46d6-e838-4812-aab2-3ba8ec953698",
        "cursor": {
          "ref": "8df547be-d458-4935-8737-1a50c8fb441d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd3561fa-45ba-4221-8ef5-f326a82b9b2d"
        },
        "item": {
          "id": "551d46d6-e838-4812-aab2-3ba8ec953698",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "18959168-98f5-46e6-9213-1b8ed51c745d",
          "status": "Created",
          "code": 201,
          "responseTime": 2360,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "5ad7f375-cd77-45bb-91aa-f212d72ac49f",
        "cursor": {
          "ref": "b75f1aaa-29c9-4fc0-a69b-62502d9b9d93",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "14cf2f8f-bf06-4ae9-aa55-2c295371796c"
        },
        "item": {
          "id": "5ad7f375-cd77-45bb-91aa-f212d72ac49f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a74f043-1e95-46bd-bd2e-dd2fd1d97aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f2c4a9-4795-4bc1-98a6-4118753652bc",
        "cursor": {
          "ref": "67c47cf0-3acb-464b-8ef4-f10a7f9f173f",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d4b9f30-f6e0-45e4-ae37-6edd4d0d870e"
        },
        "item": {
          "id": "85f2c4a9-4795-4bc1-98a6-4118753652bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "91970309-acf8-4175-a398-dbfc0dc8f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f854695-6e8c-432b-a2e8-dea4143e747b",
        "cursor": {
          "ref": "e5757d00-7259-4ae4-a4db-43aad35a612f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ecf8d793-e305-4fde-b212-15a7954523d9"
        },
        "item": {
          "id": "0f854695-6e8c-432b-a2e8-dea4143e747b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc541ff6-8330-417e-9557-0639befa64fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97764e18-6751-48bc-ba7c-3c10fd6ccb3b",
        "cursor": {
          "ref": "7dfd127e-7fc5-405e-bde4-9bf265e7ee10",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d2256778-1c70-440b-bdfd-f64d563762e9"
        },
        "item": {
          "id": "97764e18-6751-48bc-ba7c-3c10fd6ccb3b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c257aa95-eefb-45e1-91cb-345fed096f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f694edc-46e2-49db-a826-cca1c9fdfa72",
        "cursor": {
          "ref": "d7bd76b4-a36d-44b9-9b5e-6ba68e7070e8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c9e7ac34-3e1f-42f1-9f47-9a1874cc81a9"
        },
        "item": {
          "id": "2f694edc-46e2-49db-a826-cca1c9fdfa72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a0769dd-6983-4580-bd90-45f0da707dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e435c937-8b75-4441-9506-7e4e43bd5a36",
        "cursor": {
          "ref": "deff9017-7c13-4392-99d8-dd668640fc0f",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "21a20c77-5631-48b3-a742-6ac26f9a1aa9"
        },
        "item": {
          "id": "e435c937-8b75-4441-9506-7e4e43bd5a36",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fea0bb13-e5c3-43fc-bcf1-4b21cf1331d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef889d2-9564-489e-8431-2ce70870ba97",
        "cursor": {
          "ref": "d6f63810-cab7-454e-adb8-0aae390cf0f7",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cbabcdd8-504d-4d78-8aff-f40698448b5b"
        },
        "item": {
          "id": "3ef889d2-9564-489e-8431-2ce70870ba97",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c25e2edd-96af-4f09-9975-2a03101275b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed3ee6f-b9bb-4c39-bb31-ad71ea4ed205",
        "cursor": {
          "ref": "75414b89-bfdf-483a-8994-75b12302ee70",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0e96382c-d769-499e-8e87-e59130087618"
        },
        "item": {
          "id": "3ed3ee6f-b9bb-4c39-bb31-ad71ea4ed205",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4851e174-b36e-4d2b-b699-89ecd7ae4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f31fee-57e0-4f7f-9b98-128a55372cd8",
        "cursor": {
          "ref": "2c72bcfc-8e19-4a32-b0e4-de02466ba84c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0b248f56-2966-4728-9c70-47ee1ee35d7a"
        },
        "item": {
          "id": "c9f31fee-57e0-4f7f-9b98-128a55372cd8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f156f632-ccd0-4447-a703-d244545ef755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfae6b32-b6eb-4ce0-8b16-c5234d746eb0",
        "cursor": {
          "ref": "bfd35622-1214-4592-af5d-7e5586830e76",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "35d485fb-659b-414b-8fe9-04ee7da20f20"
        },
        "item": {
          "id": "bfae6b32-b6eb-4ce0-8b16-c5234d746eb0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d468e73c-9dd5-4bb5-a9a4-7b42d55b5d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffc6b6b-1872-4288-90e9-43b5e87941e9",
        "cursor": {
          "ref": "bfd3ad06-28c0-4f00-aa6c-400abc67db2f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "48be2f0e-13a8-42db-a2e2-cd947cded895"
        },
        "item": {
          "id": "cffc6b6b-1872-4288-90e9-43b5e87941e9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "555b1a29-3b96-41cf-b48c-da68e54c3669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81147d1-1ee5-4178-9349-79aa883e086c",
        "cursor": {
          "ref": "940137d7-c996-4ee4-a2eb-8521f4bdbb13",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8a1383ae-a1eb-458f-b1cc-18c64b4bdb74"
        },
        "item": {
          "id": "e81147d1-1ee5-4178-9349-79aa883e086c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d0315f2e-2659-4f0b-a0d9-39b0375fee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9030e-08cf-491e-97ed-b12548593707",
        "cursor": {
          "ref": "05d602ef-6c31-49ae-89f9-f2ae24fb102b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b5c5c5f6-b466-4091-8207-1063ffa4a6fe"
        },
        "item": {
          "id": "36d9030e-08cf-491e-97ed-b12548593707",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cf9f1094-fd60-4b3c-aeec-f7f1d19997eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22509a30-72ad-43bb-ba86-423ba7f404fe",
        "cursor": {
          "ref": "8ff4d587-d9b1-49d6-8b71-0779b321dc78",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9fe8fdd7-3038-4941-8f0c-32ef93ff0309"
        },
        "item": {
          "id": "22509a30-72ad-43bb-ba86-423ba7f404fe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e7153d1a-f3ed-449e-9605-af5fe362af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d408e6-f149-4799-9dd6-98869a451591",
        "cursor": {
          "ref": "8f50e1d8-c844-4ce3-a4e4-ef87552de3c2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7ed6499c-7014-4132-ae70-3b35fcecfd16"
        },
        "item": {
          "id": "82d408e6-f149-4799-9dd6-98869a451591",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1eb0562b-910c-494a-ab81-d0e2f89238e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8216714d-b770-4c41-be12-59c6dcf46247",
        "cursor": {
          "ref": "b5e59e4c-8f58-4de0-88a3-f533c348ce40",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c7322acf-5a3b-414b-b234-9f589118b0b4"
        },
        "item": {
          "id": "8216714d-b770-4c41-be12-59c6dcf46247",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "094bf4f7-188f-4458-a5b9-892b658ecb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd26119-6e6a-47f7-b6f2-1b78f625890f",
        "cursor": {
          "ref": "cf20a0fb-b7e3-4d5e-9ba1-f2d59a788aee",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "72839b75-67ad-4898-ae6f-0e838abf400c"
        },
        "item": {
          "id": "cbd26119-6e6a-47f7-b6f2-1b78f625890f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a01d8fc7-54f1-4112-b127-64087e70cba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c6fd83-dcd2-409e-bf66-035b3f0725e4",
        "cursor": {
          "ref": "69e9c6f6-96e2-41aa-80d7-cc3d2fa35b0e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9e40cf53-8495-4087-b7d9-50235d24d8a1"
        },
        "item": {
          "id": "32c6fd83-dcd2-409e-bf66-035b3f0725e4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6c65599-1bfc-4465-a87a-4aa5f01f2f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0512d1-b7f7-4590-bc8d-5ae018ae14a4",
        "cursor": {
          "ref": "cb52a9ac-87a0-413c-a42c-2f47afd0b3cc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1f2121ee-86e6-4063-95fb-044b966431c4"
        },
        "item": {
          "id": "8e0512d1-b7f7-4590-bc8d-5ae018ae14a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a2caf0e-2c10-43b7-830a-f17d9e2e087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f586d973-047b-42ba-a6bc-7e2bfa44601b",
        "cursor": {
          "ref": "6dca36c3-6463-4ea7-9756-dbd84e02f06e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ae7bbab7-aecb-4337-ba62-7b975fb12fb8"
        },
        "item": {
          "id": "f586d973-047b-42ba-a6bc-7e2bfa44601b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "56561966-4855-400d-9d7b-9d0847e8f45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975f0425-1f36-4f39-9093-03aa4cc154da",
        "cursor": {
          "ref": "a1d44a4e-eedc-4f63-9534-b4dba82c46b3",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6016c383-9a1f-46cf-a5f8-838e38aa9605"
        },
        "item": {
          "id": "975f0425-1f36-4f39-9093-03aa4cc154da",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5645965e-db8d-447e-8263-ad1257d30719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e84ec-e139-46e4-86c6-86bccea04443",
        "cursor": {
          "ref": "afd4049f-6a58-4ef0-9ad8-8a9b06b4e33d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "29171a03-be75-44d3-a699-d06159a3185c"
        },
        "item": {
          "id": "383e84ec-e139-46e4-86c6-86bccea04443",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a54e4ff-6e91-4f8e-bf50-d23116cc7414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979f429-e132-47f5-bde9-079280333158",
        "cursor": {
          "ref": "1b5bcfd4-0bfc-4362-a8db-a26efc7d9c4f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "14eaf55d-cf63-4766-b90b-395d011b8f87"
        },
        "item": {
          "id": "3979f429-e132-47f5-bde9-079280333158",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ba19cd26-3eda-487e-881b-52efed688a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d23268-4ed1-476b-9429-56efcc80ae0c",
        "cursor": {
          "ref": "9d7dcb59-87c0-47c1-a8d7-41b6cfdf5ca1",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "675bad22-cbf5-4574-8805-095ae6bf92f0"
        },
        "item": {
          "id": "75d23268-4ed1-476b-9429-56efcc80ae0c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b535f48f-9194-4389-9726-46de19d73878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817bdb0a-e1db-4119-87d9-0ce09afba9f8",
        "cursor": {
          "ref": "e490cb1f-2a60-4d15-a15a-0ad84e3eae4e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7bd59d89-a8f9-49fd-8971-a65a3982d655"
        },
        "item": {
          "id": "817bdb0a-e1db-4119-87d9-0ce09afba9f8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "97b37afc-e6b9-407d-8042-70e30f8291cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cfe7f2-76c5-4f94-a399-d287a7b0a4b0",
        "cursor": {
          "ref": "78179e25-db0a-4089-bf71-f45ae3903db8",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d933a235-6528-4475-8eba-e5e2e41535e7"
        },
        "item": {
          "id": "76cfe7f2-76c5-4f94-a399-d287a7b0a4b0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "95fd5b2e-7f3e-423d-b416-0553d5d9828f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1e4343-4762-476a-8d14-3058687f5780",
        "cursor": {
          "ref": "b61f0f7e-ce30-4e1d-8de7-3b43c0b7ad51",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94d9822e-de42-435b-8052-2e17521c11cd"
        },
        "item": {
          "id": "de1e4343-4762-476a-8d14-3058687f5780",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2031f197-c123-4e47-93f4-36cb3c9c40ab",
          "status": "Created",
          "code": 201,
          "responseTime": 3448,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "75276a84-64d8-4352-864c-2d972604a003",
        "cursor": {
          "ref": "7eea2e19-5d92-43a0-a3af-83391f3d6e93",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c8d08868-e02d-415c-87ff-26364cdf5353"
        },
        "item": {
          "id": "75276a84-64d8-4352-864c-2d972604a003",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "5f3c45d0-3078-49fa-bb2d-dc9153599acc",
          "status": "Created",
          "code": 201,
          "responseTime": 3771,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217f7483-4401-4913-9c2f-11c0ad793a3c",
        "cursor": {
          "ref": "908f0206-bf10-4c6c-b079-62c832649a37",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0e911aea-ac74-4e97-9127-4a9fdf30de93"
        },
        "item": {
          "id": "217f7483-4401-4913-9c2f-11c0ad793a3c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "83197ec6-f68a-4b04-bf8f-561d89c262c9",
          "status": "Created",
          "code": 201,
          "responseTime": 2538,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a888a5-74d9-418f-bf38-a029ffedde0f",
        "cursor": {
          "ref": "f970e1a3-dc8a-47c2-b318-3578c14618a3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8e130fd5-4434-4521-9319-f721fa3f4eea"
        },
        "item": {
          "id": "e0a888a5-74d9-418f-bf38-a029ffedde0f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bc67f661-d9d5-4934-bdcc-7897ab4cf25e",
          "status": "Created",
          "code": 201,
          "responseTime": 3116,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0afb39-852a-4e30-9805-83f47de27487",
        "cursor": {
          "ref": "59048f34-5cd7-4584-bf8a-321b2bcda431",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "70928fe7-0e89-46f1-bbf0-e3bfaf9310a1"
        },
        "item": {
          "id": "4b0afb39-852a-4e30-9805-83f47de27487",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4dd1cde6-17e0-4697-b950-4f7a9b9190c4",
          "status": "Created",
          "code": 201,
          "responseTime": 4160,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed88f17-360b-4528-8c6c-07d1ad2ea437",
        "cursor": {
          "ref": "789e9039-bae4-495e-93a2-dd1569b1d04b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "166fec1e-2dee-4e05-bb27-d16b3ac9e415"
        },
        "item": {
          "id": "aed88f17-360b-4528-8c6c-07d1ad2ea437",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff0cd9fa-d0ea-42b6-b66d-0c40845ed975",
          "status": "Created",
          "code": 201,
          "responseTime": 2493,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87466935-eaae-4191-9b7e-8853413c24bb",
        "cursor": {
          "ref": "841128ee-cd58-41c2-bdaf-2f19f79dfb69",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9dc44ca0-0988-40b2-a964-13cb2b55b3ed"
        },
        "item": {
          "id": "87466935-eaae-4191-9b7e-8853413c24bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2db65f74-3a6f-476b-9298-ad8112ab61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87466935-eaae-4191-9b7e-8853413c24bb",
        "cursor": {
          "ref": "841128ee-cd58-41c2-bdaf-2f19f79dfb69",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9dc44ca0-0988-40b2-a964-13cb2b55b3ed"
        },
        "item": {
          "id": "87466935-eaae-4191-9b7e-8853413c24bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2db65f74-3a6f-476b-9298-ad8112ab61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234fc737-fbc9-4a24-9808-dd3c409dc845",
        "cursor": {
          "ref": "bae72cf3-f098-42c0-8d16-6bde7e21bcf7",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a4a4c422-96a1-4800-8844-72ec96d995ea"
        },
        "item": {
          "id": "234fc737-fbc9-4a24-9808-dd3c409dc845",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18ef51be-eaa0-42d0-aebd-f7879c503bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4202ee-e65b-432e-ab56-f1f00db3806f",
        "cursor": {
          "ref": "3a15bf1a-6079-44ea-a8be-42796e37a0d2",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b33ffc55-7e03-4b51-96c4-f4987b52d016"
        },
        "item": {
          "id": "ad4202ee-e65b-432e-ab56-f1f00db3806f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e18ed38-1178-4cff-8fb2-11cfcc87c577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352adaac-b21c-4d9b-b7d6-b4c6236165e3",
        "cursor": {
          "ref": "6a93d95b-e14c-4c25-8ae6-17d4d37e87f7",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "11e4ec77-4cb8-4b5c-a39e-f50aa520637d"
        },
        "item": {
          "id": "352adaac-b21c-4d9b-b7d6-b4c6236165e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "47400f7a-71ab-4e1a-aeda-5712e7eb86cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8efb5a0-8172-42ec-85d8-f3f9a5aaa9d1",
        "cursor": {
          "ref": "f000f9a0-a93a-407a-baaa-03216339004f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bbdbd2f3-10c8-40c8-88d1-951e3f46c714"
        },
        "item": {
          "id": "c8efb5a0-8172-42ec-85d8-f3f9a5aaa9d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b2302a66-2649-434a-bb6e-9f82ec8ade3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acb7e17-eed9-4e0d-83b6-5904da61643f",
        "cursor": {
          "ref": "f48ac522-c11f-4bfc-9eaf-2851e75c1d7c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "76cb2b65-c400-40f4-bcc1-be1cbacba86d"
        },
        "item": {
          "id": "8acb7e17-eed9-4e0d-83b6-5904da61643f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5a3658b8-2f9b-4170-a448-1a13efc82085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fd447-a436-4cc3-a236-181007ac9ed9",
        "cursor": {
          "ref": "06820f05-ba7a-4a8a-95a7-a670532f2da4",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3bcc7372-ed9d-4da8-a451-71811987ad78"
        },
        "item": {
          "id": "653fd447-a436-4cc3-a236-181007ac9ed9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3020b1d-6281-4fc0-a162-39375899ed20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ffdb5-02d4-43e0-9c06-59746ef7e099",
        "cursor": {
          "ref": "0fd5a46c-18f2-4045-8f9b-dbc15609d858",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9e2d1bff-83e1-4512-9098-65a025e4c2fe"
        },
        "item": {
          "id": "c32ffdb5-02d4-43e0-9c06-59746ef7e099",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "771eae1f-949e-4783-b256-03ccc04b1baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a0c2c-991e-48c9-a149-6efa41b40583",
        "cursor": {
          "ref": "b1302d91-7932-494a-9833-8c72f3f644fc",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3c78978d-d343-4f40-bdfe-ff007a9fe26a"
        },
        "item": {
          "id": "dd5a0c2c-991e-48c9-a149-6efa41b40583",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c672d019-d7c7-4d92-beda-a1226b6ba586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343540a-865e-4882-ab19-4b908934b042",
        "cursor": {
          "ref": "8a994b28-51dc-45cf-acb6-f97e954e823e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f18a8b7c-a4f8-4773-be37-10d6911792ab"
        },
        "item": {
          "id": "0343540a-865e-4882-ab19-4b908934b042",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ef408b5-16c4-4427-9ec0-af12a0f0f39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a107329-cec9-40fb-a83d-11139273619a",
        "cursor": {
          "ref": "20b4d19a-509c-4fd2-818b-e58dd76b5140",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "340dcd25-158b-44f5-8500-207cc9ecb609"
        },
        "item": {
          "id": "8a107329-cec9-40fb-a83d-11139273619a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bf0ed5ab-0d17-4c07-95dd-1dd969d992c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b5861d-f4bb-4743-acb5-43ddef8b3a1a",
        "cursor": {
          "ref": "93be40cd-d33d-4de7-ba89-d1086b0d07b1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce4ceae9-23bf-4a93-84ae-a8c7d1134f14"
        },
        "item": {
          "id": "05b5861d-f4bb-4743-acb5-43ddef8b3a1a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1f150edc-117f-42b8-85cf-89f385499d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70739f1d-ebf2-42c9-8a84-3724be43a67a",
        "cursor": {
          "ref": "4a3eb85b-f5c2-4c89-a21f-fa681008594d",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "46438b90-fa07-4511-be12-a50a690272c4"
        },
        "item": {
          "id": "70739f1d-ebf2-42c9-8a84-3724be43a67a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f75e448-5526-4ced-bf7a-b68a3607db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8f98bf-8fc6-4e0a-b664-28664602293d",
        "cursor": {
          "ref": "76b0e12a-a17b-4591-9744-e4d04ea49343",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7ae95185-1a13-4414-9008-f1c1dbfb2f7b"
        },
        "item": {
          "id": "7c8f98bf-8fc6-4e0a-b664-28664602293d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a62d92a-3420-450c-8f4c-3bb09f9f5076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dc6df2-3ad2-43d9-b2cc-bce6d7dacbf1",
        "cursor": {
          "ref": "c7669922-5ff5-4cdb-9c35-3ef35b68d159",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "88486f5d-5994-4e64-b44b-88a8f5e5b66c"
        },
        "item": {
          "id": "12dc6df2-3ad2-43d9-b2cc-bce6d7dacbf1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "15f66083-e1b5-4b38-a8d5-8569382ff2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869cd1a1-d948-41dd-930d-0dadbee17cf2",
        "cursor": {
          "ref": "e7adf83c-16b4-4cb5-ac93-a03bdfea025b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "76f5cdeb-14e0-444a-aedf-a372f18e1eb2"
        },
        "item": {
          "id": "869cd1a1-d948-41dd-930d-0dadbee17cf2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19d0e752-2fd7-4dac-b6aa-bcabf5e8a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac34597-738d-40af-b0c2-3d09310ea72b",
        "cursor": {
          "ref": "66b4ae67-87d2-478a-8b68-be894e5a4550",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "770d1501-672c-4d28-8e4e-cc977f934c9f"
        },
        "item": {
          "id": "6ac34597-738d-40af-b0c2-3d09310ea72b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e4e40f8-6ece-4765-b9c9-7be6475edd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792504a-0692-4770-b8ea-0a66700c70b9",
        "cursor": {
          "ref": "716787ba-9aa5-40e3-9805-78fa9c6fb17b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "afc8a0f5-c7b0-4419-bcde-c3204606374a"
        },
        "item": {
          "id": "d792504a-0692-4770-b8ea-0a66700c70b9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "216b906b-11ec-40c5-a731-a27567497e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7f10b9-b869-42e7-af65-1d23b3a22413",
        "cursor": {
          "ref": "235b6109-6de1-4fe4-9895-80989189d723",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c2f9c3e-6999-4204-b1da-e372b7ce71e2"
        },
        "item": {
          "id": "5d7f10b9-b869-42e7-af65-1d23b3a22413",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b13d1c88-ff80-4d90-a930-c96b1257f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd13a528-1c56-4110-8b8d-29ef56e7da4b",
        "cursor": {
          "ref": "fd3b5629-f39f-4f78-a4fc-4f35adc7a828",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dcb2494c-8ae7-4e4c-8f5a-a25bc6fdf75b"
        },
        "item": {
          "id": "fd13a528-1c56-4110-8b8d-29ef56e7da4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a216e465-a64a-44b5-9320-a5ddd75dd216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983073ac-134a-4424-aa5d-220f1ed7216d",
        "cursor": {
          "ref": "108d87b4-e392-4101-9395-b080f6b1e7ca",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c9638aa4-f77b-4a38-94da-d41b008684b0"
        },
        "item": {
          "id": "983073ac-134a-4424-aa5d-220f1ed7216d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9547de85-8181-42a9-aa66-ed6396d873bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe5348-eef8-4583-a056-7debc3dfdc5a",
        "cursor": {
          "ref": "df00c614-3043-409e-b295-6d3b4849e799",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cb08c69c-5d97-40f5-99c6-7197e416630a"
        },
        "item": {
          "id": "2efe5348-eef8-4583-a056-7debc3dfdc5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4e550203-688a-4061-97a1-59ca2107b200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f88b8fa-fab8-4323-b9cb-5802a274ec7d",
        "cursor": {
          "ref": "ec47e2c9-276b-424f-8606-6c8441d7c1c5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e7d9b775-1b91-4fcd-a93e-843906afa1f0"
        },
        "item": {
          "id": "0f88b8fa-fab8-4323-b9cb-5802a274ec7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "91689088-af3b-435e-8dd3-6e3fee920fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c04c49-b66c-4cf3-9a20-345fe5b5fce8",
        "cursor": {
          "ref": "41a31207-34d8-4634-9fc1-9d35eda46bb0",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "574f37c5-1e74-4480-9f58-8ae36358bccb"
        },
        "item": {
          "id": "02c04c49-b66c-4cf3-9a20-345fe5b5fce8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fcd162c7-7ead-4c89-ab51-e1769813db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7970ec-47ec-46c3-8fdc-474210e42e03",
        "cursor": {
          "ref": "8e81bd84-b20e-46c6-a8b0-80c282f3febc",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "75198e1b-5663-479c-8092-98e0371fdc19"
        },
        "item": {
          "id": "af7970ec-47ec-46c3-8fdc-474210e42e03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "966bb6a1-f3a9-4205-82ef-26f991e5e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a8b05a-5333-4897-a9df-f2599319736e",
        "cursor": {
          "ref": "e5182292-d10f-4b81-8983-81d92278940c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "efc8c66d-8b63-4b1b-b606-8a33b12974fd"
        },
        "item": {
          "id": "15a8b05a-5333-4897-a9df-f2599319736e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0c8f3ea-7817-44fb-9002-5de262dea3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cf359c-b921-414b-9041-b3707a49a543",
        "cursor": {
          "ref": "2b951e2e-4ea3-4801-9168-8f2c924c1525",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "377327be-9a08-46cb-8db9-001974323162"
        },
        "item": {
          "id": "43cf359c-b921-414b-9041-b3707a49a543",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4808df68-7851-47af-978e-5805c3503849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261465c0-ff6e-4ad9-a549-239bff2d9113",
        "cursor": {
          "ref": "abdd538b-6973-4ac7-9658-2d484dbd29d4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b8446b21-3417-47a7-bce2-1a2009af00a6"
        },
        "item": {
          "id": "261465c0-ff6e-4ad9-a549-239bff2d9113",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f67656b-1e40-4f2b-bf58-2389677a3fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576010cb-0a34-4c83-99e2-87f8ff944a70",
        "cursor": {
          "ref": "6495fbcf-3cee-46f9-9576-1c2a0e400570",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "56cd6908-c237-4e99-9dac-3af51c06928c"
        },
        "item": {
          "id": "576010cb-0a34-4c83-99e2-87f8ff944a70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7d624ecb-a40d-4158-aa8d-83c84ba7d4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e646448e-1e77-46cd-b37f-ad59751cb981",
        "cursor": {
          "ref": "df8c561e-3c83-41f2-858b-71a36f0fdc08",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e52dde49-610c-4367-a812-ccf0b4e991e7"
        },
        "item": {
          "id": "e646448e-1e77-46cd-b37f-ad59751cb981",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9066e02-559c-4a5f-97fe-6a7ad0274bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c902b8d0-7580-4f30-a0dc-4038cba4cc75",
        "cursor": {
          "ref": "e92fce73-332d-4900-939f-b33ecb061924",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "58c2df4b-d876-4c06-82ea-cd86d25acd40"
        },
        "item": {
          "id": "c902b8d0-7580-4f30-a0dc-4038cba4cc75",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "283c393f-8232-4528-8038-470bc0bbed2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d8005f-f583-4278-b9cf-a039c5592932",
        "cursor": {
          "ref": "6ab173ce-a694-4e46-ab09-a5505d21299c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "380b906e-a832-441e-965c-7d256b4acc2f"
        },
        "item": {
          "id": "90d8005f-f583-4278-b9cf-a039c5592932",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2840795f-e3d2-4bfa-9b49-ecfd6084749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a19785-2b38-4b00-a759-b75b89d869c8",
        "cursor": {
          "ref": "af0adc7d-066e-4299-9738-39a323de7851",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87c0418d-5304-4bd4-bfbc-200853e0f78f"
        },
        "item": {
          "id": "e1a19785-2b38-4b00-a759-b75b89d869c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c89c9c5e-cf52-4874-a36f-728b5b07fe14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f56fed-75c4-4555-8792-0bd757d7ba62",
        "cursor": {
          "ref": "82db710f-e357-43c0-a7cc-403d66bdd36b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "82720704-212b-4edc-bf7b-aa7a6d511cdd"
        },
        "item": {
          "id": "15f56fed-75c4-4555-8792-0bd757d7ba62",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ee353add-ce2d-4caf-a7fa-d9198d87c254",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 420,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca2f63-af69-4d12-a85f-949234887d09",
        "cursor": {
          "ref": "f3573131-5e4f-43a4-8288-0d3467e00a4b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc74a368-d59b-4a86-a712-724dc8314de6"
        },
        "item": {
          "id": "23ca2f63-af69-4d12-a85f-949234887d09",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5571b570-6acb-4df1-8e72-1894047f02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ca2f63-af69-4d12-a85f-949234887d09",
        "cursor": {
          "ref": "f3573131-5e4f-43a4-8288-0d3467e00a4b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc74a368-d59b-4a86-a712-724dc8314de6"
        },
        "item": {
          "id": "23ca2f63-af69-4d12-a85f-949234887d09",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5571b570-6acb-4df1-8e72-1894047f02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755d6dc3-08c9-4b8b-a269-1b537c08a3ac",
        "cursor": {
          "ref": "0e19de98-141c-4860-a112-f9d618c88137",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e79f5c1d-4217-4331-a702-38c4e9489389"
        },
        "item": {
          "id": "755d6dc3-08c9-4b8b-a269-1b537c08a3ac",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a27f6af1-5b26-4a0e-adb7-16bb6907a95b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 208,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2cb23523-80ca-49ce-9759-ae32393c6392",
        "cursor": {
          "ref": "e6bad198-40e2-427b-9a7b-e00eed72023a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4466fb2f-47f5-4912-b568-1b983b17565c"
        },
        "item": {
          "id": "2cb23523-80ca-49ce-9759-ae32393c6392",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6fba1a15-79ff-468f-88c0-67c56f78fa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa758a-dfb0-4eac-a090-738bcc685e2e",
        "cursor": {
          "ref": "fa763514-9ce5-41e6-b383-3224ac67865a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f5c8ea09-d4da-477f-9967-ed0257d53dee"
        },
        "item": {
          "id": "25aa758a-dfb0-4eac-a090-738bcc685e2e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "19677785-1a10-475e-aaeb-eb63c5963629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e648560c-0a8c-4ab7-88c7-e387710a4491",
        "cursor": {
          "ref": "f6ce6625-68b5-4f94-aae1-9561e210acfd",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aa3adde4-a5af-493a-a362-ab920116196b"
        },
        "item": {
          "id": "e648560c-0a8c-4ab7-88c7-e387710a4491",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "68ae38a1-9faa-4667-b44a-10bd7e9b94bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23904ee7-651d-41ea-95be-31db506a8590",
        "cursor": {
          "ref": "726cc656-b64d-4f15-8853-b9242e54d9d8",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "905fc855-d810-4868-a93c-7d05c805ea8b"
        },
        "item": {
          "id": "23904ee7-651d-41ea-95be-31db506a8590",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6a3961a7-9806-4470-a727-e954a4ffda39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6379e8ac-6b71-4866-84e4-66bdba229694",
        "cursor": {
          "ref": "0b31a769-c991-42e1-90ec-a1c5b015fab8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e80985f5-6edb-45be-9c03-fdf1e70dd914"
        },
        "item": {
          "id": "6379e8ac-6b71-4866-84e4-66bdba229694",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "394105f1-95e9-4528-97b6-da09d3739011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c956e24-5c54-4716-8e88-4455c6df19c2",
        "cursor": {
          "ref": "decbbc34-9c68-4b7c-8b33-05c54c108506",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7f2026d8-6cb6-4d7f-947a-282d4ff257b6"
        },
        "item": {
          "id": "8c956e24-5c54-4716-8e88-4455c6df19c2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f209e50f-997a-444e-a7e0-fab05ce16b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae05ebba-2b10-4b38-8658-3abada7ed553",
        "cursor": {
          "ref": "20bea7df-4aed-4edb-acbb-9782963e83ac",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "889e893b-5eb0-4694-8154-04881f3c50cd"
        },
        "item": {
          "id": "ae05ebba-2b10-4b38-8658-3abada7ed553",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0bae9263-b2c8-4bab-99ee-ce3797b04230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6a3468-8f42-4d8b-b839-cef3d3a16a7b",
        "cursor": {
          "ref": "923108aa-170b-493e-9733-50e4c9b829cd",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "18904c89-00bf-4e76-a314-51ace0584aa6"
        },
        "item": {
          "id": "4c6a3468-8f42-4d8b-b839-cef3d3a16a7b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "19755966-30b7-4436-823c-e01aa5e996b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeb71f2-ad90-4bb0-9960-2c089efc3e55",
        "cursor": {
          "ref": "a650fe40-80a8-429f-ae6b-42d9251c3c52",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "25662a1a-d620-44ba-b48e-88322fddaa86"
        },
        "item": {
          "id": "cbeb71f2-ad90-4bb0-9960-2c089efc3e55",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "06344213-2bc4-4f84-bc67-ef0177f4f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ce0fb8-cf3d-4b6a-8305-a11defa86dd8",
        "cursor": {
          "ref": "f5e5e8ff-7e88-4390-af29-61041d44e60e",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "65b5d9d0-a6ed-4148-9cde-69e656c9cd71"
        },
        "item": {
          "id": "16ce0fb8-cf3d-4b6a-8305-a11defa86dd8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3c35fa65-d177-4c8e-9b0c-c86ba7f89d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f56e4c3-82b2-40e4-bfa5-10a5ddfca09b",
        "cursor": {
          "ref": "99efc254-d48d-49ec-8ad6-8c35cba62273",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "91de0e2f-aa6d-4cdf-9247-efdf723365a4"
        },
        "item": {
          "id": "2f56e4c3-82b2-40e4-bfa5-10a5ddfca09b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "297f8d32-4b8b-4664-9988-0836a18256e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5ded35-c460-4edf-a3e4-e330c7608065",
        "cursor": {
          "ref": "4940404d-31fd-4dc3-bff0-8dab263124d3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1979d98a-063c-4b3a-914a-94b5b8fecc78"
        },
        "item": {
          "id": "1e5ded35-c460-4edf-a3e4-e330c7608065",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3e9a9188-9680-4e06-b9d4-8b6b15c307b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b7bd81-61c6-4fe3-80df-5d49e6165ac3",
        "cursor": {
          "ref": "902c527f-614d-4f0d-b537-3c959d1a4cb8",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fb1762cd-e643-4a84-a555-17ba0fb36742"
        },
        "item": {
          "id": "f6b7bd81-61c6-4fe3-80df-5d49e6165ac3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cb993918-12bd-4733-9176-775a8e5f1878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98fdcd-ada8-480d-ab14-a96eea5a2d16",
        "cursor": {
          "ref": "c6bc06d2-3a4e-4e01-a250-d6e33eec70ca",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "72502230-d551-4b9a-83de-57c759d22a77"
        },
        "item": {
          "id": "7e98fdcd-ada8-480d-ab14-a96eea5a2d16",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f4fa210c-3224-4f59-993a-cc26cd00dfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cfd5aa-0dcb-48cc-9689-62a7159277a9",
        "cursor": {
          "ref": "d3ab3b6e-d420-4c2e-81a1-5f93942ffe5f",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f13e55f6-feb8-42e1-9e47-81ff982125d6"
        },
        "item": {
          "id": "39cfd5aa-0dcb-48cc-9689-62a7159277a9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bc4c60b2-25e9-4f1b-ac96-e91e7cceee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f3c7d8-df18-46c1-a168-d1d14f738ef8",
        "cursor": {
          "ref": "55245300-0017-4405-87e7-4040de76af91",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e1cf516-dc9d-411d-a321-12a74d2c6c1c"
        },
        "item": {
          "id": "94f3c7d8-df18-46c1-a168-d1d14f738ef8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "65b0e668-f277-444a-8897-f57182322f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403231ea-a459-4282-9211-d8ae8de9f090",
        "cursor": {
          "ref": "b517883d-77e6-426c-9fd5-fcbda818d1d9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bcd910e9-6adb-4f36-b2ba-0b7d54e39171"
        },
        "item": {
          "id": "403231ea-a459-4282-9211-d8ae8de9f090",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "74e511c3-6c40-4984-8794-fa0272df262c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9704be23-7846-4b9b-83d4-d0c57259e36a",
        "cursor": {
          "ref": "50a5eb7d-8e7b-43fd-ac44-094cc6bd0944",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5d8474fb-5a19-477b-96da-882d39292c22"
        },
        "item": {
          "id": "9704be23-7846-4b9b-83d4-d0c57259e36a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35d92710-6989-4967-9505-4d20480ef554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91386e58-023c-41b6-bda1-7dc35826c006",
        "cursor": {
          "ref": "d3b6248c-39e0-4c6b-900e-2d8a1a8bd969",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d3dbe74f-d641-4681-a813-6f53074abd38"
        },
        "item": {
          "id": "91386e58-023c-41b6-bda1-7dc35826c006",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de6be964-b187-42bd-9ae1-444ad90da1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce99c33-5c7d-45a9-9a85-395e37353fe6",
        "cursor": {
          "ref": "fb820649-0e9e-4c04-9729-a1672f030c86",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "16d73971-ea31-4558-a085-8b8fbaeba5de"
        },
        "item": {
          "id": "4ce99c33-5c7d-45a9-9a85-395e37353fe6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3773fe62-79b2-4142-989b-ece97ebc065c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8b0cc-1c05-45cd-80b3-ecf7d4ab9e91",
        "cursor": {
          "ref": "95538510-1c4b-4fff-b558-22005f315200",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "11cda6de-548a-4345-aac2-de92471cdca6"
        },
        "item": {
          "id": "23d8b0cc-1c05-45cd-80b3-ecf7d4ab9e91",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cac6d261-e44b-428a-bdce-3881ab044383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bb57bc-d63e-4084-8d98-0eaff79baf0a",
        "cursor": {
          "ref": "869b2d6a-9715-4741-b16c-1482b38a8f01",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2decbc2a-e0a3-48ee-82c1-378b4d0a7d3f"
        },
        "item": {
          "id": "79bb57bc-d63e-4084-8d98-0eaff79baf0a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0a90b7bc-4dc5-4c74-887b-bf19fc88fc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40608a6f-35de-4c08-a6b9-40c342e5645c",
        "cursor": {
          "ref": "76f78674-aecc-4725-8858-569ba71e7dcb",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5bf58cd4-f89e-45fe-a3b0-50dd0cdab91e"
        },
        "item": {
          "id": "40608a6f-35de-4c08-a6b9-40c342e5645c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "72a75fa7-ceb6-4517-b96d-7afac18947b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67083247-f23d-4776-9da9-fba91c793f64",
        "cursor": {
          "ref": "d0cb848d-8120-4d95-8412-843cfcc73c3f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fbe1ba5d-7381-4378-a0eb-ffb5733e6b45"
        },
        "item": {
          "id": "67083247-f23d-4776-9da9-fba91c793f64",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bbbd0c7e-2184-4c83-9d14-db3ab3397d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f39ae9c-1bbb-4938-98ab-5d81c897446e",
        "cursor": {
          "ref": "982e1ca6-3bca-48a2-a7be-35706d1b6ab7",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e9cce7c7-b390-4816-88b6-fe3d95a936f6"
        },
        "item": {
          "id": "5f39ae9c-1bbb-4938-98ab-5d81c897446e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "24b9c7b5-5d4c-4c58-8252-0935a9a078e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d686e-05a3-430f-bc20-3b33d61e4722",
        "cursor": {
          "ref": "ddcb9f37-6933-463d-b2a8-c1c07d3f9628",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5653a463-2562-48da-b377-4cabf9830dde"
        },
        "item": {
          "id": "ca2d686e-05a3-430f-bc20-3b33d61e4722",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "15c0dae8-bd36-4a81-9ea0-bd02580f0853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7076f97c-3b60-44f0-a3e9-73d54dacbaf0",
        "cursor": {
          "ref": "d12b45c9-9c39-49c3-bf5d-ddbe8f627221",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d4876658-c8d2-4be9-98b0-1d94234e12f2"
        },
        "item": {
          "id": "7076f97c-3b60-44f0-a3e9-73d54dacbaf0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2f53315a-dab7-42d8-bf36-f05c6c2093bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a54cf0-d534-45c7-8159-dd833be618ec",
        "cursor": {
          "ref": "667e999c-d97f-43ba-88b8-d3964bc479b9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b0fddf32-09f3-42df-8b06-1d0206618407"
        },
        "item": {
          "id": "90a54cf0-d534-45c7-8159-dd833be618ec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "da28fa91-6516-44e1-b3f0-ab960839db2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46fa778-8eed-4c83-9578-f61d254bfe9f",
        "cursor": {
          "ref": "61e4be00-a974-413e-93b5-27d2b3b8dae3",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b4fe1182-0089-467c-b4df-db501ac757fa"
        },
        "item": {
          "id": "f46fa778-8eed-4c83-9578-f61d254bfe9f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04ffbd6c-ed78-4fc7-b00a-5429c0463e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e12ca-74fc-4f4c-8bbf-97b8c7c9795b",
        "cursor": {
          "ref": "7170b906-a7b9-46d9-bb65-122c354f5b5c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39fe3a89-cd82-46d3-bb1d-c68797f28c4e"
        },
        "item": {
          "id": "633e12ca-74fc-4f4c-8bbf-97b8c7c9795b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9f08d842-39ee-4c7a-8c98-27de66dda10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a527448-54e9-4150-8470-a60149620277",
        "cursor": {
          "ref": "c3322395-825b-4714-b04a-203af4f776df",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "82319c9a-8a71-4630-8047-ba687ba17de8"
        },
        "item": {
          "id": "7a527448-54e9-4150-8470-a60149620277",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ea213c12-57d0-443b-aca0-7676b3e113e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85732c4-5c7c-4a25-b45d-28509822b1ff",
        "cursor": {
          "ref": "624a23d7-d104-4e47-acd2-0e9f7f52d548",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "64ad1caa-41a5-4f96-9be6-21ebc467d1b6"
        },
        "item": {
          "id": "a85732c4-5c7c-4a25-b45d-28509822b1ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5a2f67b6-fc8a-44b7-ac17-ae5171dcb127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c63d08-ecb4-468c-8068-3af5327eca25",
        "cursor": {
          "ref": "9e5dccb2-b514-42b4-89b8-e2432f7f27e1",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a909809f-cdfa-4b2b-a7f8-5431df90d612"
        },
        "item": {
          "id": "52c63d08-ecb4-468c-8068-3af5327eca25",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dff41778-f7e5-478a-87e9-6afabf8814d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e389ff7-3873-4410-95f5-9deadac626dc",
        "cursor": {
          "ref": "a503ca65-6cf2-4cc9-b21e-8fd7d8028979",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "07eafd44-d627-48c4-8d69-ffd5bea3a120"
        },
        "item": {
          "id": "4e389ff7-3873-4410-95f5-9deadac626dc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "464e166a-cfd7-4765-afa9-2f2c1c1e75d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a74f43-e4cd-47d9-813b-13134329fbd2",
        "cursor": {
          "ref": "e1b679a2-10bd-48a7-ac82-599951b88edb",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4b7fb7be-cf32-4167-8cb3-210e726b157c"
        },
        "item": {
          "id": "40a74f43-e4cd-47d9-813b-13134329fbd2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa8d170c-3d79-491b-b1cc-6b2cbd835349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7527d69d-67f9-4ef7-850e-41a014e8b77f",
        "cursor": {
          "ref": "e3b2adb8-8304-49cc-9089-e859eb87f4e8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b2f05ef6-fc1f-475b-b6cb-eb996689d10b"
        },
        "item": {
          "id": "7527d69d-67f9-4ef7-850e-41a014e8b77f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5071b865-5813-40b3-b96e-1ba839a060ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7f890c-c45b-4539-aeed-d7162e263b9e",
        "cursor": {
          "ref": "6ff95df0-32eb-407d-ac34-6e9f5b483fad",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "794e9c90-5b93-48d6-ac5b-ad3d8d807eae"
        },
        "item": {
          "id": "8d7f890c-c45b-4539-aeed-d7162e263b9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e8e3dbc7-e773-4fe0-81a5-a0a7955185e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012f62da-d617-45f9-90ce-3c7d79fcafe9",
        "cursor": {
          "ref": "a3990664-ff49-43e4-bcbe-37697975494b",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4e62ff5c-dcdc-4e3b-ac3c-276da458f9f2"
        },
        "item": {
          "id": "012f62da-d617-45f9-90ce-3c7d79fcafe9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a5b39d67-2c05-4d49-a732-c14ea45a9185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572e1807-4c33-4dbe-bdc7-cceb8236330e",
        "cursor": {
          "ref": "f02292f8-fb6f-4d2d-833f-785bdb6e94c9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a3fd5444-611c-49bd-99b7-9b70d5a51d0c"
        },
        "item": {
          "id": "572e1807-4c33-4dbe-bdc7-cceb8236330e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b29bcf6b-e2c6-41f0-bb03-9fff23c61179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580935d6-c52e-4323-b692-2ae4e036b7f4",
        "cursor": {
          "ref": "dc8d4af0-af5d-40cf-8948-6e47cfab5dc2",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "87b8aab3-178f-43a4-b0af-8c37a3b1fd1e"
        },
        "item": {
          "id": "580935d6-c52e-4323-b692-2ae4e036b7f4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e688d6a-70e9-4bd1-a836-9e8f2deed732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1da3846-9b9a-49cd-b580-3c2595dc4097",
        "cursor": {
          "ref": "480a2cc9-0787-44a7-949d-3d304d2eaebe",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "104bfbc4-2efa-4461-8a6b-a3305f0293a2"
        },
        "item": {
          "id": "b1da3846-9b9a-49cd-b580-3c2595dc4097",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "826fb30d-c92b-4f62-a36a-567ff8c3f35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175a0216-3a91-4c9b-9252-87ce85d35129",
        "cursor": {
          "ref": "7314ca97-2830-4f31-8a10-7fa074893a3d",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "316e59a0-0713-4a0c-a706-313b65fecf30"
        },
        "item": {
          "id": "175a0216-3a91-4c9b-9252-87ce85d35129",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8cccd6e9-2ef7-4a75-a39d-225d452a1171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546279b9-b50b-4f1c-bbe0-d5d37561e309",
        "cursor": {
          "ref": "d3d52b67-e0e8-45d6-b36d-a40c73eefe92",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26b7f06a-9f4e-4946-b933-869b8d42aaa0"
        },
        "item": {
          "id": "546279b9-b50b-4f1c-bbe0-d5d37561e309",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "38b31600-990f-458d-85d6-329267aad600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b21b74-aeb7-4851-a98a-b3ce26bb3fae",
        "cursor": {
          "ref": "0e534b4c-d334-4b7c-9d2b-3099d974ccd0",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "face9e51-d026-48b2-9d8d-7c09a677fda8"
        },
        "item": {
          "id": "b5b21b74-aeb7-4851-a98a-b3ce26bb3fae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "592445b6-7dd9-4801-a48c-f618dfee8e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6ed286-7859-46ea-b7ec-649424a177be",
        "cursor": {
          "ref": "4839df6e-6431-4828-8d13-48e2b576d25f",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "17c39ea6-9d67-44cd-8acd-f1c489edf50b"
        },
        "item": {
          "id": "9e6ed286-7859-46ea-b7ec-649424a177be",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63571249-7c14-4fdf-8b1f-994aa6c5ef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e49d98-8b69-4374-8ace-d794c408405c",
        "cursor": {
          "ref": "e4554841-3e21-4447-9ee8-749aff573989",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8f1711c8-3f16-4ab3-a7a6-c9e3e82ae4fa"
        },
        "item": {
          "id": "b3e49d98-8b69-4374-8ace-d794c408405c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1db5ec3c-d86a-45dd-9735-284410d54742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e729f6-daa6-4f4c-b48c-cddd5e696d53",
        "cursor": {
          "ref": "91963cac-7f07-471c-9937-a90edeb47812",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "68061e1a-5d7e-4765-a7b0-97341d8db59d"
        },
        "item": {
          "id": "c3e729f6-daa6-4f4c-b48c-cddd5e696d53",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "866c59c1-0d7e-42c4-b51d-025c1628e29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6341adc-d0f3-40ca-8670-34e03355819c",
        "cursor": {
          "ref": "30f17da1-f40c-41e8-983e-113d735eaa16",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "de0a31a5-51f2-4191-bb66-567751fd0921"
        },
        "item": {
          "id": "d6341adc-d0f3-40ca-8670-34e03355819c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "032f3b20-33d6-4984-895b-850d387d8d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfb0209-c748-4cff-aa5d-6fc5ec0b845a",
        "cursor": {
          "ref": "835682e0-bacc-4a0f-996c-d5b03a569c7e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "75accf0b-922e-4916-a884-7f90702eebd4"
        },
        "item": {
          "id": "adfb0209-c748-4cff-aa5d-6fc5ec0b845a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "74abd977-929d-430c-883b-3de123c83657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3578622-8635-4b58-aed7-7962d41a99e0",
        "cursor": {
          "ref": "1e1308bf-9e99-4618-ae59-c0f6ae3c87eb",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5b758fc1-c102-42ee-97a9-b55f987c26b0"
        },
        "item": {
          "id": "a3578622-8635-4b58-aed7-7962d41a99e0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "247451da-44f8-4a1d-8547-1dd13ed5326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7c2e42-1bf2-4237-bc8c-24d61622e284",
        "cursor": {
          "ref": "7de2f79a-9e94-4438-9342-b5091b4e45fa",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "855a2a1e-8bdd-48ab-ac02-44dc0c25ee4f"
        },
        "item": {
          "id": "ab7c2e42-1bf2-4237-bc8c-24d61622e284",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e2fb1324-2f80-422f-a4db-3bed3126e4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89c5912-3d68-4737-8dcf-32e790820eb9",
        "cursor": {
          "ref": "4a8ec920-97a7-4072-a310-d9ba956475ba",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87f5c010-63a0-4d57-bb4e-21e04cef598e"
        },
        "item": {
          "id": "a89c5912-3d68-4737-8dcf-32e790820eb9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5a42ad2a-2b5b-4b6b-bb7b-030339b3a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141cc1aa-101e-4287-9cc0-35ea1db92f26",
        "cursor": {
          "ref": "6c2d31d6-dd71-49a2-9fcc-9627193f7ffc",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3809d9da-a355-4d2a-bd52-10d2abaf8400"
        },
        "item": {
          "id": "141cc1aa-101e-4287-9cc0-35ea1db92f26",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bac963f1-4368-4b8a-a8aa-e40d3e5877fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70227e4-d6e2-4faa-a7c3-d78d83a3b5a6",
        "cursor": {
          "ref": "739fe3d6-5386-4670-801a-6c239a8bf3ba",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "50efed0e-057e-4be3-8194-836d5c702776"
        },
        "item": {
          "id": "a70227e4-d6e2-4faa-a7c3-d78d83a3b5a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3eca9a26-3d90-4a52-b7a8-7ec0aff5b8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c039e391-8fd8-453f-a05f-47dd6da70416",
        "cursor": {
          "ref": "f4793164-750c-48d9-9fb2-64a009189fb7",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c96bf58a-e8d7-4354-9829-ce1f196640ba"
        },
        "item": {
          "id": "c039e391-8fd8-453f-a05f-47dd6da70416",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b7a24d72-09c3-475f-b249-9a89788a9adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fe4ce2-bd88-4fc6-8038-d542f1b26214",
        "cursor": {
          "ref": "6ada1451-60b9-4056-9558-36c56d0cb7f8",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b6ea9982-69cf-450f-bac3-592c25606e9f"
        },
        "item": {
          "id": "28fe4ce2-bd88-4fc6-8038-d542f1b26214",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b479f57-847f-4f6d-b7b9-a20a9e4783b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7e70ab-3c11-471a-996c-77105469691a",
        "cursor": {
          "ref": "bc227ab6-3d48-4673-ac7c-64db30376b62",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9200c485-aaa7-456e-9300-ee97f93ca45e"
        },
        "item": {
          "id": "4e7e70ab-3c11-471a-996c-77105469691a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7f0dedc1-5296-4d6b-a57e-d533b068e13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257bfcfa-317c-43a3-870d-5b44c1a085bc",
        "cursor": {
          "ref": "190d7048-0715-488a-b60f-8b7493ce213e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8d0142e8-91e3-4b91-bdd7-d05bd15934b5"
        },
        "item": {
          "id": "257bfcfa-317c-43a3-870d-5b44c1a085bc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ebd8d9e0-f9a5-46a1-a1a8-512fea65b346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17e24a4-4360-4c1e-90da-ebf8c2264076",
        "cursor": {
          "ref": "4835c967-503c-4c7a-9aa4-5fb5b0c48a4f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dc62bcbe-cb1b-4e55-abdc-3d7ac6d78494"
        },
        "item": {
          "id": "b17e24a4-4360-4c1e-90da-ebf8c2264076",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "144939be-6421-4ec7-97ac-88dbedc43ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db41ac6a-547e-4687-b655-3af6bb33e310",
        "cursor": {
          "ref": "26d44432-b184-4e95-af9e-70a93daf1289",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "019bc97e-de2a-40ff-bba9-952f1d01ba81"
        },
        "item": {
          "id": "db41ac6a-547e-4687-b655-3af6bb33e310",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2c87b7c2-1eac-4fbf-a73d-232df0d53bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25985c3-4135-4a41-8bce-d8f792720a23",
        "cursor": {
          "ref": "e7f6d79b-ffd1-4777-8542-dce16384396d",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2cde9a73-d873-4c2b-be86-9ed8bf653150"
        },
        "item": {
          "id": "b25985c3-4135-4a41-8bce-d8f792720a23",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a2823c21-2103-4b6e-99c9-bd0f09c3b855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc6fe74-c853-4d6e-b77e-2dbeaf958660",
        "cursor": {
          "ref": "3fa93c6e-256a-4d1f-b38f-cbe1a0dbe8ce",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1e95a2cc-28ea-4801-b50a-2445493292f2"
        },
        "item": {
          "id": "0bc6fe74-c853-4d6e-b77e-2dbeaf958660",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c95a326-3b18-41dc-bbcf-d48cc72621e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a801d790-ccfa-4baf-a2fc-850ef8bca79d",
        "cursor": {
          "ref": "af5db0e1-b39b-4f7e-8522-7c23c23315e3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "495be11f-3a0d-4a38-9756-133450023946"
        },
        "item": {
          "id": "a801d790-ccfa-4baf-a2fc-850ef8bca79d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d2940725-f22f-4976-bf1f-aac34eaabe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0098d7e3-4079-445e-b1ed-c9baae25315a",
        "cursor": {
          "ref": "e16d07e2-5125-4092-9897-8ee12c9bdf9d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb6c6cc3-d208-46f6-ab43-265b03010824"
        },
        "item": {
          "id": "0098d7e3-4079-445e-b1ed-c9baae25315a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "56016855-e92b-4795-9941-1bb3febc3406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c633f3-a487-4e4e-8ea1-7bc770d0872a",
        "cursor": {
          "ref": "efaeb52a-2005-48f0-843e-d06e156101bc",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "65665043-afbf-4d36-9188-86b733e9ee2d"
        },
        "item": {
          "id": "03c633f3-a487-4e4e-8ea1-7bc770d0872a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9e5e093b-3b54-48e3-bd4b-36a466b8a0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3166f960-cf82-42a9-83f5-d126a4968694",
        "cursor": {
          "ref": "8f8f3e25-31c5-417f-9298-9a2eee8ba9ff",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1d5240d0-bec8-4d50-882d-90f2eb3e97ff"
        },
        "item": {
          "id": "3166f960-cf82-42a9-83f5-d126a4968694",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c057a88b-baf0-4c86-b8ea-69a12884c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4807e8c-1f2e-471f-a025-360e792a2f20",
        "cursor": {
          "ref": "2fd00cbf-1723-47b0-8e6d-a20cb68f974d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5097f508-28b8-4765-870f-0c696fa7879c"
        },
        "item": {
          "id": "e4807e8c-1f2e-471f-a025-360e792a2f20",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b3307bb6-9e9c-472c-a368-d34b86ed9a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5917859a-048e-4f7a-8c45-33c219d87c58",
        "cursor": {
          "ref": "7f06365c-cc5f-45bb-aef4-500191d075c6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "64e5ae13-d45c-468c-8c09-5897d73e65bb"
        },
        "item": {
          "id": "5917859a-048e-4f7a-8c45-33c219d87c58",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ae92136f-a57a-4789-a757-8fcfeadeaf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ec22a6-d150-4352-9cb8-97aec67cd2ef",
        "cursor": {
          "ref": "044e08b6-bd98-4262-b257-00e2f52e9ddf",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d56f312a-6a99-49c4-92f2-304bb406126c"
        },
        "item": {
          "id": "b5ec22a6-d150-4352-9cb8-97aec67cd2ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "67cf1fdd-66df-4088-834c-256745a32c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283c703b-d33f-4f2f-ac92-c273e2d4e8d1",
        "cursor": {
          "ref": "871c2f91-7268-48de-b6f8-9b36e3a49f23",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ba69d185-eac1-48cd-a17d-0f880de244db"
        },
        "item": {
          "id": "283c703b-d33f-4f2f-ac92-c273e2d4e8d1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cddfb38d-1647-4f8e-b545-524111cdf9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad4c04b-e711-4cf2-8ede-95e288ba9a16",
        "cursor": {
          "ref": "e0916f23-321f-4e1b-8442-949ee88ed142",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5db8735c-6065-43b3-8f96-fa80ad8c2b2b"
        },
        "item": {
          "id": "1ad4c04b-e711-4cf2-8ede-95e288ba9a16",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e7445551-3363-43de-a913-394b53a328d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc966f17-fed1-4687-9df5-912250898ee9",
        "cursor": {
          "ref": "ed20f0dd-d48e-4455-860d-2c70481ed800",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "14102995-2832-4540-8922-a612eabc1d06"
        },
        "item": {
          "id": "fc966f17-fed1-4687-9df5-912250898ee9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dc3962d0-14bc-4c4d-be09-de052757e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219f9f2-245c-4b3a-bb8d-875c34eab915",
        "cursor": {
          "ref": "75661d8d-e111-4df1-95cc-a549900c828d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "90cdb490-510c-4b1f-ae28-5b3ccef97f88"
        },
        "item": {
          "id": "e219f9f2-245c-4b3a-bb8d-875c34eab915",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4942cee1-a78b-4529-a09c-cc839c8c269f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f245b-19e2-4d6e-8773-971d3e8768f1",
        "cursor": {
          "ref": "92518fd8-ee48-4ac7-b8b6-960e1ec6aea1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6ab978f-fc96-4c05-9993-7b8a0d301962"
        },
        "item": {
          "id": "5b0f245b-19e2-4d6e-8773-971d3e8768f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "25ef43c4-80c0-4760-b153-2abf487abacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabeeba0-c743-45bc-a869-d5b4759e5cfc",
        "cursor": {
          "ref": "697095c2-38d5-4d92-9c70-0e79be084afc",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a7a6b2b4-0c04-48bb-ba2e-1771d13f1ed9"
        },
        "item": {
          "id": "dabeeba0-c743-45bc-a869-d5b4759e5cfc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c31d864-a061-4a33-9691-7ac9f019dadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3887c536-a5a8-4df4-a72e-18483e9423b0",
        "cursor": {
          "ref": "0b2da5b2-adfc-48cb-a11f-5dcaada70f2a",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f5ba5033-0ff3-4027-a931-0d8f4ea7de3d"
        },
        "item": {
          "id": "3887c536-a5a8-4df4-a72e-18483e9423b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "98256d56-156c-4960-a777-a6a34a70b59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfe8aa5-db79-45ba-8bac-78e2faa9eb86",
        "cursor": {
          "ref": "9cc49fe9-ff37-4a9f-915d-da84bef0b9f2",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e8619c15-cb6e-4ff8-a338-1ca9641f3c2f"
        },
        "item": {
          "id": "acfe8aa5-db79-45ba-8bac-78e2faa9eb86",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8e62924-102d-4ea1-a337-f8224b52326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7144d7e-d92f-4679-b77d-cdc970ba2069",
        "cursor": {
          "ref": "e0b3138b-8fea-467f-892d-dd02ce4b0da5",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c7e58f6f-7a8e-4def-9f9e-8d046aa60f27"
        },
        "item": {
          "id": "b7144d7e-d92f-4679-b77d-cdc970ba2069",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2b786514-c36e-43e5-9808-1ac7c9048067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0559220-162e-4995-8aaf-aa9d21b00700",
        "cursor": {
          "ref": "36ace921-9a79-41dd-a2ea-1469ca8104a5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "37e5f88d-4f12-4cc8-9a4a-0331dce847d7"
        },
        "item": {
          "id": "b0559220-162e-4995-8aaf-aa9d21b00700",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7409c906-4032-4ff0-9257-3d6cb4c200d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e618681-0959-458c-a306-2f230cb5a5c3",
        "cursor": {
          "ref": "0322a2cf-9747-4ac3-aa9e-3a2b86c5649f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1508903e-34a5-463b-85f6-bd8d2a87991e"
        },
        "item": {
          "id": "7e618681-0959-458c-a306-2f230cb5a5c3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1d698bad-b72d-4cab-96ff-8d5b40448828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78717994-3f0f-4400-8e2d-19ee9ab5c951",
        "cursor": {
          "ref": "eb6b3749-0d70-4158-a1ee-170b85af38cc",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "901e810d-27e3-496d-b62d-215605d4ee9f"
        },
        "item": {
          "id": "78717994-3f0f-4400-8e2d-19ee9ab5c951",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9829df04-283a-4562-87fc-7839962ed754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44867e14-c7c4-41b2-aa3c-e0b508f7a28f",
        "cursor": {
          "ref": "c333e485-9639-4802-a66c-1fb78a514726",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "638aa9ff-6d25-4939-bdf2-bf8d6f28ab7d"
        },
        "item": {
          "id": "44867e14-c7c4-41b2-aa3c-e0b508f7a28f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e62c2290-5eb3-436b-aa74-bd7b7273c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f577b3-5b7b-4310-9824-524f3028ab79",
        "cursor": {
          "ref": "68533302-5d48-4790-afac-bb12186488ca",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7192275c-8d77-4bbb-a621-977a4e086832"
        },
        "item": {
          "id": "b5f577b3-5b7b-4310-9824-524f3028ab79",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6588cd25-2a14-4123-8714-5464e813dce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d129c2-1bc5-47d3-8207-004c4f3cf1b8",
        "cursor": {
          "ref": "eae04cd2-0723-4f8c-a399-79b286ab4d25",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "045b4948-2194-4a76-8340-c01d9e05e574"
        },
        "item": {
          "id": "b6d129c2-1bc5-47d3-8207-004c4f3cf1b8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1d4f49b8-3c19-4624-8c85-04dd172165df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75442b1c-0d30-4e8b-9e75-bd221dfd2702",
        "cursor": {
          "ref": "adf0c5bc-8aad-4e8d-8b46-96977fa3b70e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7c71d8d8-9ebf-41a3-9dce-79c17559e2ad"
        },
        "item": {
          "id": "75442b1c-0d30-4e8b-9e75-bd221dfd2702",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "89688980-d2c9-41c8-baf2-b945402bb275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ceeba-fa0a-47c1-a329-f2c702a063ef",
        "cursor": {
          "ref": "39ba560a-da16-4c5b-909e-5340abf9aa6f",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2c496bcc-e384-4316-87ea-25176d7740cf"
        },
        "item": {
          "id": "ad9ceeba-fa0a-47c1-a329-f2c702a063ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "be4502ec-94f1-4cb7-97ac-b316006a9597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e28878e-df1c-4f9a-a01c-b7940d7a6cb8",
        "cursor": {
          "ref": "174dfb6d-2c65-41df-870d-98ff2b0d4c54",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "29d73932-9807-47b4-b8a7-a7b8ffb21fe5"
        },
        "item": {
          "id": "8e28878e-df1c-4f9a-a01c-b7940d7a6cb8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f721c18-bd7e-42e8-9fa9-e53b2ced28f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f045e0-3e54-47d9-9346-ec2f964d0552",
        "cursor": {
          "ref": "28c47a5b-439f-45e4-8656-58a6d462caea",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "061a9c80-a0ee-4ed9-b3a1-02861a5e35b9"
        },
        "item": {
          "id": "c6f045e0-3e54-47d9-9346-ec2f964d0552",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "da5dfe43-ea34-4f6a-af34-8323eed006a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb05ce20-1be0-4217-b31a-0adf3ab93705",
        "cursor": {
          "ref": "cdd60a65-a411-4d4b-a323-0e7c96582321",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c02bfba2-6529-4bc3-b8fa-faffe7631189"
        },
        "item": {
          "id": "fb05ce20-1be0-4217-b31a-0adf3ab93705",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cb163390-c0be-4740-a7e1-d750630f4692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555081b1-e5bc-43d2-8a33-ec06660f23ab",
        "cursor": {
          "ref": "98f1fa15-76a7-4860-9a7f-a722206c3e33",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c24983d3-91fe-4b4b-a6a9-4c097e71a538"
        },
        "item": {
          "id": "555081b1-e5bc-43d2-8a33-ec06660f23ab",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "490a0bde-8387-44ff-80e1-13051574f3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678f27e1-c28d-4873-9de7-f974af307f1f",
        "cursor": {
          "ref": "6aeeb6bb-c9a1-4b75-bddc-f87c36259a92",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e490ca5-0f36-4356-bfc9-ac5825eb497d"
        },
        "item": {
          "id": "678f27e1-c28d-4873-9de7-f974af307f1f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2da69154-d5ce-48e8-a045-fc162850aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d22008-83d8-42a5-ad45-a428d6cdbad7",
        "cursor": {
          "ref": "555a6753-a0a9-4f62-bd0d-5bb8bc33a9b6",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a0e2e67f-f437-4fb6-88a7-5ff125bd7ecb"
        },
        "item": {
          "id": "b5d22008-83d8-42a5-ad45-a428d6cdbad7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1c23f01d-87ec-44d8-8a77-3d53be2c37f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c548e743-fd27-4d94-b203-6496a9b0233a",
        "cursor": {
          "ref": "7cc37618-2b52-4f30-9b14-ff55cd018aec",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "50023822-a69a-48a0-98db-5596dd891ab0"
        },
        "item": {
          "id": "c548e743-fd27-4d94-b203-6496a9b0233a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "13c9d1e8-a4a2-40be-bb83-a73b575e9da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61b911d-49a4-473a-82e7-8ea7754d6563",
        "cursor": {
          "ref": "1e8ce9dc-e077-43a4-a93f-332f682311b6",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee979f04-994f-44e0-93d9-d7a843e99905"
        },
        "item": {
          "id": "b61b911d-49a4-473a-82e7-8ea7754d6563",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "393cb69a-75de-40ef-b71e-89a09273d0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b53043d-632e-48e9-8faa-f8e5ed7a0007",
        "cursor": {
          "ref": "ecb28138-d2e6-4aa2-afcb-2bb8cc71b47d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "407b32fa-3118-4023-9d1e-b524ba7a6dfc"
        },
        "item": {
          "id": "2b53043d-632e-48e9-8faa-f8e5ed7a0007",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5bbea0d1-2b6e-4c06-862d-8d6b67081d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab21f59-610f-41de-9a97-6caed6534934",
        "cursor": {
          "ref": "eb73c81e-3a95-4a6d-af2a-bb7c78b54bc8",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e56b8aa3-d30c-4262-afe6-0a0ab3dc375d"
        },
        "item": {
          "id": "cab21f59-610f-41de-9a97-6caed6534934",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "56a3e749-2cff-4e15-a1cd-20ea4c8b4e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b7396-6c3f-4beb-9aff-5c5152487c43",
        "cursor": {
          "ref": "c6da3998-9ee2-4264-aa20-17b006bed2f5",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87845b86-fce7-4199-b6a5-0cac621ec5a3"
        },
        "item": {
          "id": "ed3b7396-6c3f-4beb-9aff-5c5152487c43",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "18f78e59-f31c-4f01-bafa-c7fbefe219d3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 235,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f831437-4cbc-4b4c-9800-f8fb7b880076",
        "cursor": {
          "ref": "452549c6-80e4-4126-802f-37d16a707a51",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "392fe65f-bed5-4d7b-b752-474e2bb1895c"
        },
        "item": {
          "id": "6f831437-4cbc-4b4c-9800-f8fb7b880076",
          "name": "credentials_verify"
        },
        "response": {
          "id": "710065b0-4ec0-45cd-bb21-8da808711dc4",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948654e9-bb1d-48ce-8dc6-8e0a9d73ecc2",
        "cursor": {
          "ref": "46e0bae0-6258-41c6-aa8c-da7e42a1b2b4",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "575b9dfa-159f-4b3b-a834-ee6d68708467"
        },
        "item": {
          "id": "948654e9-bb1d-48ce-8dc6-8e0a9d73ecc2",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "794fdc22-a39a-4742-a761-a581f900077d",
          "status": "OK",
          "code": 200,
          "responseTime": 280,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3bb3b1-337d-46fc-85b7-c09fd65ab903",
        "cursor": {
          "ref": "0cef3312-5866-4d67-9c1d-e8401858fd53",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e3dd4d76-5189-4fd6-a6c0-199e877ff8cf"
        },
        "item": {
          "id": "5f3bb3b1-337d-46fc-85b7-c09fd65ab903",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a8c5d548-b207-4707-a220-95fdff5f7d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
        "cursor": {
          "ref": "021af796-060b-4c2c-bb40-e15637193dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1488915d-8fca-4e86-b710-27fd129f9dc1"
        },
        "item": {
          "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71f1bb69-6f7a-46b5-a1fd-3490b9acf906",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
        "cursor": {
          "ref": "021af796-060b-4c2c-bb40-e15637193dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1488915d-8fca-4e86-b710-27fd129f9dc1"
        },
        "item": {
          "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71f1bb69-6f7a-46b5-a1fd-3490b9acf906",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
        "cursor": {
          "ref": "021af796-060b-4c2c-bb40-e15637193dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1488915d-8fca-4e86-b710-27fd129f9dc1"
        },
        "item": {
          "id": "c2563529-9954-4d83-b612-5fb04c4eab30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71f1bb69-6f7a-46b5-a1fd-3490b9acf906",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05124274-38e1-463f-803c-1f3b4545d03e",
        "cursor": {
          "ref": "ce851b6c-03d8-4dd0-94bd-4794827dea2a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d24947ce-11ce-47f9-95a0-5704c2189adf"
        },
        "item": {
          "id": "05124274-38e1-463f-803c-1f3b4545d03e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "31aa21fe-ca92-4c52-bfd0-6566a0c94904",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 236,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21157583-d9a7-4306-8773-f68901d8c321",
        "cursor": {
          "ref": "b6a3cdf6-5e02-4b77-bb1f-c9fcf19ce5fa",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be11c9fd-0654-42a6-8730-f654b085c45e"
        },
        "item": {
          "id": "21157583-d9a7-4306-8773-f68901d8c321",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e056880-e5cf-42af-a423-f46cec61cb65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21157583-d9a7-4306-8773-f68901d8c321",
        "cursor": {
          "ref": "b6a3cdf6-5e02-4b77-bb1f-c9fcf19ce5fa",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be11c9fd-0654-42a6-8730-f654b085c45e"
        },
        "item": {
          "id": "21157583-d9a7-4306-8773-f68901d8c321",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e056880-e5cf-42af-a423-f46cec61cb65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a53eee0-e340-49d8-83be-f55bbdd488dd",
        "cursor": {
          "ref": "8febf232-01e5-4113-8041-7ef48716b389",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "abbe8ce8-72ad-4d52-8a04-132fcb0b6321"
        },
        "item": {
          "id": "2a53eee0-e340-49d8-83be-f55bbdd488dd",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ab789eee-b444-47ba-a335-b5619eae3101",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 468,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ece4ca-48c2-48af-af0c-02674f5d13a6",
        "cursor": {
          "ref": "973bcab4-d31a-4b86-a670-237cfd4e1c0a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50bc95a8-6248-46e7-bf55-cbb4f2b0bd58"
        },
        "item": {
          "id": "78ece4ca-48c2-48af-af0c-02674f5d13a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c61dfeec-dde2-4aa9-8a49-bca00024215f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ece4ca-48c2-48af-af0c-02674f5d13a6",
        "cursor": {
          "ref": "973bcab4-d31a-4b86-a670-237cfd4e1c0a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50bc95a8-6248-46e7-bf55-cbb4f2b0bd58"
        },
        "item": {
          "id": "78ece4ca-48c2-48af-af0c-02674f5d13a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c61dfeec-dde2-4aa9-8a49-bca00024215f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b13d99e-da56-448b-a6a3-8ee53a16eff1",
        "cursor": {
          "ref": "db4b29b4-6bb3-493e-a841-229542bf5b85",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "46edc41a-270e-4365-966f-4794d99e2cc8"
        },
        "item": {
          "id": "1b13d99e-da56-448b-a6a3-8ee53a16eff1",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6125482e-c1b7-4771-9518-607cb8334984",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 458,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}