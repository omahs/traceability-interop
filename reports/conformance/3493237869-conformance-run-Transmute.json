{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e40b433b-c855-48fb-b177-1e1703df1e95",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ee1331ee-c2c6-4a61-8205-f5c829ca326c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a351592f-c413-4bba-a5d5-9fa05e26ba21",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "946e6489-3b1b-4c13-8e8a-922aa78e0e91"
                }
              }
            ]
          },
          {
            "id": "3687d7f2-06b8-4b5e-b727-009baec858a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7919a2ff-1f64-46fb-af5e-7e12df73d38f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "41525141-e38d-4fc0-aa9d-1c5b1b34c179"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3bda4050-7f8c-4501-9190-63f9ca63009b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ecf5526b-763c-47a8-b11a-6336ac71faa4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e0cabf9-aa6e-4f15-ac7a-4409bf7f7f98",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e720393-6052-46b9-b439-1321882662d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d75ec8d6-acc4-4e43-ab51-4f73995591dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02f1c4e2-35b8-44f6-847c-71e92ee69e6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ec205eb-bf16-4ed3-bc5b-4e04f8aea325"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eccf6f49-5b17-4744-a627-2ddb4e0509de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd9ed3c9-c65a-470e-8e29-a50f2b109542"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7c0169c-f12e-4c7b-9786-ea2fb775864a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ef85a172-c33b-4a90-b7f0-b555186edac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcaca3dc-2395-45b0-b112-915b81f38db6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd0a4f69-5a91-4662-9b9c-e9ed68815b1e"
            }
          }
        ]
      },
      {
        "id": "36ed5008-6255-4d1d-867e-6070a6016843",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5fb59b90-4def-4a7c-b057-f1ef7edc9ad7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a033967-1e65-41a2-943e-f80cdc20ac98",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2ebc955-16ec-496d-8d8e-f38f95c2d626",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2d5b84-ecc2-4732-ad3c-1d3f95c76537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd95ee8-dcbb-4b8b-a4df-4572606b87ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfa6266-9777-4a12-801d-4e9b20f5a615",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81292791-92fe-4266-8b12-730b10bcc1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ff29b4d-fd0a-4f94-b558-5d8db23fdf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61044fe-9d3d-4c6a-9f34-a242adc68fce",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f221ec2d-c97e-4d4a-a837-c537d1f11cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7d5b614-427c-48b2-9873-829ad9e5b9c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "997c3125-e196-4801-9bd9-0f70ebd5b667",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cecca6db-f06d-43c0-927e-b6c3c0962a36",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88097aa3-8d7a-4d41-aeb7-e756916635ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae15b404-eff2-49cf-a6ac-e5766e72d6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed6b53-bf40-426c-ba31-0c004ac3292c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636bb059-53f3-46d5-b19f-83f7ea075ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dfb757-b0e2-4897-a287-192a1e627002",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461de437-9877-41a0-b160-d81349e02f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17a5ec74-bf49-44ec-996e-1d7660d7a461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655dd588-42b4-4818-a925-f2722802e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1b5a5ca6-137c-484d-b574-0ea6eba5599f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3fce59d7-efd7-4ef7-bb4a-b83a0e460e49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cde7c4b4-05bd-4b5d-b920-86a94aa18350",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc606b46-aca7-42e7-853e-9b67ce974f10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6ba0b63b-f378-44d9-a9bc-767c3c1c9ddb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85f1d64f-455d-462d-96aa-bb096ed5ae15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b8457098-b87c-4883-920a-31713d5ccf0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa37963b-9dfa-4d87-b7e6-51a59d1d3b1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4a3141a-84f6-40ca-b93e-3e2c5635e7d2"
            }
          }
        ]
      },
      {
        "id": "0aba9109-7e27-4b6a-85bc-9788f620d089",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ff2aa62-cf47-410e-8aee-14d709190355",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d986e9a-653d-4325-9870-a3e961ba39d0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "563aac5f-e7ca-4984-9be5-6883fa07c4c0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc8353-304b-4a78-927e-e5e44c7f8783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f9efb8-ef76-41d5-9847-12f00c27de51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7baa857-67a0-4f4c-a6d7-b7a919bd9fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c3f6c52-991f-4005-abd9-47e9f8f5b402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e08bf5d-fb8c-47c3-a4b4-1b93898341aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e2c9fc-3d39-4e80-a907-95082f993fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7b8944-a820-4db2-b911-a76a10b582ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dfdcdf-a30c-4d16-b6ef-5e0a4e0ff7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f8b93de-2c98-41af-b1bc-005fdb66b6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef23765d-8b8e-4162-8599-1450492df510",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbfa707-5d08-450b-998c-47b423d75e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68b12ac-eff3-4059-85d5-e2ef70468452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2180aaa1-3bbe-4782-b422-14c007c319b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e48bd52d-a9d7-4813-9038-cef9732e2584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b4c84d-302a-46e1-bdc0-ec333133e5f7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22661d72-8a31-476c-8d75-a988b6961b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b2706a-92cd-4f27-8c05-f8ffd7f1d284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b233ec5-3344-4ff5-b69a-a231333f37ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e866b5-431f-4255-be3e-9c8be020177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bef364-c6a6-4013-a0a8-06c6f0f70682",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33de42d-0c7b-4fea-8902-41fff233fcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514a60b9-3fa4-4bc8-9c88-2a826cbea244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07cfa1a-9036-4e6b-8710-8160f6d3e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa7b28af-f328-49ea-9796-f935e6229e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03d42a9-aea2-487b-a13a-d88c0b9df880",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40602272-335d-4fae-993e-c7946f05bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b01e75d-efa4-4358-93cf-49273844a2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30acc841-4e7d-4a10-8289-93357e487774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57e81ba2-ec28-4b6f-83f1-dd1c578f8649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29ab466-96bc-417a-94c6-b004d30a4064",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7805c4e-4e79-4044-ab4b-517f2537faa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7729230-aaf7-47cf-9204-0877342e63d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5472ebc-2711-407e-8a2b-d3030596b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fa6eb71-736f-47e3-bc69-a2f71e4df989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c726b-bef4-4148-b00a-c76f400d62ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12fe887-84b0-4bff-858e-e2c206d00528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fe5b84-15e5-474d-9166-a6f39f58eed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4139424-dfb3-41a7-bc3e-4d42736c7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eaf0c15-dafa-4e15-adf0-d4b133c5f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4358d8b9-8137-49e2-9532-5a53167eed24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538d392b-a93d-4cd6-881d-80be1c04e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756a3a8b-4f57-464a-bbef-66c183d5e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30351f3-476e-4291-a65a-0249b043f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a98d83e-122f-45e1-9e59-06b5fc391893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90232468-0cc2-4b20-99e2-d36f4505a1fa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e0b21-0608-4213-8881-4a4e3791d6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54f9114-bfbd-4dc0-8184-3f4f3dcf8816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3ace7f-48fa-4def-91dc-caa2e574ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e2199f7-0469-4948-8767-fdd4886250bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b1060f-9fd5-498f-9d07-ea7e9d3694dc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56df13-865e-4bf2-853c-cf0b2a36e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d832d5d9-469b-41d1-8a7a-218259ad51e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a8a595-39ae-4813-b8cb-1b111318be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a15ab19-4027-4b44-9033-30c3d045c134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea102591-ce3e-4b77-8a33-a1078a167670",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e55324-1dcb-4a3f-a2d0-0aeb8051dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0360db5a-023b-4582-964d-2fb4ac5c248e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510908e9-b864-4c78-9905-8cea1d5e1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a901397-7fb3-448b-9fe9-595aa3bec774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b6121-3791-44cb-b311-4423917e1999",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a77b87e-a611-4576-b7b2-8f3afff9865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a20a94-6bce-488b-adc8-ad82f72f7677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36b9c2-11a5-414a-bc7e-613adfbfb8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e0f2a52-0423-44be-9f9a-bb0c4c47e291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f380dbe9-7a9a-4f0e-b5d4-8a6558215d49",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd177f7-8d4d-4396-9419-591f10fa929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57536ab-6736-4ff8-a8ef-372694446399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbfdbf9-46f2-4919-917c-1f1d75112859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ebb3bf-1255-4eb3-aec7-295c9d06aeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced23088-d856-4f26-aa24-153cf766b43f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9fbfe0-7978-49ae-bda3-d51348839b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe738ca-76af-4cd0-a6cd-6810c4815929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd9db0d-040d-4665-963e-668c1ec11fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40a71208-02fb-4c9a-8c82-8ee50539ef36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b14940-5f12-44bc-9bf2-ef5fd478fb26",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34442aa-38a3-4ec1-be14-8a275dfaebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde02e05-4199-4f2e-8ffb-c0cf358d0592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccab887a-f1cf-4fd5-9138-e9bb4d8de22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6d93a46-3c2e-489f-987f-3ad672915d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1af046d-ea1a-4036-a8d2-4952e69bbc00",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901458fb-c039-46c5-9447-f0b95dd0f537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4920bcd2-9ee9-4157-b511-de79823863a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe579ec9-c1f9-4caf-88df-258285e3b93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f157ec4-381e-4117-b29d-de9049725174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53612b6-18d1-4ce8-9ed0-65539a5e803e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8887f9ae-c40b-4cc8-b759-153756853aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a644e2-d9d6-4dfa-9ccd-96a9e6e4630e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ecbba7-d605-44d1-ac87-87c3beda53d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd2e85e-6015-4915-86fe-2f3bfde60eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991afcc8-2bc8-4e51-92ac-9a166a2a6eaa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a44e121-5567-4483-af6c-b482ad488111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb9d837-f86a-47ed-94b2-422e99ca20b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d3880c-8838-4a25-99f9-050343d790ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cf4085-e70f-4712-8c91-a452be88cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92530ec-a9a8-4291-a536-79a6140bb977",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98837db-222a-4dda-92c6-fd5409f1cafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6c896a-4b26-4b2a-a5c1-f73efc6135b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28af2b55-d16a-4bea-98e3-c1c63d253f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd6a83-1471-432c-8278-9d66b310c9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc6be7c-0857-4459-aa80-f70cfb80db84",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6405944-a875-4771-8e96-63d02842230d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b32d5c2-f259-41bd-aa04-1f45fd041a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f8edb0-94fe-4d08-8869-42102dca4bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2dab0b-4472-4a80-bb12-145869b4134b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ceb71a-8ba7-47c1-851d-5ceb77bf8720",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e338502-3ca5-4786-8fee-4772a8b6f15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85ef156-bd41-473b-b96a-6e0dacef353a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed9fe9-ae80-4f9e-ae76-335aa12ad499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea65499-0733-4aca-8f01-7ba7d9b28bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7286d3b-397b-48c4-a51e-d3b83058d12b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b4fd97-d6ea-4ef8-99ac-76a47d7829a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da811acd-a7fa-4695-a8cf-3042c517f8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc5ac97-dcfe-48d4-b577-25e7591fb05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95377384-cd11-46bb-9cff-e6878ab04eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e1fff6-6881-4ddb-980f-408bdfd72634",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b110ab-f152-4ec2-9d69-437487a22056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eac0de-bc3d-42d1-9e97-5655c71273bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdefa0f8-eb8a-4285-9c16-0fe9a1b466d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb82f07-b0d2-4465-92e0-74b69721f84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d19dd32-e288-49ee-a521-fe666fced57d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4fbf9b-c6a2-4a31-b320-0ee865aa178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd6f72-c4aa-4f7e-8692-5a3c133bddb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729b2092-beae-4239-9f8a-67c15d6ef7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a76132-a8c8-4d9b-8c54-50cc77046087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b81e205-4b04-4d53-916d-6ec8d6d09cc0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8a3990-9458-4040-9cd6-c7d231eee3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d857998f-868b-4a28-8941-079b4dd75bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159f177c-258d-479a-9212-2285747442c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01694297-57ef-4465-ba6e-697b4399789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66b1e8d-5bf2-4a70-918a-d17bed2cc5a8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09a66ea-b41c-4a40-bc8d-9793690f191d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f47898-e15b-41d7-95f0-256d8b0412a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ceb18d-73f8-409f-bf00-b86b7e91a704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caad75f3-aa61-4454-80f4-c73c1f0d273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7808f970-9358-45aa-a542-a5a9d02eec8b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d86c84-d63e-42c3-8e22-6f8f2621a342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e1aadb-54b3-46a9-811d-d17968d6b428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6d5ed9-2be1-42e4-9814-cadf7cf3c17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e214f6-9847-4ef7-b10e-32f6586fdee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47531f18-3b93-4756-8b7d-a9125e29daad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892c2a4a-9fa6-4511-ae69-e8c44e5e616b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5be256-ebd4-49e2-a4d8-1bd3888c3e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5612069a-9d3a-4550-96e1-578717a9ff9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a39594-0b76-49ed-8fbd-c8f3d067041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3d3552-033a-454f-b9a9-d7af7092d1d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86387946-c7bf-4f0a-9349-d816d46c66aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b569cf-24c4-4046-99f6-f60352dea0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782d9d30-9fda-4864-89ea-e3422fe32a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a367b22e-25a8-495e-9e01-946ffc111e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a7f44-2910-40bf-8a49-ae8aa0d15f60",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec758fd5-0016-403f-b37f-f8db469ab04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e81625-d82c-431a-a785-9151945ffc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87262f-dacf-40be-8f35-70ffc2f96bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ad8128-3f03-42b0-9456-d0b22ce03374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd0de53-0f06-4efe-a00f-9a7a06240ff7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272affb6-614f-4237-a1d4-bd89099f99ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde2077c-5a1b-40ea-ba51-74e2b7b16b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e12584b-619c-4dae-b8b0-41aec3363fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb780c9e-2b07-48d2-8512-c3d4cbbb804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a311ab-da86-424b-9d0b-8cc15641d00d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953f7f9d-8168-4f38-a8dd-3fc4b8fae6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c90e5ad-23eb-48c0-80fd-4f02805c78a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee72356-2cfb-40ba-9236-2267a6401b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d77cc5cd-bd22-48af-9121-d6f1acb68d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d2a88-d3cb-4c14-847c-4079715563fb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175cdbb7-e785-4b67-98c8-9c9a9e0c164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3125593a-cef7-4fef-996f-35b30f516faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c676c7-2e4b-43b7-a35a-a86de82a2f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0036ec-fdae-4585-8a48-560b2fd29b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c7e279-88ff-4d3d-ba8f-90d8b240fcb9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1264aa5-2b39-4c5d-8e7a-08fea031d8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855ee510-1c24-456a-ad6a-b9573b3d9a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c12d07-e886-4cb1-bf64-498979910ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "45f87274-04d7-411c-b640-a84c97245e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5809344e-ce93-4653-b224-ed78a27a3172",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb082d0f-289e-416a-bb92-48ef0837288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4f8c0f0-db92-4c16-a9c3-5740ff5e565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cc4ce8-82aa-4ff6-8493-cad708d1b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c53d547-9bc0-4a1c-b862-572432c10284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcbd954-1a31-4a47-8a44-b99dbafac384",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4073171-86f7-4850-a6ef-0519e3815d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640e39c5-8053-45c6-8c18-bc0dba0c83d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5358e37-61e5-4fd1-a052-2cb49f99e5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c7803f-0bfa-448f-ab72-5aacd6c291e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aab4759-20e5-4d0e-be92-8c53729a346d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc90a7c-d822-4f5a-98a1-747dd03e5110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0773953a-a94f-4dc9-a9e6-8b95fe52457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251fcad9-6da3-4c3c-99ce-7308d58f1a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c76333e6-724a-423e-bb28-cde132207e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6568f76d-2f29-4986-bcad-426e59c1e688",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f220adc-db15-4ae0-b4d6-8cd03b39f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42fa702-a8d8-4a90-bd65-d546cc1b2d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db2bf9e-69b0-4b08-8201-9970f7beb8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6019f8c7-a3d9-4fb7-95dd-b4cf53dc4251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3214e959-39c5-4e12-af8c-02625da12f11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ed94e-58c1-431d-a2e0-977f584059c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91f68d3-0a7d-4f29-83ac-cb10aafec0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8a81a9-1797-4f9b-9b5a-cd69045c02f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "614d2c15-9609-4def-8c7e-d819b12e442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a38c73-a0db-4281-ab04-d9250bfc0732",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c63568-908c-464e-b535-f87694879f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4a1eb9-4ae2-465b-8775-786a2d02d60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84676868-a0ea-4a3c-bfb6-8bb102564901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c03a1ee3-f82a-41a8-a364-7062bb1adaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8921f080-5319-44b1-a012-276e63097d6f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e689e6-441a-4f65-a36f-296332b27fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4f073-ec15-431c-8e46-249e91938a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be41a3a5-aee1-4ddc-a66e-37ca5ae0dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90ac6833-4348-4c99-be72-f5f997e71b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f100e875-d733-45b5-9f13-a80f19bcd65a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fae05f-d726-4966-8e45-a25d54bec72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049adb32-c08a-40f1-bbe8-8c45bc7f0d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430f7654-f465-4e0c-b9bc-6c5ef0925aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e99307-e4a0-4bbd-9e48-459c549ad848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4667d45e-76ba-43c0-bbdc-30d5ccdb1939",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee032bb4-dc74-4128-8794-85500e3c4f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25543813-919d-46e1-9df4-e07f0aa52e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fc93df-278c-49f8-b7ad-b2e4009b0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "10186ed8-45c0-47df-8e1c-b6aeb6c68b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae447c-9183-41cf-a2af-70707ddebd12",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8d3fd2-eeea-42aa-ba77-9da6e2c57dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f72b85-5907-4346-91f3-169ac1a81691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9d8df8-4ca0-4003-bf1d-127429b07928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67e540b-fd9d-4569-8126-8bfa4125655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1fde55-f4f4-4a35-b2b0-1933043e561d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85511d0e-f980-4a1b-9d37-f7837477ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5611491-6e6c-4909-a4b3-91b1d17b1f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b155511-dc5d-487f-bee8-07db6bbf1280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c710a5b0-b6ee-413f-aabb-d2add5c1167a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a388848-5873-4fe1-8362-21e266ed38a5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d363e5e-901f-41a5-a46a-e0819acf0fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e0aa3f-80f6-4038-9175-523dad4c7669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40118b79-01ac-4b5c-9e8c-00e48487fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99890d5b-3283-4fa9-8094-dcb64b3e12f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce7310a-6f8c-4cbb-b252-74c033f52c41",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e796f-130f-4f2f-8e1c-ac9719d577b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dd4645-0ccd-4ea8-83ee-4797d47a3906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73442a5b-a426-4707-ba8e-0031a6cfb597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66340462-60f2-4834-a275-aa5ce61862b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3935ce80-69a2-4320-a71e-4b45a8269267",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06926f56-d903-4786-bcbf-ca974d96fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdaa5f5-d007-498b-9ccd-2e699813f22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd227af8-f8da-465f-879b-a458343770a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "117fc3b7-0d8c-45a1-aefd-05a1b3849f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f11da65-349e-4821-b0d3-97e3482d59f8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f406b5-ef99-4429-af4c-d8418dd46bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7556eb0c-0a2d-4f35-b65c-2236fffbf19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f75afb-7a89-42ea-8496-d313945a7074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad80730-2573-4991-8d4c-ad5c768f156e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab459d2-f3e1-4c6b-90fc-32ef816e6926",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f8779b-3235-41b7-81a8-47abc8a6abdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78162a51-5677-41c0-b796-8a59c80d525b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2d5a69-f754-4077-91a1-35026860e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "447af052-014e-4ab6-95b4-9e489b48257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6cc65-3ed0-44bb-bc28-d4432b36256a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c5a49-6722-4dc7-8158-b2f895d84fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c66c9a-7ff9-4ab4-879f-d59b3a16ae6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585b3ab-8768-43d9-ad22-d8624d6c29b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f124c40-2f98-4312-9465-fbe733655c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79162b13-1a11-4ac6-b8ca-179e796fe36a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613ae0b9-ed1f-4491-a310-a2a17e11049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87acb1aa-3dda-430a-9a7d-f3a56c8f00dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c97c5-ad83-4f28-8358-b0918de9f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b82c6e82-d3ad-402d-8bd4-1f4905ed0064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16867bdf-afc4-46c0-914f-93c54cad9351",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d3ecff-3274-4ee6-b963-9bdd276df4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45648c9b-b3a3-430a-8408-17fb1e1356b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898cf24-d76d-455c-bcb2-895a8889fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "212da887-1e48-43f0-ab88-9c49e984652e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55459a8-757f-4cb9-b6e7-a24b856e561c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0107c98c-e48d-4157-9935-a7ddd6afd242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56645b6a-2208-49c7-bdb8-2d9cb442f62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457886cf-f1c7-49ca-af2f-04861fdac270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df8a730-81b7-4e9d-b5d7-41673e1916da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91419c1a-55ea-4731-992b-2d5ea011ef0c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fba0f2-e702-4a04-937e-df3154befd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14130cf4-9330-4fce-9316-3eb887a9bb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d258f36-24ab-43eb-a404-151ceb236239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2cec60ae-db24-4bc7-8ecb-4f8000c51f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761fcea1-f40f-4e63-b4f7-9363707a9378",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101ed529-d60b-4cd2-bdf5-9f3f5049ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef4e669-5cd2-4d04-9db9-e0dd9a5f6eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f5ccde-7fc1-4ccc-b6a6-2f73b8dc5570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf5f4df-bdbb-4b9e-90f3-580257ab3c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a311b98f-b12f-4c68-9618-b5d55920393f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be8fa75-032a-4dfd-b704-618decb42172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aff6500-711c-486e-8727-70f286833620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06405d0-b2c2-43a7-85f6-ea78c31f61df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43f9f019-fa28-4d7c-9124-2d6c3d8ff23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00a4318-474c-4ec3-8d25-090514f7fbc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211263d8-d183-49fe-a2dc-3783ee366c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982152bf-123d-4e8f-aacd-29cfa7cf4e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febca4e6-a268-4ff8-9049-de4d1ffc5f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "626493e6-ffa3-4c2c-a4bc-f152877f9d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2368757a-cda7-4eed-a7bd-371b3d0f788a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab82f19-e0b0-4483-90ba-1f22a40fa06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e2d5cc-db53-45c4-9959-75709c81bc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e4b78f-909f-474b-80ce-e9206a9b7a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7763277e-f6ee-40cb-aeb2-f3b02b95c105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a539e8a7-8adc-46c1-8c21-5688c54cf366",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e347f714-18b7-413b-a42a-0d3ebb3441cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3819c4-58ed-4ea4-977e-35153fc9863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b2c716-33cb-4a9f-8c74-32579bb88973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60b97b2d-b4ec-4da1-aa3a-6d8d35d30ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7012893-fd46-4c99-a515-d01162121e45",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0447ae75-ce34-46d1-83bd-909e95fbe13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b05d777-eed8-45f4-b28e-e041b6adf350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b284d-ba95-48b2-9269-b40b1b62b5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c5efed-1bf4-452d-8171-70993c0b97b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a85db8a-0311-42a2-b4fb-fcf73d170123",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e86cb42-77fc-48a2-a49b-45de7eaf25a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5730b4-ef05-4f51-8851-3d233beecabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e122046-7c4b-4a16-97be-bcf10bc0fc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6844d6-1e13-4e35-b654-0f548cebcaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0010bf-1e00-4259-bed9-33f9e460f323",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b96bb9c-3397-4569-b17f-3bd43e783079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaef3608-5d94-4717-a8e9-341aef3c46fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f0d847-87c1-4675-a9fa-cd0c0feeb73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8caab3-31fa-4e81-9d7d-e1bae6621c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121090b3-3364-4e49-accf-0f413e6dc0f4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db1b084-b0ee-41b4-b8c7-a0d7388a4d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bde3f49-e761-4c4d-8dfe-27dc98a769dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b733304-173a-4a3a-a43f-c74e787506f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f997b2dc-bd00-4ca0-8536-6b8a7910c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1894c3-7ee0-482f-99d3-07bdbfa73cba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf57cfc-e972-4df2-8c6f-14385b698acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bcd0bd-3a01-47fa-8530-0f0db37d9e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b23cf8a-45f5-4e75-bb58-782963861b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f9ecfa-6d17-4b73-92f8-0fde0424b137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3bc399-4d3e-48d8-ae0b-14793e814e55",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99978a47-c1ea-46fc-9252-41c303d2b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7d8a3c-6e54-44fa-beae-2ef2c31cf2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17d2888-ccd0-4b70-8c6f-c4ada4fee8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b03146f-09a7-40be-8f9d-82d818f3e996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed39b1-04d3-4728-b80c-09ebff7b1768",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca6e18-0d57-4dac-8c78-0bffebea30c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb2b037-ae09-4ef6-a892-f2781d6af4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70476a2c-15d4-47cc-93f4-30cf09d5227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d1f617-1f83-4c5a-bfce-e44b3c6aae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8aa634-6d65-4764-b1e2-a86732c76326",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0af725-b865-4dbb-944d-d6842a70172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49f00dc-965b-4d99-904b-5e260a87162b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c283572-ec05-4438-8848-bfeb70d45b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ba88a6-3a8b-4292-8e0e-93d8f8238c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570b81c8-a870-4aa8-ae6d-09e405607956",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4cafef-ce0a-4450-9fb5-d2c09d3366a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd00058-3101-4e12-adf1-5328968d56a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46def14-eb6a-4c22-8602-bdf4f14f3fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd573827-a48c-4bc0-913b-907626bb0422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05d0041-0c8c-4c0c-9691-ada60dd81317",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608f8cf-c523-4b88-8ee7-ba6cce95a661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e4314d-7ef1-4c3e-a221-97ceba24d096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33901335-e548-4bcb-ad72-d1fcab0c1936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60df7f9f-926f-4806-b113-097a4ad49787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3e8a7d-86ca-4502-bb72-890dd7c57d69",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d343946-34f1-429a-a37e-d8937f364d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8880e5-6fe8-4bee-9a57-204d0a5f9887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f97978e-c4ea-4269-b8b9-97a8c690e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6fbd57-76e7-4904-94c9-10725ed567da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a220d2-c5f5-47ef-850b-2253e22b1055",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50847ad6-3049-472b-b456-44b31397396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e31d1e8-5482-42d4-9f7f-a68759f7cd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce591276-b5c0-4e15-b628-b0e787d8b3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45f298d0-91b2-4252-85e2-eae220d75eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f43375-2532-4aec-87ff-387f6b25be00",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e3f7c0-e006-4d3e-98f4-e0d893e6780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed6fe41-8cea-441d-906f-ad9dcfef865d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be12f7b4-57e3-47f9-b9f2-2eb81fb1867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8b1a0f-00df-44c0-af1a-db747714bcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eda722a-abc1-4b5c-9b3c-a985290daa67",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46597684-d706-404e-bdb9-3ce8af853790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51804759-701a-4ee7-bc86-1786c424aaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bd04d3-8841-4a0c-bcef-f6ace2b4b4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa1da8c-4c41-48c6-90cb-d21c6792d16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55f08e-3644-435d-9abf-69724c5fe95f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3542e94e-dedb-4d5f-bb9d-7f1ec8e5aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8410d7b8-bb90-4aab-9e23-96f3afdc2935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172fc0ea-de84-4785-8f18-21d83a4a2fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee5bb6b-42cb-4e45-ba40-83aac5680938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9862f61-2c2b-4122-bf50-028f0316c887",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b683e-cc6a-493d-9465-038dd5a8025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df597558-b1d1-40d1-b647-cf6c5bbf8247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ed03ad-42be-4418-bd54-5d8d00c9fafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86689aa4-15fc-4d42-9d90-d13a38d00644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaa3e02-1f08-4f5e-8873-d3afe18015a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b7f35b-83b1-4898-b6eb-1c954bce32e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ba1e5-eca9-4040-9327-92e60b6fa81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3762e874-7670-4b7b-bedc-db04eecf0404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f944611-30af-4e73-8a55-84dd8e284a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8afd3e3-4483-41d1-994f-49a70584706a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0531a42c-e1c9-488c-90c7-ecdcd4882de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21091421-b657-4ac4-bff9-e6c423b0c312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84686a4-f5f0-4cda-bcd4-1e1a5cbc08f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59b45982-0c01-4d51-8e3b-240f15fc2f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f394c89-a4fb-47e7-a374-6c36f7a8c5d2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9de7ee6-fc5c-45e9-b99c-f36065a868c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeed50f5-5ec7-4552-a634-3f723ed564f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00817435-8a41-4fe7-8382-7fbcc3585ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2312db-b277-43e2-b4f2-5b6417d56d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08562c14-0d81-4782-ba39-085784ee3b47",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d26afb-0b7f-4ef2-8708-d8aa81d9a876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4865c7-7983-4037-a068-5dfee1d6fa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a4a425-c336-4dc6-80c3-602b52c440b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "646a3c31-e645-46a3-84e8-c90d3ae5dd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faadf81-5456-478c-b03e-68547007ee59",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b26c7a-b500-4ab6-8d3b-c501ee946e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0036eb1-55c2-41f4-96d1-8fa90764bc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff9106d-0ad8-446c-bbdb-ffe76743495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "418a85eb-16c6-450a-862b-84be49a9c5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7919ed-bfad-464e-8caf-5500f23de866",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb49a29-6484-4038-beab-d65933807dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078dad8d-9f2a-4e18-b0d1-17be9fc4088f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b695bc8-032e-4ebd-afdd-97c85083fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5352a1-c1ee-4a65-bc68-eb4f9072f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121341a9-1bb5-4afd-a7a7-287a808f1d08",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3056a06-1084-4d63-82d2-7149a1369cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42cb186-b652-457a-805b-d5fe55f76133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd98174-c9c3-42c7-854a-9ce7810bda75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07f87ce-eee9-41a4-a03c-21a52b4b1d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe27446-b033-4ab7-bfbb-279932dc15c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2992e-3239-4b30-984c-780bcc7d30b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cb03cf-b86c-44ac-bd6b-613be3666fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d76fb5d-48d5-40dd-ba9a-0409d1b85b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9a8fa5-e862-4948-9811-78972a801841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb4a4e9-ea2b-4b40-b9a5-4e70329bdbf6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e192c593-f7d8-474c-8a45-49a35558ae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a218ed5b-464f-43fc-bd41-53d83808529a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a6e66-1fdd-40d7-ab15-42abfaaa77e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df2be08-72a5-488f-ab2b-08f014d6a70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff937a85-1bc0-4f17-a8ff-c66056656681",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbecaa7a-efd0-4e1c-a363-bb76c69ae0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ada0f-5e24-47dd-ae1a-cd566541bb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d1f38-e744-48e8-86e3-37cb856831f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6df2485-66f7-4f11-9a52-d605eea06762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7797587c-fe8a-46f8-b742-681d06b97253",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65215017-bc06-441c-a1d6-4bff79376a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7383f1f-d1db-48c7-b3f6-6db31ae6b279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae0659-bdda-4eb9-8dc5-26b229d53bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bddfd826-f52c-4d71-a120-c70922e1a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a609fc2-27c8-43ac-9c80-4a220cc10afb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae75855-0a30-40b7-a9c2-d8989fb1381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa943bc-7a5d-4343-8753-18b9e8028ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c1ccda-c14b-4fa1-98c8-7f7dff6cf97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c2b681-d5f9-4973-8b7c-c2caac057d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac661276-3f99-4aef-9c77-c3fa865bc7a8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9b10e5-74e5-45cf-8848-62055dbbc236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63412911-8776-4ab7-b656-6b777686aa5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed13d133-611b-424e-9db7-0e59b3bacd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7bc925-bac8-4829-badf-61627d2e9b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7da7999-9001-4fe1-a21f-091027906abc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63ff336-1cfc-48a6-b615-65ba8ac3758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d75f33c-5700-4e30-94e1-fccd15623a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe41820-8d7b-4514-9680-29d3909f998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7b6958-4aa4-4ea0-bb61-f836da00da91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2cf137-8987-4341-93ed-f7390891dd43",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b876e9d-d0cf-4fe8-af72-8adeea6144c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d2ecfce1-f503-48f4-b9a2-9243e3a6368a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dd35cd-1a95-438c-b9c0-d86e5ae7c422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "628315c1-3f29-4a28-a3b6-3d397b374367"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ca9f8b2-ca3f-4ed9-a577-fe40aa5a2540",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30d4438a-773e-4d94-aabd-126a0db28d0e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5018125-8d20-4ddf-a464-9bc866642e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbb0aebc-4eab-49cb-982f-553d1a70bfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9995116c-f8b4-4f71-9431-4084ba0dd6bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "30310a6e-da07-40ab-a8d6-cd137cd99bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be5a51c-ec27-4c5f-b810-09a0b41121fd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d08b8e9-c51b-4757-b5a9-1568e66a2a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "494839cb-e671-401b-a693-eb8bb5573b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee60465-39bf-4e3c-a81d-65c20a171b9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c932d566-a62e-49b6-99bb-4b2d88ee7dfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b41ce736-ff16-4f65-b28d-fb647d96f6d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fd3aea7-e398-46ff-989a-53f53fb0cc90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b96d4824-4b7b-4660-a702-9ba965a98a89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffbfc1a5-3e3a-4651-85fc-91984b6eba47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fded69c2-8eec-400b-a35e-6045242f667c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe6d039f-a164-40b5-b40d-198a488b6e0b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e618cf7-1b9a-48c3-9056-4e9eed5f6bd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b33d76-5f3f-4c43-afd1-fe813fbcf0da"
                }
              }
            ]
          },
          {
            "id": "2aa99b89-33c2-44dd-b731-19106b24a271",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7894809-4848-4e0d-b504-3be656048533",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "170267dd-ea77-4808-a8b4-4d935e421949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09dde90b-763f-498d-a30f-b4cc1444f353"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41b49ee-ce2c-4d5d-b6a6-8d712ea68ee1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9fa9800-cdc1-4908-932a-dcc64b845ce6"
                    }
                  }
                ]
              },
              {
                "id": "8457dbf3-6268-45c4-a7e1-3e276d381f3e",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dc413c6-60ef-4cab-a9ce-631c92c0969a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6d7c49e-e438-4c58-a05b-dcfc5f8aa2ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f32cc41-ce7a-4df5-b2dd-539485e78c29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9a10a76-8f46-44e5-b8e7-8079ef6edb2f"
                    }
                  }
                ]
              },
              {
                "id": "d3ec719a-6a70-4dc8-b235-b5272c98ba23",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86d621af-83f5-49ca-8b8a-66cb42d05e69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60325e2e-101c-444b-9d4a-a2bd6302e166"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99bbf6f8-d24f-4c27-a83c-c3757eab1854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b401849f-a425-49f9-b180-9b0e9606d67d"
                    }
                  }
                ]
              },
              {
                "id": "3e8b4b02-5359-44ea-bcf9-09fafaa0097a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c08e56a-37d3-45f2-899d-b54138643d01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "408885e0-975c-41dd-83b9-fc59ef817d31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a881bb32-a4a9-445d-8953-2b117edf1107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b647dd96-1121-4e8c-99f5-3fd0a67af336"
                    }
                  }
                ]
              },
              {
                "id": "b735bbf9-ce13-4258-8562-a1f00c27e3dd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d5ba777-ecec-4ada-88c9-5a8fa43d4e51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d76a828-20ad-44c9-9fce-60b0a315a852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eeea847-5c35-437e-ab56-823a83616925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "adc19997-40b1-4802-bfa3-7446f00dd70e"
                    }
                  }
                ]
              },
              {
                "id": "96989f35-da64-400f-a77f-a0ca7a7ec189",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ef932e4-7db8-486b-87c2-1363c3f3e99b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5eb3eafe-3e7f-49bb-9f0d-66c818ab73df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46349fe4-e1ad-4c28-9b97-3b6f0d756741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1842eb3-6cc5-4b49-a60e-6fd8a0864e77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11ff70af-1d19-44c2-a864-b2dc8dc61573",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ced215a-ee91-4420-95a9-a0824fc932aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4c7ed1e-6b45-4f06-b1cb-94aac732cf5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "001ed29d-8e98-4012-ac09-488d76e73a9d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4e4c68e-b2e1-41e2-ad06-d6dbcba07108",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32fc8561-f80c-4b57-8443-505c6d02e9ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a917a09b-3c7d-4e86-9c7e-b89deb138eec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3727b8fe-cedf-4e82-81e5-e0ed363bb06c"
            }
          }
        ]
      },
      {
        "id": "9d4151e9-0234-49e9-8812-2f36d97729ee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "603f36a9-64e3-4dc7-9347-be13cad5e85d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ff4b69c-7c11-4114-bd57-d2719dd76f1b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79de435f-184f-4c85-bf25-e0eaf611672a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de627596-d27b-4f87-a59b-e681b3574821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bbf1e0-dec0-4340-a4af-8e0dc8af642e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffef1c-c86b-43a3-b9ce-c9f58c526921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e682fd8-8dec-4a93-b1a8-e47c76a1a308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b0f923-f37f-4670-a2ac-a65befdedf7c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26b58dd-9398-4e2c-9f05-04031a43703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44542934-f1a4-4da0-8c36-193e8ce43920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06720d19-eaea-43a7-8d14-3f57a030c4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "901fb649-0c52-4d47-b4ca-e78c4c454a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644b239-75c8-4d6e-8287-798b17febb37",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e0f317-dfcb-4e63-9ed9-3a6240b880a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93866bfc-2b15-47cb-8453-73ac373dd785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010e9059-cc1f-4bc5-9746-0bbf0cb5bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e838d3-9c0c-4ae5-91e1-05b2a0de602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5e9ca3-2b3c-4093-bd3d-6e24a5f2fc57",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f37d2e-a28b-4b35-aeea-4f79d58499a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045ebd29-382a-4dd7-9a42-8758111757fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd51ce3-4561-455f-b22a-7b3d09e421e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a5a821-bf8e-419f-b11d-9c310b92c766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566592a2-5444-4c05-900a-8244f7afe0c3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4431b976-e3c4-4a69-82d7-f5674a60e753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f31f5a-0de0-4a57-a5ad-fb0e973ae97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86059107-b7c7-47c8-a01c-2aec93be7c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4172fc7-461e-4718-93fd-f441cca24fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a32a69-b486-42d6-875f-32112127b5ed",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fe8fe4-97f3-46f3-ac09-e5a1256b10aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e7739a-246f-496f-b1d0-7254be470f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2422a288-2514-4246-a99e-16ef390b9e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db948171-1218-4879-9186-413850516f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692253f9-828c-430d-a58e-de6c7d02e202",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4565fb-d755-49ab-b074-bc447758f929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e684e2a1-d742-4031-9e02-ef8f889e7eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043055a-8cf9-4efd-9172-3ed9cfc297f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea5f0b5-c91c-4562-ace4-3f14bbcb0ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29cdca2-8783-464a-8c75-b0589e514106",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dccff36-a3c4-44a3-84db-db3166c2cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6acc15f-29d8-45a0-adf2-7cdbd7c5e6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e31e6-2b16-46b3-9f61-8600e7141eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6ee032-e808-4c00-ac0f-1a8f40a9d130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eabd6d-f69b-4dd8-87f4-d7c20c68ecd6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80711a8-c561-402d-92e0-36fda9cf4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafd7681-b614-4c45-980b-a0314e9c1ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a54acf0-3272-4629-a980-fc683d125a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bcb751-3ce4-436d-b67c-8c45527589c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38902a18-8a23-40d7-a422-304b4e3f309f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e707c7-6a03-4329-b43e-62f1e1d17ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01404fe-407b-4c22-8436-256d9884d4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5b990-9d43-45ca-9f42-f9c7e555bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b0a1ec-fa9f-4dd7-94cd-2213024a9b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7005a4db-3b23-469f-9e78-5a954027b97b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35862cd4-9286-483c-bee2-8562b849b7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d3095f-7241-4406-965b-db12604f7ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb40297-cc90-483f-9a10-7611463010f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a091314-ded9-47a4-99a0-40948f4e4818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb81607-3bb1-4d0b-b2f6-151e6900d39e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea96c6e-feed-4068-a0ce-aa544e7d161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343f400e-d4bb-4549-8cd0-fbb4e34bdea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a8ac67-5c89-4c03-ae69-dfe4b5a86c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcd22ba-d440-4b08-a5ce-ed7071576fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db76592-cd5e-4e45-ae75-68227a6915e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3085003-8f99-4433-ba4c-1506f086e972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6b9df9-4ac7-41f6-9761-df1ffd4ec0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07b9cf4-9f09-4b2c-8d5d-49400fbfc7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e67d472-8d25-46b6-ab5c-792dd0277390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47fba25-9959-4021-960d-050f232eb04d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d396f-de58-472b-9d9e-35642962cee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d347281-bdf6-489e-b9dd-efb0be810b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb34c48b-a052-4590-9839-65aa492ec58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b75f478-a2ad-4a7b-8b15-2703e240bb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4b3c4-1f8a-4a7f-89f0-84322def57c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45b875b-ab7e-4e9e-8e2f-dcc9dc48a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17673dc-eb09-470b-a0a1-2335fa547dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9e058e-7646-433e-9799-2315dcb387e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6195e6-1c98-4a25-9780-c761ce8880bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c41863-91e7-4305-bbe8-0c0402d3a5e4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14bc546-b4bb-4c99-8faa-ffa05c1e64a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71be4360-0a06-49b1-bb27-0afa86dfea95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9224bb68-fa8e-47fa-a1db-21cee256c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eaac3e-53cd-48e2-82e1-341347f3e6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d4e437-9d95-4097-a747-f71a4368685e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd3d4a3-cbfb-46b6-bb7f-c1e6c147f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e8122d-279d-405f-903a-002566932fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba5f61-e74d-4169-b989-975bc63239a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a374ebae-4ac2-4acc-81dc-66c7e974fada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5017b71-4390-41bd-ac6c-dad7767858ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ba1cd3-46a5-4d96-bc29-bdff98ea7644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502781c3-7e90-4ae7-a9b8-fd78ceae3ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12850478-6aa0-42df-9246-36f88756b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6a8058-bb9a-4b4e-8758-08131fdb324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a048d8d0-8b79-445b-a465-8bd13cb6ac41",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04314cf8-82f2-4104-ae8c-a416b990e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21901b71-8a66-4e4f-94ea-171926f9262d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc24b51-a6ad-4869-b768-5a9776ce6482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e914d57a-102a-4b36-b751-e06fb5b491fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c5e787-0d14-4a65-85c5-8e50fa1f3140",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961d9262-43ca-49ab-ab7c-b0d082f00304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c897d3-2447-40b2-a984-3345ef8c8f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9366e1c9-16d4-4556-8f0b-0b6380c41f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22821381-e956-4d80-9166-bf62cd087012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe2d470-42bb-433a-af5f-7c9f28cb6cfa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541ac21-fc0e-4834-bf36-0b2ca57d53f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a54ebe-21a4-4649-b3aa-151be4d3c4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6a16d9-3f1a-43b8-84a0-40a1c694f89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14dae37-1012-45e0-ae34-d7556758647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dd5fa2-16a5-4432-a920-66acfe85afe9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb93f36-2435-4eae-985e-26e5c4197d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17386b9e-c47c-46fe-b1af-d94adb55cbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce69eb53-d83c-4415-88e7-2960cdd7f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c289080-a0e6-4534-a15b-b27ee770e1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d2d473-7591-43aa-ac38-5ab3e628e3bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5bc467-3df0-42c2-92a4-4cce23f46a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a9d555-3fbd-4577-80d4-64270853f919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9e829f-bdf3-42d7-ab07-69a99a6fe9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24fb274-dc8e-4129-b31c-a9d0204ab4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b2825-e1fd-4ba6-8e66-2a25a1f2c636",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb3f37-da71-4a88-b21a-18cd1fadadfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a2f277-e5a9-4646-9266-906ae22152e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13548bb5-b336-42aa-a14a-6d1f8d85c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b912dc43-d96b-42a0-83f4-2adccffb70ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f7d946-c9bf-4490-89e7-811f00b648ab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b30758-1317-46a4-b694-10e87a13cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881ec7da-1a21-4e95-86cd-6095351020a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463b0e4-6cc8-4576-af91-19395a380140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6210b237-ff39-4a46-bccd-7fd8cb4d908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a9fb9c-369d-4c1b-973b-08e59649d163",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f47beb-129d-4e72-8c4b-fbe16661521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eff85b-56f2-4f39-a6ff-8a2ae6e683ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e843f0-eb89-4fb2-86f4-d23481cab738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1607cf1-89f1-49de-ab39-f3c128262d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1d11b-1636-4167-91eb-5dc1e1c7b626",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27436dc-41e7-46dd-896b-48c7cb90de01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7304e8a2-8920-4952-a69f-8b8cafbac0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897fcb44-0210-441f-9925-279ba13a4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0e9c5b-c32a-4eeb-b140-03c5f59a7c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea7efe-7c9e-4e8f-bf8f-b450854e9582",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710cc309-d83f-4e0c-ba24-ad6b44177d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b93a0ce-d2b8-4412-a9b0-de5b16e4d893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49966c74-803b-4e00-9d43-0ffe6304f9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f034ca3-ca70-4b24-8a2e-c7800c7fe4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea370c1-f39c-4c4a-bf49-53a95e405400",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb9a52-caeb-4f71-aed2-65fea756ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa27b5c-808f-4c64-89b5-2841c29708f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104a1b21-1a88-4b09-872e-43289cc32ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceeb341b-b8b5-499e-9418-b594452efe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d4e950-defa-45fb-b840-35c65067f9d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a158391-2f48-4e55-80e5-924d58427f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7dd161-49a7-4d18-8184-bab50ae7df6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75c138c-f28b-4ec3-be79-2a3b0b9ac346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d94f7b-aa30-4f05-94b2-116e58d9e59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b2defd-bb4e-42ab-9780-c22143ea5247",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a857d6-aaee-4e01-93c6-053bbbeb12da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5343e279-83bb-4a42-b097-a6fd90eae10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448101cd-0baa-4f80-b7e9-c8e6103287dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425b7bde-bf0f-4eca-9774-e0e5976a0bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd6282-b385-40b2-8d7a-a3e54ccb2917",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cbeef5-1661-4513-b3fd-27f807bc245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066cf607-eb7b-4347-8b8a-ad9d1ffbf90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5b235c-e23c-42ca-a270-abc1ab02e92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bde1d9c-131e-4189-9bd3-31f9186c094e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf1b525a-4d84-49fe-b681-b5a3907d2e54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5db97e9-fd06-4f1b-bc98-c6684dba66b2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b4c319-4e4a-49e8-a86b-ff5ac447e706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8121da69-fb61-4231-8fb2-73b2fd079fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd6b1d8-62ea-4ea3-940a-f83c11613781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bda93e5-3664-484a-9ff4-0062d050d681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523ab8e5-508c-440c-81c8-55ec4e5db25a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72844bd0-9b61-4314-9007-d827f0ba9cba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7f147ce2-4ba0-41fa-9814-d413a7fdceaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9386d925-f796-4615-81bb-61e367981010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96fb99e5-2ef1-4d6f-9ab9-22f7d6396380"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a75e6c3-49d2-4da9-9e3b-4fe46ec10c01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b69caf1c-d23e-42be-a924-70b331de8064"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8f55d6-13e5-453c-b9fb-da802d8cd5b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3b1d0b0-a07b-419d-8c5c-2dfc74ac519c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c967fb0b-979a-40a8-8dfe-e417234c3c23",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd88dd15-5a96-4807-8168-4657f7a0419a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdcff5c1-ea6a-429d-a0a3-5d7f429e19e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4284749-6120-4004-8798-d9d17b2cbf23"
            }
          }
        ]
      },
      {
        "id": "93954212-da26-40ec-adb7-4130f6510f8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f5352eba-053e-4284-b68b-b6f9435157ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fbaac24-9cc0-42b9-8916-8f1ba21ab698",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2a06c07-48cb-4ae6-ba26-5e975d4192e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc35f2-750b-4069-88b7-4bd5c67110c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fc06e9-49e2-4fd4-a8a6-fea4affc9919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57075a7b-6d5f-41b4-838e-84ee17a40498",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd418e72-9dde-487f-8c4f-f4a44630f82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f6459a-8d19-49f2-9b11-5052d2826aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669b2927-bafe-410f-95ca-a3c485257b9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e384b5-4db4-41ba-937f-6f96f1d57f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d0a469-3220-4cf2-baae-c33e34bd701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a13f9-95c4-4431-9bca-74a0336485db",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d39a0-9016-49fb-b682-403110fa5155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fa5c60-b062-47ca-a766-e5b2444c10e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae9c6d7-d52f-44ac-b86b-30cb45b72457",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94716df-2462-43ce-a27f-c6708c072a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cf970d-6dbb-46af-93f4-0c2ea848b64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33770fa7-7827-47b5-b515-c6b6b8f49455",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c22230-881a-4104-97ef-911b07133f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4538bc8-5ccd-413f-b580-ca449b1c16cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91437317-fdfc-4da3-ba11-ebd15b66a80a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb828fc-7d66-4cea-9188-359e358a803f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ae016f-a0cd-46d7-b61d-bc59283eb29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060be89-9140-4704-86e8-026e4646aac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd80e141-1d42-43e2-a8df-50676c56e5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36513e1-cc90-4b1b-8a55-7d8f137b7a6a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b801369-6504-486f-97af-df936e6f8c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e753763-3a58-49b3-8dbe-f582da6a9c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799b6638-5a86-4ccb-8749-737222047cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451dc97e-23e6-4b42-a2f0-86bb4592afb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a01ac6-59f6-4252-8532-db458d3e0092",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b2b97-2d50-463d-90f9-dde6c026d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3240e916-1646-4bc5-ac44-58e7540cc2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ab2a05-7df0-4231-8dfe-865cc317e19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935c66ab-b558-4e84-9d96-8c0c6bfff296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73cbc03-1126-491c-b7c7-560375bf7c85",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9347f0-5bd3-4efd-8b99-f1a2b6dec68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4230f82e-9944-4e1e-abba-a185435db2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0b7a1b-f164-487b-a5b8-568efafa4be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a534ab87-fea8-4ddc-beeb-b2a59f49cca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647cdd5b-74c6-4766-9bf4-7061d62bfce0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6626ea0-6d73-40c9-8a33-9f7b7661ffca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60af5cae-835c-4bdc-aa00-e7592eb174d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3f19b7-9e97-49d4-a385-4129d8bc8e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f87828d-3d48-426d-8767-34204d62d651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da05366-d0eb-4f35-88a7-372294f20e16",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16507195-003e-48f6-9e32-88fde35088a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd51eca-0780-48c4-bdea-cb71bda565a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e1473-645f-4558-8b5a-240855de3264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e63de48-07fe-4f2c-a552-30afa13ff116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703c60f6-d2b9-45b0-9086-354145ccf203",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27420880-eca0-4e0e-9b16-3f0640072a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4fd18d-1059-4311-81ef-9f3afdc135b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fa3beb-6873-4b3e-8390-55e4fa5a2200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7b1df5-5d5d-42b0-a9e8-d16d9ef0be68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0f861-db88-4cc0-8f23-a942bfbbd446",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a04791-7beb-4ce3-ab8f-aa6c154ff329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebedb3b-b713-42ec-bdb5-bbee57d444d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a182b10b-1d80-4b21-bbb0-5750f62a9c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9c6c5a-b309-4ae1-a7c8-0b552e7c207f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525801cb-a6b8-4257-b0f9-1ee9d4c0a219",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754dafa0-85f1-414c-92c9-614e78e6c1d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10edd057-4a8b-41b3-94f4-9c5217eeded8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de27cd50-d9b2-4bd5-a704-6d5595406a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23665d1-af64-4e24-b14f-68ec5a690af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e0504-8cd2-4955-b6e9-a7d9651a3483",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be1955a-9422-4079-af16-0c03923ef720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39305ac1-92bb-4ceb-810c-640948e78321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bfb434-188f-4d6c-8db2-3255079af552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d19783-f517-4ea0-88d6-d230e6ecd98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07698246-36a0-4929-b157-8855f6a41aeb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9571ce-031b-4f9a-ab20-60a8329cd0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed66db8f-5034-4a3f-8130-2378a0be5354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3f1923-bb32-41b4-9846-78fadaa4ad69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5409e699-8f18-4ab4-8602-b485f12d29f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927eb719-2ffa-4ec9-b979-0f08e3fe6e0b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d66e837-5adf-4d70-8ac5-5f9b650ebb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe4f812-d49d-4e64-b9cc-f9c01b0fdc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f55f5-30d6-488b-bbcb-8669a2274e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88df45be-5d21-447a-a8be-3657549a897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750f15f8-c28d-4e76-8578-9d61b155211c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ef493-165f-4482-8050-ee2b39af0018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19615192-86fe-4e9b-9a1e-df9e8d210533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d507e8-d0a0-49c9-8455-b91188a5a8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38411728-fc21-4aaa-8e10-b31cf75ed94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fb2214-39ec-47a3-a57e-de2694f29fb9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4403e2-a6ba-4eeb-be61-f0e054386de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e7e36e-f141-41cf-b697-c98792422386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691426d2-ed3e-44a5-8459-28ff2c9dfc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107ebbc7-0cd9-42bb-847c-d4985da5a93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17350cc-c179-4310-b551-9046fcd1f392",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0655c962-8bd2-4b87-a868-19267b9d7d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce75262-b430-4316-b809-e8489b1507fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebfe89a-fdb6-4518-8b58-47841ed1e832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b7c29d-686b-4a98-a398-e8ea51fb1830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1574eba-30ee-49dc-ace3-f75a83c82a58",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cf85b5-6b56-45d6-8b85-17f461d1aa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67895ec-1dac-4d0f-9904-30ad8a8f2351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51140729-d68a-4f9d-99ea-1a6ee22baff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db75fe7-c079-4777-a15b-bf7d19dc85b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e696524a-410c-4763-b726-a201ebc01b93",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d44e6f2-7509-4954-89e6-29c1e9c09318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083f6d35-9d8b-4048-9d4b-8971bad91d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2865911-b32e-4d5a-8760-3f6c58939efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f122ceec-529d-4ea0-beed-5be287d28902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6bdce2-a995-48f1-b7bf-8fb728b424d3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c701ab3d-4894-43fd-a963-3060b13a2363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebbf2af-80ac-4520-b34c-1c0f3c58540d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6cd614-9f3c-4263-87ff-34efd61adbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d953511a-a24d-403d-ad45-0c20ba2daff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ac1a00-7e09-4b1f-8922-e2f7e4d0067c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71ddfcb-e012-4e7f-b5da-5740168afdad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa83c00-da86-4a50-a34a-e1f2094f918b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4de022b-fd11-412c-9fb6-7cb2c70ccec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325e56ce-5a26-4b08-8035-9a779fd7c5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5726079c-a228-40ff-94f9-cca2f6b35295",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5161c345-0081-4639-83ae-658e0043ba49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5387f1-9229-43d9-ad2f-a06a107fb0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f1d5c6-8972-4d34-91d5-70e2bfd03835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa2e530-5878-4f68-8d15-2027c5d27cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d9d30-3e62-4a49-87c0-fbf52b90cd92",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1536f77-7d00-4ebe-baf3-59cf20445599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec638e56-4c5e-4162-9e88-5281f922ac72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a454d556-dea4-44cc-ab2c-ac8a981b2e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e6354e-8c72-44f6-b027-8a460a060271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c989aa-db0e-4c87-8e95-b9ed6ba21d14",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c21cf6-43f9-43c0-b392-b3d001415111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9cc119-b8ec-4083-96f2-1196ced0ad77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ffbac4-4dd1-45e2-849b-9bb08cf3f733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ea5e4f-ae27-4eff-baf6-2ab977c03154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2901a08c-7938-4189-96bb-b46770580d73",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aee6f4-5ece-42be-9085-ceb62bc447df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3768f34b-ed8b-45f2-932b-2217a0e442b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0abaf4d-5434-4ee3-8314-fe1605ff7763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588ac753-e1a4-443a-90a1-a9bcca61102f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74191623-9ee7-4470-9c5b-f554f2766dc3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efd8286-bc79-47fc-825d-beba1ddc1bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df33be0-0aa9-44d8-a317-589ddf9114ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f8c875-e6ff-4bc4-8bf2-f2052fe0d3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2bddec-fe48-48a9-add9-d6d4fbace591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c4c2af-0fe2-40f6-ae28-e4d9e31b871d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd16caa-2740-45d7-b233-d4e2b80c514c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a6e9a1-0a24-4042-b9bf-b887b1a95f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aec1cf-4257-4ef5-a454-496f6d9f1551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34df3cff-c29d-45ad-b8b9-5634d2976da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7521e84-403a-4d94-a877-ce67e55fc328",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7e4133-4a46-4535-ba96-a96592744d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5dcacd3-8917-4226-bf30-da934dcfd732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c751f9-f74c-4037-9c5a-817857f12c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7740892c-deb8-4912-a1a3-b72b4ad9e35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a54aa-96be-491a-a379-3c9eff5ce44e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5321aa72-28e0-48ff-9a1d-dad25cb210e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0f695d-67db-4c9e-bbfb-2abb5b8898d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7acc672-466d-4c4f-9a2a-0e5112cf4724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2339a725-4291-4c31-b259-56eae6fa3e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945adde1-ed36-42b8-aebf-f7c2ff1c2bb9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ab85d6-f8ff-4740-9b45-2065613ccaa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47855639-aa73-400c-82cb-5002fc13ebe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6ac34-5469-4e97-96bd-b99c1b98db6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa18ecd-b596-4a56-b88c-f8bf8111207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fca6823-c6af-4d95-9bf2-63b8e4c3234c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530cdc09-bf30-4feb-a89c-134e0e70ccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76810808-33bf-4a3c-ac7e-f8163eeda164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8fd9fb-ef39-4ce3-b1e9-31d4b45b3374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec254e7-737c-4d0a-b5d5-055e74c296a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968e0afb-69af-4573-aa85-c7ef651151d1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9a614a-0ef1-468e-a19f-6f8f2ea18a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f786b9-9169-432f-b19f-c9b701d9ffba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e097b38-e65f-4619-838f-1b13a27b1edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6494544f-fc6b-4704-80b8-51f41c967999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b16b8-831a-4a5e-add2-e4b22e201226",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4820ae40-aa17-44ef-843d-b0a9389a51b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5912fe-b0a2-422b-b254-54a1a9f524fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43708e1e-fed0-4ffb-8b0a-9ed893ddc7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345d11d0-5f86-4fef-9ccc-e75a9416b552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f9abb1-1a2f-4ee5-b776-a6990ae7ade1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564a6ca3-8fce-4183-a3ee-b07702bcfb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8162d184-d73b-491d-91d3-b5b5c70514bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb03f00e-1323-4a4e-ac05-a3db952948b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee55a42-7b38-448c-96a7-def9916cf389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646e1f7a-cdb6-4ad4-8225-7d74a1a9e845",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f21fb1f-f0ec-4ba9-95fc-8806f29b5b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2578265d-c4ab-44eb-9462-b66edbcd6ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a854bca8-6431-4fcc-8f5e-14d301e14ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da79f18-c663-4394-879e-fe39004580d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14437543-d70e-4af9-bc90-d695018426b6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d183edcb-fc0c-495f-862c-1069ba6e11b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853123e5-c5fb-4629-9e7e-03a7f070627e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10857b0f-a7be-4037-a690-fee469d482be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9164fe5d-e3e9-4e89-9adc-adb788b040d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6805b672-3e28-48df-9e8b-f7f0df5b6f96",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97644bc8-db3e-4a54-b0ca-9e67b678b45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a606c9e3-8e71-4314-9b12-f1cda91baa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d836bc-0a37-4a22-a543-e5f337745d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4207f3-7230-4537-91c8-fb5298488432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ac352e-31a8-4e5a-acda-fb0be318a097",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4073112-815c-403f-a89d-359067c58f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ada2cc-81e4-45cf-b14f-b915605514e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cab8a5-dcad-4018-9c1d-96609cdd94e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab0358c-735f-4826-83ed-84f923c6314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d02d6b5-1fe3-4c64-a114-d2d79b8acd0d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c66460-320c-4cc5-b958-92c607bdb270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33f12fb-f9d8-49dd-8a77-d9febc173c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a0fba3-dfac-47bc-9ac5-6facc385f0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a943d6fe-c74c-4628-b936-e069a04eb0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152d7f8-8b18-4bbd-ac0a-636126d96381",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67db503-a634-40d6-85ff-4ed60c6a9ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ac39f4-70fa-4904-b4ca-6f272bbea19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c3c91-befc-4068-afc8-bbb44b676d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c706991a-2484-4ecf-8d8f-a7d986b51042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e705e-1bc6-4f3f-b9f8-dcc6fcd439ea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bb3677-1c16-4ffb-acf1-7ef6429fb08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c172a2-1c3a-4ff3-a604-875cb7cdba82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75f1b3c-463c-42ec-a8f7-66b240216f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb593746-09ae-4936-8592-ff0073c0a97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e91f306-c44b-4698-9ccc-862cfd6ba7bc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0991ce9-61a5-4104-8e59-a77e8770ac64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428143da-fac4-4545-ab4c-0c47ef9c7a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20526790-683b-4c6f-832d-d03dd028b789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cf2e09-9d02-432e-84a1-d7d0d9a2e4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2397b76d-cbec-40c5-9162-6739f51ef83d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4598b5ae-5cda-4770-aacf-33301f9f20ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d90bdc8-ac8e-4c37-a4b7-3457035f25a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802d83fe-3a59-4b88-8dc1-666f8b9d4ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf54117-166c-4608-9c0a-a0c8d8cfb865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba26ab3-65c4-481e-a72e-46788fe56f2b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f7d197-fcc7-4dbe-a65d-f656cd83283d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeec664-21c2-4596-b7b4-029cc88daffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873531cb-24ca-464b-b812-ed96bd6c02ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d7c459-9518-40c1-956f-fa161f0f83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6543817e-1e35-4888-8418-cc566e30b542",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f907a9a1-ee02-451b-8993-9ec22037abc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a79241-6212-48f5-bdbb-a9dd955308d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61af1c5-f5b8-4bbf-8e19-17be00bf937b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf794cf-bea6-4d13-958a-352fe7b91cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f66db4-7547-44c3-a010-199e5c573b28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb445ef1-3f79-4923-bd8e-3e3c8b9e249d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a550ef-eff3-4282-ac56-8e1f0d519987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1962d6-b352-4cae-8210-0bafd0c43191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79df59e3-2bc5-4e50-81b4-4ff3f6fcb4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a4d5de-2f47-4425-aae1-1282f47d8c13",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d7351f-1023-4b8e-8f50-dadd010b8ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa88341-ff71-4a3c-ace2-8ec6e34bf8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf42c2e-bbcf-40b9-8b35-ac89fef0c933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c713160c-0ee2-40d4-be26-189b8e121c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483bad3-22c4-444d-af9c-07c896035d7a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dad0886-0b32-4c51-a1f1-43fca9c06d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e4a769-c131-49ca-9e2c-df55eab828b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d505a99a-6e2f-48a3-9a01-ca8e023ad4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14776f7-ef0c-4070-ac33-bff8626afbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e3165-e2f4-4cce-ace2-d7b483cf2565",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad50b87-a25e-491c-b07c-79003a61c5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcb08ea-13d2-496c-a059-26a444dfaa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a900f00-decb-42cd-850c-d1af27cc654e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14522539-c8bb-4631-9596-b08cd627cf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4461ac-1231-45c7-a221-f82be5e16920",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382935e4-e482-4047-aa7e-aa66aa9c0500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa96c8d-120c-4705-9eb6-ea172e23d891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c650b7-b8b8-4042-9078-669297826db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126e6cf9-3015-497f-8928-f40ca597aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d280e2-e7bc-4410-849c-2a981b010b68",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183f9bb4-e906-4541-b3ce-9f68e742cabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70333ce0-d3d7-43d1-a23f-9f020786ccb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80491ffe-0348-4751-9f9f-b12a65740a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c979107a-a63c-4ec2-aee4-ef1fb0a8e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc6d21f-4922-4a7d-9dc6-a00303218859",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fb6085-4d5c-4599-91cd-e23242fee446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06304a7f-8617-4f0c-b338-9e0e345b742e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a93565-a5d6-4f7b-a9fc-c4c7587cb9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adb73c4-8c6d-40c8-83d2-70cc778ca669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c7760-97ad-4eb2-9678-976c9cbf374d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fccff66-dd61-4d31-8f7b-c0bc095fd14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3a8a49-6f42-4b28-8f84-c2afcb8b4e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1903a8-4383-45a5-93de-bb7c6a9a30d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a40d35-66ae-4e5f-827d-5c23f8800095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17278299-3f3e-4a90-be0d-ab6c886c0e7b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc2e425-9f50-41db-80c2-27658471b554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77bc9c7-653b-46f0-817d-db9378911a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e2072d-4955-4979-97a6-f8b32f1b9c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd651fc-842e-40da-b1d8-e816a225ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40d079f-0764-4262-8b53-6a79c11fdd7f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c855cce-f44b-4822-b33c-2eb3d07b1232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c469bf67-2f3d-4423-bc28-47d93e1125a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2509d5b8-a73f-4d80-bbed-e2402c543050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d98288-547f-46a8-bfff-caf9494c7ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff0229e-5565-4ca7-b709-1a3814756dee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37164f49-bea5-4c7d-8992-17b630b85cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716fa7a5-678c-48a5-b299-e0d7b1759cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42881221-014f-47e5-9d35-7e99fd17dffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e9dddc-1225-48bf-b369-90d4fd516b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90444bff-8cb6-4631-8bbf-cd0a4210f20c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db6e703-1a39-40a8-befa-c76527524655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be243da-b99e-4ad1-bdb7-4d4a7f27d190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fa3a56-a39d-48f9-b411-c8c0b551f119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba538fd-47ba-4ab0-8338-420934005ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483042f9-8b2c-4a19-b3fb-eeed1f5901e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab87c9c-3e15-4a66-b8fa-33db7f83f3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386a5822-725c-4236-acd4-398ab257ec3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65037f27-f148-4745-8084-912d4b3854b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9477cf4d-8922-48f2-ac89-2fb5f264306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64035d4e-217b-4f00-b27c-f19bf4993d4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95edc6c-43a6-487b-a07e-017e9c184da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acc3877-c3cc-4cab-9885-fc7a160d2aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f7afa6-bba9-4c6c-92f5-2f60b7a82a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9d849c-b9f4-41be-939b-ec4ca22662da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b93c64b-ea2e-4898-92fe-615ba5078fac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a68f656-503e-422c-b3df-10b71cff9f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bd713e-f11c-456b-89f9-e383e0e47307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b63daa-43cc-4a0b-b1bc-5a2c68ac5d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea3cac8-7b59-4f66-ac19-01f4dc46103c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058bd763-f435-4fa4-8772-20060cb97e76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb50f8-7c12-42c5-953b-30b1d01d3579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46986d84-b93f-4a5a-a738-23923bad3b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b968ff17-49f3-466e-b433-6c5723869152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33ab874-8343-4a54-bdb4-c46999538ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46f9f4a-2f9b-4689-b5ee-681f616348ab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e1436-7db1-44ca-bf00-1dae5d4e46de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b3245e-9153-435b-8827-6f92f7388cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1316ba-9ecc-4b76-9891-1d7321f450e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005b2405-5f29-4351-85cd-df687854829d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d67386-bdfd-46f9-b445-3ffa35bf1775",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456d882d-660e-4901-a24b-a03844d51d7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e230937-b76e-4076-af32-496b8744e976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe003714-bb9b-4158-8aa1-4fe04cd6438b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68bfa31-12ee-44f8-9109-80eab47d6f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66109682-ffa5-4f41-9682-b720d404bfac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a566c949-bdac-4d74-b4a6-f0ded64e1e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e946df21-31aa-4338-b3fd-bd8ac41916e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d1774-fe3b-4fbb-9bdf-7f5a4f14b5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dff72eb-c63e-475d-a96d-f635814f0281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2269abf1-792a-40d5-97f4-64a7abea222b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17ee32f-d140-4616-ac76-023e57f01719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a87625-37e6-4322-af0a-58e10c03b55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5725f4f8-9eda-4ed5-a515-ef96d90e89b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4246c339-9a68-4c36-a80c-df54f6ba8ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e074a9c-c186-42d6-a8c9-083950cba201",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c2ceac-85e3-42b3-9bf7-78478ea2b599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36baaa86-9d36-4e08-ba6b-1f7088723ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8f5bd4-1c6a-4232-a909-313131cdb1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624fc4af-b194-4517-aacd-70e6f92f7345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65135d8-751e-48ba-bafb-b21b54efb34b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5ba400-5609-4805-ad24-26c70e2d42d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1465b8-7a37-45e5-b8d4-27177c42cb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7783afd5-cb4e-443f-aec9-92284118d22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c65c9a-6a57-4868-beaf-22ceac136796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61b5a6d-816b-40a4-a6be-5057815c17f9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b78f155-5992-4773-afd6-441a5bc2b766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5863f179-f36a-4c6a-b2f5-6fa45fde0b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f93e1b-d57f-4e6b-8fbf-d2ef0ff59604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c2deaf-5f12-40f0-94cc-1b7f2d55b32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef8dee-ffad-4e39-9a2a-35a168ebe682",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945261d8-467b-4bc3-bea7-981392dd40ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c9a4b4-8471-4288-8654-741141a2ba83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b4e5e-6426-4bb2-a61b-3b392564d3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1735f31a-caaf-4c7e-9f22-604e2141b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97ef685-0430-4ca8-bda4-b86d9e227dfe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7006b0b-a565-4aa5-86b3-d04c478b1248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9511ab8-e1e0-4008-bede-848d8d9befc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9e81e4-7078-4079-8555-96d4a35e3c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe0b386-74a1-4787-bfa7-ab9c78cee3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3393cd-d088-4dab-ad0c-74ebd90dd44e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71fe585-b6b6-4ff7-9270-adc424e03e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30be9f94-9795-4b5f-8160-74d20523d6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acf5de9-15aa-4cc4-b638-6281ef16581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330e3599-9c32-41e8-aeb5-f5dd3b8a84f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac3916d-d6f2-49e8-865b-44a35f0dab57",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5fbbfd-cd55-4549-bf96-b2bff76b1b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8328970d-fd8b-45a8-915d-5fa0526d369d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c155e-34d2-4bf0-86b4-62509d350b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c135d7-e4fe-42e5-ab9f-466dc00822d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f22095-932b-469d-8e1a-3537dde06126",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2cd2e4-eda6-41df-9ab2-6b93a19f3b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d84205e-ca80-41cf-8d6f-fe032c915955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b950a900-43f0-40b8-acee-876cf20db18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e45b5c6-ab12-4d87-8774-682cb4e94631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd97eaf-ca50-4795-8749-e8edb51227aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14416f0e-37cf-4b42-8624-aaa8a24b0f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78305467-4384-4753-b593-a65b9534474f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bd8802-dbd6-41cf-910f-b73f764e4a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa9d9be-92de-431c-8837-35c4fbf682a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7022989-c759-421c-9489-7a8580990f3e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5afcda-9928-4ed1-b45c-fbf429a60380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d881d5-ea3c-40d2-b50e-c576d1bd465a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1507555-541b-43ab-81e4-058f9b5eb799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372d216c-b8ad-4d25-b49a-2c4517f66aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd26d0-a20d-486b-9675-9d07a7430f3a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bba1599-fc6c-4337-9d59-5a89a31222c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf7e384-ab83-4350-bc17-06e4e7ed647f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1a400-e430-42f4-b54b-dc38b1f79907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71181d50-a68f-4ec5-bc0d-349ea0f39303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e1fe3-7298-4a47-bbba-4b180c1c974e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d613560-7a63-49fd-91a0-a7618945856d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b084b1-aa66-4801-9f4f-d3c96598f9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ebbd91-1834-4bd2-891e-b699381656c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0d542b-e930-46ba-b2b3-b2907d440af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e531f80-7533-414f-8e17-5a5ccb3c022b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8e9f59-8bf7-4b44-b4f8-a045524e7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a615369-137f-4f5e-873e-f16ca64b9c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8084cc6e-aa7f-4fa5-83fd-115e3983f2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f53dd88-c137-4f71-ab32-937fcbfe32d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cba218-f513-4867-81bd-23dea27994a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51cbe5c-4f84-4339-89c5-18f7ff761c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c42c85f-2e92-4bc0-9268-d04f6579505c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93249c71-c28b-40b7-aa4a-00e8d1990773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73db4fa-5a51-484d-bf11-b0685b5bf5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c492082-4f76-4ec2-910a-39ae8af19a1a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf38de7f-6210-4d91-a01e-a6fb5bd06fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5f98f3-2276-4efc-bae1-e31a5433b7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468902b9-a06d-4ce5-a5eb-c1e5503b8699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e46035-2896-4be8-91d4-f80e033a8dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6899afe-03c9-4dcf-8b54-dda3c5d380d7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73ff3a1-636d-45af-b542-d313fccc00a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bd1f51-4074-41ce-9f4a-f768fbbab52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0490aa-5863-44f1-8897-4881a39c8adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b687485-e659-4828-914d-2febbe54feab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3dd69f-5a9d-4075-bf92-2e2dfcf30517",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059d548-532f-48cc-89cc-8a6edcf8ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4a5280-4a30-4e1c-8f52-2744c2b3468a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d047bf99-dd8b-45aa-913d-e29d2fe41fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118a8c91-1f88-437f-bd75-3ffe46ebcef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b177584-203c-40d7-b0fb-6d52e52c111a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24dc514-8d59-4788-92cd-9fb9d428f224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34349a40-b0c4-4fa6-afc8-59c3ccbe203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d361fb-5e60-48c2-88bb-ffe9fb8f6ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae9475a-eedb-4a01-9819-dacdf83ad110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aae95ce-c3f0-4406-a853-3a46a69d3609",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644bb9b9-a8c2-4a02-a5b2-94a7c80d027a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ea552f-d617-4ea8-b7b1-942b309feec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958368d3-3875-4edf-9496-051cd8ba185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff69ca6-6069-47a4-bd0f-6e3e2b7ebc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb788757-9416-4b80-a41f-129c2ebf6be8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d5b4cc-3728-45c0-af87-2ec50d4f8601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873e58a5-a9af-4f20-b4b1-6d53e8c39087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ca4d8c-3f34-40be-98ea-11118095ec19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c7f291-b906-485b-9528-20e9587cf8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3311af7a-0466-4f2e-bdc0-4483e8e4ccdd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf7eb8f-35b2-4c61-a349-724846df2309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cee49fe-b036-477a-a2fc-ffdd743a92d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab6ac7c-7a43-417c-afaf-1fe45e4b4900",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c6d272-5ec8-40b8-bb6b-897cf2fb669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404c497b-3e0c-4da9-8427-910ee21ea92c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ac6b0-179f-450d-8adc-9e61f5aae4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873678a4-d5af-400c-a543-9526edecf03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ccfe31-f74b-4990-a920-86bf0f2551a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1b270d-44d8-4afa-bf54-bf9a591fc8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c755dccd-9a76-457a-a2b9-72e2e8501851",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7660b206-06ba-49e6-a539-244b5432f51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d897bbe5-05f9-4e16-993b-a39aa6c3cf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6bfe36-47f3-4c4d-af64-bb0804967e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582abdbe-d378-4791-b73c-4051af2e6682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e256ec-ffbc-4465-84a5-0727395a71dd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774b75fc-b747-45ba-8ea3-aec1215739ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7564e59-335d-453e-8ebf-fb16cfa8797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c2c83-9486-43d2-a0c6-21c03dfdb419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7d4af6-3d84-4cc4-a071-7bf4eff365f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030bc10b-f652-4766-b429-7f5e0afda3ab",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0083c06-a93e-4849-b72f-84030f090be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad756dd0-9ce5-4247-a428-086858e3cdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0819a9-f2c0-4f00-9f90-93b6a90f5f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30fddb8-7c73-4d9f-823c-715c83436da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45820730-23cf-49f9-a99c-06fb0966ec4e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47cc349-f0b9-4121-aab0-9af717450fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ed72cb-bc3a-4118-96e5-502db240b950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0965473-e2fa-41d5-a8f7-d5367c4ae745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77d2df4-1218-414c-a0c5-0ecec1823787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b988e28-fdab-455d-8944-a64a5751a858",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392aeb53-a418-4a6d-a650-4c916f231c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658adf5a-bc50-408f-880b-535004103a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a2c415-a955-4350-ba2a-75954f0192e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9063187-f54b-4b78-a222-478dcb06d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19213bbb-34df-4ff2-baed-6bfdfa069905",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c0a56e-9d94-47c9-963a-a98a5872d8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392a2264-2741-4133-8a0a-60597328a6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0124cd-c8d1-45ff-99b8-b195a7a3fb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996a0ecc-ca66-4d2a-b3b4-a1b9cbdae2ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7883c212-9d0b-41c6-879a-1f1d759d6008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d6458b4-dace-46d5-acfe-5c2f618e93dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa1e7507-5e58-43a9-af2c-59e2650bf631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1041e96b-e22a-4a49-9916-d09f7d4217cc"
                    }
                  }
                ]
              },
              {
                "id": "fb5d8100-227d-48cd-988a-ea9101f313ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a7868c6-c40a-4f86-beed-c306a9eab29c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff7d1f-2d16-40e5-a17b-b31e4733af85",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eee9c616-686e-4b67-960f-df3121b021ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddaaa35-bdd6-48e6-857d-0f05b97e1b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed4276c6-49b0-4c89-bb34-090d5256b095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3d37e7-7925-4d14-a975-ccaae94c09a3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fcac80-0472-4470-bc9e-cccc83e0e51e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3309cf60-15f8-4799-9fe7-ddc751f92fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21407a6-7ad6-490d-bd55-23ce0dc2bb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "846044eb-bdef-4b6c-b960-c3f20d6e05d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc89cd5b-d0d6-48c0-8a18-bd100a5d4074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33cdd254-f854-4d48-81e8-182d823c8c68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "daf9b3ca-c5d8-4572-a58a-ca4e505b3d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b4616c1-31e9-4606-97c4-85a1cc35ba74"
                    }
                  }
                ]
              },
              {
                "id": "d37ca0b8-0451-4460-9403-c4bf18de0131",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "240be243-970c-4f61-bb90-8f6d9fb54097",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6804c37-cf9e-40f7-bf1e-4a55be1d6803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0a99a158-bee5-4c5e-9b2e-18842b780516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46bd6de-f473-461d-835b-de795330d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545a46e3-b1da-4db5-97e8-24cb188345c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11385da9-7cff-4420-85d1-7316d8ef8eca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bd93e70-2c04-4787-b3d5-2bfd6b6a0e6c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7eabb74-376d-4274-929b-db9b0da595f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "749ab803-ca28-457f-a749-0dab1830a936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "898d9240-f548-4441-be88-92d6255812ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a57fdb8-1ac9-4d14-b2c2-a6eb390aaf52"
                    }
                  }
                ]
              },
              {
                "id": "862338f5-6386-4f51-9195-e2492dec215b",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f0ff0ef-6d81-4466-a2e9-aabebc825ddc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8b5f728-ee2f-4134-8540-a99011fafade"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda85941-c72b-45ce-b645-6bf7f92c47d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b438fa4-408d-4b8e-94d7-30e140df3782"
                    }
                  }
                ]
              },
              {
                "id": "bb952951-308d-47c6-87d5-334feec180f0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca3628a-7c2d-4b29-9dc6-c1f3ede21ce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "791daf37-02bc-45e5-afa7-58a5f7f01011"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b38f42a3-18af-49a5-adf0-ec03b7277d60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b79ce6fa-e561-4627-8dd7-4aadf56122f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb4f8e5a-d7aa-4c88-86b1-f09fd9f92123",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "366936c2-4dc5-405e-bf5e-f14e639da5c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2b096d4-973a-4a27-ab23-66defeedc7e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d49cfc46-d691-480e-a96d-a26d63e3ef71"
            }
          }
        ]
      },
      {
        "id": "05b06d2a-291a-40f3-b749-0814a96663fc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3f6a5e47-4281-44a3-8a86-dd35fac0064a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8b9f993-bd47-4da2-8a7f-325a03dd41da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6217df6f-5495-425f-9502-a8f790cd9434",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02212d1d-bae0-4ebd-9fa6-89e608d44e5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "14329c5b-fa32-495d-b022-a7e4724b336f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4314f1-84ac-4257-9f4c-616c82a98991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ef290a2-104e-4feb-b8cc-4baeb79ef884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4852327b-2517-4e62-8bb7-9ed92b278bce",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184a27bc-5777-4550-8050-bd7cbf115e80",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e534097-b4b6-4996-912b-58292ef3757c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c44ff1f-f1e5-4950-bcd9-2a50e9665a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "198ae3d5-d263-4b2e-ba47-7dd6600b3619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a1f92c3-5bfc-47e8-b948-43971ad80e1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "920fcb6b-9d2e-4191-a43a-4234ce398c1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3507b9aa-7cfb-45a1-b367-e7057577dd94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a710bdbc-8195-46e0-81a5-b13a24171388"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18dfad23-06dd-4fe0-a764-92c38884bfd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "50052f91-5ab7-4d0c-9aee-ad15ec21c7c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7245b903-2d58-4840-af84-aa1b62e6d6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21f17dee-a9fc-4398-af26-84d812273563"
            }
          }
        ]
      },
      {
        "id": "5f90d1eb-de24-41e9-9dd5-ff8e8d33edd1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "65cc67d4-0243-4d9b-ad46-033e8ea465ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c51bbc00-bb1e-41da-9515-9e6fdbd7a17e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ced7402f-a44c-45f1-8611-cf5511c62567",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5fdd73-87c7-4c76-9fdf-d17e195776a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc91b88a-5e20-4cb1-a05b-6df2a2cdca23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6960c474-be3e-42a9-9867-8414c39980a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6e60c0-6045-4d76-a8dc-04db5e3772dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a72e33-a6fa-4b17-9765-1f1cf9c9fff0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccc4fb4-8964-4c4c-aedc-ca54fdc43713",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "045f18cb-98d5-4cf4-b8c6-0889a7a75939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6939fb84-772b-47be-8dc7-f5584dffab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8fea8e5-d31e-4c7e-b275-d864d4823b01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd4632f3-a2de-493a-9848-7e16a6b28e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37745e1f-6688-45f1-ae1d-9310f3b4be29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f038c092-8546-496a-bc7f-0825f405e14d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75fdd5bf-06ae-4743-b546-c57bff01d495"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e103146-8c8b-4f51-b443-c976f948c342",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "de34a1d6-fd37-437d-8660-e6d32488b600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f804e8c-e7c3-4dcf-b74f-c45103455911",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dba5a706-7592-4459-8982-e6fe3d816cfd"
            }
          }
        ]
      },
      {
        "id": "c3a42bee-3782-46ee-b755-f0dd8c88a96d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd2c511a-b317-4abe-a12c-763261ebd407",
            "name": "Negative Testing",
            "item": [
              {
                "id": "617dc366-9dcd-45e7-8784-ae0f27664baf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32f1b5bd-77f8-44fa-89a1-c3ab580c68ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c47e202-59e8-4d6d-a2a1-0d2aa7c5c500",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aab963dd-9b31-46bf-a2df-b080fb3e00c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac25e68-2ffd-4126-a96f-f63c28f74a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ffbf344-ccdb-4b9c-be83-9bc22c296f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c3a505-4515-4583-81ae-9e95d261f19f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7510a-a915-41f3-ba70-5e020989f8ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "996322a9-d2c1-4811-b0a7-27fd4b099805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d664701e-04b2-4342-a7cb-777ffad90aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97adc986-9328-4b75-8420-d17b6edf3c9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ade0396-1009-4330-b609-8af71f93a062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e5640e-500a-4dff-8c23-04a33a993bef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d70b17d1-690d-435a-8a6d-f1adce5f79b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0211383a-0db1-4be4-9d07-25571ead3162"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57b7e805-1722-4682-b422-a6f61f90f1ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a6cc45b2-eef2-4e36-8b4c-5aff96b672fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17701378-c2fb-49e1-9150-58d5a401610b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bf70d97-6795-4fe3-ba09-6033a63747f3"
            }
          }
        ]
      },
      {
        "id": "5f1c3379-6d19-4c26-b2da-a2cfd8130d77",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f87dd7e-80b4-47a1-8bf1-8c291cc98ff3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56f99378-ae8e-4df9-8337-e0048fb0f30a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "19a345d1-714d-466e-a14e-a30449c8e23a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa6f1997-8c3b-4db4-93d1-cd59386c35ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "feceebb9-cd16-4514-8aac-49d1ed996d5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 516.1570881226052,
      "responseMin": 7,
      "responseMax": 3880,
      "responseSd": 452.1221080755487,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668732567938,
      "completed": 1668732715195
    },
    "executions": [
      {
        "id": "ee1331ee-c2c6-4a61-8205-f5c829ca326c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b2c2a323-bfaf-4602-bafa-90061edaaf2f",
          "httpRequestId": "5cb24ef3-1250-4ae7-b3d4-880ec49abc74"
        },
        "item": {
          "id": "ee1331ee-c2c6-4a61-8205-f5c829ca326c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21c677ab-d43e-4461-a98b-553c7c068a0a",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "3687d7f2-06b8-4b5e-b727-009baec858a7",
        "cursor": {
          "ref": "9fbd472f-60ff-47ed-bd24-0c83179b3ddb",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "818a7823-8c54-47aa-b7b0-ac15bd448939"
        },
        "item": {
          "id": "3687d7f2-06b8-4b5e-b727-009baec858a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "970c6136-1868-444a-8dc9-bb9f86b638df",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3e0cabf9-aa6e-4f15-ac7a-4409bf7f7f98",
        "cursor": {
          "ref": "2b89e427-6687-41d2-a9bb-f22a9caa5d49",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a1c49882-acb0-434a-83ec-4a86a24130a6"
        },
        "item": {
          "id": "3e0cabf9-aa6e-4f15-ac7a-4409bf7f7f98",
          "name": "did_json"
        },
        "response": {
          "id": "d6badc92-4431-4253-921c-275d2d8fcdbd",
          "status": "OK",
          "code": 200,
          "responseTime": 930,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ebc955-16ec-496d-8d8e-f38f95c2d626",
        "cursor": {
          "ref": "87698161-4044-4225-a013-a404c627d05a",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fbb1766-2aff-4c39-bbf1-569774e4097b"
        },
        "item": {
          "id": "f2ebc955-16ec-496d-8d8e-f38f95c2d626",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2dfc691-4ce0-45ac-937c-935423594ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ebc955-16ec-496d-8d8e-f38f95c2d626",
        "cursor": {
          "ref": "87698161-4044-4225-a013-a404c627d05a",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fbb1766-2aff-4c39-bbf1-569774e4097b"
        },
        "item": {
          "id": "f2ebc955-16ec-496d-8d8e-f38f95c2d626",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2dfc691-4ce0-45ac-937c-935423594ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfa6266-9777-4a12-801d-4e9b20f5a615",
        "cursor": {
          "ref": "967c3cf0-796e-4b70-841b-d31339a7a904",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8669c33c-fa0c-446a-b0af-306e43b55e49"
        },
        "item": {
          "id": "3cfa6266-9777-4a12-801d-4e9b20f5a615",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7dfac010-3387-40ad-8450-13f142962c8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 609,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61044fe-9d3d-4c6a-9f34-a242adc68fce",
        "cursor": {
          "ref": "a1df70f2-fec3-4818-b531-f2b862689e34",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "360bce8d-c7b2-43b9-9664-11350b9b5573"
        },
        "item": {
          "id": "d61044fe-9d3d-4c6a-9f34-a242adc68fce",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "22f56c00-6985-4142-88df-cbcec5e9284d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 525,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecca6db-f06d-43c0-927e-b6c3c0962a36",
        "cursor": {
          "ref": "07d0af7a-2d79-473b-a53b-11eba8850804",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b378456-fb2a-4d73-99f8-b7e5deaca8b2"
        },
        "item": {
          "id": "cecca6db-f06d-43c0-927e-b6c3c0962a36",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4e476a37-3309-4ff6-bf3b-722c839b9420",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dfb757-b0e2-4897-a287-192a1e627002",
        "cursor": {
          "ref": "8198e49e-c31f-4621-987c-6edfba1e4cb3",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c7869a62-a031-479d-ba79-31b2bd156e06"
        },
        "item": {
          "id": "22dfb757-b0e2-4897-a287-192a1e627002",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b950be24-f03a-4b34-a09f-121ecb7f2421",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dfb757-b0e2-4897-a287-192a1e627002",
        "cursor": {
          "ref": "8198e49e-c31f-4621-987c-6edfba1e4cb3",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c7869a62-a031-479d-ba79-31b2bd156e06"
        },
        "item": {
          "id": "22dfb757-b0e2-4897-a287-192a1e627002",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b950be24-f03a-4b34-a09f-121ecb7f2421",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde7c4b4-05bd-4b5d-b920-86a94aa18350",
        "cursor": {
          "ref": "3ac84718-26a9-4201-945d-2b05c47b80b7",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9fa9e0de-189b-43e4-bace-5aa5b9c9ce47"
        },
        "item": {
          "id": "cde7c4b4-05bd-4b5d-b920-86a94aa18350",
          "name": "identifiers"
        },
        "response": {
          "id": "0b10617f-2e2a-4e32-8d65-7007540cbdce",
          "status": "OK",
          "code": 200,
          "responseTime": 729,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563aac5f-e7ca-4984-9be5-6883fa07c4c0",
        "cursor": {
          "ref": "3ffc81d9-76f4-435a-bc28-e018f196ce1f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fcb7dad2-446a-4b59-82e2-fcfc8be5a5ee"
        },
        "item": {
          "id": "563aac5f-e7ca-4984-9be5-6883fa07c4c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e2a73c81-0f90-4fe1-8eef-dfbedd5db4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563aac5f-e7ca-4984-9be5-6883fa07c4c0",
        "cursor": {
          "ref": "3ffc81d9-76f4-435a-bc28-e018f196ce1f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fcb7dad2-446a-4b59-82e2-fcfc8be5a5ee"
        },
        "item": {
          "id": "563aac5f-e7ca-4984-9be5-6883fa07c4c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e2a73c81-0f90-4fe1-8eef-dfbedd5db4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e08bf5d-fb8c-47c3-a4b4-1b93898341aa",
        "cursor": {
          "ref": "4aa55ae8-ef04-451f-b6c3-89437607ad03",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "677ee475-0f4d-4c2d-a0f1-d09993124fa6"
        },
        "item": {
          "id": "8e08bf5d-fb8c-47c3-a4b4-1b93898341aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e02672ab-50b8-4439-9d09-1ec54a21c062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef23765d-8b8e-4162-8599-1450492df510",
        "cursor": {
          "ref": "6604f093-b9ae-42b8-b04d-e66c8a097e16",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6eba1221-89b6-4675-880d-fb2005b7cf90"
        },
        "item": {
          "id": "ef23765d-8b8e-4162-8599-1450492df510",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "54615d5d-1441-4bdf-81b5-9b57a3003234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b4c84d-302a-46e1-bdc0-ec333133e5f7",
        "cursor": {
          "ref": "b76dda2f-c6de-40a2-aa88-ed7368bdabb6",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8a7cc279-47be-4d9f-8937-cc19561b5ae8"
        },
        "item": {
          "id": "58b4c84d-302a-46e1-bdc0-ec333133e5f7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3ab31493-11c9-461f-a9dc-22c3fa99f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bef364-c6a6-4013-a0a8-06c6f0f70682",
        "cursor": {
          "ref": "95f981a2-d46e-4d10-b4d3-1bfe847a607d",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "66b64c2e-8c35-4015-8cd3-3917b0c73908"
        },
        "item": {
          "id": "23bef364-c6a6-4013-a0a8-06c6f0f70682",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "332f0540-4eba-433f-9e41-576281cb8f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03d42a9-aea2-487b-a13a-d88c0b9df880",
        "cursor": {
          "ref": "2f7360b4-0cc4-49a2-986d-a06e34850a9f",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1ea13dc5-e038-42c9-89cb-e10106632766"
        },
        "item": {
          "id": "f03d42a9-aea2-487b-a13a-d88c0b9df880",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d592ed73-ff89-44e7-b7d9-7a6c12fbfd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29ab466-96bc-417a-94c6-b004d30a4064",
        "cursor": {
          "ref": "014b9b2b-f369-4fa1-92d5-fbfec8a36a5d",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b6f7cc29-6334-4f20-b31e-4a22d7655f59"
        },
        "item": {
          "id": "a29ab466-96bc-417a-94c6-b004d30a4064",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e741bf2d-e1e2-4060-984f-786908a6102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c726b-bef4-4148-b00a-c76f400d62ca",
        "cursor": {
          "ref": "b62d5964-92fb-4270-aeb4-902418635351",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1660210d-d48d-442d-9bb4-0c9b86b068f0"
        },
        "item": {
          "id": "001c726b-bef4-4148-b00a-c76f400d62ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2296ceb3-5141-429a-949e-3cd032cc8b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4358d8b9-8137-49e2-9532-5a53167eed24",
        "cursor": {
          "ref": "1b8e22ea-9a12-4728-88e9-3186ccccc491",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fe3b4b94-9646-4ff7-8862-5d207c6467b7"
        },
        "item": {
          "id": "4358d8b9-8137-49e2-9532-5a53167eed24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31a507a3-6348-4d98-9f47-17086253c5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90232468-0cc2-4b20-99e2-d36f4505a1fa",
        "cursor": {
          "ref": "bef66639-73e0-416d-a0ec-89109ab3cdc7",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3b8c35c2-38b7-453b-9391-9e0dbfa4cf20"
        },
        "item": {
          "id": "90232468-0cc2-4b20-99e2-d36f4505a1fa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e6c5206c-64ea-44eb-9b19-978bd0f31105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b1060f-9fd5-498f-9d07-ea7e9d3694dc",
        "cursor": {
          "ref": "c8a4d5ca-bf2f-4333-a030-7e05f701ae0d",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9fb6bc8-cac2-4f35-ad49-afd369ecc82d"
        },
        "item": {
          "id": "27b1060f-9fd5-498f-9d07-ea7e9d3694dc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1e5e9014-a1a8-4e60-bb66-ff8461c81f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea102591-ce3e-4b77-8a33-a1078a167670",
        "cursor": {
          "ref": "6cd8eb5d-cd34-4867-bee3-e92272bd77a8",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "612fa525-c243-44ba-a6e8-f8a2d817b08b"
        },
        "item": {
          "id": "ea102591-ce3e-4b77-8a33-a1078a167670",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ff773e06-b420-491f-aba4-f9f2dd14bb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b6121-3791-44cb-b311-4423917e1999",
        "cursor": {
          "ref": "7b64c539-a8de-4984-989c-d1b2104aeb87",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ed6ccb2-1669-4363-8318-80498ae56cac"
        },
        "item": {
          "id": "c20b6121-3791-44cb-b311-4423917e1999",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "10a15002-0fa3-40a2-b986-b2327b31e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f380dbe9-7a9a-4f0e-b5d4-8a6558215d49",
        "cursor": {
          "ref": "7b4c5858-905a-4292-a421-8751b0fc77be",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bf2f9b9e-dc5d-4350-bdd7-0cf512897e84"
        },
        "item": {
          "id": "f380dbe9-7a9a-4f0e-b5d4-8a6558215d49",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "46197c49-b6e0-45de-82eb-724a9504ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced23088-d856-4f26-aa24-153cf766b43f",
        "cursor": {
          "ref": "12ef0653-bc76-464b-ad34-3ef7ad007e6f",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8416f0dc-7945-48cc-9967-33e517630b7f"
        },
        "item": {
          "id": "ced23088-d856-4f26-aa24-153cf766b43f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1fc7be99-62ee-4859-be22-9d46ddf5e7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b14940-5f12-44bc-9bf2-ef5fd478fb26",
        "cursor": {
          "ref": "f5836dd3-2eba-4ff3-8829-5cf477135650",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "efe26870-bf3c-4eeb-8750-525b940158d5"
        },
        "item": {
          "id": "54b14940-5f12-44bc-9bf2-ef5fd478fb26",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "42d65313-5bd5-4277-9e34-d1e02687ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1af046d-ea1a-4036-a8d2-4952e69bbc00",
        "cursor": {
          "ref": "7a7be562-ea88-459d-a561-9d17a9173a98",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "405187b7-4977-41f5-bd58-ca38776d1dd6"
        },
        "item": {
          "id": "a1af046d-ea1a-4036-a8d2-4952e69bbc00",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4000b017-8770-4b93-b2ae-6a7165b373c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53612b6-18d1-4ce8-9ed0-65539a5e803e",
        "cursor": {
          "ref": "a5328bd4-f0f8-428b-9e57-9303b659035b",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d5c9fb40-0279-440d-84bd-8c3df58263dd"
        },
        "item": {
          "id": "e53612b6-18d1-4ce8-9ed0-65539a5e803e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "29741ce9-6d82-4b60-ae60-af6ba45a431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991afcc8-2bc8-4e51-92ac-9a166a2a6eaa",
        "cursor": {
          "ref": "e3a79b70-8c1a-498e-b1e0-4c6baf3ebd4a",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "72c1ff3b-abaa-4a3d-b9c6-1a25386e1c60"
        },
        "item": {
          "id": "991afcc8-2bc8-4e51-92ac-9a166a2a6eaa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "12f69d0e-726c-4564-a44a-b545b80a9693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92530ec-a9a8-4291-a536-79a6140bb977",
        "cursor": {
          "ref": "281ee77b-8f45-4607-8769-998bb96c5b58",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6940e323-c5ab-47e3-a09c-68b854b269f8"
        },
        "item": {
          "id": "b92530ec-a9a8-4291-a536-79a6140bb977",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aa29b916-5c61-4a58-acc8-0ad59509b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc6be7c-0857-4459-aa80-f70cfb80db84",
        "cursor": {
          "ref": "4441b789-a221-4268-bb16-36bf6b5609b4",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f0e88c73-6df6-4b6f-8cb1-6158aa5bfbd8"
        },
        "item": {
          "id": "0cc6be7c-0857-4459-aa80-f70cfb80db84",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9941e6ee-5837-462b-9682-37dbfd0327d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ceb71a-8ba7-47c1-851d-5ceb77bf8720",
        "cursor": {
          "ref": "c87e9369-4144-46d3-af09-cfb71c58134c",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "af56c76b-08d3-4754-89f8-fe43191c2659"
        },
        "item": {
          "id": "b1ceb71a-8ba7-47c1-851d-5ceb77bf8720",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "486f3f29-7493-4c7b-b0bf-6ccd1c442ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7286d3b-397b-48c4-a51e-d3b83058d12b",
        "cursor": {
          "ref": "98bc5521-5d32-44e9-abfa-172941fedde1",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "04e466f0-d250-4506-bf41-abf4ca31130d"
        },
        "item": {
          "id": "d7286d3b-397b-48c4-a51e-d3b83058d12b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4eeea926-672a-4cad-af93-bed04a8ec02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e1fff6-6881-4ddb-980f-408bdfd72634",
        "cursor": {
          "ref": "bf39b8ab-b1de-4500-ab13-6133bd13e5e0",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "137f6da9-1953-4087-b433-01150d73c041"
        },
        "item": {
          "id": "95e1fff6-6881-4ddb-980f-408bdfd72634",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c0450ecb-f59e-460a-978e-9bd702ee3f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d19dd32-e288-49ee-a521-fe666fced57d",
        "cursor": {
          "ref": "e19defc5-6a5a-4594-91de-db36e6bb97d9",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "876b49b4-2d82-4ab0-9921-a6ef50d27c8b"
        },
        "item": {
          "id": "3d19dd32-e288-49ee-a521-fe666fced57d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0234bd2b-7cb5-4299-b9f5-493bb57b1146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b81e205-4b04-4d53-916d-6ec8d6d09cc0",
        "cursor": {
          "ref": "543a6930-3f4e-40d5-bc03-92414226130b",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0f0fa54d-110c-4aae-a3e3-ea7af5f2bffe"
        },
        "item": {
          "id": "4b81e205-4b04-4d53-916d-6ec8d6d09cc0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "de6399f8-edbd-4689-a372-d5a679d97d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66b1e8d-5bf2-4a70-918a-d17bed2cc5a8",
        "cursor": {
          "ref": "38bb8490-370f-4d4d-b97c-f45a24624ede",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "855ca8b0-c078-4a99-9a06-ea6d221a761e"
        },
        "item": {
          "id": "f66b1e8d-5bf2-4a70-918a-d17bed2cc5a8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bc195735-df1b-40fb-ae77-548587686a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7808f970-9358-45aa-a542-a5a9d02eec8b",
        "cursor": {
          "ref": "adf4eeaf-e286-49d1-8aed-e2d175d482db",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "596f3764-8306-4732-aa26-9a03cc44967b"
        },
        "item": {
          "id": "7808f970-9358-45aa-a542-a5a9d02eec8b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8f35664-9bfe-4315-9bbe-99ffd7cea9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47531f18-3b93-4756-8b7d-a9125e29daad",
        "cursor": {
          "ref": "83a74312-bccd-4d2e-b8ff-7885c5c14f69",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6691f5af-a8b6-4fed-b644-124c77a92062"
        },
        "item": {
          "id": "47531f18-3b93-4756-8b7d-a9125e29daad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e706e8eb-96ed-4faa-adf2-0eb04bdb7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d3552-033a-454f-b9a9-d7af7092d1d4",
        "cursor": {
          "ref": "78905ad9-2edd-463f-9c4e-fc99dd1ae68c",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c83d3e43-3da5-457a-b6be-633b7f843414"
        },
        "item": {
          "id": "6d3d3552-033a-454f-b9a9-d7af7092d1d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0b517b41-22c3-4a68-8552-e02273eefd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a7f44-2910-40bf-8a49-ae8aa0d15f60",
        "cursor": {
          "ref": "7bd548a9-bcf4-4bba-9675-d9503bde8da5",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "969fad96-5350-4405-b22f-8f3875b68468"
        },
        "item": {
          "id": "058a7f44-2910-40bf-8a49-ae8aa0d15f60",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9b40ba43-1848-45f4-b60b-fd9958d04a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd0de53-0f06-4efe-a00f-9a7a06240ff7",
        "cursor": {
          "ref": "c8b3b136-1cf4-4b6a-ada5-dd53dd2fe98a",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "514bad7b-bed4-4ff4-8413-4d90e77fd586"
        },
        "item": {
          "id": "dbd0de53-0f06-4efe-a00f-9a7a06240ff7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8b7b3369-93f4-4eb3-85c4-7389213cd033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a311ab-da86-424b-9d0b-8cc15641d00d",
        "cursor": {
          "ref": "97fbd966-195f-4298-9725-c4c7e1b1d3c4",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6a2a43b3-5a3c-43c7-a1d7-e76d212f00ce"
        },
        "item": {
          "id": "e4a311ab-da86-424b-9d0b-8cc15641d00d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1f128aa-f3a9-4590-8077-8d63ded9d056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d2a88-d3cb-4c14-847c-4079715563fb",
        "cursor": {
          "ref": "38e4f6c4-c95e-485c-adc7-82ec31dc4709",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "041b111f-c0b0-4622-b325-a12f26a9054e"
        },
        "item": {
          "id": "620d2a88-d3cb-4c14-847c-4079715563fb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6701fda2-2365-4faa-97e4-d25fa513bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c7e279-88ff-4d3d-ba8f-90d8b240fcb9",
        "cursor": {
          "ref": "6c4ee688-5a9f-46f5-9cd2-114fde8a1ba6",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cfaee53f-fed9-43fc-98ca-b5aa68a7448c"
        },
        "item": {
          "id": "13c7e279-88ff-4d3d-ba8f-90d8b240fcb9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c1ff5f0e-c662-4e51-9173-58294a69bb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1369,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5809344e-ce93-4653-b224-ed78a27a3172",
        "cursor": {
          "ref": "17fc1b5c-78e1-44b5-80a6-207640c3911a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2cf3a68a-7a11-455a-b905-ab2796bfcbac"
        },
        "item": {
          "id": "5809344e-ce93-4653-b224-ed78a27a3172",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "170d3153-c50e-4b60-aaeb-e03577959619",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1287,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcbd954-1a31-4a47-8a44-b99dbafac384",
        "cursor": {
          "ref": "8d499a88-d24f-47fe-b21a-d1d9a270de56",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0e7e9837-0c67-49ce-986e-eaddeaf960a9"
        },
        "item": {
          "id": "4fcbd954-1a31-4a47-8a44-b99dbafac384",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a8fc0788-f967-4619-b75c-4d32bf075a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aab4759-20e5-4d0e-be92-8c53729a346d",
        "cursor": {
          "ref": "f355c546-0734-4749-8526-cb8eed6eac25",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d9f3a5da-901d-4b5b-9ed1-8e687a13f33f"
        },
        "item": {
          "id": "0aab4759-20e5-4d0e-be92-8c53729a346d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e3480beb-2dd1-45db-9573-b6443a1139e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6568f76d-2f29-4986-bcad-426e59c1e688",
        "cursor": {
          "ref": "d3947862-856f-49c7-ba83-6f3049d2dc40",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b904fd31-5adb-4ae6-8227-f5e0081ce07c"
        },
        "item": {
          "id": "6568f76d-2f29-4986-bcad-426e59c1e688",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "81323ff4-1ace-43d5-a28a-bd694e77416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3214e959-39c5-4e12-af8c-02625da12f11",
        "cursor": {
          "ref": "993dd729-d2fa-4bcf-b4f9-c003592288bf",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0d5e9813-9e42-41a2-b563-f9baa723f34d"
        },
        "item": {
          "id": "3214e959-39c5-4e12-af8c-02625da12f11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "36668801-b3a4-4689-adba-2865042f9c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a38c73-a0db-4281-ab04-d9250bfc0732",
        "cursor": {
          "ref": "a4a459ab-37b6-4a6a-aac6-d42638ba6ebe",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3e3eaad1-6d09-4b03-a0ca-efe886adc573"
        },
        "item": {
          "id": "01a38c73-a0db-4281-ab04-d9250bfc0732",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a0c5eac9-c582-4c8b-9f74-caf95f05b950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8921f080-5319-44b1-a012-276e63097d6f",
        "cursor": {
          "ref": "27f9e157-52e2-4774-b3eb-5868e37b2d7b",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "29b59b4a-54e6-4991-81c4-ea9fac69f258"
        },
        "item": {
          "id": "8921f080-5319-44b1-a012-276e63097d6f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c2c07c77-4fcf-4c1c-9d7a-12ecf8ab8924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f100e875-d733-45b5-9f13-a80f19bcd65a",
        "cursor": {
          "ref": "c6984365-015e-433d-976f-e8755fdfc795",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e67b9c33-1657-4cd2-8ac5-81dd125240e9"
        },
        "item": {
          "id": "f100e875-d733-45b5-9f13-a80f19bcd65a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6dee7b60-945b-4cc0-9771-718d80a90d7e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 653,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4667d45e-76ba-43c0-bbdc-30d5ccdb1939",
        "cursor": {
          "ref": "da28dad7-8091-40c1-8bae-cc49128b44d1",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3c4b0338-dcbb-4247-9dd1-89292512a41c"
        },
        "item": {
          "id": "4667d45e-76ba-43c0-bbdc-30d5ccdb1939",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35dc84ad-5990-4687-98cc-71d1acb16c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae447c-9183-41cf-a2af-70707ddebd12",
        "cursor": {
          "ref": "d60d3fa2-a6f7-4906-a344-8d28e7448df3",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "44868cb2-9791-4200-9424-8e9fa081093c"
        },
        "item": {
          "id": "9bae447c-9183-41cf-a2af-70707ddebd12",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "62a57f49-f993-4fd8-a367-516be092f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1fde55-f4f4-4a35-b2b0-1933043e561d",
        "cursor": {
          "ref": "5645bf47-7522-4d06-a8c1-4bf2a7140abb",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3cbd9df4-4428-4416-a92f-4f123553efb5"
        },
        "item": {
          "id": "ca1fde55-f4f4-4a35-b2b0-1933043e561d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ae06231d-b2a4-4455-825d-6fbe22cd0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a388848-5873-4fe1-8362-21e266ed38a5",
        "cursor": {
          "ref": "e9f61a47-d793-47c8-8cf2-5cc60cb292d8",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "814ba0a9-1c82-4b22-b0df-ffdec0e342ca"
        },
        "item": {
          "id": "6a388848-5873-4fe1-8362-21e266ed38a5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "63f462cf-5576-4121-9d63-c53462608770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce7310a-6f8c-4cbb-b252-74c033f52c41",
        "cursor": {
          "ref": "3443cb70-4aeb-4e27-82bd-cb3bd0bdefd4",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e1ede381-4493-4a29-a058-bf8d1af7d7bc"
        },
        "item": {
          "id": "5ce7310a-6f8c-4cbb-b252-74c033f52c41",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36a95dd9-a167-434e-bbaf-7aff35f18146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3935ce80-69a2-4320-a71e-4b45a8269267",
        "cursor": {
          "ref": "c6e987c7-c851-4c85-b3c8-02a9d5922ae9",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0fdd80e7-2458-486c-9933-7b785248d0f6"
        },
        "item": {
          "id": "3935ce80-69a2-4320-a71e-4b45a8269267",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3ed7749b-fb11-4179-bf73-6036a703b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f11da65-349e-4821-b0d3-97e3482d59f8",
        "cursor": {
          "ref": "7ed6db17-9fa1-42af-8d57-52bfb2bdf7c0",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "40fe2767-369a-45c0-9b65-6620120930d1"
        },
        "item": {
          "id": "4f11da65-349e-4821-b0d3-97e3482d59f8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "311f4e89-ce34-4b1e-8125-b16c37656428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab459d2-f3e1-4c6b-90fc-32ef816e6926",
        "cursor": {
          "ref": "e0d79181-f592-4e1b-a0c6-cdd8ccf088a5",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9f86643f-2142-43bf-89de-74d6ef06b998"
        },
        "item": {
          "id": "6ab459d2-f3e1-4c6b-90fc-32ef816e6926",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fe358ce0-043e-43d9-a9d6-6dba9cfe0d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6cc65-3ed0-44bb-bc28-d4432b36256a",
        "cursor": {
          "ref": "bec5c484-71e8-4a8d-a60e-0d1ddff8079a",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a1308bb8-2695-4418-a044-0f5f00eb5997"
        },
        "item": {
          "id": "96f6cc65-3ed0-44bb-bc28-d4432b36256a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f9baf546-afc6-4dec-85b2-926e1de1c536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79162b13-1a11-4ac6-b8ca-179e796fe36a",
        "cursor": {
          "ref": "82cbc31a-ac09-438d-bd34-f05d98a2d868",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ada868bf-32b1-417a-812f-50898c230538"
        },
        "item": {
          "id": "79162b13-1a11-4ac6-b8ca-179e796fe36a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "028c30cb-b04c-48d7-9772-93487cca89d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16867bdf-afc4-46c0-914f-93c54cad9351",
        "cursor": {
          "ref": "5985717c-0dc9-4392-a8bf-640ef9bde329",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "622fce11-85d6-44ad-bda9-8a06d50f997b"
        },
        "item": {
          "id": "16867bdf-afc4-46c0-914f-93c54cad9351",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "165211ee-ae9a-4a98-b029-4b5cdf5f717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55459a8-757f-4cb9-b6e7-a24b856e561c",
        "cursor": {
          "ref": "7f920bab-4ce7-4545-9e47-c593db5b7b09",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b47c78a5-283d-4424-8a0d-caaae3f25912"
        },
        "item": {
          "id": "c55459a8-757f-4cb9-b6e7-a24b856e561c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5412c085-1b71-4f11-b97d-ce44995f1fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91419c1a-55ea-4731-992b-2d5ea011ef0c",
        "cursor": {
          "ref": "df7917f9-f8b3-4b2e-876f-9a1097353799",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e501686d-ea44-4cdd-8790-befd3232e0d3"
        },
        "item": {
          "id": "91419c1a-55ea-4731-992b-2d5ea011ef0c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "711a62c8-43e7-4168-98b7-7e121ef9da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761fcea1-f40f-4e63-b4f7-9363707a9378",
        "cursor": {
          "ref": "f93852f0-718b-4902-a917-047544845fcb",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c7eb09f5-be87-4613-a8eb-82886ab3e547"
        },
        "item": {
          "id": "761fcea1-f40f-4e63-b4f7-9363707a9378",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5ba04359-47bd-4a82-a62a-d67c37b9338b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a311b98f-b12f-4c68-9618-b5d55920393f",
        "cursor": {
          "ref": "13270859-616b-4f90-90e9-00d6f810e7db",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e6b0a76-af4d-47a3-98a0-1388e467aca2"
        },
        "item": {
          "id": "a311b98f-b12f-4c68-9618-b5d55920393f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "42717677-e300-4e9a-8c68-d6bcebea328b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00a4318-474c-4ec3-8d25-090514f7fbc3",
        "cursor": {
          "ref": "8deeac72-3f8d-4179-9055-6f7883ffcc9e",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "62fc784c-09dc-4792-958b-b0477ab04fc0"
        },
        "item": {
          "id": "e00a4318-474c-4ec3-8d25-090514f7fbc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b764c729-8a32-4174-a48c-5fcfbcf5c8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2368757a-cda7-4eed-a7bd-371b3d0f788a",
        "cursor": {
          "ref": "108fba36-0bba-40d2-a833-03de0eda2ef5",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1ea254eb-b9c3-4ce4-ad7f-65152e66543f"
        },
        "item": {
          "id": "2368757a-cda7-4eed-a7bd-371b3d0f788a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ddbbe69e-6977-4271-aab0-67d573da943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a539e8a7-8adc-46c1-8c21-5688c54cf366",
        "cursor": {
          "ref": "874b4840-5d73-4733-9166-eb740b1ab46a",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "74a18040-57f8-49ab-a04c-54bc0510db55"
        },
        "item": {
          "id": "a539e8a7-8adc-46c1-8c21-5688c54cf366",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6ab4bb12-d2ff-41bb-860e-9cf66c3bc8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7012893-fd46-4c99-a515-d01162121e45",
        "cursor": {
          "ref": "fd3db697-2f85-4809-b9b5-4a1a1802ca28",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8f67ac7b-d81d-4c37-b26d-50ef526df66b"
        },
        "item": {
          "id": "c7012893-fd46-4c99-a515-d01162121e45",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7786bca2-7767-4128-ba3d-d0b0b5e86a3a",
          "status": "Created",
          "code": 201,
          "responseTime": 2252,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "7a85db8a-0311-42a2-b4fb-fcf73d170123",
        "cursor": {
          "ref": "8ba74cc2-9288-40cf-ace0-42d77f543d6c",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "19abd121-1272-45f2-b732-9687daa62b89"
        },
        "item": {
          "id": "7a85db8a-0311-42a2-b4fb-fcf73d170123",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b436b242-c280-46ea-8e84-cdb8aa8dbfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0010bf-1e00-4259-bed9-33f9e460f323",
        "cursor": {
          "ref": "926e57b0-f370-4a8e-bc32-98a9619371e8",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f623b3fc-e006-46d1-9502-ab315ec6dab1"
        },
        "item": {
          "id": "4c0010bf-1e00-4259-bed9-33f9e460f323",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "06288e6b-653d-403a-84d8-0c297efb698d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121090b3-3364-4e49-accf-0f413e6dc0f4",
        "cursor": {
          "ref": "6e7fd292-2826-40b7-8be9-abdc612b1b3c",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7298f035-041a-49fe-858f-6bda88b69372"
        },
        "item": {
          "id": "121090b3-3364-4e49-accf-0f413e6dc0f4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f52a11a2-550d-4878-aec5-a04c1a90569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1894c3-7ee0-482f-99d3-07bdbfa73cba",
        "cursor": {
          "ref": "a951abea-d03c-488c-8618-4a2876642af4",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e9c23ff8-c2b2-4a24-8960-79168f630d51"
        },
        "item": {
          "id": "0d1894c3-7ee0-482f-99d3-07bdbfa73cba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ada25593-295e-4dca-9b67-61c46cef9bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3bc399-4d3e-48d8-ae0b-14793e814e55",
        "cursor": {
          "ref": "b34ae585-2a62-433d-8e83-b803224df98c",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60fb8ce4-9226-4eb7-8e4c-78ec51258346"
        },
        "item": {
          "id": "8e3bc399-4d3e-48d8-ae0b-14793e814e55",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0dedefb-983a-4e6d-9fd7-a6b70d113255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed39b1-04d3-4728-b80c-09ebff7b1768",
        "cursor": {
          "ref": "68425557-caec-4498-ac6d-c803a7a8ea23",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fe0f19e3-01bd-40f9-875f-560bf383e85c"
        },
        "item": {
          "id": "45ed39b1-04d3-4728-b80c-09ebff7b1768",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "26f5681f-9778-4a9e-ad39-0418aca22635",
          "status": "Created",
          "code": 201,
          "responseTime": 2193,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "9a8aa634-6d65-4764-b1e2-a86732c76326",
        "cursor": {
          "ref": "6b7a53b1-bbdd-45da-a339-707c1df50fd1",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "40e7e88d-0367-4021-87cf-ddb4f6cad17b"
        },
        "item": {
          "id": "9a8aa634-6d65-4764-b1e2-a86732c76326",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95e206e6-6c85-4846-b5c7-e992c2a91dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570b81c8-a870-4aa8-ae6d-09e405607956",
        "cursor": {
          "ref": "63902029-d931-4431-a578-1e8a9205cd1b",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "70bf2ba1-5aaf-4604-aa7a-228b66614cf3"
        },
        "item": {
          "id": "570b81c8-a870-4aa8-ae6d-09e405607956",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4011aef9-3734-44f6-bad7-e79e7e4b65ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d0041-0c8c-4c0c-9691-ada60dd81317",
        "cursor": {
          "ref": "43a0c089-35d3-4644-9c4c-c1f7392e27be",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "02e731ab-6f80-44c0-9962-6f83fb3f835b"
        },
        "item": {
          "id": "f05d0041-0c8c-4c0c-9691-ada60dd81317",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d01f8864-5298-43db-8e7a-f9f1ec6c9fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3e8a7d-86ca-4502-bb72-890dd7c57d69",
        "cursor": {
          "ref": "049a4856-5635-4f15-961b-b59f1a022d6e",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bd7297a1-f958-49de-97f8-58b9fc130ead"
        },
        "item": {
          "id": "1c3e8a7d-86ca-4502-bb72-890dd7c57d69",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f8d67074-f594-43a4-89e1-0429b37a747b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a220d2-c5f5-47ef-850b-2253e22b1055",
        "cursor": {
          "ref": "f14dab2f-4f3b-4e8c-8f9f-7fb18e63c95f",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "201a8116-f0d2-4235-8439-239480845062"
        },
        "item": {
          "id": "85a220d2-c5f5-47ef-850b-2253e22b1055",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49a7007c-7f0c-4f6a-9b58-f07fcb8a0b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f43375-2532-4aec-87ff-387f6b25be00",
        "cursor": {
          "ref": "1a32a5a6-68db-45e5-8340-a146657ef2f5",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "974d6667-f7f5-40c8-8ca6-46d1fef0ebba"
        },
        "item": {
          "id": "c1f43375-2532-4aec-87ff-387f6b25be00",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c0aba9c-82fd-4ffe-83ff-5e6787fc9e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eda722a-abc1-4b5c-9b3c-a985290daa67",
        "cursor": {
          "ref": "1133c0dd-c378-4af2-ad78-86c44537eaa4",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c0dd5516-463b-4366-9e85-ca1b2a0b241a"
        },
        "item": {
          "id": "9eda722a-abc1-4b5c-9b3c-a985290daa67",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3b4a6770-5217-454b-927e-080d01bd44e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55f08e-3644-435d-9abf-69724c5fe95f",
        "cursor": {
          "ref": "a195cf46-93f7-4477-b44d-69fa9aa9e239",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4bf70a44-a589-49dd-947e-b2a22d0ca6d3"
        },
        "item": {
          "id": "6f55f08e-3644-435d-9abf-69724c5fe95f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5c7e7b18-568f-454a-8590-e726d35763b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9862f61-2c2b-4122-bf50-028f0316c887",
        "cursor": {
          "ref": "1c772151-1336-444e-a9a5-7187f6b71c06",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "916e143e-ce11-40ad-82fb-b81c5c471e01"
        },
        "item": {
          "id": "c9862f61-2c2b-4122-bf50-028f0316c887",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ff7b7b8c-9ce4-40a6-b39a-873c56ae01ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaa3e02-1f08-4f5e-8873-d3afe18015a0",
        "cursor": {
          "ref": "8dc75037-842b-4f9e-84f9-d20cc7505bf2",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3fae4ca-bcc8-427a-acc8-59103328ab89"
        },
        "item": {
          "id": "beaa3e02-1f08-4f5e-8873-d3afe18015a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed055182-de24-4dd6-937c-d4c4150804ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8afd3e3-4483-41d1-994f-49a70584706a",
        "cursor": {
          "ref": "dae90f95-6634-4568-b8bd-5f14b30b58ed",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "66265924-6daa-4d47-beb1-d3fbd161d357"
        },
        "item": {
          "id": "b8afd3e3-4483-41d1-994f-49a70584706a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f402a135-dc68-4a29-8ff3-686496c2f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f394c89-a4fb-47e7-a374-6c36f7a8c5d2",
        "cursor": {
          "ref": "1910e2e5-1875-44dd-a191-0a3b3c56ea9e",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4d65d4b4-b92a-415f-9c71-7d681bb6d601"
        },
        "item": {
          "id": "8f394c89-a4fb-47e7-a374-6c36f7a8c5d2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36f6dbfb-fa33-43e4-93e7-164df3b8f3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08562c14-0d81-4782-ba39-085784ee3b47",
        "cursor": {
          "ref": "2c83493d-5134-4543-a4c5-015c2acdf1ee",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3d19c03-b2fd-4de3-96a2-c4b123bd7abd"
        },
        "item": {
          "id": "08562c14-0d81-4782-ba39-085784ee3b47",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "03eb986e-ab83-4bab-bae9-ffbeb708ae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faadf81-5456-478c-b03e-68547007ee59",
        "cursor": {
          "ref": "9203ceef-b18c-4d19-99e3-b497c81f9769",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f84e171d-c8cd-4e04-adf1-0a125c83b382"
        },
        "item": {
          "id": "8faadf81-5456-478c-b03e-68547007ee59",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "387fd9b3-1e56-4199-b5a6-dcd37206a1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7919ed-bfad-464e-8caf-5500f23de866",
        "cursor": {
          "ref": "75bd88ea-e6c7-4855-a6ab-fea28fb63aae",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "108ea233-7af4-4603-b2e5-f9e5f828f125"
        },
        "item": {
          "id": "6e7919ed-bfad-464e-8caf-5500f23de866",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f076003b-e5da-4068-be85-0366a7ef7666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121341a9-1bb5-4afd-a7a7-287a808f1d08",
        "cursor": {
          "ref": "730a3973-692f-44d7-ab33-44ecf49b30f5",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7ff96f7-aa61-4437-a065-a9ae3dbfda36"
        },
        "item": {
          "id": "121341a9-1bb5-4afd-a7a7-287a808f1d08",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d4de1f8f-e33a-4727-ac7a-234b2ff83af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe27446-b033-4ab7-bfbb-279932dc15c2",
        "cursor": {
          "ref": "f2a09f2e-0dd8-4494-9f98-bf027670bcd7",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06909bf2-4537-467e-8d78-13d60abb6cb4"
        },
        "item": {
          "id": "abe27446-b033-4ab7-bfbb-279932dc15c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fb212b37-35d4-48c4-9759-56b7cb1dd3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb4a4e9-ea2b-4b40-b9a5-4e70329bdbf6",
        "cursor": {
          "ref": "78afedf0-9dd3-4092-9ae1-eee951706c15",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b8a66c5-1c19-4640-aaea-d193e551ee3b"
        },
        "item": {
          "id": "0cb4a4e9-ea2b-4b40-b9a5-4e70329bdbf6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "51db4e91-293e-44dc-8d30-0c3ff405c59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff937a85-1bc0-4f17-a8ff-c66056656681",
        "cursor": {
          "ref": "94252d04-630f-4922-a7ef-3d2170b12bf7",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "048c3ef1-d0bc-45a7-9029-0d4a37092573"
        },
        "item": {
          "id": "ff937a85-1bc0-4f17-a8ff-c66056656681",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b6f35660-3af3-4d64-9f8b-aa4b493876c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7797587c-fe8a-46f8-b742-681d06b97253",
        "cursor": {
          "ref": "f3c193a9-6dae-4ad4-8720-e12e7b28289d",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "270ab704-c718-478b-ac16-2dc8a73971c9"
        },
        "item": {
          "id": "7797587c-fe8a-46f8-b742-681d06b97253",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ea8e8ee0-09a6-4d19-ab09-8f12201590dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a609fc2-27c8-43ac-9c80-4a220cc10afb",
        "cursor": {
          "ref": "cf9afcec-fc60-45fd-b8b5-6b02c64a8885",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ee01a033-4a83-421a-b8c1-9ba77f86033e"
        },
        "item": {
          "id": "8a609fc2-27c8-43ac-9c80-4a220cc10afb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "520bde4d-c528-4aa9-a28e-e99d0213fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac661276-3f99-4aef-9c77-c3fa865bc7a8",
        "cursor": {
          "ref": "d7d551e9-4fe2-4a38-9200-12f3af32e2c8",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a8c773cd-c957-4f9d-8401-43104cc6c22a"
        },
        "item": {
          "id": "ac661276-3f99-4aef-9c77-c3fa865bc7a8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f4297c17-cca2-46d1-9b97-10a42effafa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7da7999-9001-4fe1-a21f-091027906abc",
        "cursor": {
          "ref": "890cadbb-3dce-4150-9b67-72e0b9b6a9e4",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d56c965d-9540-4556-a76f-1464411e61a0"
        },
        "item": {
          "id": "a7da7999-9001-4fe1-a21f-091027906abc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f31b144c-354e-4bc3-b26a-c079fc284ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2cf137-8987-4341-93ed-f7390891dd43",
        "cursor": {
          "ref": "d31a8002-11ab-463e-b875-919796efc99a",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eaf567d3-575d-40f7-9737-b10d5307a755"
        },
        "item": {
          "id": "0c2cf137-8987-4341-93ed-f7390891dd43",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "83053c1c-f045-4925-8a74-f02e49e34c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d4438a-773e-4d94-aabd-126a0db28d0e",
        "cursor": {
          "ref": "bd6bc10b-584b-4ba2-844e-6667dbc7808c",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "629b3610-7aa3-488d-bc15-e9c8d8d3fa6b"
        },
        "item": {
          "id": "30d4438a-773e-4d94-aabd-126a0db28d0e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "130d858e-7f80-4c5c-a84f-53bd18d3aee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5a51c-ec27-4c5f-b810-09a0b41121fd",
        "cursor": {
          "ref": "c02fb5b4-dc1c-497a-b563-f5e3349b3bfb",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b2d2430-a48e-4590-b8ef-f6121f0d824f"
        },
        "item": {
          "id": "4be5a51c-ec27-4c5f-b810-09a0b41121fd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0b270149-c878-4423-bd33-a581a1271e42",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 503,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7894809-4848-4e0d-b504-3be656048533",
        "cursor": {
          "ref": "9abb9447-b567-41dd-b9c7-e8bf8183423e",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b3d8d756-879f-4868-b6b6-f8371e5ae289"
        },
        "item": {
          "id": "b7894809-4848-4e0d-b504-3be656048533",
          "name": "credentials_issue"
        },
        "response": {
          "id": "845a1057-8e20-4037-9d2e-117df9faeda3",
          "status": "Created",
          "code": 201,
          "responseTime": 3880,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "8457dbf3-6268-45c4-a7e1-3e276d381f3e",
        "cursor": {
          "ref": "7b816875-0767-4783-b05c-93e8ff6ca34a",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9e9880a1-e84b-4908-b416-b28ceb88fdff"
        },
        "item": {
          "id": "8457dbf3-6268-45c4-a7e1-3e276d381f3e",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "ef282ef3-342d-449f-b7e1-4efcb6ab7323",
          "status": "Created",
          "code": 201,
          "responseTime": 3520,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "d3ec719a-6a70-4dc8-b235-b5272c98ba23",
        "cursor": {
          "ref": "af7c86c5-238a-4a10-97ca-15720497c32f",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "11885a6b-d98f-415a-8359-ef95535a7835"
        },
        "item": {
          "id": "d3ec719a-6a70-4dc8-b235-b5272c98ba23",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "baa82513-b913-4aa6-abe7-bf142f3230a0",
          "status": "Created",
          "code": 201,
          "responseTime": 2060,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3e8b4b02-5359-44ea-bcf9-09fafaa0097a",
        "cursor": {
          "ref": "b591e490-b2c9-45d8-afb7-9cd1e84b78da",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "03e6aeb8-1357-45d0-a33f-01e3eaad829a"
        },
        "item": {
          "id": "3e8b4b02-5359-44ea-bcf9-09fafaa0097a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fc45955c-e785-418a-bc62-190fff77ce5e",
          "status": "Created",
          "code": 201,
          "responseTime": 2057,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b735bbf9-ce13-4258-8562-a1f00c27e3dd",
        "cursor": {
          "ref": "b656d532-c2d2-4958-87c1-64b1df1dc5f3",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f1cdad8-18bc-4353-963e-6926afbe7712"
        },
        "item": {
          "id": "b735bbf9-ce13-4258-8562-a1f00c27e3dd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "231abab3-fc03-4694-9c32-eefb239f75d4",
          "status": "Created",
          "code": 201,
          "responseTime": 2024,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "96989f35-da64-400f-a77f-a0ca7a7ec189",
        "cursor": {
          "ref": "333e8e91-be39-4345-a0ce-76ad572f731c",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02f73d2d-9ac2-4828-9f2f-2c586843155f"
        },
        "item": {
          "id": "96989f35-da64-400f-a77f-a0ca7a7ec189",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0a5a6436-dbe7-4208-8a04-ea2c57ed6899",
          "status": "Created",
          "code": 201,
          "responseTime": 2599,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "79de435f-184f-4c85-bf25-e0eaf611672a",
        "cursor": {
          "ref": "a9468c07-1a2c-4ad3-86a7-2a6dc6caeeeb",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd008857-8662-4726-8881-5204a58a0e76"
        },
        "item": {
          "id": "79de435f-184f-4c85-bf25-e0eaf611672a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a2bb7b50-6b4d-43fb-a633-96ef5fc1784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79de435f-184f-4c85-bf25-e0eaf611672a",
        "cursor": {
          "ref": "a9468c07-1a2c-4ad3-86a7-2a6dc6caeeeb",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd008857-8662-4726-8881-5204a58a0e76"
        },
        "item": {
          "id": "79de435f-184f-4c85-bf25-e0eaf611672a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a2bb7b50-6b4d-43fb-a633-96ef5fc1784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b0f923-f37f-4670-a2ac-a65befdedf7c",
        "cursor": {
          "ref": "c4cb2dfe-8faa-4acc-8152-fc71c660ddd6",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "40f7c9fe-f51d-4701-b3af-400ab6c39d8f"
        },
        "item": {
          "id": "56b0f923-f37f-4670-a2ac-a65befdedf7c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e787111-e36a-4832-88c1-8ca9fc037217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644b239-75c8-4d6e-8287-798b17febb37",
        "cursor": {
          "ref": "611ca25d-c998-4e98-84d7-7540591ed117",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d08bd1cc-8bee-4a5c-a466-f79aece738ab"
        },
        "item": {
          "id": "6644b239-75c8-4d6e-8287-798b17febb37",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "343703e6-0ce1-4787-b81d-98d0db92ef77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5e9ca3-2b3c-4093-bd3d-6e24a5f2fc57",
        "cursor": {
          "ref": "fbac5e93-35cb-40d3-b169-32a68ca3dc67",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "614a410f-4970-4295-801e-75a39ac982cf"
        },
        "item": {
          "id": "8a5e9ca3-2b3c-4093-bd3d-6e24a5f2fc57",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54e03d41-fc03-46fd-944b-28a1ed7b7f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566592a2-5444-4c05-900a-8244f7afe0c3",
        "cursor": {
          "ref": "6da014ff-b1fb-4902-a2a1-60f72719f17c",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "15ebf38f-03a0-43a7-b6cb-5a468a8635a6"
        },
        "item": {
          "id": "566592a2-5444-4c05-900a-8244f7afe0c3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e0f99caf-1447-4504-9dc6-ad725208d64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a32a69-b486-42d6-875f-32112127b5ed",
        "cursor": {
          "ref": "c3898405-0c33-470a-b9de-a2a44c1f1516",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6ae43c95-1cd5-486e-ba69-3d65c07b1065"
        },
        "item": {
          "id": "54a32a69-b486-42d6-875f-32112127b5ed",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2825137-fc88-46b2-af2f-9d4a3fd74f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692253f9-828c-430d-a58e-de6c7d02e202",
        "cursor": {
          "ref": "431af29f-13fe-4812-acc9-dadb6674bc69",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38472a09-0111-4aaf-a5e5-2fb4ec63fd55"
        },
        "item": {
          "id": "692253f9-828c-430d-a58e-de6c7d02e202",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "384ad1b8-22a0-4257-9a7e-04b568c882b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29cdca2-8783-464a-8c75-b0589e514106",
        "cursor": {
          "ref": "052e419b-f66c-423f-98d8-ad9a8b65d9a2",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0f2aa853-5f08-4555-a163-4213f0b97d19"
        },
        "item": {
          "id": "e29cdca2-8783-464a-8c75-b0589e514106",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5f06140a-2bb6-43fa-9aa1-0a51c6638fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eabd6d-f69b-4dd8-87f4-d7c20c68ecd6",
        "cursor": {
          "ref": "dda61c2c-40a7-40f0-8219-fd93152f837c",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11ba7b56-0401-4309-b2f9-412c52eb0da3"
        },
        "item": {
          "id": "44eabd6d-f69b-4dd8-87f4-d7c20c68ecd6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "024d2110-4b4a-400a-b76d-b2e30ecb2326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38902a18-8a23-40d7-a422-304b4e3f309f",
        "cursor": {
          "ref": "f3d624ab-fa90-452a-b007-141d79a81f92",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7fbad2b0-ee78-45c9-b48d-058d5e360238"
        },
        "item": {
          "id": "38902a18-8a23-40d7-a422-304b4e3f309f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7b9685a9-698f-45a9-a827-a12679be85fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7005a4db-3b23-469f-9e78-5a954027b97b",
        "cursor": {
          "ref": "f22f8152-e064-430e-a417-a6d48097ab3d",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "303420fa-aa7a-4a0e-ab72-2292ca8ce604"
        },
        "item": {
          "id": "7005a4db-3b23-469f-9e78-5a954027b97b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46c8278b-4364-4b7c-8e57-26c9e5047340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb81607-3bb1-4d0b-b2f6-151e6900d39e",
        "cursor": {
          "ref": "e9292a1a-eccc-431a-8d74-b17cafdf2686",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b5da91d6-aae2-4ad4-a49d-8ff94d38e630"
        },
        "item": {
          "id": "1eb81607-3bb1-4d0b-b2f6-151e6900d39e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3dd7206-28b7-4b3a-a986-9ee1e8967baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db76592-cd5e-4e45-ae75-68227a6915e7",
        "cursor": {
          "ref": "4bf6aff3-2653-4fa9-bbd4-f3bcce98c0b7",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "48d4c2ce-eccf-4440-83eb-2a57c5bc094a"
        },
        "item": {
          "id": "3db76592-cd5e-4e45-ae75-68227a6915e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8a6f24f-8fa1-40f6-a189-cfa2bfc3468c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47fba25-9959-4021-960d-050f232eb04d",
        "cursor": {
          "ref": "c3cb12b7-bb3f-4d28-a35f-45e3e37c8468",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fae1718c-8688-4d65-8413-e1c503bbcbfa"
        },
        "item": {
          "id": "f47fba25-9959-4021-960d-050f232eb04d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "58437834-ed56-45e9-a525-5c3f3e230ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4b3c4-1f8a-4a7f-89f0-84322def57c1",
        "cursor": {
          "ref": "95bd9df0-071d-4417-8513-a4ac20a047a9",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "410aff4a-0939-4320-ab21-2f6fd3fb7b0f"
        },
        "item": {
          "id": "aca4b3c4-1f8a-4a7f-89f0-84322def57c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e5dcbec9-154f-4ae5-99c1-9bdd38742067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c41863-91e7-4305-bbe8-0c0402d3a5e4",
        "cursor": {
          "ref": "d7bd2e23-ac4d-41e8-b9fe-92a05a7e4f8a",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "96ea2e09-5afa-4e88-8bf3-ae86e7be26db"
        },
        "item": {
          "id": "c6c41863-91e7-4305-bbe8-0c0402d3a5e4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ac670c8e-a5b7-4312-a0b7-5f5d3cf2de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4e437-9d95-4097-a747-f71a4368685e",
        "cursor": {
          "ref": "86c8b326-e8ca-4ea2-86a9-8c1822ac443b",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eca33749-56d4-41c7-9807-b4e4a88ac652"
        },
        "item": {
          "id": "39d4e437-9d95-4097-a747-f71a4368685e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb4a4f27-f5ec-43ca-aabb-591b7f049f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5017b71-4390-41bd-ac6c-dad7767858ec",
        "cursor": {
          "ref": "be604c4d-3610-4541-aba3-f8ced80ce8a2",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c13fe580-1933-4c1e-b578-18bd4f9e059f"
        },
        "item": {
          "id": "b5017b71-4390-41bd-ac6c-dad7767858ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ae52d81-6140-41ce-b7cd-6c8aaccc2e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a048d8d0-8b79-445b-a465-8bd13cb6ac41",
        "cursor": {
          "ref": "488b6ee0-2794-4647-b2ff-b83d71596bf3",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "458bf7f2-bd5e-4c56-b816-37b9bbe8159f"
        },
        "item": {
          "id": "a048d8d0-8b79-445b-a465-8bd13cb6ac41",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "90d2578d-5396-44f9-8613-681505e7fa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c5e787-0d14-4a65-85c5-8e50fa1f3140",
        "cursor": {
          "ref": "0ae694f3-8015-478b-9033-ad27b562e8f2",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c2cd2c1-3e02-4655-8515-81799340a8ce"
        },
        "item": {
          "id": "61c5e787-0d14-4a65-85c5-8e50fa1f3140",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b25b0949-b965-41c9-9a44-7b56a1a7d99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe2d470-42bb-433a-af5f-7c9f28cb6cfa",
        "cursor": {
          "ref": "1d9cf870-6245-4da7-8aa6-ae51c3ba513f",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e86250c-034a-4907-8e35-00837cde4969"
        },
        "item": {
          "id": "ebe2d470-42bb-433a-af5f-7c9f28cb6cfa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11795b5f-7939-4d3f-84b3-09f9ebb70f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dd5fa2-16a5-4432-a920-66acfe85afe9",
        "cursor": {
          "ref": "bdc88432-bef0-4904-9431-122c124d7c6a",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a91e59e7-ab56-4632-8179-7c367a0bfc03"
        },
        "item": {
          "id": "f2dd5fa2-16a5-4432-a920-66acfe85afe9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2da2ad3e-ccdb-46e5-961c-dbb66d2aa963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d2d473-7591-43aa-ac38-5ab3e628e3bf",
        "cursor": {
          "ref": "ff1133db-02ed-4d11-89ab-f62c4140b352",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2eedc79-525e-4fb1-98ac-18300a05bcdf"
        },
        "item": {
          "id": "22d2d473-7591-43aa-ac38-5ab3e628e3bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5dc2e36-01af-44de-9b60-beaec6676a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b2825-e1fd-4ba6-8e66-2a25a1f2c636",
        "cursor": {
          "ref": "1d84d09a-562c-466b-866b-6ef7f640391a",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ebcdee6f-28ad-4639-9749-e88b9755347e"
        },
        "item": {
          "id": "276b2825-e1fd-4ba6-8e66-2a25a1f2c636",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f87d18a-c601-48ae-856e-eb44c5e3456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f7d946-c9bf-4490-89e7-811f00b648ab",
        "cursor": {
          "ref": "c60f0426-7763-4db7-89c9-369b63f99c05",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3fcd8244-06e6-4a20-8b84-53e84133dd91"
        },
        "item": {
          "id": "f9f7d946-c9bf-4490-89e7-811f00b648ab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5fe59d9-8ff3-46c1-8b83-ad57e5dacf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a9fb9c-369d-4c1b-973b-08e59649d163",
        "cursor": {
          "ref": "7d5946be-68cf-4bee-a5cf-e85bbef53391",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1a5a9b45-2c23-4a5e-822c-af950d960e8b"
        },
        "item": {
          "id": "88a9fb9c-369d-4c1b-973b-08e59649d163",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4eed2a59-7ff4-4d6c-b445-b678c954a4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1490,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1d11b-1636-4167-91eb-5dc1e1c7b626",
        "cursor": {
          "ref": "c5da32cd-fb58-4d53-a8ea-c2bf94df0f34",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9567c4a0-93d4-444f-bfb2-eca2a5b6b1c3"
        },
        "item": {
          "id": "f1f1d11b-1636-4167-91eb-5dc1e1c7b626",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c7b445db-27ec-4272-8e78-9230d871726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea7efe-7c9e-4e8f-bf8f-b450854e9582",
        "cursor": {
          "ref": "1cafefa2-af55-419d-b41e-04fe66666df2",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7ba2b5b7-de2e-49b0-8326-ffcb21e9685b"
        },
        "item": {
          "id": "4eea7efe-7c9e-4e8f-bf8f-b450854e9582",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e1fabd8e-98f4-4595-bd93-55e40d7175a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea370c1-f39c-4c4a-bf49-53a95e405400",
        "cursor": {
          "ref": "5825ed91-d3ea-4ce3-a4db-17e292366092",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0df9e9d8-cadb-418f-98f5-511feed7c854"
        },
        "item": {
          "id": "5ea370c1-f39c-4c4a-bf49-53a95e405400",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f61051e4-1e3f-41dd-b535-65dc399fe8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1642,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d4e950-defa-45fb-b840-35c65067f9d2",
        "cursor": {
          "ref": "6c1c4992-b66a-4920-b3db-8da015f5578b",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "86ffc483-bab3-4aa6-8e20-d2c578d71a0c"
        },
        "item": {
          "id": "a7d4e950-defa-45fb-b840-35c65067f9d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b36406e4-f6da-466f-8354-f04b5c08ff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1421,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b2defd-bb4e-42ab-9780-c22143ea5247",
        "cursor": {
          "ref": "eee61e09-1ce3-4c39-8f69-d15920ca1338",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ee2e17c-eda4-49c9-b1d6-ba37f4bd341b"
        },
        "item": {
          "id": "86b2defd-bb4e-42ab-9780-c22143ea5247",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a9c70182-8609-4025-be28-0b79e98069d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1296,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd6282-b385-40b2-8d7a-a3e54ccb2917",
        "cursor": {
          "ref": "d172920c-261b-4812-a3ac-3909cf5e3db0",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "89c4fafd-4806-4252-88eb-4f301a30e4aa"
        },
        "item": {
          "id": "18dd6282-b385-40b2-8d7a-a3e54ccb2917",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "16517295-889c-488b-9a22-137067798fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5db97e9-fd06-4f1b-bc98-c6684dba66b2",
        "cursor": {
          "ref": "2bc54521-30ca-4d69-8e8e-150c37e5072f",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a4c3b148-b4f1-47ea-9ad3-8cca1f4db55b"
        },
        "item": {
          "id": "d5db97e9-fd06-4f1b-bc98-c6684dba66b2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91001fab-f9b2-4391-98c4-6dde90499b07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523ab8e5-508c-440c-81c8-55ec4e5db25a",
        "cursor": {
          "ref": "d304b4d2-562a-4574-80fa-7bad31b9155b",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a32945d1-4dc5-4c5c-a897-04eb32928ff9"
        },
        "item": {
          "id": "523ab8e5-508c-440c-81c8-55ec4e5db25a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "77ba68f2-5ddb-426c-aca4-81137bdafd12",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 604,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a06c07-48cb-4ae6-ba26-5e975d4192e2",
        "cursor": {
          "ref": "3f451725-9318-4775-a905-45dd861b27cc",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "14a9ff69-547c-4745-ad11-d6a718f1b88e"
        },
        "item": {
          "id": "c2a06c07-48cb-4ae6-ba26-5e975d4192e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2a40eed7-4535-4048-9935-00c12fe24ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a06c07-48cb-4ae6-ba26-5e975d4192e2",
        "cursor": {
          "ref": "3f451725-9318-4775-a905-45dd861b27cc",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "14a9ff69-547c-4745-ad11-d6a718f1b88e"
        },
        "item": {
          "id": "c2a06c07-48cb-4ae6-ba26-5e975d4192e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2a40eed7-4535-4048-9935-00c12fe24ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57075a7b-6d5f-41b4-838e-84ee17a40498",
        "cursor": {
          "ref": "ece028a9-fed0-412a-b9a6-521c965773d7",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f73dc2f-ef0e-4c11-9efb-d22afbfd88ba"
        },
        "item": {
          "id": "57075a7b-6d5f-41b4-838e-84ee17a40498",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7170b259-afd4-4936-9b75-887b77215a36",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 273,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "669b2927-bafe-410f-95ca-a3c485257b9f",
        "cursor": {
          "ref": "bde37520-813e-4424-99ec-7503e09a002b",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e1f176c7-8622-4d3a-b707-f4f3c18d5746"
        },
        "item": {
          "id": "669b2927-bafe-410f-95ca-a3c485257b9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c17c518d-e7eb-4b57-9131-1bd9348bf462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a13f9-95c4-4431-9bca-74a0336485db",
        "cursor": {
          "ref": "b294e6b6-4469-4d3d-9a00-85656c759190",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e7a9a7e-1a00-4269-a497-22bcf16616db"
        },
        "item": {
          "id": "567a13f9-95c4-4431-9bca-74a0336485db",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e7eabcc-0daf-4381-9998-3cd05d41a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae9c6d7-d52f-44ac-b86b-30cb45b72457",
        "cursor": {
          "ref": "5d6eda25-38e0-479b-bf5d-e0774639ec81",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0c310adc-8119-4a10-b4a4-b5f2aac03969"
        },
        "item": {
          "id": "1ae9c6d7-d52f-44ac-b86b-30cb45b72457",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "41f10481-52d7-4148-9bdb-dece934f3a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33770fa7-7827-47b5-b515-c6b6b8f49455",
        "cursor": {
          "ref": "ee346adc-f4de-4192-9e36-260ef326f305",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "51cdcd6a-826f-43bf-9d3f-3a36c0b10330"
        },
        "item": {
          "id": "33770fa7-7827-47b5-b515-c6b6b8f49455",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e111b4a3-ea9b-4841-ab90-38d3426a81db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91437317-fdfc-4da3-ba11-ebd15b66a80a",
        "cursor": {
          "ref": "0d108de5-32d2-4611-bc77-53a0f45b6144",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "80281009-b3f1-4ecc-9572-aa4922dfe867"
        },
        "item": {
          "id": "91437317-fdfc-4da3-ba11-ebd15b66a80a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1a310bc0-eac4-4846-a23c-45ad69c6482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36513e1-cc90-4b1b-8a55-7d8f137b7a6a",
        "cursor": {
          "ref": "d17758b3-2a7a-461d-a83d-e3aa4a1fe53a",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c25873fb-21a4-4356-bcfa-96d5bf696bb8"
        },
        "item": {
          "id": "f36513e1-cc90-4b1b-8a55-7d8f137b7a6a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6e7eaba3-d35e-41e1-910f-5dc9b6e3f58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a01ac6-59f6-4252-8532-db458d3e0092",
        "cursor": {
          "ref": "66d331af-e6cf-4d7a-8e82-72dce4e6cdca",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "752e52f1-f6dc-49a3-ab96-65f17d694109"
        },
        "item": {
          "id": "c2a01ac6-59f6-4252-8532-db458d3e0092",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "84a8686c-b70f-4fbe-965c-06ae23e5a9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73cbc03-1126-491c-b7c7-560375bf7c85",
        "cursor": {
          "ref": "7703cecc-617a-4eab-b7da-04eb599b5f6b",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cc3068be-4e47-4d92-95dd-41d58001ce5b"
        },
        "item": {
          "id": "f73cbc03-1126-491c-b7c7-560375bf7c85",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de9cb9a9-b6af-4c7b-890e-4f76290ccce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647cdd5b-74c6-4766-9bf4-7061d62bfce0",
        "cursor": {
          "ref": "6a30f43b-ce2e-4ff9-b129-d12a0e327ae5",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c2ef1261-6cbe-48e0-baf8-96d3fdb6a162"
        },
        "item": {
          "id": "647cdd5b-74c6-4766-9bf4-7061d62bfce0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ada44741-96b6-48a7-a698-a64a441cf996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da05366-d0eb-4f35-88a7-372294f20e16",
        "cursor": {
          "ref": "647e78e4-184a-4d9c-aeaf-05c15faf6106",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7611774f-ab5d-4861-8b67-a3d0ff1e82a7"
        },
        "item": {
          "id": "7da05366-d0eb-4f35-88a7-372294f20e16",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f59f0302-26c3-4389-8def-3fff42a13232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703c60f6-d2b9-45b0-9086-354145ccf203",
        "cursor": {
          "ref": "fb8d6efa-6968-4d04-96af-bc206f834d80",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "14be544f-3993-4b36-b767-97e07fd64790"
        },
        "item": {
          "id": "703c60f6-d2b9-45b0-9086-354145ccf203",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66a0103f-3a6e-4669-a2ef-85d9eb3c0f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0f861-db88-4cc0-8f23-a942bfbbd446",
        "cursor": {
          "ref": "9856a5b7-8d9d-4fe5-8502-8ee27b71efac",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5e543d84-df60-4fc7-85d2-eca1178d5605"
        },
        "item": {
          "id": "39a0f861-db88-4cc0-8f23-a942bfbbd446",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e8a2b16d-785b-4e9d-a1de-5bbda03cce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525801cb-a6b8-4257-b0f9-1ee9d4c0a219",
        "cursor": {
          "ref": "90696e2d-7a4e-4ecf-a4ac-46cfb735a499",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d8db0a00-793d-4dfb-9fca-0ed306b2f3fc"
        },
        "item": {
          "id": "525801cb-a6b8-4257-b0f9-1ee9d4c0a219",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "78b8b1d6-f5a0-40f6-8925-fbe6f80e3ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e0504-8cd2-4955-b6e9-a7d9651a3483",
        "cursor": {
          "ref": "83216269-df30-4d91-b9ff-1298ecfc8329",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9ea3d08-bfff-4937-abd1-e62efb3608bb"
        },
        "item": {
          "id": "ac4e0504-8cd2-4955-b6e9-a7d9651a3483",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ad7458b9-7746-42e3-b226-3476e0da9a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07698246-36a0-4929-b157-8855f6a41aeb",
        "cursor": {
          "ref": "2a82d368-cddf-4a81-8099-b0afe1175419",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a3fce12e-4362-4e89-8bd1-0da7cff532ba"
        },
        "item": {
          "id": "07698246-36a0-4929-b157-8855f6a41aeb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1d03d17-bbe4-444d-a289-6527ff667dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927eb719-2ffa-4ec9-b979-0f08e3fe6e0b",
        "cursor": {
          "ref": "93c8dec4-60a6-4186-994c-015d183cecef",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "088888ff-be35-44b4-b7c3-6db8d4222bff"
        },
        "item": {
          "id": "927eb719-2ffa-4ec9-b979-0f08e3fe6e0b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5811dba4-1eb3-4030-848e-6a991bb5a49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750f15f8-c28d-4e76-8578-9d61b155211c",
        "cursor": {
          "ref": "2650b51a-85fa-44b3-823d-9b5a4a2efe0e",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c7525ef-7014-4502-80ab-518984e1e15b"
        },
        "item": {
          "id": "750f15f8-c28d-4e76-8578-9d61b155211c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2a4b7068-7d9f-490e-a286-7e8eb75ced35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fb2214-39ec-47a3-a57e-de2694f29fb9",
        "cursor": {
          "ref": "a18ab250-e0e7-41f8-899e-6efe01687855",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5ace90de-7fe5-4f3d-87d2-661ab4598878"
        },
        "item": {
          "id": "63fb2214-39ec-47a3-a57e-de2694f29fb9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "93b647d1-d029-460f-8b26-b87a30c380d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17350cc-c179-4310-b551-9046fcd1f392",
        "cursor": {
          "ref": "1083c1d5-0b33-423f-9551-dc5be2bc8499",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d77a6b3b-8f5c-4006-8ce1-74451cbf9675"
        },
        "item": {
          "id": "e17350cc-c179-4310-b551-9046fcd1f392",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81707d14-1338-4b8d-9902-7443093d9712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1574eba-30ee-49dc-ace3-f75a83c82a58",
        "cursor": {
          "ref": "3cdaa502-9b70-4633-8a4c-f34e3e4d8625",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "27b25714-5991-44ee-9fcf-5b9e712b8f96"
        },
        "item": {
          "id": "d1574eba-30ee-49dc-ace3-f75a83c82a58",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5d58d6eb-7b4b-48b6-be03-2d89c5f43db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e696524a-410c-4763-b726-a201ebc01b93",
        "cursor": {
          "ref": "030ecd43-48a5-4ec6-a32a-0a3195dfbe40",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3e2c0b1-9e06-437b-9838-1fecc983ce26"
        },
        "item": {
          "id": "e696524a-410c-4763-b726-a201ebc01b93",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7165dd7b-f484-4348-ae6c-c8f7ceed717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6bdce2-a995-48f1-b7bf-8fb728b424d3",
        "cursor": {
          "ref": "68bcd48c-1154-4e7f-b4cb-5e9d569f9406",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c4881e0b-01fe-4b88-8465-577ce780990c"
        },
        "item": {
          "id": "ba6bdce2-a995-48f1-b7bf-8fb728b424d3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eddae207-fc5a-425e-b2db-c6909e68a7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac1a00-7e09-4b1f-8922-e2f7e4d0067c",
        "cursor": {
          "ref": "a6b6f434-f7ca-4168-a045-87a56d6cc089",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4aa9695b-d888-4e5d-92ec-8d903670f0c0"
        },
        "item": {
          "id": "c2ac1a00-7e09-4b1f-8922-e2f7e4d0067c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2aec055-1540-4875-8df6-4b9536969a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5726079c-a228-40ff-94f9-cca2f6b35295",
        "cursor": {
          "ref": "9c79ff0f-660a-4b34-9b81-04521045222d",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f8aef0b1-dd00-46b8-ae6d-5da25c603a26"
        },
        "item": {
          "id": "5726079c-a228-40ff-94f9-cca2f6b35295",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ffacb96d-8c9a-4275-bd36-f8f2bd61f563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d9d30-3e62-4a49-87c0-fbf52b90cd92",
        "cursor": {
          "ref": "62deccfa-15b5-49e0-bffd-a91f40583ea9",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d716bda1-93d4-4ad3-b345-cea9bc55f417"
        },
        "item": {
          "id": "c38d9d30-3e62-4a49-87c0-fbf52b90cd92",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8bef0ab1-53f7-44d7-a6cf-d28a1472607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c989aa-db0e-4c87-8e95-b9ed6ba21d14",
        "cursor": {
          "ref": "b0905570-96a9-4c1f-b4ad-66c395378517",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b878705b-4be9-4d21-b950-26440819631a"
        },
        "item": {
          "id": "67c989aa-db0e-4c87-8e95-b9ed6ba21d14",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "92b1d632-ec3e-47e4-832a-518b269457c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2901a08c-7938-4189-96bb-b46770580d73",
        "cursor": {
          "ref": "33d33466-a289-4c9b-bf01-1f47976ea030",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7a4deb7b-2a28-4bc4-95a9-d79777d7eb5c"
        },
        "item": {
          "id": "2901a08c-7938-4189-96bb-b46770580d73",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b0e3eba-73ae-4455-ad8f-8124c1ab62d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74191623-9ee7-4470-9c5b-f554f2766dc3",
        "cursor": {
          "ref": "abf05ad4-9fec-4cef-a5b2-ce3c550fe1e9",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4c90f77e-224d-4d7e-967b-1fd25fa6315c"
        },
        "item": {
          "id": "74191623-9ee7-4470-9c5b-f554f2766dc3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "acf2e6f6-fe8b-49c0-ab0f-29ee42cc8dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4c2af-0fe2-40f6-ae28-e4d9e31b871d",
        "cursor": {
          "ref": "b2905ddf-5fc3-47c1-8f81-fcf6c69a1e35",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4cd28aa1-ad74-4edf-9d0b-f07c8530c1f4"
        },
        "item": {
          "id": "32c4c2af-0fe2-40f6-ae28-e4d9e31b871d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3991db0c-c8d5-473d-8642-6ea1df238835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7521e84-403a-4d94-a877-ce67e55fc328",
        "cursor": {
          "ref": "537876e0-8998-4adf-8fbf-eaaedf084e2e",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1a34547d-401e-4128-bfe1-1f64f75b2a81"
        },
        "item": {
          "id": "d7521e84-403a-4d94-a877-ce67e55fc328",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c8140fc6-cca5-4d69-98c6-69f6ea3e45c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a54aa-96be-491a-a379-3c9eff5ce44e",
        "cursor": {
          "ref": "8640eb6a-24ea-4e37-ae3f-bdca69ee16fb",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f73d815c-fa45-440f-a717-5ebe4e7bfb51"
        },
        "item": {
          "id": "c56a54aa-96be-491a-a379-3c9eff5ce44e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8ef0b950-8e84-47ff-b174-9c36a11567be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945adde1-ed36-42b8-aebf-f7c2ff1c2bb9",
        "cursor": {
          "ref": "d9a2d68b-66d6-452e-a706-1e1fe3c5867c",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "39291d84-1960-4427-978b-bdc24e0caf1e"
        },
        "item": {
          "id": "945adde1-ed36-42b8-aebf-f7c2ff1c2bb9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "731fe416-c9bb-46a6-b75a-87c44da5e209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fca6823-c6af-4d95-9bf2-63b8e4c3234c",
        "cursor": {
          "ref": "e7770f6e-f724-4df6-b922-9e7b26c59a69",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "598d41b4-cd77-47d6-b6f0-0a61d7daeaf0"
        },
        "item": {
          "id": "8fca6823-c6af-4d95-9bf2-63b8e4c3234c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8564bd1-16b1-4191-8e65-a85a88ee4d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968e0afb-69af-4573-aa85-c7ef651151d1",
        "cursor": {
          "ref": "9e785a5b-3150-4eac-ab8e-192219a3e5b0",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5730f66f-efa5-405f-ab42-cfb6bc2beed8"
        },
        "item": {
          "id": "968e0afb-69af-4573-aa85-c7ef651151d1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e7200bc6-f009-4fe8-b9fe-f72c12934057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b16b8-831a-4a5e-add2-e4b22e201226",
        "cursor": {
          "ref": "8cdf5d14-51e9-4599-919b-70fae4fc97b3",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c05289db-0632-4f02-b37c-d0e388d4be1d"
        },
        "item": {
          "id": "930b16b8-831a-4a5e-add2-e4b22e201226",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d4924168-9978-4490-b5fc-27b80ee48db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f9abb1-1a2f-4ee5-b776-a6990ae7ade1",
        "cursor": {
          "ref": "0c289510-c8a5-4397-b90e-007b26ac4ad3",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3412ddf4-8128-47c4-b09e-6463d10198a6"
        },
        "item": {
          "id": "04f9abb1-1a2f-4ee5-b776-a6990ae7ade1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b50736b5-a0e2-4314-930d-5f1868f4972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646e1f7a-cdb6-4ad4-8225-7d74a1a9e845",
        "cursor": {
          "ref": "9232e2b2-f588-4d81-9428-96bb39d46e2e",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "636c90ae-1381-4665-8a18-48a6b303a028"
        },
        "item": {
          "id": "646e1f7a-cdb6-4ad4-8225-7d74a1a9e845",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8b32db48-2b6a-4e0a-8dc0-5a83617a9501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14437543-d70e-4af9-bc90-d695018426b6",
        "cursor": {
          "ref": "34e5ce2a-7f0c-44ba-9074-87241f678925",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18e695b7-6361-42a2-b5e6-9cd0abe487ac"
        },
        "item": {
          "id": "14437543-d70e-4af9-bc90-d695018426b6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7cfb90c6-df14-4af0-ba24-35767e6fb734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6805b672-3e28-48df-9e8b-f7f0df5b6f96",
        "cursor": {
          "ref": "03963529-6d0e-4707-9f6d-8e287232b2a1",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "03521c31-3807-44b9-ae9e-0a9134b20f3e"
        },
        "item": {
          "id": "6805b672-3e28-48df-9e8b-f7f0df5b6f96",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "58f108cb-7603-4a1c-a8ab-2e55c6d3a2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac352e-31a8-4e5a-acda-fb0be318a097",
        "cursor": {
          "ref": "f8e5885f-b6f3-4561-af68-c865b478143e",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e8e43470-6518-4fd0-9654-9eb6b3fb0a4c"
        },
        "item": {
          "id": "e0ac352e-31a8-4e5a-acda-fb0be318a097",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "79aa7467-5a7e-4ded-b378-d894d5bbc7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d02d6b5-1fe3-4c64-a114-d2d79b8acd0d",
        "cursor": {
          "ref": "b5187080-9b7f-40ed-a3af-a8b4cfaf451d",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fd54d5bc-dcfb-441c-8952-08dd55653794"
        },
        "item": {
          "id": "1d02d6b5-1fe3-4c64-a114-d2d79b8acd0d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b6e9b965-a211-463a-a130-136e19c56390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152d7f8-8b18-4bbd-ac0a-636126d96381",
        "cursor": {
          "ref": "6de5680e-b7da-45a4-bb79-957bd5c8af4a",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa42378e-03a8-46a5-af00-ec9fc0052b07"
        },
        "item": {
          "id": "7152d7f8-8b18-4bbd-ac0a-636126d96381",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f9ea289-8415-4ea4-8a73-b20e5cef3161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e705e-1bc6-4f3f-b9f8-dcc6fcd439ea",
        "cursor": {
          "ref": "b2ac040a-9760-4246-bb29-0394e28f8772",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6339e2d7-9820-4d43-b96b-5d4c4277d3d7"
        },
        "item": {
          "id": "e98e705e-1bc6-4f3f-b9f8-dcc6fcd439ea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cb08efd9-482c-4cdf-a9e0-8530a63ea866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e91f306-c44b-4698-9ccc-862cfd6ba7bc",
        "cursor": {
          "ref": "6e80d6d5-c468-45aa-8398-122868078aad",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b673f23-12f5-4e5f-95f3-7cd7c315df51"
        },
        "item": {
          "id": "6e91f306-c44b-4698-9ccc-862cfd6ba7bc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "986e88b8-303b-43db-9ce0-c3d3a81c22bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2397b76d-cbec-40c5-9162-6739f51ef83d",
        "cursor": {
          "ref": "57ee2615-558a-40e4-b8b3-09085b03eecc",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b3bfc1fa-205a-4328-a122-aef2d9c7406f"
        },
        "item": {
          "id": "2397b76d-cbec-40c5-9162-6739f51ef83d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4a43e68e-75f8-4350-8ad5-fdc23c230a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba26ab3-65c4-481e-a72e-46788fe56f2b",
        "cursor": {
          "ref": "be74f2d4-d972-4b2b-bc2a-8a6c7a070099",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8582756a-15f6-417a-a26e-a8a67041df41"
        },
        "item": {
          "id": "6ba26ab3-65c4-481e-a72e-46788fe56f2b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a1c55675-35fb-49d3-bb66-4f976447d587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6543817e-1e35-4888-8418-cc566e30b542",
        "cursor": {
          "ref": "336d14b4-a5e3-4756-89a6-fc0cb82aacee",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "99f040d8-31f4-445e-be17-4aedda0663e3"
        },
        "item": {
          "id": "6543817e-1e35-4888-8418-cc566e30b542",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "27c78e69-d064-423d-a5c2-7d357ca1f4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f66db4-7547-44c3-a010-199e5c573b28",
        "cursor": {
          "ref": "fea6693a-e32e-4975-9917-69aefd1878a8",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "53f18a18-b88d-4d0d-8230-3c9d8f9128d1"
        },
        "item": {
          "id": "83f66db4-7547-44c3-a010-199e5c573b28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "86fd7dc6-53a5-4e49-9a7f-7c5045d2ae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a4d5de-2f47-4425-aae1-1282f47d8c13",
        "cursor": {
          "ref": "38b76bf9-83a6-4073-8261-1715ff3a27ff",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b0983edb-2651-4ac0-8fa4-480dbdf08fbc"
        },
        "item": {
          "id": "72a4d5de-2f47-4425-aae1-1282f47d8c13",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f161bef0-d4f2-4d4f-a707-1b32acc87023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483bad3-22c4-444d-af9c-07c896035d7a",
        "cursor": {
          "ref": "ee2eaf4b-f059-4a6c-8f23-9b557724e529",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "24a278f3-4d46-4f57-a71a-ed149af10234"
        },
        "item": {
          "id": "0483bad3-22c4-444d-af9c-07c896035d7a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87b00e52-a21c-4057-9b6d-837cddbc88cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e3165-e2f4-4cce-ace2-d7b483cf2565",
        "cursor": {
          "ref": "e636ae03-3552-41dc-8c84-2368928636dd",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46c3bca4-41b7-427f-ad60-9a3308d5160d"
        },
        "item": {
          "id": "584e3165-e2f4-4cce-ace2-d7b483cf2565",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "92cdf93a-36ae-4a85-909d-d3f1e12c9d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4461ac-1231-45c7-a221-f82be5e16920",
        "cursor": {
          "ref": "278a2db2-88e2-46b4-b3a1-71d9bc798bd3",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d621a3e-b8b9-4201-9cac-19a29cba3e84"
        },
        "item": {
          "id": "5d4461ac-1231-45c7-a221-f82be5e16920",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b80caa51-2986-4840-bfdd-869fabdc264e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d280e2-e7bc-4410-849c-2a981b010b68",
        "cursor": {
          "ref": "a009ceb2-3844-4136-8e06-133cc91abf83",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59626f2d-5c75-493f-adb1-438f644e8c7c"
        },
        "item": {
          "id": "17d280e2-e7bc-4410-849c-2a981b010b68",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b149bc8-0ff1-420b-88c9-8b3386e9202b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc6d21f-4922-4a7d-9dc6-a00303218859",
        "cursor": {
          "ref": "534d3f1e-1893-4b5d-a7d8-fea70e7dc004",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c0c9046c-eaa5-461d-a1be-3da55d9d1a3e"
        },
        "item": {
          "id": "6bc6d21f-4922-4a7d-9dc6-a00303218859",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4bcac6c2-4aff-46ff-97b9-cd5138e5c50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c7760-97ad-4eb2-9678-976c9cbf374d",
        "cursor": {
          "ref": "c636054a-9b3f-4568-b03a-77bec3b0bf82",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ed5fdd39-074a-43f1-86a7-d15e1165b569"
        },
        "item": {
          "id": "620c7760-97ad-4eb2-9678-976c9cbf374d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8b470184-8ca1-4c5e-a0e4-72f3af015754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17278299-3f3e-4a90-be0d-ab6c886c0e7b",
        "cursor": {
          "ref": "45aa69f4-1dc6-4d31-8726-bf4c463678fa",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b5c40327-a29d-47d7-9442-dff9070099b2"
        },
        "item": {
          "id": "17278299-3f3e-4a90-be0d-ab6c886c0e7b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c1dd1022-d7a9-4fcf-8775-2ffd582a8e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d079f-0764-4262-8b53-6a79c11fdd7f",
        "cursor": {
          "ref": "6336ab80-2462-4293-bbeb-eca7e748c534",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "be69ffbb-cacb-4d1f-bc87-2179df718bd9"
        },
        "item": {
          "id": "d40d079f-0764-4262-8b53-6a79c11fdd7f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25ec0b97-37eb-4fed-bb1f-88a0663aebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff0229e-5565-4ca7-b709-1a3814756dee",
        "cursor": {
          "ref": "3132f4b1-d270-4487-af02-83c77240f8dc",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "de382c45-3fe7-4dd4-a89c-ff7084296d40"
        },
        "item": {
          "id": "5ff0229e-5565-4ca7-b709-1a3814756dee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "70f1cf86-045e-4b45-9aa8-a6fd2edefc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90444bff-8cb6-4631-8bbf-cd0a4210f20c",
        "cursor": {
          "ref": "6555bc12-7cfa-4a87-bacc-27b17e554fc8",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "11b67e64-064d-4b8d-9d04-2170c1f24d88"
        },
        "item": {
          "id": "90444bff-8cb6-4631-8bbf-cd0a4210f20c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dba78027-fe62-4519-afde-604ca8ff8f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483042f9-8b2c-4a19-b3fb-eeed1f5901e9",
        "cursor": {
          "ref": "0c48c2ac-4a4c-43fd-a757-fb956b4915fc",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5c0a6fe1-b5d0-44d6-ad88-1e57476ef8cf"
        },
        "item": {
          "id": "483042f9-8b2c-4a19-b3fb-eeed1f5901e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a1be42d1-c0bc-48f9-89a1-de50b3dbb8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64035d4e-217b-4f00-b27c-f19bf4993d4d",
        "cursor": {
          "ref": "b8ca331c-06e6-4df3-a0d8-2f9ced9b6ae3",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e50e0d2d-37ce-4880-80dc-9d4e04e9a9f6"
        },
        "item": {
          "id": "64035d4e-217b-4f00-b27c-f19bf4993d4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c713abc-0e7a-4016-8571-baa72a072621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b93c64b-ea2e-4898-92fe-615ba5078fac",
        "cursor": {
          "ref": "886bda84-3dd2-47bc-9133-537dc9658d07",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6e4be523-2bf5-449a-a06a-af0d3edd3986"
        },
        "item": {
          "id": "9b93c64b-ea2e-4898-92fe-615ba5078fac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "89dac427-7170-44c6-98e8-e08a98d2b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058bd763-f435-4fa4-8772-20060cb97e76",
        "cursor": {
          "ref": "f9acc77c-521d-44dd-963d-3661720cb77d",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dc18d780-eb64-43dd-8076-14a4cda9d417"
        },
        "item": {
          "id": "058bd763-f435-4fa4-8772-20060cb97e76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea910930-25e4-41e4-91fa-e28c05dfc4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46f9f4a-2f9b-4689-b5ee-681f616348ab",
        "cursor": {
          "ref": "952c7db1-c631-44c2-87db-875f9f6523d5",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8078a98c-5c25-41d3-b32e-dc0d7f1746c6"
        },
        "item": {
          "id": "e46f9f4a-2f9b-4689-b5ee-681f616348ab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a2359a0-b239-4e8f-b692-bba791291245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d67386-bdfd-46f9-b445-3ffa35bf1775",
        "cursor": {
          "ref": "bbef17eb-b5c9-4d9f-9f88-1cc6a2496180",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fd84bfc0-dc84-4e9c-8b02-f1da290dd316"
        },
        "item": {
          "id": "95d67386-bdfd-46f9-b445-3ffa35bf1775",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bdd910c8-61fb-402d-adff-0c7a2461b4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66109682-ffa5-4f41-9682-b720d404bfac",
        "cursor": {
          "ref": "6d956aed-9889-472b-8432-979573ad0cc8",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d70dec22-aeed-4bce-b540-9df9082e9d58"
        },
        "item": {
          "id": "66109682-ffa5-4f41-9682-b720d404bfac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "47cc430c-c5a3-4488-831e-23d0ced51561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2269abf1-792a-40d5-97f4-64a7abea222b",
        "cursor": {
          "ref": "64072899-7da5-48b1-b1d1-1cf18eaff599",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9789f039-137e-4d21-9071-aaa38507c059"
        },
        "item": {
          "id": "2269abf1-792a-40d5-97f4-64a7abea222b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9c4b20f3-044a-4331-b7c1-9950d831d312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e074a9c-c186-42d6-a8c9-083950cba201",
        "cursor": {
          "ref": "4e0309f0-82b8-4eee-afd8-c944761ba3b0",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d0154a1b-e7d3-447c-80fb-636629ec6d14"
        },
        "item": {
          "id": "5e074a9c-c186-42d6-a8c9-083950cba201",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "17e75abf-c641-4526-8092-ba3a68bf6c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65135d8-751e-48ba-bafb-b21b54efb34b",
        "cursor": {
          "ref": "096a4d03-2e8f-42a7-a402-527a7c8e817f",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f0fb8c83-5514-4bac-8c5d-6245d2a3180b"
        },
        "item": {
          "id": "a65135d8-751e-48ba-bafb-b21b54efb34b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "58963785-b480-4a8b-89e3-23f3dafebccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61b5a6d-816b-40a4-a6be-5057815c17f9",
        "cursor": {
          "ref": "0f3d839b-0dc5-4f86-88d2-170633eceafc",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dcb837de-1ab2-4465-b2a7-2af512a79124"
        },
        "item": {
          "id": "a61b5a6d-816b-40a4-a6be-5057815c17f9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6b21fbec-0c21-4b1c-80b9-ac57d536a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef8dee-ffad-4e39-9a2a-35a168ebe682",
        "cursor": {
          "ref": "8ed82850-c897-4a4e-a1bf-e1f5f1add102",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b1e7df4-4d16-4cba-b086-fcc28da06450"
        },
        "item": {
          "id": "62ef8dee-ffad-4e39-9a2a-35a168ebe682",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7b6f03e6-9ca0-4eae-851b-d9a7ba4bd7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97ef685-0430-4ca8-bda4-b86d9e227dfe",
        "cursor": {
          "ref": "85499bd4-4fef-4afd-b8ec-9c5e9d9f35fd",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf70a501-58cb-4631-969d-0897251cb35a"
        },
        "item": {
          "id": "c97ef685-0430-4ca8-bda4-b86d9e227dfe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "839eb941-19fc-4f0c-9caa-a020ea3b612b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3393cd-d088-4dab-ad0c-74ebd90dd44e",
        "cursor": {
          "ref": "b1b5013d-7cbb-4217-bdaa-615666cd730f",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f89badd4-5be3-4bf6-a619-5a38bcc17d01"
        },
        "item": {
          "id": "2f3393cd-d088-4dab-ad0c-74ebd90dd44e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b5e4018d-1388-48af-8512-19f7384d18e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3916d-d6f2-49e8-865b-44a35f0dab57",
        "cursor": {
          "ref": "5ff9abe0-f528-4fce-b0aa-75723934c274",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6ff85634-a544-4014-a8b8-75ea26733518"
        },
        "item": {
          "id": "dac3916d-d6f2-49e8-865b-44a35f0dab57",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e758cff0-52a6-4f1e-a65c-754c92c5dfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f22095-932b-469d-8e1a-3537dde06126",
        "cursor": {
          "ref": "8376864d-4212-49ae-8f1a-0e79deea8a1d",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f5e6767d-4c11-4ad0-af12-f130652e9e6e"
        },
        "item": {
          "id": "81f22095-932b-469d-8e1a-3537dde06126",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b5337c0c-912f-4e49-92c6-0964c8e5e148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd97eaf-ca50-4795-8749-e8edb51227aa",
        "cursor": {
          "ref": "2fda40f0-285d-4f4b-a463-81e3fa523195",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b55f41a9-144e-48ed-8ac1-2728dbab7f19"
        },
        "item": {
          "id": "2fd97eaf-ca50-4795-8749-e8edb51227aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "83f95514-8fcb-4ba1-85f1-a2bb17c390fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7022989-c759-421c-9489-7a8580990f3e",
        "cursor": {
          "ref": "ed524731-67ac-4d6f-9b89-dc15a13b828e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d8f57c04-0af4-4963-afc1-8beb585d447d"
        },
        "item": {
          "id": "a7022989-c759-421c-9489-7a8580990f3e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "96ce3a61-dc38-4c14-941b-5bc6c365bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd26d0-a20d-486b-9675-9d07a7430f3a",
        "cursor": {
          "ref": "853ae7af-7552-40da-9819-8addd4c2cb97",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6a8d2925-f058-44be-b733-76033cca53a7"
        },
        "item": {
          "id": "cbbd26d0-a20d-486b-9675-9d07a7430f3a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "548b6b67-bf63-4675-9664-b784ec82c854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e1fe3-7298-4a47-bbba-4b180c1c974e",
        "cursor": {
          "ref": "984f4077-4d5f-4d76-9a4e-2b01cd58064b",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fea8099b-06c1-4b03-8411-9c91026e4da9"
        },
        "item": {
          "id": "ad1e1fe3-7298-4a47-bbba-4b180c1c974e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a1346e19-ec99-475b-b321-337960bbccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e531f80-7533-414f-8e17-5a5ccb3c022b",
        "cursor": {
          "ref": "851ed5f2-96b6-4a2e-9d8f-fc256249ff87",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fe348d16-4732-4a96-b3cf-cd2c7bce46f7"
        },
        "item": {
          "id": "6e531f80-7533-414f-8e17-5a5ccb3c022b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e169eeb3-3446-4a64-b181-f30448955b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cba218-f513-4867-81bd-23dea27994a8",
        "cursor": {
          "ref": "98113d6a-f40e-4947-89d1-cc49512d0ee2",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7557dc41-a1d6-4b19-bd60-2a3322bdcfa1"
        },
        "item": {
          "id": "95cba218-f513-4867-81bd-23dea27994a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2718a6b2-587f-4bb6-ba33-0bb49e4490a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c492082-4f76-4ec2-910a-39ae8af19a1a",
        "cursor": {
          "ref": "a473177b-f3aa-4c64-b65b-8a88ac75b920",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d7b8718a-475c-466a-b02b-07067e6df2ff"
        },
        "item": {
          "id": "7c492082-4f76-4ec2-910a-39ae8af19a1a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8667e2d2-11a4-4c53-8df8-2f6b85d10acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6899afe-03c9-4dcf-8b54-dda3c5d380d7",
        "cursor": {
          "ref": "a58c9813-d5e1-48ad-9c6e-3549867517a5",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "568f3931-fe46-449a-9172-e9b8294bc689"
        },
        "item": {
          "id": "b6899afe-03c9-4dcf-8b54-dda3c5d380d7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e39c4fee-782d-4e02-8ce3-f720662258ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3dd69f-5a9d-4075-bf92-2e2dfcf30517",
        "cursor": {
          "ref": "060ffc26-6263-4f52-a3db-2efada14576b",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6441af7c-b79d-4e11-b00a-85b474a61974"
        },
        "item": {
          "id": "af3dd69f-5a9d-4075-bf92-2e2dfcf30517",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f76da6e0-da74-4b23-87f6-e2c4297c8616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b177584-203c-40d7-b0fb-6d52e52c111a",
        "cursor": {
          "ref": "00ef4f9e-53bb-4a47-bca8-137fb1cd5bfb",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "091a4d20-cfc7-41fa-ae57-7cf3224dca27"
        },
        "item": {
          "id": "4b177584-203c-40d7-b0fb-6d52e52c111a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "31c810da-9121-4864-824d-43130d1af9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae95ce-c3f0-4406-a853-3a46a69d3609",
        "cursor": {
          "ref": "c8fbcd2b-09f2-4796-a092-b4b4a5437af6",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "da2df9eb-0917-403a-b76f-beef16899930"
        },
        "item": {
          "id": "0aae95ce-c3f0-4406-a853-3a46a69d3609",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b9c474d-ead2-4442-a775-390dcd3803d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb788757-9416-4b80-a41f-129c2ebf6be8",
        "cursor": {
          "ref": "49bcbf85-1b15-4c92-b055-5200a2f71533",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "23921bba-1706-47bf-85a5-62596ddba45f"
        },
        "item": {
          "id": "fb788757-9416-4b80-a41f-129c2ebf6be8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b99bce0d-d1d7-4b8f-9878-90e6fe112ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3311af7a-0466-4f2e-bdc0-4483e8e4ccdd",
        "cursor": {
          "ref": "bfa18aed-a65b-45f9-b7dd-2ac6746136fd",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "804298a8-cb63-43b0-b151-72a744fe2536"
        },
        "item": {
          "id": "3311af7a-0466-4f2e-bdc0-4483e8e4ccdd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2f958e49-4656-4d55-bbf7-fa5fd347afc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404c497b-3e0c-4da9-8427-910ee21ea92c",
        "cursor": {
          "ref": "4a2da69a-ac1b-42c4-a457-a748e8b1302c",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ca36e4c3-8055-4ec3-b19a-04ee9e687174"
        },
        "item": {
          "id": "404c497b-3e0c-4da9-8427-910ee21ea92c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d7204b4d-c159-453d-9b0d-3bd26cb420c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c755dccd-9a76-457a-a2b9-72e2e8501851",
        "cursor": {
          "ref": "c75e9e46-6409-4b0d-b40b-2ea9548caba7",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0cdb022e-9c72-4bfe-84d8-3334f7b938f0"
        },
        "item": {
          "id": "c755dccd-9a76-457a-a2b9-72e2e8501851",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "be8cd622-2d25-4858-9419-07182f0175e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e256ec-ffbc-4465-84a5-0727395a71dd",
        "cursor": {
          "ref": "e5214973-2035-44c7-afcc-67698bbb017f",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "59c0ab54-52c4-4901-8abf-468ff3b5b070"
        },
        "item": {
          "id": "f3e256ec-ffbc-4465-84a5-0727395a71dd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1891baa-8992-476f-99ec-adaae25f0b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030bc10b-f652-4766-b429-7f5e0afda3ab",
        "cursor": {
          "ref": "955fec03-4885-4702-9f8b-4dc99775347b",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eba6cde8-29f8-47e6-ba17-0c86cd8f9cfa"
        },
        "item": {
          "id": "030bc10b-f652-4766-b429-7f5e0afda3ab",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ec2763e3-4542-481c-80d6-f6d87cd92f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45820730-23cf-49f9-a99c-06fb0966ec4e",
        "cursor": {
          "ref": "c174f837-6724-4a4d-b80b-de41f48bcac4",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b5b810ff-8eb9-47f0-add4-6a7e57702f64"
        },
        "item": {
          "id": "45820730-23cf-49f9-a99c-06fb0966ec4e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d1439db-c0b2-4d6d-85e8-85e62d57e871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b988e28-fdab-455d-8944-a64a5751a858",
        "cursor": {
          "ref": "0587f89e-3279-4b24-8742-a41a48d31810",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "94c3efa0-77c5-447c-91c6-a6b1862a3d4a"
        },
        "item": {
          "id": "4b988e28-fdab-455d-8944-a64a5751a858",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f2e8a17-13db-47ac-91ff-ff16f49265fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19213bbb-34df-4ff2-baed-6bfdfa069905",
        "cursor": {
          "ref": "395f4985-04cf-4224-a740-ebda64d9eea8",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4ac47c82-6bf7-4a04-a8a1-c3a484928471"
        },
        "item": {
          "id": "19213bbb-34df-4ff2-baed-6bfdfa069905",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "329236f1-11c9-4e79-b0bb-e765e6aca764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7868c6-c40a-4f86-beed-c306a9eab29c",
        "cursor": {
          "ref": "59b8642a-ad6b-4be8-b5eb-f8c702156706",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "82607aad-9c63-433f-a375-26a1bbb28c40"
        },
        "item": {
          "id": "1a7868c6-c40a-4f86-beed-c306a9eab29c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f4e6d644-5c7b-445a-b395-b201b89ffd33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3d37e7-7925-4d14-a975-ccaae94c09a3",
        "cursor": {
          "ref": "332f9583-6242-47e0-a51f-4b3d916db441",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d788c546-6c91-4391-857f-729bc97eaeb0"
        },
        "item": {
          "id": "0b3d37e7-7925-4d14-a975-ccaae94c09a3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2bccb07f-1ffa-4fdc-9f8e-c0f911865d05",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 645,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240be243-970c-4f61-bb90-8f6d9fb54097",
        "cursor": {
          "ref": "99c62546-f2c1-49ba-a07f-1a68d2e8e64c",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "13888fa9-39a6-45d1-829f-f56563b9989a"
        },
        "item": {
          "id": "240be243-970c-4f61-bb90-8f6d9fb54097",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1567586c-268e-445b-88e9-f38c07f526ca",
          "status": "OK",
          "code": 200,
          "responseTime": 895,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd93e70-2c04-4787-b3d5-2bfd6b6a0e6c",
        "cursor": {
          "ref": "a94e2b02-794e-4929-a660-7253c9cd0a33",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b09288c9-339f-4fee-97c1-7aa6ecdc4d3f"
        },
        "item": {
          "id": "5bd93e70-2c04-4787-b3d5-2bfd6b6a0e6c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "27282296-d2ac-4878-8bc6-db0f0c70dbc0",
          "status": "OK",
          "code": 200,
          "responseTime": 654,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "862338f5-6386-4f51-9195-e2492dec215b",
        "cursor": {
          "ref": "aad5b526-e664-477f-a543-39a4c3e82cca",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c25e353-1acb-4349-8d87-48e0b83c489c"
        },
        "item": {
          "id": "862338f5-6386-4f51-9195-e2492dec215b",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "c4fd12b7-edbe-4956-aec9-12cbd0d4bf70",
          "status": "OK",
          "code": 200,
          "responseTime": 528,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb952951-308d-47c6-87d5-334feec180f0",
        "cursor": {
          "ref": "f0a5fa12-d56e-4af9-8706-01f6840a1851",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6d45d92-3844-491e-ab46-2d35f9ebb10c"
        },
        "item": {
          "id": "bb952951-308d-47c6-87d5-334feec180f0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "16e30e54-0939-461b-a730-94b8aa0a3c58",
          "status": "OK",
          "code": 200,
          "responseTime": 982,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6217df6f-5495-425f-9502-a8f790cd9434",
        "cursor": {
          "ref": "04e81606-a200-48fb-848b-6aafbd674e77",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ae013e2b-3306-41e9-ae54-1ec8e19fb964"
        },
        "item": {
          "id": "6217df6f-5495-425f-9502-a8f790cd9434",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f120744-7c23-465e-b921-bc8f07705b73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6217df6f-5495-425f-9502-a8f790cd9434",
        "cursor": {
          "ref": "04e81606-a200-48fb-848b-6aafbd674e77",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ae013e2b-3306-41e9-ae54-1ec8e19fb964"
        },
        "item": {
          "id": "6217df6f-5495-425f-9502-a8f790cd9434",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f120744-7c23-465e-b921-bc8f07705b73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6217df6f-5495-425f-9502-a8f790cd9434",
        "cursor": {
          "ref": "04e81606-a200-48fb-848b-6aafbd674e77",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ae013e2b-3306-41e9-ae54-1ec8e19fb964"
        },
        "item": {
          "id": "6217df6f-5495-425f-9502-a8f790cd9434",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f120744-7c23-465e-b921-bc8f07705b73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4852327b-2517-4e62-8bb7-9ed92b278bce",
        "cursor": {
          "ref": "0700e21d-5d63-4112-87f1-674bf46918fa",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ecfc8304-05c5-49ae-92f2-8fd27b29ad2b"
        },
        "item": {
          "id": "4852327b-2517-4e62-8bb7-9ed92b278bce",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "152678d1-3c77-40eb-8a29-5d4207f2d004",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 291,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced7402f-a44c-45f1-8611-cf5511c62567",
        "cursor": {
          "ref": "6a527b4d-134e-4b47-8268-f92e960023bd",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fa1cee1e-1201-48b9-9f9a-7ff14cd61613"
        },
        "item": {
          "id": "ced7402f-a44c-45f1-8611-cf5511c62567",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "524240d7-c507-47ef-97b2-4ee8dc0355ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced7402f-a44c-45f1-8611-cf5511c62567",
        "cursor": {
          "ref": "6a527b4d-134e-4b47-8268-f92e960023bd",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fa1cee1e-1201-48b9-9f9a-7ff14cd61613"
        },
        "item": {
          "id": "ced7402f-a44c-45f1-8611-cf5511c62567",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "524240d7-c507-47ef-97b2-4ee8dc0355ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a72e33-a6fa-4b17-9765-1f1cf9c9fff0",
        "cursor": {
          "ref": "44338302-ec28-4c12-89af-bb5ae030df5a",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "033f635e-73b9-485d-a027-97cb15829305"
        },
        "item": {
          "id": "c7a72e33-a6fa-4b17-9765-1f1cf9c9fff0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e22a91c6-92c6-4d52-915d-6f983955c34a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 492,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f1b5bd-77f8-44fa-89a1-c3ab580c68ae",
        "cursor": {
          "ref": "eb5ebb96-ddb5-463f-bccb-b48478202862",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c15a8ecf-7518-47df-a2a8-23298cee670a"
        },
        "item": {
          "id": "32f1b5bd-77f8-44fa-89a1-c3ab580c68ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "56721241-1414-4edf-a707-b45b836fbed7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f1b5bd-77f8-44fa-89a1-c3ab580c68ae",
        "cursor": {
          "ref": "eb5ebb96-ddb5-463f-bccb-b48478202862",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c15a8ecf-7518-47df-a2a8-23298cee670a"
        },
        "item": {
          "id": "32f1b5bd-77f8-44fa-89a1-c3ab580c68ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "56721241-1414-4edf-a707-b45b836fbed7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c3a505-4515-4583-81ae-9e95d261f19f",
        "cursor": {
          "ref": "fb492de9-4b67-4bad-a6be-bdca414c8dc6",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6d368054-7870-41dd-a3e3-74723eaed9ff"
        },
        "item": {
          "id": "96c3a505-4515-4583-81ae-9e95d261f19f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c8dbad74-3628-4235-bb6a-0c00c58e5826",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 594,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}