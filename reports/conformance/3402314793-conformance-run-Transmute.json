{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "36a7cf48-8f21-467e-a9c6-1d9635e1b620",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0cfffe2f-b955-4322-9774-533a9accf134",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d174b905-75be-4a30-9c28-1781e962a8c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b027c58-50bb-4229-8d03-c5c66af4302c"
                }
              }
            ]
          },
          {
            "id": "70af5bce-f459-448b-9c5c-2243328b51f2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15ffbfaf-5b4d-4ca3-936b-67266c6bf899",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2a865907-bdb9-4ec1-aca2-98510a8b5f3b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f8cd6b9-6726-4e78-b2bb-4b42d0b9526b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9be53e71-a7a6-4aa6-8c66-df8fae172b40",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a881d673-be4f-4859-817c-df5633d0e8a1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2880c1aa-e5c6-488f-b9cb-76631dd52a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a8db5d8-4a2a-4244-b494-151d42cf7217"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0972102b-46ec-485a-b907-4065c663127e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83180702-2f33-4f34-9577-555436c90338"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09230fe2-814f-4bdf-8148-ae33a3fc0f91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f5ab85a-c37c-4b48-a86b-64495c5418b9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80dc90c2-d958-4018-a726-843ad0dc5089",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0e51396d-2ca8-4e37-b57e-736133e76bff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ca28087-dc0a-457a-bc9b-ddeab2f0cda8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69ad6b96-91c2-411a-a286-1edbffef4321"
            }
          }
        ]
      },
      {
        "id": "48b0d62c-decc-4e38-a42d-26d9b9f9b8a4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a95dbd94-1551-440b-a6ee-1d9123ea518e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1db3ac3e-d1fa-47d9-8d29-da31fb75ddd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f39f7dd-d882-4bbd-bd7f-6284774e9f49",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67862cde-69d6-41ee-82b1-07e73a0320c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edeb9041-b7ca-439a-bc22-c5b7299719d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a13a93b-4945-430d-a38b-1176f60bbf15",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556d533d-057e-4670-87f6-6b154b3e67fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e29338d-4426-42a6-8717-5314e7efbcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf793e0-7995-48d1-8615-75b3fb046b12",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd91ac8-137c-4418-9aef-829c201c0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44febbff-597c-4113-a3af-332c6d78425e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ec057cf-34b9-4d2f-a67e-633d26271021",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4efd9a7c-f30b-4eff-8658-7429b121dfb0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ca7572-aaa4-4c1f-8058-cb006ba36b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dd30d05-f7ee-4541-a912-3fc35a57f5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3113f1a-033d-491d-be7f-98fedba1028c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae4d26f-c37b-4ab1-b4b1-abe39789857f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1f7776-bee4-4cfc-8eb5-2694506c9a1f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcfe15e-5ad0-4420-b9a1-9e3ab9c84023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "628d2a2e-28a3-406e-9246-cf45265b73ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c2237-ab83-41ad-9d6d-e47d05c8306b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "739aed9c-bcf6-4448-89b8-7aec6a39459e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21c1c619-8860-4dc5-b4b0-6577ef55fc59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f2676cd-eec9-4cd1-bbc9-ccf89d5b5d4c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a12865b6-8220-4e62-a899-995803a67291",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0074f9ad-3672-4d0e-8ad0-e094efc15d16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1efc7f6-8ebb-4f44-afe5-379c1f2af4a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4d279e75-cddf-4621-9328-bf923b0cfe10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dd159c4-692d-4cdc-9d46-cdfeb087bfe2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2d29fb1-5154-4daf-850b-210e286ddc30"
            }
          }
        ]
      },
      {
        "id": "a1d943ac-d459-42ca-90a2-6af75d1db2c1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3da141ac-6445-4170-9bee-28da190a1dc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b1979d6-aabb-4a40-87af-c34fea4d9003",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ecd2f061-e019-4c1b-abcb-67bbbd622f72",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b3cc76-10ba-4bb0-9a00-5c4a5d7d1be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e140ad-bac7-46db-a61c-3d22baf83dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d18b7b9-8450-4613-82db-0dca1cea0cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7d01e9-ca7d-4a75-a90b-c870365b66d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a9cac9-0cdb-4bfd-9209-1b7a15e8421d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2687a948-4f40-4d3b-9986-8ecb8c4ef007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e61130f-43e0-4e4a-96c0-84c976d39aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21d0e57-c4c4-442c-a651-c0f66cb81779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc71dc3c-9c70-4ee8-934b-0ef968c7a7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3537bd5c-3bcf-4759-bbbb-6b292f9e3e1b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0786cc9a-6571-4671-85a9-7ed375ad93d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facdf8eb-fe33-496b-a896-3198fbe8934f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d9c31a-c1e1-43af-95a7-0d6f7fde20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a0be616-3207-4e04-a88f-fc266302c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332d1d0a-c4ef-40fd-856f-36f56fc2c233",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111e5164-f9d2-4fb2-9f8e-109bbbe7588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01236341-912a-4cda-a92f-82cce5197960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a60235-f499-4e17-8470-66f26ac6e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b9deb6-0765-44e0-bac7-7b54407ad089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b529c4-c274-46f6-bf54-e34b417d4821",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5256b-7220-4606-b100-0007cb7dfb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a0689-fd9b-4599-908b-192f9d5c5ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f36610-6e95-4df2-b545-2a591a683e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c05c438b-9a8b-4253-adca-dc1e80c98385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da255f5-4ac9-44e0-9cd9-cf514b0d707d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43124716-815e-4bec-a08a-0e84ae72aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991b42d2-5cbe-4b6d-95e4-192cf6233f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ca044-4ac9-41e2-bf47-ccdaac3b55d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b92d5f-7485-4b3e-8f41-fd59f65422b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42638984-17c1-402b-8f1f-b563d5466086",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9304372b-2838-4424-9b38-3c1c328d34ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344b5e3-4d8f-4e49-9ef9-7a7b9ec19765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e644b4d5-e23a-4e09-93fb-87ad6674540c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d519b718-04dd-4e33-b4ee-dc80550600c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed4bc2f-9b99-4681-b055-e4722e90c6fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2adb2f-fa4e-4019-b0b1-fb98a088d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c1e5e8-cbc7-4e8e-a647-2921fd00f0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195e8a0-34ef-485b-8745-7b1dbec13a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c6ec9d-378a-4b18-8f0b-a73b84a94baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949e67bd-6f35-4292-bdfd-5b6cedbe8ba1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c2d4c-66ef-4250-8b50-b29575ee49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da24ae38-b702-497a-8bcf-398661f38769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b4d67e-29f6-4cdf-a39d-421f207059bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "659ba04d-94ca-490c-8dd5-7fa29cd2fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b827da4b-6fc8-42c0-b325-5fa048d3ff72",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ecaf8f-a325-4067-b44d-dcb820762cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1a531c-ca0a-42d2-a01f-529112112fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f1f1d1-1859-4d7f-bcd2-7329fcd39170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "605113bc-781c-4d40-86ea-cf95b62712d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e5aa93-8676-49cb-8379-fb273d0276d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68077ead-8a05-4c13-87e3-2654d74f8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5880141-0564-4cee-9b5b-8cf0fce5413a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6826de3d-df48-4cf6-8cc3-b5b66eb1e93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "823173a1-d7f1-492a-9c64-423ab3815f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2ba75d-1733-4d71-85e5-ea13cf0221d6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f44dab-47f0-4127-b80d-a70a936dd340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5c0298-ee67-4c47-a61b-9a432a5b5c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79be143e-f1f4-4f83-b68e-1e1d4364adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ec0797-5a1d-435e-ab54-bb949c49f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4233b52d-d3d5-4311-a3a1-96fa933f7a64",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f10d2-c16a-456b-843d-48732c17ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a786ce80-f387-4705-bfe6-75fbad623869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e9ac1-a344-4c3f-8bb2-910f90573a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9b1e337-b1af-4302-9484-33e7a75859d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73dad63-e957-4b99-aa67-8537058402a9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957bda79-8125-4c54-8872-68880f3a3a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f754545-d31d-4100-9bdb-ff5b57b70148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86374488-97e2-4b0a-98e6-af7069fc3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a04a006a-d1ea-4564-997d-24bb3f21f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5954f303-b94a-4944-b919-817bb1be3e75",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f46f1-e0d5-48ec-b2d1-e1967ad777b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9fa1cd-ee1f-4acc-bdc7-b8cf0fe6ad9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7189732a-34a6-4aea-9443-c6d32c4cfac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51a68091-c6c9-4399-ac20-4502679e6b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4c6033-416f-4db1-bc69-ed29e993ed73",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3234d770-068c-4f2c-aa6c-52a5bd8a01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441621ae-1dbe-4a03-a262-1ff2646cbfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af75aee-4a44-4f23-9965-15ecc0b3c29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b204495-0c06-40a4-ad8d-797ba64d3f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975d54b-d8a5-4b70-a9e2-30d59652e0bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126b511-7d77-44b6-94d0-faefa3074e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185f3205-87c2-4506-987a-c4e4fc99b540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c413498-2853-424f-a454-45213deb9d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9976167-6b91-4403-a9ad-8f9e3dbf1b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5d3a45-1292-44c7-ac15-5460298ca938",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40691587-ea82-4465-8af6-bdb379d4c0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250fa9a1-a9c8-42f3-98a0-0627e07a3006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9446b59f-4dc3-4ede-8cf3-eee606de2c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "863d5a48-d02c-407c-b2b0-d088f2e9fa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf79d74a-f142-40f3-9218-3c2bccd4e50e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe2e7cd-6188-415e-b44c-d6972becf6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394b44e3-7163-4464-b7c5-9421e0069a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31be77a-9ae5-40fc-a06e-008bc7c419ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7801ea-0b48-405b-93f4-265bb054d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91645d47-26bd-49c0-bf4c-a675bc1194ba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77107974-a28a-45cb-8d07-2248bb51f164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc3a404-b25a-4892-98ca-f6a09208890d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cb0fcb-7158-4050-a74e-10758c0b13ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cb85e2-f771-4322-83f5-3ac7246fa5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f1665a-d55a-4870-af3c-f5cab5a7da76",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d504b4-9622-4b17-948c-08a25915164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e03bcf5-1182-4575-9b72-36bbf021d247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae95f905-b3ba-4d9f-9d67-f237b57a610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5497e3-5dbc-41de-844f-dc181df77eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552c0b63-4ca1-4058-9e11-9ff81b870dda",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c580efbf-4619-4343-8d87-28c8b770272a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c252bc2-aa16-4939-b80d-957477f0f111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649b9058-82e5-42a7-a583-947eba9a2612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b600df01-197d-403c-83af-7031c9ab0a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d7bcef-f24d-483c-8aa2-45e796ff161e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b69f26-164f-4e7a-ae70-b9c1b3498249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130e37ea-b1a2-490a-95a1-ab829a24312d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e840bb-44ef-4fa1-aac1-f28053ecf177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bee0e257-1043-4984-87ef-8299866c18e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d34b5b-7540-4009-8bb0-a5acf8dc9357",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64910a3-6086-44df-ad03-5886bca6cb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899276cd-4c2d-4af8-9b0e-630bd4df81a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0982191c-6187-40c6-8ea6-e6c64f4a6337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf35e51-4bdd-42c1-8b62-4a6820c68c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75662e8c-7fb0-473a-a89c-91a932974e77",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6457cc6-6174-44a0-a6bb-7b5d71cd9558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fd3861-7cb6-40eb-8985-435ac46fbf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a4f95f-3a48-4aeb-bacb-abea69b8f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a34fb49-14b6-4bf3-94f1-2fc52ccbf759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59690e5e-4c5e-4967-9fd5-2ba3056357f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55091a6-5780-40af-b263-534adfac0039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb7b7dd-0750-4386-95d3-d7bc8dfb550c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95c4c2a-20e1-41eb-b5cc-1b43ca282df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8ce174-affc-48f9-af3c-13bcb9e2dc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740d68a4-7faa-4aad-b777-c612f7586af7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c20d3f-5b4b-406e-91f7-8293af6d36b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1502b4-3b03-4dfa-821b-485a795e526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2506403-3fce-4117-a4fa-6859ffe3bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73560d04-d7ca-48f3-aa5d-a23c81042189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d5d82a-f029-4a1b-a35a-b91e13188893",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae11769-f268-4e83-9b43-c45bd0d160ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea0e364-f668-4525-a3f5-413fba9a733e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be8af80-b679-4af8-a92d-07630b942f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab862c7-a1c6-4e00-a3cd-5e8a16939a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1be0935-f43f-489f-82ca-a8b6d6c84b91",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9b9f8-15bb-4f20-9801-07da01ea3026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4def414b-6f4f-4ff9-9bdd-efeaafd2bddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f107f90-0f5e-43db-8b83-10ff5c93c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "970df052-38fe-4a2f-ab49-0b5f1d21b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9629bf80-3d5e-4142-8103-e13ed5b16ddf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da281b4d-ba09-48b4-a72f-5d43442f7b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f73ba77-6a7d-4a7b-b460-8dc380a3933f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1c51b9-3f1c-4d90-a859-6957224abc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3c51d-3b5f-4f22-95ad-8ce9c5978def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d69e378-7a9b-40c2-ab3c-ca9f3c4bfb65",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b5183e-97eb-4dd5-a842-0ba8cab9e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcd1029-6b47-4618-bc8d-d27b80ec6f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24493df-821a-43aa-a22c-ecfb9e282a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d96f68-c317-40e3-bc1c-e072499f9a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a1558f-cb73-467a-80b8-99f0e40947b5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1a0c4-5d4b-46d8-befb-d52c04cd37e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b9337f-576c-46cb-ba2a-366da287134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5d575e-7c40-4480-aece-a2368a092a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2e5072-eaeb-4e24-8499-e50a7fa3df76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb85c7-09e3-4550-9c9c-bf77f0c55c40",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0586ba40-b2be-403e-9ee8-c1fdc2732f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6d21a2-e3ee-4f8a-9d86-bfa99dae1820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cccb584-b704-446a-b002-1b3e651d8c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5e6815-da92-4d69-9274-4bcd64d118db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2418f64d-db55-442f-91b5-99b141c7b2aa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f749f456-0cb4-4fe7-a237-2083981218fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11049e8-f1fd-4d31-97c0-aef403a7bd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc9eb4f-94bc-44bb-95a2-02afcce58593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe279ab-148d-4256-b713-c51c5f0d5de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed9c860-77cd-4d13-abed-8c25baa3ff8c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23aa910-fbe4-4457-9037-14e7cdd6dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f439836-1a33-4376-9884-21082805e362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f5b6d9-face-4b0f-b49d-5c6c324ad570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6861e2-676d-470b-9422-4a4f7382f45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2379d-2ec6-48fa-b912-02e14ec1c225",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc543f7-4a91-480a-bc6b-8ec50b937506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae7d221f-8940-434f-af70-d78d4a81bc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d44c5a-e9fe-499f-8613-e0f2225afa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1376e636-aa3d-4b37-9ced-43697bf824e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07901a13-9276-47ee-9ba9-507245cf7fe5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded75322-9da3-4d1b-a98d-f80c16e8977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14582755-850f-4d97-bebd-0ff904776ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41734e4c-3892-4840-842d-fdb53206a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6de9e3e-9368-4193-bba2-da73ff4ad53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c82731-521a-490c-8152-1fb9f6d54bd7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff33c3ed-a379-4ecb-b10e-80e0a24d9c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cb4178-f100-4f11-b3bd-556536fe826e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad607221-75b6-4b36-9854-cc4772fecf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38d23556-e040-4301-890d-f48d9bca788c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869e9889-19dd-4afb-a87b-a0fca9c504d5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2132367-1ad7-4810-9f66-f7fb6ac3b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b733b3b9-525b-45ed-80d0-17031069c5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7af4cda-416c-4684-bd8f-2b6cb7b4e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f33690a6-e5a8-4658-81b2-d3b06bd3a707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6be96fe-bbf1-4930-ac9e-6ef3d03468db",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c1447-c479-4db0-8327-4e5eac403715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fe2e39-6fe6-475b-8063-9eb84b795210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91a50c3-bbc9-46fa-b159-6bdb26b36542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b964cf47-f648-4343-90c5-dbe37a34554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491cef3f-28aa-4f91-a5b4-488e669fdc38",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd84acc-6b12-4201-abba-45dd15b0a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef10b136-f500-4e10-b79f-5584583cc2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f83e1a5-756e-48f9-8f00-a428ca89e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42928f42-d433-4e5a-a245-90c576818b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88b82f9-5734-44d7-a8fe-e60c8d9b35ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da94b774-81fc-479a-b15e-f20c98f51d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887d5eee-8d97-45a4-893c-2da5ebb36890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e699d-a335-4db4-8c92-d13794ef120a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "39b5406b-75e5-4307-9eb7-d184c1b0080b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3934347a-78e0-4a40-ba5d-84eeefbed55b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b01d0ef-6353-4dbd-bc4c-42006484a645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1278082-57ac-423a-b886-deef1f4f78fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b6422b-412f-462b-ae76-f62fe5f9b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a477ff-9296-4410-9050-c3ff29abce04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0390a6de-4e96-4712-bdf0-d4738eed3bba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70c84c2-6320-466c-acbd-d9cb0c69a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e0e4b9-8182-46ea-aa6f-669e85bc597c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eadc4a7-2782-41bc-b83b-dc4ebff554c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78137550-a52d-4b73-ad9f-0e17d09cfa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7bc64-d21d-4f44-b085-62ceeada6b2a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbadd11-c0c3-4afb-92b1-6cac500c7eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ef73c1-6fb7-4267-8673-0bb4feeb8f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4a2004-d651-4a50-84b2-14f6edbe00e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9250bd64-2a8e-48e4-a9a4-f2f2099762b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006c5478-d422-4fef-81b1-a391e2901d90",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a54259-f0dd-4116-bc12-0cb19db4ce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ea04a7-b65b-4637-aa02-4176bfe8a022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0849df2-2d0b-4b6a-bc75-2f85fd5b687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec538eb3-10da-4f8b-b7a3-c51717cfe0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c359c224-b249-4eb5-9d29-98724c673482",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52526dab-558f-46aa-9376-a73539b69d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb28ac2-a79d-4993-aeed-66f3e6742a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d49e1fc-7d2f-4f76-9748-f0f4264c6c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d745efd4-d60c-43d7-bf10-dc7209fbe0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b55e50-1435-41c1-9501-e53ddbf56153",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e62757-857f-4e45-a313-af9fdb6ffdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322565b0-db1b-4e2a-bfa5-037e8f5018aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4dec52-3d9c-45ef-be4c-d50e8a4e7cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "782b370d-eeda-459b-b96b-deae11daeedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19d159e-62e9-4ca7-b8e3-4574859103aa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1fd95b-bbdb-4a0d-8454-0841c69faca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697da68d-c222-4d2a-9595-3e7964554743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0abc4d3-ccf7-48a1-ac3c-200ef04961db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bcc4dc-f2c3-4df1-8434-2536f1a69353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a612de0f-ea6a-42be-a646-797c7867637e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89312479-ce42-4114-a6ae-893683b0c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552acddb-9c61-4f73-983b-c65b9799e910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b7eae9-9f71-4d14-ac59-b44231821c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd60e60-9d02-478c-9868-8c61eecfd9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd11b47-b5a6-44b2-bf80-75f236696338",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b7352-89ff-4c75-8833-1c3b702f7207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a720c965-10ee-4ece-b97f-85f6ee7d29d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3d5588-ed52-4bb5-a478-6d3f5c848c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bde4d5b-28b1-4541-aab6-f10aa7de5c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9bec0-3b20-4980-909b-14d9644cf873",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144ef0bb-8c79-45ff-bffb-d4a092241d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a78cb5-fec3-4739-86e1-80cb79e2f177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d9a38-24a0-49b9-9bf9-2ce00c22df2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6755d3b0-ec2d-42f5-bcbe-ee6a39d66f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f653956b-f768-4284-8e90-c29fdd603c89",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d70f3-dbdb-46e0-af6d-3f21723ca440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300c5030-ae63-4d5f-bf08-986f6dc2122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb2708f-9bed-4c08-bfc7-f87facbc36a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb1b581-cdb8-4c6a-80f0-3f51d68a18f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3877842-43b8-41e3-a121-faea6dc4f299",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3629c3-f71f-42ac-9aed-d8c325abfe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4221ecd-7f9c-4eca-93e9-47464b17817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02f40df-1708-4562-89e8-22ffa866c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af499c6e-775a-4312-95a2-6b4f52e6f972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f37886-0735-4d9c-adfa-bc36af27c2b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7b5839-485c-460b-9c92-d2b1fb626dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1497373d-e455-46d0-b635-bba57037a8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f455c8-9323-4fc2-a040-4075f334662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddc5f84-b76e-484d-8a8e-59547e252eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d4d9d7-24e8-4c5f-a9ff-9629b53f87bd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1981a218-8751-42b3-97c9-e237e4c3b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2af679a-be1b-4c5f-bf42-019f35554bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754267f6-ee06-4cb1-8335-3c302e9c54d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6da5784c-7928-47f3-8197-7b6aafb6f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ed9d45-cc86-4091-afff-d5bc2b041364",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fd4f2d-95a7-4bde-afc6-1dca0524d07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d8344b-ab11-46e6-8db7-73c3b0b4e08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d8f0f8-b098-47e9-95b7-45c6dfee195f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7785af9-a6df-41bb-ba30-249b32038d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4769d6-6a1e-4341-b3ac-401fc0141fad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52c43b0-5ec2-42ba-9397-9149661d8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7e23ba-e005-4f89-a028-eeab7e07b745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da17cf1-ee91-4100-8a3e-ee4f7acec6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dae55ce9-9cef-4956-9f6e-f270ef8be058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a146c85-993d-4172-bafc-f4a6f9592ca8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14427b-0f83-4a45-8772-2c1d19595d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcfbe42-afca-4606-b397-ba6ffdd4e815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d4c81b-57f7-49a8-9228-fae4ed01c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee341699-baca-4ace-89b0-d3dfa8ed9be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a8605f-d767-4114-8b21-8a2d04113794",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526f06f5-da7a-43da-87e3-3ca34749be4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5caf8ac-d5b2-402b-9cb3-098085dd8b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961d4835-8559-4b2c-a1d0-47fbfc549616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5eb6cb6-e219-49f2-87e8-fe79da94a628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b59c5f-b25d-44af-b6a6-a0e65132d0de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa6dcc-c8ae-4b33-b4fd-5f2d29e90d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6805493-b90d-44ea-9401-cbcbaae1f3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef8c5ad-b8d5-443a-9c6e-c5ab416443e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2398e19-0406-4c36-b73e-a2441ad4ba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004f808-229e-4f9c-9966-312a4ec6df7c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e94941d-ce3b-4a86-88c0-a34a4bf05600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f7613b-e5cb-4c78-8a66-3ee4f3203d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da47c769-f528-460a-9033-a331cb1782c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1b2d35-89b6-43ae-acfc-e070c456b345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad9c2f-0fe9-4291-92ae-99f14f4dc571",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee04cb5a-e7b0-4a77-9a50-6f1fa48ed8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d8b280-ccb0-4cc3-948b-bf3bd4583d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc310ea0-d298-4827-ae7c-ded6b94d31e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff868d4-ac55-4034-a82a-2bf14fb2047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0475f-0460-4347-8c8d-8fb94f3be717",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214329e1-3994-4a76-b95a-1908b1018a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bd509b-14b0-412d-8a7a-8f8b443a98a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6909aa-8ef3-47e9-8ad9-540b75e3528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e9e17a-b24d-44ea-aa17-3d711a0e1dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c3255-a1c4-4545-89e8-b80ab5d4f4f6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081b0713-b519-4a75-b3d8-51df54ea7ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc03db71-d09e-4bd3-9418-a979c2917e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af363e3f-f727-44d5-90cd-85274e4698d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26991c30-53a5-497e-beef-cea37ec8620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c85f2f-b6b2-46ea-af83-93f6ebcf3a68",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03a3e51-e665-48af-9dd5-398986dd3e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e91c714-6a42-40b4-a1de-484211aa1023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd25b475-ae6c-471c-b4df-b9685af581b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b80528e-013e-4811-bf1a-0cf6920ea1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ba82e-56ea-4104-8af3-5d1702661c43",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5917b2e4-91b6-4e6c-91f1-e50c0e6cb6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9a76f2-6a9f-46e9-8622-f70ffac9eabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecc3663-7f91-486f-87a8-86bff8f47572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6782d5c1-fd55-4897-91a1-c00f6fd6e21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473c5c5d-e916-465e-bacf-f26c88aa77ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8728e162-963e-4aa7-8dc9-1c41146cecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e03194-fcbf-42a7-9e09-8e0255d89226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1316e259-76e3-46e4-ad66-7033d5f032fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8015454d-a6df-41a7-b354-a61ed792de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b8367-adb3-418b-a88a-23150ce3f8ca",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e8e1a3-a5b0-4a8b-b22f-3420874b4938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b91c7c2-251c-4dec-b336-ad040a88d8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e627dd9-280d-495b-a74a-e41c272cca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb11143-8234-4a28-a7e9-7ac8df9a6170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dfa526-a9ab-448d-9f5e-145af0db55ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af283a3-993b-4baa-8925-64575828c89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56967176-cf57-4d35-841d-b784991f085c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d416196c-27e8-4784-8631-c77f92731a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2357e4-1835-4c9b-bec9-3e11455a7473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7c4fd-b5c6-4f42-ba34-1bb5558487b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0d7326-a107-43a6-b8d7-b7fc893085d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a68e81-5743-460e-9cdf-34d349e7e9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af477ab-4893-41ea-8635-72a59182d9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a4517b-064f-4aee-9f88-7ffeced7b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d1d0d-ec6d-4b51-98d7-22d5f2614e5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41ced5e-8a2b-4c0d-901a-a9260a082f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54925e8-92ff-44c5-893b-a7f222b89272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865cb344-7f80-4348-ae4a-90e286080d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7e6f1d-7d17-44a1-98cd-b7cadf088f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c6436-bacb-4bac-8b29-3ec140e00bb5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c084e270-fe2c-47e7-898f-2f147a92b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887d1945-6b27-483d-b4a9-ae64bee17432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53839eea-7c69-4e64-8cae-17713bec593b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18150097-0ab7-4f32-aaa6-068ebf47d259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ba6077-154e-4578-8c88-9d08d64ca239",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c839f0c-b3c5-4a22-a46e-284dcb6444d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce7f590-5404-49d8-95d0-36a5383b24d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894324b6-7ebe-4859-bb86-6752920a48eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e28c58a-ca76-4c03-8a57-68eb5cd82900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379a62b7-4145-45dc-96b9-71447ba1a14a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d8d789-bb36-4de5-b226-41d3f5e69e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbce7939-aca6-4e1f-9047-d0245bfdebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f5b70-ac09-424d-a6d5-46a0492b7a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "214fbbfe-e3c6-4ccc-bf43-8f3a2e52a3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6725db-d63f-43b9-81e1-e25ea87a8d29",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ff521-9dd3-4446-b729-a840d8c0e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcca7c2-9363-4bb3-9291-a94a3a89460f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73fbb7-0922-42b2-9e43-5093414513f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17f8fb7-7d19-4297-aab6-a7ce4c20d7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce13993-57ce-461c-bdb1-fcc020cb711f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af29263-df1f-4aad-a3b9-0f107104dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ee0176-6609-478e-a47a-ff96d5041465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f665c1a-a69f-4d72-8670-689d9545724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81527446-184c-450a-8ef7-5e619b4f0e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0b714-3bf3-4369-85c0-1f3c1c7820dd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a86ecd9-2357-4e4b-8aa5-2a34e621a87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ccbb2-46fc-433f-a975-71e3a004e88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d56cf3-4d1e-4bdb-8c99-964199684756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8384b27a-63f9-4293-a5aa-765cf7b241d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227d24f5-d9b7-43e1-be97-843c3c60ddf1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f04a8d-ea61-41a9-9650-67769ad65b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd23267c-910a-4ba4-a5a5-4341c111e612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501e36c2-6137-411a-8d3a-ecdff12e3912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42022d4f-0401-4dc9-9f03-ac58d7bce294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80cb7cf-b39f-49b7-8ae9-cad8f11b36e9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f360c055-1d13-48ac-a504-b86036072182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4511db12-88a6-461f-8105-b69c0d3c440a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c532d-2cdc-4239-83dc-e5b540ec4e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8344ad99-9e27-4226-864f-f9d9d838aca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67edcf72-393c-4760-93db-5a0fcff4cc4a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c148f7-2087-4956-882a-8d80663d5050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eaa9b2-b258-499a-af50-5119eafd79ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d584b120-8153-4bc2-8838-ff2c32cc7319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5923bc-b838-477d-9b6a-4793b8f3da1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e868a3d3-d2a3-492d-9348-04f6efa48ad1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb32d58-4ed4-4c5c-8288-3e0e1b60c28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb24b859-1f9d-4e63-8a93-058be0da6c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d33d3d6-e3e9-4c43-b082-622158b42294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d520bb30-2904-4bd8-ae12-deb249440bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa2000-3298-49eb-959b-fc0629b9aba6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ef00f-fe26-4a90-8ce1-0499bb89cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7131ec22-66a4-4bbe-9a3f-bafa41ae6fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44709da-8c59-47df-b736-ac099edd181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b21437d4-7980-48fb-af78-46caebbf8651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63391fd8-b901-4ee4-a1da-bb965732578a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeae3aa-c2a8-4560-9ca9-e48b4a9d7b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427132ca-d7d8-4109-bd6d-9c70b559e988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c253a70-aae1-4005-a386-94f101b249e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50902405-3081-46b3-8a75-b533e98802db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d6ef5b-2816-4fa8-a4fa-558eaa677533",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d122760b-0978-4128-a457-03d1014aeeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fc5e21-46d7-4621-aece-0dfbf52d27e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2277ae35-a575-4ae6-bbf3-f13667ea5f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9249b35-0ed4-4788-963e-99ae42345574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab1ce87-e4db-469e-b2a7-19647b3d41c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebac4be-d3b4-4acb-b9ae-a2986c924370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f321f5-2b53-4860-b3e9-d5c8f6a43f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd23726-8e50-457b-bf3e-6941f6e1b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a95425-cef8-4a4a-b1d6-ac5627a3f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5168f0c-5d8d-4f68-a4bd-a2b541a5495a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6c151c-1a61-4766-989a-76929ec295de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8836cde-6e3c-42b9-a105-ced66164195c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482890f7-076a-4d3c-ba29-675e7b01ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39752e05-eff5-4ff3-8b5c-597b3ca7c919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abedc6e-e274-4885-81e6-4aea03c5bfb5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70248d74-7b46-4cb5-bfe0-fa7548b69caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc79793-ddef-4f79-b44c-99a3a7801e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cee4dd-715a-4430-ac54-7d65c939bedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4e4059-793a-4781-956b-d5739291305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271299fa-7eee-400b-9266-5265ce27ec77",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e7b9a1-0534-4a14-b938-3d87dad77c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5869f32-2595-4361-9815-6c461feb2f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff59b8e-9279-41ef-be7a-fc412cd97a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3001bd5a-7e44-4848-9d23-1e9cbae926c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0873c630-1264-43a9-aa8c-24851b457272",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbb3a8f-7fae-4c45-b035-90071559daf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1927b6a-7a70-4048-8774-bd08e8e853c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4c2fb-18d5-4cde-85e2-65ba261394e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db65496e-e9ee-49ba-909e-1ae0ecd4abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f297074-5ffb-456d-b412-276d025276ed",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d377089-03f2-4102-be5a-44d9ed7d685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3f7060-b018-43ea-be11-130963310288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc76c9c1-4d64-4b65-b93f-54485cb4f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c80202-ee46-4906-b6a2-ed65094779a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5820183a-17e7-47bf-9902-7a0dbca1f365",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04b1850-2175-4119-a980-098021e380a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1d9b213-d93f-402a-bdbb-c35c5f1094fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b6004-140c-46fc-b703-5ba45985882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60009a82-4bbe-4213-aeb2-0832a924698a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8200b780-1a56-4d79-bd20-15748ab641d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1343589-b299-4370-8a3c-ff99a6bec923",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48774419-6552-468d-9cea-e2b868c75a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3de8373-de1f-4952-bfeb-d6395e488c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4a41ac-4431-4c69-80c4-ef2ad06f5a97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cb46775d-f97c-4fa4-a694-b5ae341e2c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1c2d10-9883-409f-a63a-b44cd6b01294",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa97477-51e7-42bf-a793-e04ad033ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06da7d3b-69be-41d4-9be8-273155c545ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ef1b34-b8e8-4416-8f70-ac77aa874e28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d5fc1cdd-3932-4512-9f57-0f5b03d0af8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60d34df3-8185-45d7-81c3-068eaaad5036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fba8efa5-d4de-4650-a294-66d6998e605d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30634d51-38a8-4e60-bc7e-49c2f0bc04e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "359984c2-f1f0-4dec-80b8-f1ff1a6f96ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0fe2fe2-6189-4854-a931-c119cf5c19f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25822995-8038-4a56-8b01-c5210e6ada0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "684f9113-ac50-45e6-9750-7354e99f6d8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "963555ee-9e4e-4a69-ae40-a26d8f82fe30"
                }
              }
            ]
          },
          {
            "id": "4d38d0d1-257b-49ba-a567-f18bf7ad6331",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69ce1056-0904-47a3-9d5a-1ffc9deae2f6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5643b281-06a8-46e1-b8e5-ee3ac0468608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da683fe3-3691-4883-8308-57856dadffa8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "051fa690-b7ee-4540-9f20-35c6ab616631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23e697a9-df92-4b3c-9eb1-d09c0a2bff07"
                    }
                  }
                ]
              },
              {
                "id": "c4b743ff-84fd-4779-acb1-12e98b3c9ef1",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "532dbd98-0d3a-446d-800c-cb631e40b4d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fab1a887-bc65-43d6-9e7a-8265df474871"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db6ffdab-bf46-4c21-9246-4dc72b81e2fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d64567bc-63e2-4fd1-99e9-a02d55240263"
                    }
                  }
                ]
              },
              {
                "id": "285f46f2-b4e4-488f-a362-a4a2f5b65941",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "909425fb-03f9-458a-a116-9d079007b531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df818371-093a-4999-865c-c3e0a86f1710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d55864b-c8f6-427d-bb41-76ba2d5d987f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89ab35c7-c0ba-45dc-b0ac-4d678a8ea0b7"
                    }
                  }
                ]
              },
              {
                "id": "503e5764-6652-4436-90cf-e3bafd0040c0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcfb0974-fc6a-4064-b0ae-fc328df513c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9241726-52cf-4157-a406-65d58a5e29fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d630c078-91dd-4170-97e3-6411acf7e118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "11103ffa-5c8a-4c66-a7a6-3e7219d7d233"
                    }
                  }
                ]
              },
              {
                "id": "a62dd5e3-9a28-4006-909e-c2913e68f25f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28c5c510-1346-4cf9-95a9-3c002bdc93e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5333807d-bd58-4562-a6a2-bc2cd6da7b32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd46fbf3-cb3d-4de3-942a-b22d9228d95d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "401f8d7d-bd38-4b94-9904-3b30e80513b3"
                    }
                  }
                ]
              },
              {
                "id": "03f421b0-5400-422f-89e5-6849ad73328b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c492635-911a-4b85-9712-9f6ca58aaa84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a19ccba2-f123-47af-8d88-e23acac2237f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18682d7d-1682-4ed1-b6f8-300260f05aba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a70a644-49c2-424d-9892-a2275f694f38"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34a7e812-947e-418d-9165-e8d7bffb7da7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b425850-c4ec-4b5b-b982-8dd69c26b122"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "861251cd-1bd7-4c15-95c9-25510e9f0495",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e894dff-aeb4-40aa-b14c-a1ec6e4d8e36"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b8910e8-25bc-42e9-856d-0f64ea626abe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e824da3b-7efd-4526-b2c7-bfe02e5c2630"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f91a2f5-389c-4d7e-a370-dedeea47004a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8602da44-00f1-48a3-bda9-317cbbe70e96"
            }
          }
        ]
      },
      {
        "id": "6bb6dd61-10af-4b8a-b16f-84b864d727b1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "88d8f54b-b196-46a7-aa40-a0864540e9a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45e32973-4ca5-4c6f-bc7f-0f2dc71ffbbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cd5a0f8-928c-4680-9149-da64da6a0d1b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496d26b-2b21-4694-a2f5-68ad636368cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f298b2a3-9074-472a-be31-dd2a5cb2d418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bcadd0-700e-4585-8728-b03f39b24d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7260646-734c-4227-afa0-35004650f9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c11938-bda6-4ba8-bfb7-55cd444f68bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1de32e6-e650-4bf0-ab23-70d8cd5e20ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30f3327-c5f1-4e5f-b161-e0ea9ef22f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39390815-2d05-4ea9-8a12-218f7041da4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4459cf16-7f66-4a05-87db-ca805be3d124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db0babe-edf3-425e-a9c5-df5e8dd2b25a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b2a0f-9ad2-4654-a79f-2b72e54237df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52df50f-db99-4a2e-8a29-8762a7f7b3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d98a35f-16fa-4fa0-b27b-443a5be67682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "263022b8-fa2d-470c-8dc3-22af432dc753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c9ad5c-9b07-4c19-a8c5-e248b6ceed17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b33997-4a99-40e4-9f90-b367bc78d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405f6872-239a-4f58-8efe-adc025ce0fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c14ab5-79af-41b6-be98-74c38efc36b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "896cd92d-7fa2-4c14-92fa-0d570bfce4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66582ed-2ebc-4b08-b605-127d3ddc003b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f957f5-e435-49c3-b540-7d8cf2227bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82d8bc4-8cd3-464f-b24f-754f072b0541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19381d2f-2e9e-4969-89ce-244016a01024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "219c8571-20f2-4a76-ade6-490bb1c866fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d3dba2-1bb2-4f1e-a7eb-b88a0d33f941",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9289f1ec-63ea-4f05-b805-aabb3d9329a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1be4642-f5fc-43e5-bdd9-65aabb135c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636660b5-c964-4fe3-9d82-cfb95fc7d3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17e47297-79f7-43a7-960c-2b321444e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3a05dd-2297-4b55-9126-1cac08bc146d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48adae4-f7aa-42c2-baff-a7488f500d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05f147d-bc53-4041-a4c0-d8dfa86c0c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae88693-02a4-451f-8b00-df1b16cde679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f352e7b-2081-4538-9a48-73a726addac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d223792-955c-4fc5-a10c-5ff904ec9579",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dcd6d9-a03f-4ef3-ba76-5032e5a9a874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4899cc5b-777d-41c9-aaee-e3e2781364d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d573bc4c-859f-4482-ac25-aaf610f6a9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24358f79-992f-441a-996c-0ad145f9bb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a75214-d440-4126-9179-e169c2848bb4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ec05c-378d-41ee-a74d-a35b09d79dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c1d34b-0b3d-46c4-b459-46e8158e6cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d044ab91-4e22-4076-b262-bbcc8b7ddbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec83969-7522-4488-8a11-1d2afa4ca5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1576ed2b-9130-4a04-a9ab-17a32f275b30",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9f31c9-4470-4758-8589-a674f5c3f174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352461bd-407c-4144-a06c-0bd201b81d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4227747-57db-473e-b98a-af486e2edfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3513b68-25b5-4417-8b0b-6210d7f0871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf039a94-7458-4e29-9a5f-968449932526",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dda1fa-644a-4cbc-8469-5c53cfc37218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5561f-9f31-45ac-9368-596797529ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e823db-3f3a-4a50-8d34-f46aea4faed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "82cb0e44-e242-4e4d-b227-30789a88ecf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df229721-7221-440f-a3da-836963063053",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2439386-ec4d-4285-bbe6-b5d448667cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e999af-8fb2-48a9-bfbf-ff335ee7e116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a10d186-18d8-4c7b-86e6-2ce732e0d50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d510b9c-0a0e-481a-8c6b-004ecc042535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4c1c55-2046-44eb-a840-ffd045ea5891",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ab7dbd-75e4-45de-89a5-454fd2542cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3a5fea-97bc-4757-bf93-96f3daaaaf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d696366-c0a3-4bc3-93df-b21a8abb4030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed8d994-d79c-454d-a32c-9780a25296ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bff872-6db1-4e7e-8ded-3a775216db67",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eaeb28-3c34-4358-9815-e7d491144e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c72713-9b7c-4577-8442-fb06a1cb00bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e83c4ce-5995-48ca-9b79-4fe5e27ca03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e61aba5-a27b-42bf-a2b9-eab433fac1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c1cd12-788d-4d5c-b89b-8c59d35a1112",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ab3f9-3dbe-4f43-bf6e-fc953fb6f3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fa56b5-5c26-4a74-ace8-176cf5071f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4046ca65-cb06-46f0-b4a3-41e7bdc31a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2c4874-a3e4-42ff-8306-b41720849889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43508308-9fbf-4576-b8b5-8378e565828b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7a961f-933a-4535-baf2-b9c63ec0848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c187c1-8f05-4d84-9aca-6661960353a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95362e49-69e5-4cfb-b5ec-96c3cdf9edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1834a2b-141d-4eff-a79d-a0942847c3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce93dc15-f913-48a5-b77f-369d6eadc74f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0630898c-ebae-4aee-948a-f6a29686994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5627c33-c40d-4a1d-8ef5-7d9385ba37f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4ad7d3-e73f-4727-932a-283fa63bd7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ffd4e9-554a-49e2-91c9-8bc0d6718c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b541521-09e5-463c-bb3d-17bc86e7203d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c4672c-f276-4d3d-8342-83a28f632d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd63fe5-a050-4947-ab40-0cf199b8bbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b669c9-a498-4673-93b5-62e8ca8b450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "609e38dc-a96a-4ae7-9af3-f3327603fc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6edbdbf-324a-466d-b07b-0c11a33d001a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ee4386-cf4e-4e14-be3e-fc332107712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad22fba-d038-4078-b211-2f80698aacd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20cbd2e-5188-4df5-bd65-5bce92f392fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce3e553-a34d-48f7-92b3-1ef6f5727970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5343dcf7-e766-4acb-87a8-a7444284f58b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa688c5c-05d5-49ca-8728-e9e1ab952653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a368bef6-6bff-4c5f-810c-f0cc774f636c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea7e3d4-893c-4d98-a675-b92a5701e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b15c370-cd51-487b-998c-de3fe78f864e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab80976-8d9a-49f1-89e2-7ca625c4ef5c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f09db2-3791-47e2-89a8-2f5e82b0a451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c166e7d6-e637-414c-81cb-c37d4143ba33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0e9510-0d3f-4f58-bdb9-dd89494970e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9f413d-c7ed-46ac-a9d0-a2905e720d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ede5936-92ba-44ab-bf15-b101e92c439d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b597d1-d654-4aa4-97e8-f25a8aa49955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff3c854-8e3e-4b9c-a9b8-d4ccddadf39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6617bf37-abef-48a7-a992-6c34e8f4aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "818c52f8-c06f-4052-8fc7-d618ee0c4b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a608a0ab-e5b1-45b6-ae77-eaf49f12c733",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcd8da3-b2dc-47d3-8102-f6eb9bfbc5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb720e5c-a908-4b3e-a45e-132ba0035b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddb95bb-0cfd-4426-9a07-e7a3b2f473e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71b8946-1c2e-4cfe-8d61-248b19503178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0de9a2-7be9-4e75-85d0-17f545c99169",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e4fdf3-cfc8-4269-bb48-e626d9632f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7dfdcb-3d76-4a66-a593-efc8685f5581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ef90d1-74e2-4272-9e1e-a11d4e05ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f549be2-85d6-452b-9606-279c5d9e31c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5211bf55-be5c-4d38-b4f1-d163f392ca72",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac00e07-899d-499d-9b95-1f66d48a47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ed4847-61d2-4000-9d51-167465ba7eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38adbbb-3955-40c8-8277-2ce008009a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40d5644-0479-40ed-91a7-7ea90d6f78b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d42f8c9-4104-46d7-9340-fba8d6d59442",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d30b78-e56e-4d8e-a7d6-dd03d8275fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4684ee1e-daf7-4fe5-b90c-55a93c86a60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42638933-1ffc-4348-8e95-197df775410f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d70e71-78b8-478f-8adf-e7a8a9b1ae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b89a9b-4045-40a5-8b05-e12134a2c6ee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721f863f-5b76-4f1b-b901-0cd2a3c198be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8c9211-db6d-4053-935e-06366f005a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edd1937-ca02-4278-92db-d691485bd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d87396-97ea-4646-ad5a-934754c5b9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f66bb9d-f230-4ce8-8915-93d985f8e385",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dd6795-7938-49b1-8b8e-0ccae548eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0192e9a9-868d-485e-ba96-1c251f8a270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a13388-ca2a-481b-b0cd-dca580501d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6d1711-24e1-4243-99ee-35c3d387407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f837b3f-c3ea-4fce-a5a7-37c8047fa6d4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837e6c57-6afc-4d93-bf25-c9b55971e713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e843c161-edfc-469d-95a1-d53f483321a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184b0469-92d2-4977-8fbb-44e02f11099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e739fbe-0cd6-4675-aeae-0dee4a6b361b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0480248-36a5-4caf-a411-78dd11bc9eb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a4479-a016-4ac2-8d1d-53c6949d7067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb73c45-d99b-45ba-9abe-c718ec8fc643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c52018-5fbb-420e-9a01-722fbbbef13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a38e77-c702-44fa-b674-164e09f69b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57219d-b2f5-40ef-89e5-28ea46bbf862",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4572851-3673-49a2-96e1-9a238c110f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf109db-90e0-4532-a989-58a84c387e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11f4bc2-4123-487f-9917-224282651c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "658e04f3-3e5b-44c8-b3bf-ae4ba323e267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787a5ab1-8e8d-4c83-acbc-e3d7f1529390",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6975ce8-ffd6-4ee0-b7d2-a771170026c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f7159e-0f4f-4b62-b65e-2fd30ad0272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10077101-6252-47ab-b35b-b1670688a75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc06f237-caf8-482f-8bf2-71661db720f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5b97b2e-6e42-453c-b806-d78ad45ad5fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "145fa22d-ff80-4c34-8429-6c56c065c50e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fac63d-1836-45fb-9e77-c361cc2eba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a41ea92-00a6-4085-ba45-ffdbd8ce8d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16bf998-0f09-4268-85f6-b7c6ffc30057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be6d8255-d86b-4676-96f5-05356c944084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee7a14-388a-4d41-9c70-c6dc6d2d1245",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5727611-d22b-4865-b811-0a0644d1cf28",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "dce37385-0f27-4edf-8b2e-c9ec9ab1cc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6b393-1a07-45d4-b75e-faabf1f0debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d879c54d-ec95-4c0f-ac84-9fd29dbdea91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fdf3a75-bc30-4e8c-b04c-f07a8fe98f63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff4f2fe4-8439-4daa-ba7c-b4619a500dcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "115290d8-3b01-4cb5-9d4f-57a6a43f95a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc09ec2b-ee3e-4dff-b485-02b9712fa67b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e5f5b7b-dabc-454d-a4b1-36a3f9f4753c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66954988-a5ca-4ba4-83da-811e973b48c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "462a0fa6-c150-46bd-8154-9d36c12f6c06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ec46e1-49be-4ae5-9058-06fa87074680"
            }
          }
        ]
      },
      {
        "id": "44f08171-a98e-40fe-bbd1-c35663800c30",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "75771bdb-42d7-4803-befc-41a4445963ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94aa3112-cf0c-4430-8ab7-da266f0fc74c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d9bcc58-e463-420f-a16b-41b7ae72e7ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa6ad2-b310-44b1-a43e-63f5cf4d66f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f828c2c-7f54-46eb-837f-d122dc300633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6e35e0-c2f1-4a85-ad7c-90f730dc3fce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c391d9f-da1e-45aa-a7c4-4bb87aba783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e392d7e4-7cc1-4ba1-a789-987420037c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1c563d-142c-489c-858c-5c7f4683757a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5243c083-3fd7-4241-90bf-d7b5c28bb9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4b3dab-a8fe-4435-a746-b047b8c312d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e76ca-db47-4738-a504-f2a769b86445",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4494cb-7102-4a89-bf94-dff57738988c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411d732d-9a2a-458b-a1a7-6309b939e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6563a1e1-0c02-4352-9a1b-26da851f24c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db75e6-80e8-4265-93c4-880491b756f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7cf2e8-362e-4ee8-b178-3e95589764f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745124b6-b1a5-447b-b413-14db7f05d364",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddc9722-fd73-4327-8c25-03181f100ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb795d73-6200-4d24-8f3c-dfda45777c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b149409-8abd-4a0a-bcdb-c7be56153a65",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784de3b5-6959-4763-b533-a5753a57048f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcfb6b7-9ad5-4430-bf73-b76c12dfd0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3300666-14b5-41bd-9336-fc1f0da3189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85860172-fc50-43e1-a56e-e39fb00b9439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fd3c5e-e705-4d07-a70f-c33370c8a714",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e7daa-2cfe-4bcf-8dfb-85c9b5b8c285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce47dd8-898e-47a1-a4fc-ac3e104eec8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8fcdcf-0c5c-4b88-8356-69c636f18c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8347981-ea28-4930-821d-87767b074779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f9db3-41ee-4a79-a2b9-3af7c6579a49",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca314279-fbcf-418e-8986-d3d3445c2e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04485712-904c-42b1-8fd1-800ef0ca17ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21a53ba-0506-43bd-b593-47bc6ea3c8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27aca7a-c70c-46a7-ba53-55a1a21d006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ded5cbc-9316-4059-b81c-502e714b344a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ef2151-8818-493c-b0a9-320c2d0f31aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6cf947a-ed8f-47d4-8710-9b419ec8faaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c223c35-78a0-4d74-8877-f51a2ee31539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255d0d4a-951e-466e-a7f0-33123593b451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350133d4-b17b-4eee-b3a5-2acdd57a4163",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2b9792-b293-465f-a9e6-7575b0b45de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26f1938-43f7-4e2d-b7a0-0bbbb71f1f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f1f74c-8d9b-448b-818f-042450e32ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b428fe3c-701c-46c3-8624-f364b84a252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06500fc9-d51f-49df-805b-2f3592e26753",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df738213-5989-4ce7-8e55-a8a4c790d34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d641382-e0df-4be4-9f79-910618f140e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c3a5e-30cb-4327-a4e4-b46302e45a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ea9b0f-1a6f-4754-ac64-7aa6dc10c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0913fb53-9628-4325-b39e-1af37b775023",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783dfdeb-319e-4f48-a696-edc0e48afb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d0d371-7987-45bc-a9cc-d1903b6d6f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11f79ae-7dcc-4ea2-b9c1-12dec568ca76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1242eb7-3c6d-4e50-ad40-4d1477c2fe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cd023d-e3b6-46b5-b74e-883954998d18",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670f7809-d183-4add-9fcd-64496f384ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb22332-5cc6-4648-9621-a1c96ecd5449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b76187-4ff4-469c-a66c-2ade814a0f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82565b0-d955-4a27-9159-4b40a358ddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2c442c-43ba-49b4-81af-3f40c5dd0409",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d353469-89d5-4063-a74c-3f819baae534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1e888b-4507-4f77-97d2-d4373cdf9f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85421aa6-8a08-4559-8c5e-0af9c1429183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5364d851-c7bc-43f6-be08-ab88725bc802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8724c863-57a7-4afd-8c58-c614b35cbf01",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229b33f4-027b-4ba6-b865-c2837be8068c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df13dd33-eb41-4f30-8d22-34297c6e8b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3a6758-7a35-464a-8519-574ffe56db90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63655bc-b2fe-41bb-b216-e76bce9ced90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b365f0-c1c8-4cb2-b4bb-d69392189c2b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a180423d-3bca-4b12-b800-a11c7dfceb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1362fbb5-ce3d-4a64-9cee-230d3ac34a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed214ce-ed60-437e-95ab-546d203bb308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096bb2e1-da30-4a26-b425-beb73a173a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f05121-ac06-4d33-b4e1-54bdef5c31af",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f327d385-32ed-4661-974f-d64a38e20d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5fa335-4684-44b7-ab04-1feba048b4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b2242e-8e78-478e-8026-d3b5d5e83de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc3cbb-c16f-4932-8563-15c178c33b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f086b6-5dd7-4c96-86e4-5deae6705276",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e331957-99d0-426f-8973-ceadce74e5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c09c4c-9100-4f81-b297-fe756e12766d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df5783-6a21-4731-8370-5f1333cabaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f821dcf4-2502-40ae-9df7-7dda66242a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc934e32-7d00-44b1-ae28-43596934739e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acf8d49-be7a-4d81-8bc3-9e4998f0f03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5badb5-f015-4c41-af8e-72a6080b85b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bfd03b-d1bc-4e64-9178-dbf0d7b4bf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6463fb6c-4628-4679-9495-673967ed0c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc54ffa0-8289-4997-9a48-51ad9f042a06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70322dc6-9c2b-4c01-bf13-090f78059e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb20b5f-e063-4d9d-bd47-6de9b993887e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b674dfa-717a-4607-a00c-b4a24ba64586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6d83db-90b2-430c-9e8c-72a23fe87b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bad261-532a-43be-bddf-a384a805a0fa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9387e484-fb33-4a17-96ff-adfab30daeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a19bf2-8e7e-4ce8-8fe9-efe03d98e85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1fc8ba-0e23-41ca-bd3f-f1a230012309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52e4466-3013-42f4-bec4-05f00518e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6d1999-664a-4a8d-9301-f316b03e8ec7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67970791-003b-4816-a228-40cc15a6b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34b7bbd-b538-48d3-aa26-6b2326965b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e43315d-3104-4167-affd-b1e5456a3041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99929bc3-1b40-4325-a426-51b4a978a70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc6b31b-eb34-4b50-b9a4-9cba5c8e06bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492cd3b3-4966-4061-93eb-e03ed4987296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1664daa-235e-4b47-a8d0-2c8894858f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e8fdb0-3d78-4580-a893-2f99091a5670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e6e26d-09aa-4158-b7d3-e3eb5a5a0079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5ead1d-243c-48a3-8365-87acd90d5dc3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04335985-b797-4bd8-8a8f-beb6407b41ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5444765-576f-41e2-9826-4e0bf32879a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871f874d-cebc-49f7-8688-49d778ca61c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c739aa-0df6-488d-8f1d-927b2136501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a24715-4729-44ca-bb3f-f06163bea10a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20aea96-9478-4896-8bee-f9198fb709e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256ff0de-858c-48b2-accc-773c3b8ab1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0db2263-f866-4334-b297-c519acbc67c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac3700a-e13a-4362-aad6-2109cd597211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a987f5-e598-47e7-a2e1-37051029c546",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eca9e8-cbc9-4207-b710-9520905b29ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2beaeb43-0b72-4b25-937d-dc5c3bf4c942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2856d5-8d44-4a91-a5d1-f981d8687c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89304da8-869c-4d85-b0b2-a840ffecdec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834d35a-0b56-4ce0-b4b2-f0d562c3442e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af14b3b4-8695-41b7-8351-1ea1c369b511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c85d225-6346-4046-a39c-6c34da97b935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1bb88-3c89-4028-84c6-963a607441f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2ba9e2-43e3-401f-8c5a-f82c80b8bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32038320-bafe-483c-94aa-7cc0227169c1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150cddd7-dfb0-43ba-b560-50bf0e65e5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96944fb4-7d0d-4eb4-b884-5cbc45eb1e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888bd7c8-de7f-4bca-a8f4-bfc5b56918b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64d7c54-ce4d-41ff-8d86-a3a442f28c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71590d9f-c145-4b60-92dc-41427a607d89",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc5f010-2722-4912-b8ef-393670b1329f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6c9bb9-3a8c-415c-94e4-5d5682a69ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5f4487-67bc-4273-b284-390a72c5d27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac6b994-548c-456e-8a1b-41c16c23d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2b989-1f8d-45a7-8eef-f9e96247da9c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a0124d-39ac-4e4d-bb24-f21781526834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be50ff64-e7c2-48fd-902f-96e478a812d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed678e2-eb26-4af0-90ad-18bfc1944434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080831b8-67c1-46ff-a932-c66b0f0f6020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07acfd4-7480-4ad3-9bcb-06e5a511bd92",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409bcf6c-c2ed-4d3a-8dcd-a44f44f35d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c1f62d-e46b-4076-8303-5d8476205d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d721fa95-a5b9-4122-9b8c-dbe832ad298e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11b079f-483f-4866-a765-29e8080d326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1636e0-813f-4604-b08d-e725113138ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c638092-a450-4f1d-9c0c-05bd1c4f96c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5696d2d6-1087-46a6-bdb6-13b248ec08ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce827706-7d1b-4383-b317-6d4620c87b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4491793-2f62-459c-9430-c2a0dfffecf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e35046-466b-46e0-aa92-cb1610a2b8fa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d86c44-e6fc-4ad7-90b0-482bd0d47957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53aea0a-d4d5-4266-9e50-ceec7eafa753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed1b7c7-415d-4237-b6c8-2645bccb4eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f692d08-6a26-4fee-8215-da5e1d4263f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f47f6-c30b-45d0-9540-6b26860ec480",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff4ab5-e5df-43e0-be80-a86638cfadff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183b9053-d495-48f0-86c0-a0a01c8cbfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab4f3f6-0821-44a0-9661-7ce0f33e9261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7e052c-a87d-4ef2-9a3f-4bc69ff5afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dbef98-35cf-4796-9cb9-094bf390e181",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b19682c-d5b0-401b-b1b0-c43e8ae0b773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db15d43-f509-4e8f-bf80-cde340418f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a650a31e-2cc7-4fa0-9b32-797fb82e4ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ddd1ae-4e24-4771-8dbf-ddc0cd9d1e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c10f38c-abd5-44ad-875e-e3312998a122",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c08bee-5eb2-457a-9ef6-16eba40e89bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fc0f24-d21c-4877-9070-1f17fc4f011c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e91572-4431-4e36-b4a4-b8c42c52c5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ae904a-9949-48ec-81ae-d952244b24f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79ab61e-50eb-44e8-a4ff-b2efacaa1570",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a869ab-9c49-4045-a5e8-1cf44244b35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e311691-3a0f-4e3e-b82c-5885734c7c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25064ac8-ab9f-4202-869f-4b9d6dbf192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd6b3e0-374f-4f41-a85e-6c3cad7bab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d7a2c6-8b96-40b2-9935-a2ecf876fdf0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccc134d-9100-4d25-b569-9cff63339137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18f8ba6-a9c0-484d-b10d-af021636c435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3aa68b-41aa-43e9-aa08-291e91b6c72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6161579c-e62b-46d8-82a4-a2695da2620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b0d8f5-92dc-49ed-adf5-e1eca35b2100",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f08472-4c65-4c7c-9e5d-b0bac40d4f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8635d0a-fd5c-410f-b116-f0bfd9043ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f09345-96fa-4d47-b407-fdd66abfb7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce8789d-c0d4-4172-a06f-a8d56f5204f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd66d07-e656-4bcc-986b-b7bf373da07b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09475190-19ef-47c1-ab59-63c5a990bda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b98f4e-d1fe-4b17-a4fc-93c6e72c8f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb09e4f-80bc-4000-92e4-bd4759eee08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40305333-1fe6-42b1-bc0b-37a580fbc443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85a2312-d264-4796-80de-9ba95850efbd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbfc02d-108f-47f6-b0cd-71ef84726922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92089a6d-6213-490c-b44c-8e887d551020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f541f9e-2e06-49a3-8108-d8803c61bada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b254992-3527-4611-a313-73f92470d3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c55179-e961-4b55-8a82-530835347c30",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4474bed-141e-4974-947f-690395b72a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f222e057-c426-47a1-8d56-0f6104c14468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b516e4b2-33d7-4061-bb17-fefabadb0cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed53584-036b-44c9-8946-b8d0abdb7b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b00609-0f3b-4843-84d7-a5ecc0419902",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1845986c-dba7-4e5c-aa8e-cf05a02ce506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d78c1f5-7234-4e9d-b57a-9dd937b683d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b65641-a1e7-4653-97c6-177e1b8f553f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0553e5ff-7527-442c-883d-dd0fdc0d9064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bc9c36-030d-4571-bfe0-080f662c2ff2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dac4f0-8990-4616-ad4b-1040de33c0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d424b53c-d955-4e51-8ad3-33e65a11917e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e8742-be94-4618-9ff0-ae31ddc392e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7eb090-9246-416b-a21e-26adb6f231c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd0c558-ae04-4bf5-ac5e-8e4e6b4637f8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a4d376-89a5-4b83-aed6-9c5097971dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6296c87-43e3-4e59-beda-f5e5b92bdd8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90f0db-aea9-4368-bac6-668f42509f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360c42bb-002e-462a-a063-50672a8886cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf3929e-3e92-4d11-9a5d-18083fc8c852",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9cc322-226d-4336-9434-b39232422eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0424c986-da40-406f-a579-d13d06f6d520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050e4f1c-3dbe-49f7-b5e4-24d000431387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe25a2c-c41c-4f7f-b203-43ac0dd02a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122899aa-d04f-4e17-83ac-c68e2af7dd34",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460e47e3-a929-4274-bfa2-63187179e935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87d300d-88e5-46f9-9aa1-b8661e35b3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f1dd9f-1de2-4ffa-b67b-69180441ea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877c2446-0057-4b6f-9d8e-5befb37dd556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801abc04-3b77-4f2a-aed6-585921722758",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab06af9-cbfe-483c-bed6-e4667179240d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2140da62-0b03-4e31-a428-c5f90acbec8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c870c43e-e645-4d24-b4c5-980f9ba2c8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e365fb42-f12e-4140-860b-c1bc83371c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61d0e3f-f908-4cc5-af0b-59c89a990efe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70000a-20f6-4b14-9c92-96fa1aac548e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e7fb20-6ada-4f9c-ad17-68f092f2c6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a3f22a-0979-4fed-b6ca-cdcd795d40bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e600880e-162f-4ad6-9f05-8fbc60ab3fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93f8881-d38f-4557-8674-84a948e81f5a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc1d89e-36cb-4508-83c4-b8dc6b2a45e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d51bfa-32e8-4ea2-b53e-d1dbe2ed8d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220bbe33-c7c9-4a24-ba59-34a393b20997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc38dd3f-d7ce-4476-8844-a813690efa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0541d61a-19c2-4010-8b7e-5c09b5225297",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aceaf814-14fd-44c5-ac71-a31e13974987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89f338d-01b2-461a-8809-73c2c4ca7a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11debf7-12f7-4abc-9b9b-67be71a519dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac80f88-5527-4db8-a5f9-7d91318c2e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e4e214-b45f-4f37-9490-81ba3c0946c9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e01548-01bd-4b9b-a6c9-7fcbb9f99fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c9f623-856c-4acf-b05e-65ebdbc15088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e3f503-03d1-4bd1-ba1f-55e6b07a5846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dba3baa-92a1-4c43-b535-09ecf88b883d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dd1558-daa4-4d85-b930-fecb33d02606",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4010f9cc-930e-4bee-8308-6e2c2a4b61bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f972b2-00cb-4fd0-9096-e9b9bc092021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf226cd-5b28-4759-824f-f72345bb5db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a240c2f-e442-41a1-ae63-0e3dccef365e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d61248-00db-4c3c-b0ff-1c1643e32c79",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb31b67-f7c9-42fa-803a-62c7a3626ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d927bf30-acb5-455c-86e8-5adc6e2f91f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a14454d-1f75-4be7-8668-74761459a4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab6c4c7-5dd6-43a0-8c69-c3365bacee79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4972319e-f9eb-46b7-8df5-20f4879a2129",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c495073-eea7-40fd-a146-dfa7cfb0b6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f4ef95-f094-4f61-b876-0888da0d776c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade7cb3f-238e-4eeb-803e-064a66c994d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0b84f6-2dc5-42a5-9855-a36dac367978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5c5ee6-3c28-440b-b353-3091d9fbd2ab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a174de3-33f3-4623-b22e-5e5b1059b099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2700c7-e74a-45d9-a704-eeb80143c4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313c8e81-07e8-4335-9bbf-a6e60435b9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1e8a93-fbc2-4074-8de3-6883a255432c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd674e2f-4b51-4270-87a1-ead2721159fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddf52d1-f366-4795-93ac-308b10b2193e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4382adf-51af-422f-a4da-a3239f58d166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68a3a7f-0146-4322-9a99-227446fd4ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e788e4-7016-4ad3-995d-88e44996646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b789d85b-a6f8-4fd8-b37c-42c8189eb057",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302666d9-ce9c-40d9-b023-0897a595379c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e9150f-40af-4973-bb27-8919c47bad93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580b81af-883e-40d5-ba18-d2b2fa070e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbb6f45-5e57-4602-ab57-94988aec7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8a3b22-d485-406f-a336-bc844c596df7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a29f36-aaf8-4219-8f22-ef2b394d74c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb954c26-7666-4ae6-8289-3f8805c0ad96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73489bb4-f357-474d-a400-67c5d2fb89a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b71df1b-c8f2-4ccd-b132-aff8b8417a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2087ed-59db-4f54-8cce-54e4e25f051e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfba275-093f-4896-adad-6e632dbd71b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716ba91b-b62f-443d-96e3-01c8a27c9846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa7763e-4093-4a17-9858-5004695824c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6376bd-1eb6-4ea3-8611-b931596a001f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e90256-953e-4189-afbe-cf42a21c6464",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752eefba-c230-46c8-ba9c-f4aac14118d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb134e35-7184-4259-8805-98cc4039d94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba501c71-89b3-481d-8f71-6753561ec3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bc63b1-4d78-4c69-9f01-f791f5f339d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b0e9ff-24d0-47fc-854f-74b0c3a04c01",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226e05f0-d18b-4e9f-abd5-26929adba642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c2b0ca-782a-4179-ada5-931fe77d996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8f961b-00c7-48ec-bc0f-7888d6c926db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f5a7c4-4bce-4ab5-b345-db202770daa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89017f9-0684-4437-a1b0-5db9b3ed99f3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf2d938-621c-4ab5-9916-1c3d84bce3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2103238a-6aaf-4cb0-9974-ddfe05915868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5ce92b-5328-474c-a1f2-147abe71ee2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f0a4ca-29c4-4920-9266-6d9fa76d586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd906e1-09e4-4226-bd68-ee86f173b0cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a228f4-4763-4273-853f-2669fbe81f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012a48b0-26e5-4f2f-8416-254b1694417e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51c2088-8057-441e-82c8-c0596f99d175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8e6a0e-f052-4a5d-bac8-fe3f4c66a08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f6472-1f96-49c7-ba39-ede6f9bd643d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2374a499-32a9-4f28-b6f0-c108747ac4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0597f383-afc8-4ed3-9c4f-a0ccaa700ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a34e3d9-1209-4d42-8196-b7ddfd73be07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbb60d3-a192-40ce-b63c-986ae9247424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b5f9fe-b831-4c05-a8c2-cf7bd73e74e7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437ff62c-ecb5-4369-ac71-7f0ae5d65db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e51dc8-9100-4ede-8dea-7bcbba5bbbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e38e67-9d3c-4784-8b4e-ec1e5c07c8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4dc9d5e-241b-4e3b-9c6d-1c5b06eb422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e93b6ed-db64-4752-90da-f9a55a18009a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437870ac-cf32-40e5-9816-75dfbed01f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a00c5968-35e0-44f2-8a50-c4a724b246cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fba4b3-b244-42b6-9146-9dab2c8663ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ed1282-8cbe-41c0-8d3d-4912071bbc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74f21fe-51dd-4b10-a19c-1740ae837b89",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793ba26e-bd4d-4d05-9174-776fe16c5b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12c5569-cae2-4444-ad81-bb3930748e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777c66e-5b6a-4a6d-99a9-5dbe31ff599e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713f5688-2c76-48e9-9390-f06ee57b19f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac7f784-a16a-4d4a-bb64-bd146e49aa68",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce7e1ab-7468-47a8-89db-12c311509fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8c8de5-3219-41d9-aed3-794ab1f1feaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bee7b3-1d0c-4dd1-b2d3-d36750671477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a89f497-6655-4962-95eb-520c585336cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae29790b-9e7c-4074-8211-fc607e6c3b06",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e82ff3-6da1-49e1-ad6f-3b23e4738c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28221f2c-dc4c-4772-9b67-797149efa366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99483d8-3adc-4503-a883-6f3b32078ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3947b0e1-cc53-42be-98ab-cf0fef128a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae3b857-5a99-475f-b2ad-7d85d54bd9ac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d02fa59-8b81-4da1-84e6-5bd74e7a3897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1baab11e-6cc5-489f-bc72-37c7debddbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f526bbb-6f83-4453-8a67-b10211533913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c0c622-040c-40c7-a111-f953854809d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a79c44-d045-4671-9c65-a2cc003bdba3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39d521f-131d-4fb5-bac3-522a441da7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a0507e-e829-4cfc-849a-5ff4b154d37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a19988-5ada-4324-bfbf-b768681cdeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a297e8a3-200d-4ea9-a653-5d705fe15a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7b50fb-0e0a-4ffc-986b-0affc5fb7271",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148e4a81-1de7-44a8-9ba4-f36d04a1d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20f8f24-cf58-420a-abdf-ff5877874184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84fa189-ddfe-4509-9d46-8c82a2c45748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3ed9c5-d226-4880-bd4f-b8aecd67d5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399bb0e-22ce-444a-bbbb-e914d154b98c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7247d5c-2ed4-4a57-a1d8-a75d6ace1b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31aee76-8336-40dd-a29f-6be4fee15a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d661f-dc44-47a4-8a99-875dd5cb8e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840f2182-2fb3-4e61-8c8a-4c44fbbc7104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc7b873-6f72-4b14-8702-81d4df47f8f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cc761e-088f-4e37-9209-c4655e0c16f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121d1284-e6b7-41e1-94d6-4a0d8f85cf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b30061-ccea-4ce0-95dc-c17a181e1184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bac152-51ea-4d03-9b56-70e7315cfc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814c45b-f207-4811-b4ab-7a125e6b8c10",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0f94c2-ee7f-4df6-8582-380881df6af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdf2e32-35b8-4bc1-8913-e4382af103b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d3e53b-bd80-4400-af21-3096daae2de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c076ec11-5b1e-4a35-a4bd-22e3f249e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158b8826-2427-4bb5-8c82-8f06f6b00b39",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c10d49-4d2a-4bc0-a9b8-3adc1fe28e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbf3d3f-c584-4240-8df7-5f6ef2104d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f106e7d6-8dfc-4b19-889a-faa5adb52540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efba7fbc-c9a4-421c-ac11-16ae3a9721ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c244003-a75e-49cb-aec2-9b600b3f5970",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3063e4-e592-4658-bea0-bf9f899717f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da2ccc6-e688-4503-9f2b-f145f3a00a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1388fbab-c0ca-46e0-a03c-f90b7974a8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fdcbcb-d8df-441a-8b3c-64fcbe8651c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878bed1a-50f5-425c-a0ad-f0888c1a86d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd307b-0358-4da7-b546-f409de5e53c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a536b41-52e5-45e7-b534-70a8edd32d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63603344-e913-4152-92f9-a278fe193794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513b7160-3594-45ba-b119-10d59ed64ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd955551-aa00-4550-9ed0-a03b2148693c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb75a7c-e8b8-42cf-85c0-39358a5ba76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81bbcd59-8498-47c4-8433-2f44404b3742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea3f84d-3e76-4f86-b5c6-982a4c89186b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d9692a-eb64-48b9-9cae-4bca9db4f427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183ff3ce-f3ad-4745-b71f-a6a08ab67ad5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c9d156-6295-49b7-9d4b-85fe7eaf31c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce27256-d877-44e9-8cd2-b85468c940fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e510c5-bfef-4b69-93a2-7aa21615e492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bb9778-e7e0-4f27-8915-e0175f88b4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70fd3b8-c6fe-48fb-b8c7-2a8a5102a9a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d7610-7001-43ec-860f-4056be17ca83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086d6f27-eb4f-4871-b249-1a08bfb721bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad45258a-5b01-4be1-8358-2ec335c6781e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e231a15-9f72-4add-a800-ff33c857a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a181e-6ed1-4553-b2d7-25201c42c8d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41bcd86-716b-4d03-8d0a-211c8eb0352b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c770dd0-df32-4df2-9885-eace059d1717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc60a7d5-e5e5-49f8-8a2e-c0943a28a986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95508856-60bc-4020-9643-4a148975d321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f5469-db68-47db-bc9a-c5edf96cf9d8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f1ca65-875e-4a93-998e-8f0ec73b20af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc47d399-87b7-4776-9917-9a466c86f731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b24b70-cc6e-4031-bbcf-f80299bcdc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964b8dd5-7bb0-4da9-a513-599cd3208e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e8f5e0-a6df-4e44-95ed-289556082bd8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d9a72-b9c6-42db-945c-35bc5362781c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6378d0b-5ae0-48f0-bc9b-abdf96903477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50300fcc-440a-4a6e-923b-8ba6a708d512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddccd6b4-1d02-4e1b-b14b-4b518a0b996b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110985a5-867d-4899-8ef4-8188b026d541",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a7f210-4fd0-48e2-8fed-a755edbaf966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1f47f3-6401-4840-b5c7-da163b24c398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f096cd72-a269-4202-8c58-c034ec0d921b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222459be-dc47-43e7-b396-a2f7a8b449d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72c785a-b0ea-4aa1-9a11-310fadae1e3a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aaf1aa-9d8a-453c-8c8c-45990ea01823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409f63ca-08bf-4609-a1cd-c03e06bf8a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5019f9-cefa-4c60-bb33-b798cb7efcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849afff6-164f-4f47-9c0f-da2d718f1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8499ed18-e4a7-4322-aad3-8366f8434fc7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996cb2bd-87d5-4c88-b43b-c3adcfd94f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd27ca61-7f92-4122-9dd0-3122dbeec0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d5671d-c46b-4596-89f4-b73ae0fc9297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f133a2-95fb-4b83-9b95-d509b54715cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b95ee93-879d-4f38-8dfd-c348b9501b6b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cafba9-d437-4615-a4a0-0117dc13c947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3d803b-ef8b-46b0-8ddd-7048e551b227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffe0bf0-b88f-496b-903e-673f9fb24508",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17ea532-e223-44c6-9ab6-8a8bbf3a067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb61d08-c40b-4a94-95cb-f921d8011550",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f470b6b-e94b-4c8c-9b00-e0143af56cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997a33ba-f630-4440-93ac-b30285ab6e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da2267-19f8-40aa-820f-08c1bbd141f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11186712-f29e-4490-916a-2f6ac64c3cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38641e0-f7c1-41c3-9d3e-4aaa21a5fdfe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ae90d-b34e-421e-9275-d27b17998264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a1b37e-50ed-4366-8d80-989fa63886b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2ac4e4-61f4-48ea-9d7d-2f2009ed4107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3cfd10-bd02-4ae2-b50a-5d51a6cb3486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b96e5-7cbf-4950-ba5d-3f9da0ec7b07",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be89e5a3-f06f-4934-a7ad-c47127e3195c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c512dd2-e5d8-45d8-8fea-86874e17019d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bf93fa-c4f4-479e-a856-2ef8f6543bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd7feef-c8d5-4c55-8076-28893340451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca1b02-1bc1-4967-a2ea-de8e2d314a9d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d76bc8-d5e2-4974-9709-dd533b760982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8526dc84-c0ab-461e-b8e3-dd3666896db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2056ef-2e43-4995-aecb-15f522fe7bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a0bf33-e70a-47e6-8b40-fcf81fdd841d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075e4283-e005-4b3c-b913-ab13e4cdffdd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed046182-8978-44bf-9c99-c28d1ea943c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161237e0-3c45-4ab4-9145-3d3fb838fd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e196cb-2e6c-44c6-b1eb-295c0668938e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a4c7de-ca29-4880-a671-c1c9fee6f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fab9fd-e298-421c-902c-cd58830106d6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facdd12e-3413-489d-ab48-1b56244fc9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a82a31-cf35-45c8-bd22-f36a3b95a89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1c1e52-bcfe-45e6-8a7e-95fdd49866e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39214ed6-f3b9-4861-ae7f-7caa766cdaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59354b2-dc99-4442-87c4-9eef0500299c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff0278d-3f0e-41a0-bdf3-d178831627d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87398e60-109b-411f-b869-dfe631442871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d494b7cc-dc10-4418-96ef-ad48194e6449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6addc767-196a-498b-b759-bf3e2ac82067"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1560ec6c-9010-4172-8858-3dd9e3d694e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "142b05a8-be29-4b11-aeab-dd42bdcf494b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ad9f29-72d4-497c-9e5d-bde6e1be75fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aee54258-5733-4e2a-b948-5c1472ffba93"
                    }
                  }
                ]
              },
              {
                "id": "0352a6c2-6fe1-42f2-926f-a12b19aebaa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54b57ee4-3f34-4f4b-8e59-53db3a41d4c4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e380192-ef58-44cb-b226-0a9e6e0275a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b0a0b88b-6c3a-4ce8-a26b-8c2930134518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add7cb24-c105-4551-8032-2e5b3810d2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d39e3391-42af-4877-8391-0ae8bef95276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4172f3-214f-49f7-bdf4-9de7922580da",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bc55a1-a12b-46d6-b7a4-e3cb7a682401",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "828156bd-0c9a-47e7-a31e-b777fcc222b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e92013-8fd2-40a9-b470-4de8f282b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2a24216-8d41-463b-be1b-dc397911b0cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c33e67fc-745d-4286-b630-08a886f236ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "999a0657-5e98-4ec7-bf6f-a87b72402dc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bd14f6b-a947-40f7-b4be-f1eab2839324",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "227bc99f-2eb9-4e0d-83a6-0fb358d81aca"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "2da5bebd-5ea7-4015-947f-e45b18458ccf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66740f68-d7d5-4d96-964b-ac05bf7a7255",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18aaa0a3-b75f-4937-995d-5d2860c0e38e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7e78334-beb6-4983-94f4-f820d06de575"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "160b787a-94c1-46e6-85b2-aebc0fb211a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b826c34f-69a6-43b1-8ec3-9dc2dc88f92d"
                    }
                  }
                ]
              },
              {
                "id": "327c696b-1a28-4347-a6fd-e6bdd85b1948",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f2d464f-9d68-4d2e-99d0-3b9f51529884",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fc219df-7b76-444e-85a5-61e29b799abe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "968594bb-1f77-444c-8053-dbe599d06aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28aa81ce-f5d4-4ba2-a15d-d0f6f1ff470d"
                    }
                  }
                ]
              },
              {
                "id": "c3a73cbf-756e-45b1-b74a-d1e54009d488",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d573940-dae1-4db4-b8e2-dae40f4b8ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13fb2660-4496-4150-ba16-f924bb279926"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89a4ce46-1eec-4c43-89cd-f725190b3d13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f30b513-2115-4a08-b96e-87c907af5f30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d25e3296-3ce2-47f5-b51d-701cb57f504d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "876d9100-a55c-4dec-b858-b8cf398a0448"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10f4ae2f-60a1-4616-9791-7dc4793c1db4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73f5112d-f40e-4cb2-baa4-51eab335ebc8"
            }
          }
        ]
      },
      {
        "id": "bb0d9fc9-b7de-461c-9cb7-c5c981c7e136",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91ffc173-0118-47ce-81f3-f9971f84899b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db80361d-4b2e-4493-b75c-c7ed6c8d1e4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "975887e8-ddd5-4426-b992-b54253b27faa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1268069-7839-410d-8b22-e436f6de3380",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "865c2de3-7335-4df7-898f-8fcaa7268efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d96a02d-4532-41a6-9f9c-32ef7473f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b723226-18d3-4a2f-a4b1-31747bce1577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fff03ba-9970-4e26-90a9-77bf48beb506",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99989a57-ef4f-4cfb-a2c1-c58d402a60d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fa6c632e-7e28-4f01-a8d2-dd5e1eae169f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909a987f-cb5d-4222-9c04-ff82c895b48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee37c01b-7648-47a6-a3a1-e7f5dbf6f9c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3464044-9059-451b-8573-2e595e20316e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd060087-fddc-46c7-a471-a1ba7461bd5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c11016-3e98-4211-bc87-082b66a2a8b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72ec0d9a-0e20-4b59-ad08-5870bfcd6fa7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "765be191-933d-4d11-af46-352112320d02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2031e804-f783-47df-bbdf-c5f80659750a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3db7133e-5f3e-4ab2-997e-820cea754e8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7da80047-b78e-4a29-b6c4-412fa818f2d3"
            }
          }
        ]
      },
      {
        "id": "8d9a2494-11ca-4b1e-b3c4-b086e00d0731",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "219bff96-d890-4e22-9920-3af40e40fb52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f89c1337-e7d8-4f1d-bcf9-efb642b7cfc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ac4c0ad-74be-4494-b3ef-2ee0b9dae6df",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7d066e-f404-41a4-88f9-09d246824863",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "235ac289-82ce-46e4-b726-3631df94ed5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9165d95-befb-4041-b043-1825abe08bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8cb0c73-204b-4404-aba0-b070602ad385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67d9f99-ca8d-47e0-b835-9c4df2f7654e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfd907c-ec28-4c58-8b13-b88d83161ed9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4993c0fe-ec2d-48e2-9ef7-07748568f54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e1fbab-c20b-47c1-a186-6579acab1953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a16a786a-5856-44a5-87a3-e2a1a50e3d88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64157a2a-db7e-42f8-835f-bb109baf6587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cca29b29-eea5-4ab6-8e5f-221a6da95f1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8181cc1d-b877-4856-8588-b5f64adafb55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d57840ee-7bca-4e26-899c-f82be3109e06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40dfe844-7ba8-449f-a431-d9daf15b3013",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "457d804f-2c53-4864-96ab-f07139761168"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b3ed377-417e-42d1-b942-665dca9c08f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6078cb68-7b16-41eb-9473-e0151d2600a2"
            }
          }
        ]
      },
      {
        "id": "8dcebc92-9140-444b-8349-65d4d6051d85",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "18624fc6-c68c-44d4-8d64-8dbf906425f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d714aad-30fb-475a-8a97-c3cdc366f5df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db460bd3-da46-41ea-ab36-7652d8c206b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59597255-9216-4233-ac59-1ec48f5ce027",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "020c7084-c38f-4a8e-85ec-1a32206e69e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94ae75-2218-4b61-a1a6-8c1b4146dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60563488-c0a9-443f-a13e-f0386226f1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c516b3-a92c-4ee2-9558-4e887ff5bf5d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563a49d5-a675-4395-ab62-33168f594506",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e80ae26-9749-47d5-a09c-888b7b0ad7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0691264e-ccb1-45d7-8d65-44d671a79eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "097abcb2-928c-4d5d-b057-d4b897f2b4f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "064cd9fa-e31e-488c-8ac4-2a0946f24a37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0da091fd-5593-433f-a6c2-c55999144c51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85232ac4-0761-407e-b845-cffbb6dda43e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "782d2e2b-8d78-4e25-ab0f-fbb9f65d64aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5561e1f1-175e-463b-9984-4c087aaff6eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a2e81ae-77b5-4127-af3e-440f1bd79803"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b431284-71d8-4227-8cd2-ee644f6cc822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1c201df-5957-481d-98ff-3ea40e6fc9cb"
            }
          }
        ]
      },
      {
        "id": "a07cc3c5-4485-4dc6-87e6-7b49ca50b86d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b66758-67f6-4e7c-b81e-46bbd00cbefd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8294b60-306a-487c-8d81-c76dc7a572e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "81a8957a-5232-45dd-9386-3bb989ac44fb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29757683-2103-412e-b9cb-3dbfdbc9005b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1006a01-5442-4596-b345-ed3952896666",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 502.8615384615388,
      "responseMin": 19,
      "responseMax": 4855,
      "responseSd": 491.2958571878469,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667695703013,
      "completed": 1667695844697
    },
    "executions": [
      {
        "id": "0cfffe2f-b955-4322-9774-533a9accf134",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3674e9b6-3d33-45ff-8095-0440c630bcaa",
          "httpRequestId": "0accd792-e301-402d-bfae-bcb7eebfa963"
        },
        "item": {
          "id": "0cfffe2f-b955-4322-9774-533a9accf134",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "63a04a69-f590-403d-904c-67019337dd74",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "70af5bce-f459-448b-9c5c-2243328b51f2",
        "cursor": {
          "ref": "f0e944d6-e356-4888-b6f4-3ced2c92d9b6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2d151f26-c193-4d3c-91a2-01a0ab1bb5e8"
        },
        "item": {
          "id": "70af5bce-f459-448b-9c5c-2243328b51f2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4b5e3136-1188-405d-9e4a-3c20d097d8fd",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "a881d673-be4f-4859-817c-df5633d0e8a1",
        "cursor": {
          "ref": "5c5169f5-baeb-4291-a22a-a5281efd0e31",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d603461-a4e3-496f-bf79-959883db491f"
        },
        "item": {
          "id": "a881d673-be4f-4859-817c-df5633d0e8a1",
          "name": "did_json"
        },
        "response": {
          "id": "08c24788-cfb3-47bb-abbe-5d0a2ad595be",
          "status": "OK",
          "code": 200,
          "responseTime": 736,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f39f7dd-d882-4bbd-bd7f-6284774e9f49",
        "cursor": {
          "ref": "73a0e421-e28d-4d35-892d-0d94e3c6bffb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2510f30a-f7df-415d-ac1b-beced99adb87"
        },
        "item": {
          "id": "7f39f7dd-d882-4bbd-bd7f-6284774e9f49",
          "name": "did:invalid"
        },
        "response": {
          "id": "3118e6da-b0be-4509-ba89-478070795dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f39f7dd-d882-4bbd-bd7f-6284774e9f49",
        "cursor": {
          "ref": "73a0e421-e28d-4d35-892d-0d94e3c6bffb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2510f30a-f7df-415d-ac1b-beced99adb87"
        },
        "item": {
          "id": "7f39f7dd-d882-4bbd-bd7f-6284774e9f49",
          "name": "did:invalid"
        },
        "response": {
          "id": "3118e6da-b0be-4509-ba89-478070795dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a13a93b-4945-430d-a38b-1176f60bbf15",
        "cursor": {
          "ref": "9c9b30a3-86b7-41b6-8f84-f9efc029d2b6",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "581a6381-3ef7-4ded-9ed5-8bd52fa34cad"
        },
        "item": {
          "id": "9a13a93b-4945-430d-a38b-1176f60bbf15",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "71b3250d-ac43-49e1-b83d-fa0ebdd90c4b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 582,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf793e0-7995-48d1-8615-75b3fb046b12",
        "cursor": {
          "ref": "7e810a04-3745-4008-a5bb-00cd22ff8399",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2b8ad834-01fc-4796-9c2b-e3b99f0e7339"
        },
        "item": {
          "id": "7cf793e0-7995-48d1-8615-75b3fb046b12",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b400019e-de8b-4594-9392-fa68c94f3f11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 495,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efd9a7c-f30b-4eff-8658-7429b121dfb0",
        "cursor": {
          "ref": "40fbd19a-e801-440b-8afb-fcb97c639114",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aa3352d3-3794-4076-bc2c-140dc865a672"
        },
        "item": {
          "id": "4efd9a7c-f30b-4eff-8658-7429b121dfb0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b9996515-b848-4556-a105-8542d7f31ca5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1f7776-bee4-4cfc-8eb5-2694506c9a1f",
        "cursor": {
          "ref": "476f02a7-435c-40c1-a996-432323923675",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f3c050dd-31b6-4fcc-88fe-d829c5d04bce"
        },
        "item": {
          "id": "ea1f7776-bee4-4cfc-8eb5-2694506c9a1f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "101b9f67-28f0-4a19-bd7e-856fc38699e3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 472,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1f7776-bee4-4cfc-8eb5-2694506c9a1f",
        "cursor": {
          "ref": "476f02a7-435c-40c1-a996-432323923675",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f3c050dd-31b6-4fcc-88fe-d829c5d04bce"
        },
        "item": {
          "id": "ea1f7776-bee4-4cfc-8eb5-2694506c9a1f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "101b9f67-28f0-4a19-bd7e-856fc38699e3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 472,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2676cd-eec9-4cd1-bbc9-ccf89d5b5d4c",
        "cursor": {
          "ref": "adf2cc42-2d14-4c8b-a96f-30f3cfcd6c47",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "66459a44-8761-45aa-a561-46c0418762bb"
        },
        "item": {
          "id": "2f2676cd-eec9-4cd1-bbc9-ccf89d5b5d4c",
          "name": "identifiers"
        },
        "response": {
          "id": "fbf4ec6e-664f-44ff-baed-63eef011772f",
          "status": "OK",
          "code": 200,
          "responseTime": 712,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2f061-e019-4c1b-abcb-67bbbd622f72",
        "cursor": {
          "ref": "1427dc29-4707-4e2d-b13c-59818f871657",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7923ea20-3e33-4d25-8259-c2bd6f227268"
        },
        "item": {
          "id": "ecd2f061-e019-4c1b-abcb-67bbbd622f72",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3daff876-da6f-4c3d-b5c8-7c877f33e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2f061-e019-4c1b-abcb-67bbbd622f72",
        "cursor": {
          "ref": "1427dc29-4707-4e2d-b13c-59818f871657",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7923ea20-3e33-4d25-8259-c2bd6f227268"
        },
        "item": {
          "id": "ecd2f061-e019-4c1b-abcb-67bbbd622f72",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3daff876-da6f-4c3d-b5c8-7c877f33e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a9cac9-0cdb-4bfd-9209-1b7a15e8421d",
        "cursor": {
          "ref": "9fbb4c36-9b0b-49c9-8cb7-8b90a1d01e3a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "564ef1dd-2e62-44e4-8947-e8c900dc3cac"
        },
        "item": {
          "id": "a1a9cac9-0cdb-4bfd-9209-1b7a15e8421d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cd7894ac-b3f8-4187-a8e9-ce5be2fdd61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3537bd5c-3bcf-4759-bbbb-6b292f9e3e1b",
        "cursor": {
          "ref": "66595b29-cf37-4dbb-877e-ba86c863fafc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "80b16720-7059-42d8-878c-57f92766250c"
        },
        "item": {
          "id": "3537bd5c-3bcf-4759-bbbb-6b292f9e3e1b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9f562db7-b06d-4242-a2a4-a089e7390ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332d1d0a-c4ef-40fd-856f-36f56fc2c233",
        "cursor": {
          "ref": "68e17318-cbb8-4f6a-a0fb-19c1636b7a9f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dff741f0-d1a2-4a30-8dc5-978ad64d681d"
        },
        "item": {
          "id": "332d1d0a-c4ef-40fd-856f-36f56fc2c233",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cd9a7315-986d-4dbc-8a6c-c3d5ce233699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b529c4-c274-46f6-bf54-e34b417d4821",
        "cursor": {
          "ref": "0e82e14c-b619-4a08-a828-75975f29744d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1157bd96-942c-4c64-8de1-0a7953026f74"
        },
        "item": {
          "id": "f9b529c4-c274-46f6-bf54-e34b417d4821",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "735dad48-c9a1-48fe-8bcc-52c6b4b0ef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da255f5-4ac9-44e0-9cd9-cf514b0d707d",
        "cursor": {
          "ref": "8ae8dd23-390b-44b2-b327-ae99821261b0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04b859d8-ef47-430e-b710-8c3848788c89"
        },
        "item": {
          "id": "7da255f5-4ac9-44e0-9cd9-cf514b0d707d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "93c9015f-8bed-4417-b83d-93aae2bb1df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42638984-17c1-402b-8f1f-b563d5466086",
        "cursor": {
          "ref": "f7cd6ece-3423-47ea-a94f-911260295c86",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b96ad58-860b-4f7c-a78b-68f655acef3f"
        },
        "item": {
          "id": "42638984-17c1-402b-8f1f-b563d5466086",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c85348e8-a4f4-4224-8c80-6f1b3a770b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed4bc2f-9b99-4681-b055-e4722e90c6fa",
        "cursor": {
          "ref": "4f615b12-ae6f-4260-b5dd-37ba8258ea7b",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86984fc1-f914-42df-856b-73531eab4e48"
        },
        "item": {
          "id": "2ed4bc2f-9b99-4681-b055-e4722e90c6fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9c8925a9-bc73-40ae-8c8f-7ac252728e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949e67bd-6f35-4292-bdfd-5b6cedbe8ba1",
        "cursor": {
          "ref": "f8b9f032-d551-4271-bcb0-4d9b970d261e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a8b41b58-4205-4d1e-af37-e56e21d30875"
        },
        "item": {
          "id": "949e67bd-6f35-4292-bdfd-5b6cedbe8ba1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5521e224-7e65-4921-b923-a40c1e9da3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827da4b-6fc8-42c0-b325-5fa048d3ff72",
        "cursor": {
          "ref": "6f8fec82-3fbb-46c6-bc45-c9dd7cedf37f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "189aaeec-f047-4d24-87c6-119134ac2cf2"
        },
        "item": {
          "id": "b827da4b-6fc8-42c0-b325-5fa048d3ff72",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "65b6f15a-7238-4b11-9c05-0298da9c1c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e5aa93-8676-49cb-8379-fb273d0276d7",
        "cursor": {
          "ref": "a0e796ed-eed6-483d-9683-8c8dbd0fa873",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a3c026b2-0297-4a79-8de3-f87e96e1235b"
        },
        "item": {
          "id": "a7e5aa93-8676-49cb-8379-fb273d0276d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5eba98cf-0e68-4931-9546-446745c5bad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2ba75d-1733-4d71-85e5-ea13cf0221d6",
        "cursor": {
          "ref": "ca42e572-a983-4957-ae11-a09f31da2ec1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43ddf62c-07a2-4dcf-b22a-05cf688e0b1e"
        },
        "item": {
          "id": "4b2ba75d-1733-4d71-85e5-ea13cf0221d6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "52192331-8c6d-41be-863b-9ac5f4d979f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233b52d-d3d5-4311-a3a1-96fa933f7a64",
        "cursor": {
          "ref": "36a2d3b5-78b9-4aba-ac70-2bae2cbb248a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8edc9a6d-8c4b-450e-87d4-f43c94bf6282"
        },
        "item": {
          "id": "4233b52d-d3d5-4311-a3a1-96fa933f7a64",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "64fb3ff3-f864-4607-b585-c33fe92cbde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73dad63-e957-4b99-aa67-8537058402a9",
        "cursor": {
          "ref": "b0158770-1f0a-4f91-a395-3106756edded",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "62c5674d-460a-4ec7-8610-7511c1b78722"
        },
        "item": {
          "id": "a73dad63-e957-4b99-aa67-8537058402a9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "de4da198-1cd0-46af-86d7-c5437c9780a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5954f303-b94a-4944-b919-817bb1be3e75",
        "cursor": {
          "ref": "13842d30-1500-470d-a971-b08e616604cf",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1cebd7d5-00f8-4510-8f34-b0aafaf18d76"
        },
        "item": {
          "id": "5954f303-b94a-4944-b919-817bb1be3e75",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ae0969d7-3471-4b4e-900d-8ce21e57dcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4c6033-416f-4db1-bc69-ed29e993ed73",
        "cursor": {
          "ref": "c1700ff4-c95a-414d-9cb1-5115fb734e25",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0c145277-8dbb-4d69-bbee-a94655b3b47f"
        },
        "item": {
          "id": "ba4c6033-416f-4db1-bc69-ed29e993ed73",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "60575345-a7f9-4a39-8318-6c9011e29483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975d54b-d8a5-4b70-a9e2-30d59652e0bf",
        "cursor": {
          "ref": "bb3d7efe-7afa-409d-9e22-920a1640288a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56683c61-2139-4ca0-ad43-c711dd1f8081"
        },
        "item": {
          "id": "d975d54b-d8a5-4b70-a9e2-30d59652e0bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67a8a333-b9d4-4387-85e2-fa23ef50d8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5d3a45-1292-44c7-ac15-5460298ca938",
        "cursor": {
          "ref": "40d0eb06-1bbd-4e54-b92d-8e594c98bebc",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "afddd843-b26a-4601-8ba3-cf1bd4743a75"
        },
        "item": {
          "id": "ce5d3a45-1292-44c7-ac15-5460298ca938",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f81635cc-cd85-471d-8d6d-f6c7c63ba563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf79d74a-f142-40f3-9218-3c2bccd4e50e",
        "cursor": {
          "ref": "bb9e25fb-3f98-421b-b387-e37683c17806",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d850e74f-bd3e-4b08-afbd-a515a8d189cd"
        },
        "item": {
          "id": "bf79d74a-f142-40f3-9218-3c2bccd4e50e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1e3224c9-1b77-411c-b64f-f0c1097859cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91645d47-26bd-49c0-bf4c-a675bc1194ba",
        "cursor": {
          "ref": "71f6aaf9-8e11-4d93-8901-9c643055fb12",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f3057f85-7c47-4b13-b607-cbf6900d2006"
        },
        "item": {
          "id": "91645d47-26bd-49c0-bf4c-a675bc1194ba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "85da06d9-057a-4547-8c98-fe945af062b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f1665a-d55a-4870-af3c-f5cab5a7da76",
        "cursor": {
          "ref": "90351efc-1bd3-46ca-a25e-59185fb83a2d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0e324aad-d98d-46b7-9395-8a6227ac15c4"
        },
        "item": {
          "id": "74f1665a-d55a-4870-af3c-f5cab5a7da76",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "364788fb-a0e0-490a-b7bd-f8dd80665312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552c0b63-4ca1-4058-9e11-9ff81b870dda",
        "cursor": {
          "ref": "06b21806-dd4c-4f20-bfaa-17d0f2052394",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ab7f7b3d-9850-4652-80b9-f9b8edbf83e9"
        },
        "item": {
          "id": "552c0b63-4ca1-4058-9e11-9ff81b870dda",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7da9e7c7-6ea0-4db3-ae7d-c5923c0f4776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d7bcef-f24d-483c-8aa2-45e796ff161e",
        "cursor": {
          "ref": "f55712c0-a91b-428d-ba54-bad187af7faa",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b6e7ac88-3c20-4340-a0c2-5d0ec3850811"
        },
        "item": {
          "id": "c4d7bcef-f24d-483c-8aa2-45e796ff161e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9c911bec-6049-4865-bfb9-caad57162ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d34b5b-7540-4009-8bb0-a5acf8dc9357",
        "cursor": {
          "ref": "9c887d83-eaa6-426b-89c0-422f70302069",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "642901e9-0bd5-494b-a526-249646bd4825"
        },
        "item": {
          "id": "56d34b5b-7540-4009-8bb0-a5acf8dc9357",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "211fae06-677d-4fce-800c-0725623e34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75662e8c-7fb0-473a-a89c-91a932974e77",
        "cursor": {
          "ref": "658e62d2-3fd0-44df-923d-d2bcbf2cdaec",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3c3c461-5727-4cef-a1d4-218a11b29a2d"
        },
        "item": {
          "id": "75662e8c-7fb0-473a-a89c-91a932974e77",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "baf9bcb8-4e7d-4d3e-92ac-fa1a2f3907b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59690e5e-4c5e-4967-9fd5-2ba3056357f6",
        "cursor": {
          "ref": "9e8165e1-c001-40ce-8347-c35658832f9a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc7e3879-c90f-4268-a09b-fc46de57364e"
        },
        "item": {
          "id": "59690e5e-4c5e-4967-9fd5-2ba3056357f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84b91296-5f63-459e-ae18-36ae9825b527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740d68a4-7faa-4aad-b777-c612f7586af7",
        "cursor": {
          "ref": "8dc4431c-e08d-4c1b-adf7-10be21f57e53",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "188aa335-64d2-44d2-b5e2-afb2b40ed894"
        },
        "item": {
          "id": "740d68a4-7faa-4aad-b777-c612f7586af7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "321aa306-00f2-4aa1-8156-c1b1f9c49039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d5d82a-f029-4a1b-a35a-b91e13188893",
        "cursor": {
          "ref": "18abd590-72dc-4871-b6af-905fc5926a7b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e0320d8c-5484-47c0-bd84-f09ee935d333"
        },
        "item": {
          "id": "c3d5d82a-f029-4a1b-a35a-b91e13188893",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "540deb8f-00e1-471d-92a5-2038488156c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1be0935-f43f-489f-82ca-a8b6d6c84b91",
        "cursor": {
          "ref": "05bcf7f7-7141-481d-8dff-9d9fc556a806",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dfd994a5-6d82-4941-9120-24934d53a4a2"
        },
        "item": {
          "id": "a1be0935-f43f-489f-82ca-a8b6d6c84b91",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2e8e0efb-2c6e-4706-a8a5-d80667c1d069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9629bf80-3d5e-4142-8103-e13ed5b16ddf",
        "cursor": {
          "ref": "be3faa4b-0074-4c4c-80b1-25a2e912f78a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a455e864-9f72-4681-888d-c6c0303af731"
        },
        "item": {
          "id": "9629bf80-3d5e-4142-8103-e13ed5b16ddf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "49e6f058-f6af-4ae1-a63a-49c328e170c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d69e378-7a9b-40c2-ab3c-ca9f3c4bfb65",
        "cursor": {
          "ref": "84a1784d-6a6d-4088-b27a-53ac98df2100",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29102614-aca8-4116-a30c-e95e1a7aab77"
        },
        "item": {
          "id": "4d69e378-7a9b-40c2-ab3c-ca9f3c4bfb65",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b3786c71-1d84-4d24-871a-905ba7821cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a1558f-cb73-467a-80b8-99f0e40947b5",
        "cursor": {
          "ref": "14bb1358-fea3-428f-b27a-0f436f334b90",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de6ffc91-fc55-49ce-9031-80e269dfdf57"
        },
        "item": {
          "id": "79a1558f-cb73-467a-80b8-99f0e40947b5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8d99e90-824d-4b49-8d56-c25cc1710391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb85c7-09e3-4550-9c9c-bf77f0c55c40",
        "cursor": {
          "ref": "5e2d6bb3-bfa9-46e5-9a35-3c4a9824a85b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0aed02ab-f650-4738-9406-bace51e56a23"
        },
        "item": {
          "id": "01eb85c7-09e3-4550-9c9c-bf77f0c55c40",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "df9f5bc3-8ae8-403d-bf5a-fc42baafb92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2418f64d-db55-442f-91b5-99b141c7b2aa",
        "cursor": {
          "ref": "daa30330-ddd0-4048-b790-a63f442b1149",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "228dcb94-6b10-4551-858f-842dcfc4e2cc"
        },
        "item": {
          "id": "2418f64d-db55-442f-91b5-99b141c7b2aa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dd9eddb7-1d7c-4ef0-a157-bbd6d097069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed9c860-77cd-4d13-abed-8c25baa3ff8c",
        "cursor": {
          "ref": "6e1ae451-8d53-44bc-8a2c-adeee022f52e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81d4b7d3-e2a1-4947-ae59-2053891a67cd"
        },
        "item": {
          "id": "9ed9c860-77cd-4d13-abed-8c25baa3ff8c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "17e4c7bb-8543-4941-9591-bb24f47e8121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2379d-2ec6-48fa-b912-02e14ec1c225",
        "cursor": {
          "ref": "6214f595-2a0f-4088-85f2-22fd73a55127",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "daf33326-fd29-4e9c-a9ac-ba0a29aed2fb"
        },
        "item": {
          "id": "6cc2379d-2ec6-48fa-b912-02e14ec1c225",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a455c883-31d7-4159-8335-50cdfb93665f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 536,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07901a13-9276-47ee-9ba9-507245cf7fe5",
        "cursor": {
          "ref": "dd6f42f6-a962-4ece-8499-a5a771d59e3f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6dd8c83b-3f19-4888-b65d-05f3c4b6f3b1"
        },
        "item": {
          "id": "07901a13-9276-47ee-9ba9-507245cf7fe5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1bc8d480-3dd4-495c-b6d6-73719f29e08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c82731-521a-490c-8152-1fb9f6d54bd7",
        "cursor": {
          "ref": "11bbf412-b982-4000-bf44-68af25089dd2",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ac01ee58-c10f-42e3-a1e6-890695065841"
        },
        "item": {
          "id": "e7c82731-521a-490c-8152-1fb9f6d54bd7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bf0eee47-901c-4143-920e-2b0b51e42f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869e9889-19dd-4afb-a87b-a0fca9c504d5",
        "cursor": {
          "ref": "5e189110-cbd2-4c53-98bc-3bdba7ddeeb2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6aae66e3-21da-4a4e-bb3f-0d647623ef48"
        },
        "item": {
          "id": "869e9889-19dd-4afb-a87b-a0fca9c504d5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9b00d9f-0c8c-4d71-bf69-39799969c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6be96fe-bbf1-4930-ac9e-6ef3d03468db",
        "cursor": {
          "ref": "9890d313-4e73-45b2-98d1-ed5572d77982",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "01314675-abfb-4a71-95dc-c41febf9b479"
        },
        "item": {
          "id": "c6be96fe-bbf1-4930-ac9e-6ef3d03468db",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f62cd6dd-ad22-4e03-8759-ba18f784df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491cef3f-28aa-4f91-a5b4-488e669fdc38",
        "cursor": {
          "ref": "f247b624-8476-4479-9c4c-02b07e57bc22",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "44cfb6c7-0407-49b5-9b91-3e1e6a146de0"
        },
        "item": {
          "id": "491cef3f-28aa-4f91-a5b4-488e669fdc38",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8d988219-83af-424b-87fa-2fb6988c69ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88b82f9-5734-44d7-a8fe-e60c8d9b35ba",
        "cursor": {
          "ref": "b64669aa-dacd-4540-a88e-89d05fe8dcd6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f16056af-9339-423b-a1b9-ba787e1e535a"
        },
        "item": {
          "id": "a88b82f9-5734-44d7-a8fe-e60c8d9b35ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a320a920-b168-4169-bb71-da5c1059959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3934347a-78e0-4a40-ba5d-84eeefbed55b",
        "cursor": {
          "ref": "9e733067-3474-4f4b-9749-6c1f81bdc9ec",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e7615eec-6527-4c0c-ae2b-31517b138f49"
        },
        "item": {
          "id": "3934347a-78e0-4a40-ba5d-84eeefbed55b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bb8460c5-c94a-408f-9b7a-2cf1a293be58",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 518,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0390a6de-4e96-4712-bdf0-d4738eed3bba",
        "cursor": {
          "ref": "f212210a-1b50-4ed5-82f4-d0401c208956",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2ab7a7c4-1bb7-430a-b4cd-1bd4a11aa3d8"
        },
        "item": {
          "id": "0390a6de-4e96-4712-bdf0-d4738eed3bba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8a3a4f31-7f47-4472-9e35-07c98e13219f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7bc64-d21d-4f44-b085-62ceeada6b2a",
        "cursor": {
          "ref": "4ad62757-b47b-4891-a532-6e6fab7090dc",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2f0d6a7a-e218-431f-9ea9-b79742ff462e"
        },
        "item": {
          "id": "37c7bc64-d21d-4f44-b085-62ceeada6b2a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e69e3340-0c3f-4abb-a429-b61f688ef092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006c5478-d422-4fef-81b1-a391e2901d90",
        "cursor": {
          "ref": "f175f146-a2d2-4230-8486-28d13abee0bc",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f907ffa2-fc78-424a-b441-6c05a147cbf1"
        },
        "item": {
          "id": "006c5478-d422-4fef-81b1-a391e2901d90",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "85a65a09-e46b-4a81-bcb1-32346f18c193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c359c224-b249-4eb5-9d29-98724c673482",
        "cursor": {
          "ref": "b5a11e03-bdf2-4336-af40-63b00a3eb736",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "30784375-8920-4269-9365-8594934a813d"
        },
        "item": {
          "id": "c359c224-b249-4eb5-9d29-98724c673482",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9087f038-934d-40f5-ad27-96b480111983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b55e50-1435-41c1-9501-e53ddbf56153",
        "cursor": {
          "ref": "1a051960-092c-4c73-8adb-c1030c8f673e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e7882581-dafe-4e1f-a598-25023a425907"
        },
        "item": {
          "id": "74b55e50-1435-41c1-9501-e53ddbf56153",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5e7a2696-36bc-4c97-86e6-78952a4b2c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19d159e-62e9-4ca7-b8e3-4574859103aa",
        "cursor": {
          "ref": "1eed1647-493e-4b0d-a8d7-a22f7e9a97aa",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d0b52ee2-e47f-4c74-b0dd-c130cc72db0b"
        },
        "item": {
          "id": "d19d159e-62e9-4ca7-b8e3-4574859103aa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef4dab31-95d8-49fc-881c-d449225a2636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a612de0f-ea6a-42be-a646-797c7867637e",
        "cursor": {
          "ref": "953da215-bc58-49e3-8b8a-b2a59b88fdfa",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "51cc09ec-acf8-449c-9c93-904c03cab0ce"
        },
        "item": {
          "id": "a612de0f-ea6a-42be-a646-797c7867637e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3fa1c3ea-1313-48e3-bcab-f84266e5bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd11b47-b5a6-44b2-bf80-75f236696338",
        "cursor": {
          "ref": "baeed429-922e-40c0-88a4-ca5e97d10e8b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a703f257-ec64-4755-8111-e6e6f3744381"
        },
        "item": {
          "id": "dcd11b47-b5a6-44b2-bf80-75f236696338",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2fb52a7c-d499-41a4-b3ca-f5dd46cd0d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9bec0-3b20-4980-909b-14d9644cf873",
        "cursor": {
          "ref": "af56f9e0-0f8b-488c-be93-b6cdd3001f9f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4452b3ba-6d4b-4d88-a085-bd4c3ae00014"
        },
        "item": {
          "id": "cdc9bec0-3b20-4980-909b-14d9644cf873",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "de283392-94c1-4b05-a8ba-77ddaac225b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f653956b-f768-4284-8e90-c29fdd603c89",
        "cursor": {
          "ref": "89f3eaaf-4e28-4f97-8706-3298294d125e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "68120fdc-55be-4518-9e76-b63b711430c1"
        },
        "item": {
          "id": "f653956b-f768-4284-8e90-c29fdd603c89",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6923f2f7-6b2a-4636-a83a-8f24ce7dc382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3877842-43b8-41e3-a121-faea6dc4f299",
        "cursor": {
          "ref": "fa0c5a13-0062-4d2f-b6ac-4d17fb638458",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6bb3128-dbc2-4d4d-b2f9-8b4149211a7f"
        },
        "item": {
          "id": "c3877842-43b8-41e3-a121-faea6dc4f299",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0d3a2e75-b755-436e-a4a1-f253a98c8a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f37886-0735-4d9c-adfa-bc36af27c2b2",
        "cursor": {
          "ref": "576613d4-907d-4c11-bdcb-b0e712927597",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "982226c8-3982-4fe4-88a5-ffc26fc475bf"
        },
        "item": {
          "id": "95f37886-0735-4d9c-adfa-bc36af27c2b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "123b7eaa-e827-4858-a95e-d0e2534a3d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d4d9d7-24e8-4c5f-a9ff-9629b53f87bd",
        "cursor": {
          "ref": "fae868b2-ab2a-4f1f-be73-e920d0e98240",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db49cdac-50b2-44f0-9f3f-a76309b82512"
        },
        "item": {
          "id": "b8d4d9d7-24e8-4c5f-a9ff-9629b53f87bd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f983670c-4bc7-4475-9e8e-dbf58fc8c166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed9d45-cc86-4091-afff-d5bc2b041364",
        "cursor": {
          "ref": "c3fcd372-0c6f-48c2-bd5c-b090c353e175",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "32615a32-6523-41ff-b6ad-4464a372fb07"
        },
        "item": {
          "id": "a3ed9d45-cc86-4091-afff-d5bc2b041364",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d33dfcbd-50cd-4521-a4aa-cdf92b4b4f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4769d6-6a1e-4341-b3ac-401fc0141fad",
        "cursor": {
          "ref": "ce48a7a4-345e-486c-9f17-e539faf5df31",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c51c2efd-6982-4541-b747-55ac9e166957"
        },
        "item": {
          "id": "1d4769d6-6a1e-4341-b3ac-401fc0141fad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0edc3f57-80f7-4f16-9b44-f7e296a2ac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a146c85-993d-4172-bafc-f4a6f9592ca8",
        "cursor": {
          "ref": "a2a698a4-2dd9-4ce2-afb9-cf382609d93d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17987534-6eaa-4323-9f9d-8d0c22f92d00"
        },
        "item": {
          "id": "8a146c85-993d-4172-bafc-f4a6f9592ca8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0eb2f3a5-5854-4aea-8b90-6398f39effd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a8605f-d767-4114-8b21-8a2d04113794",
        "cursor": {
          "ref": "e22fbe3c-cefb-4d15-9ddf-18705945f747",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81ec4849-bd02-478c-b1f4-cbd0031fcdac"
        },
        "item": {
          "id": "71a8605f-d767-4114-8b21-8a2d04113794",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eeeb7a01-19d2-4581-8959-55a167cc9e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b59c5f-b25d-44af-b6a6-a0e65132d0de",
        "cursor": {
          "ref": "b428b15b-598a-49ec-9390-d87bf9a8e5b7",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ec402d88-6c01-4df0-b420-8f4c9bcc0c3d"
        },
        "item": {
          "id": "e5b59c5f-b25d-44af-b6a6-a0e65132d0de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7198d3bf-59bf-41cb-bc39-db9f72534ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004f808-229e-4f9c-9966-312a4ec6df7c",
        "cursor": {
          "ref": "abeb2c6a-4c39-4b3f-9b88-b658514aa4a5",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca64eddd-9577-4981-a375-306462125473"
        },
        "item": {
          "id": "7004f808-229e-4f9c-9966-312a4ec6df7c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6bd631d-8e1a-4003-9268-27b7798ed026",
          "status": "Created",
          "code": 201,
          "responseTime": 2170,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "c8ad9c2f-0fe9-4291-92ae-99f14f4dc571",
        "cursor": {
          "ref": "b85e4c87-1d25-4243-9d12-4919145def47",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "08e25d05-8064-4b09-926a-ad07ad4dba6b"
        },
        "item": {
          "id": "c8ad9c2f-0fe9-4291-92ae-99f14f4dc571",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "80d98067-0106-44da-b95f-5b0c39647319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0475f-0460-4347-8c8d-8fb94f3be717",
        "cursor": {
          "ref": "f9e17d96-b55d-4f4c-abfd-44d8f60659e1",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d16daf88-02ae-41a5-8947-3f106e041951"
        },
        "item": {
          "id": "d4d0475f-0460-4347-8c8d-8fb94f3be717",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3b6ca986-7cd4-411f-aa2d-c12dbd263256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c3255-a1c4-4545-89e8-b80ab5d4f4f6",
        "cursor": {
          "ref": "28806ab8-3715-4747-a87b-6c19944465e1",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ebc9993-02ca-43d7-9a5a-a298d41764e1"
        },
        "item": {
          "id": "906c3255-a1c4-4545-89e8-b80ab5d4f4f6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8cf8114f-4da6-4011-8570-49d6e9de6d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c85f2f-b6b2-46ea-af83-93f6ebcf3a68",
        "cursor": {
          "ref": "9c21962d-f3cf-48dd-befc-1bd3c4acaa15",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a6239005-8194-4f83-be44-f6552f29f03c"
        },
        "item": {
          "id": "c9c85f2f-b6b2-46ea-af83-93f6ebcf3a68",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5df86b2d-e11d-4c07-ab90-454692a402c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ba82e-56ea-4104-8af3-5d1702661c43",
        "cursor": {
          "ref": "edb39953-8c4e-4ad0-aef4-b787bd6c6f64",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ebcf28ad-5d5e-429f-8052-eb93943c312e"
        },
        "item": {
          "id": "754ba82e-56ea-4104-8af3-5d1702661c43",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f38309b0-1e4a-4b6a-9c75-cb92ddd8bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473c5c5d-e916-465e-bacf-f26c88aa77ae",
        "cursor": {
          "ref": "ccf64346-b08f-4428-8f5d-07df23244600",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d16a1f63-50dc-4097-ac5c-57096383220e"
        },
        "item": {
          "id": "473c5c5d-e916-465e-bacf-f26c88aa77ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2fd5d120-bb39-4247-84eb-1a6dfbd0af03",
          "status": "Created",
          "code": 201,
          "responseTime": 4251,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "479b8367-adb3-418b-a88a-23150ce3f8ca",
        "cursor": {
          "ref": "98daaa6e-9211-475e-8b9d-f7def0510cf9",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "692b836c-31a4-4da1-b01c-94095335c899"
        },
        "item": {
          "id": "479b8367-adb3-418b-a88a-23150ce3f8ca",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b277ccab-9f34-4659-b1ab-b78df2afe4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dfa526-a9ab-448d-9f5e-145af0db55ba",
        "cursor": {
          "ref": "b297001d-ccbd-42c1-85bb-cc2c66db15e5",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4343c5a1-d978-45f7-b077-909e15ca7f84"
        },
        "item": {
          "id": "19dfa526-a9ab-448d-9f5e-145af0db55ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a57117ce-cf2c-4e33-90ee-b63b7c028974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7c4fd-b5c6-4f42-ba34-1bb5558487b5",
        "cursor": {
          "ref": "c88f77b5-ad9e-4a3c-b454-c1965256271a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b6070e39-5c17-4f72-a50f-d178bc2ce6e9"
        },
        "item": {
          "id": "e3c7c4fd-b5c6-4f42-ba34-1bb5558487b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2570795c-9055-4491-a78c-36c6cab9a8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d1d0d-ec6d-4b51-98d7-22d5f2614e5d",
        "cursor": {
          "ref": "5f000041-0304-4df7-a824-e56149d54721",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "82372e8c-36c6-41a4-bcce-bc592b04252f"
        },
        "item": {
          "id": "aa5d1d0d-ec6d-4b51-98d7-22d5f2614e5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2dd1f730-efbc-4a70-816b-014c91675ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c6436-bacb-4bac-8b29-3ec140e00bb5",
        "cursor": {
          "ref": "e7b3ce73-db99-44b6-bb5b-2189252f1319",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "da7d55f3-b728-488c-a971-f48108682556"
        },
        "item": {
          "id": "a30c6436-bacb-4bac-8b29-3ec140e00bb5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c49ee7df-af5b-438a-8078-ac7ef5a42dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ba6077-154e-4578-8c88-9d08d64ca239",
        "cursor": {
          "ref": "c228791d-eda4-400a-976c-0e1de4672faf",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0757fa6e-24f8-4b6e-8119-3e28a1760716"
        },
        "item": {
          "id": "28ba6077-154e-4578-8c88-9d08d64ca239",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "087caeb7-1208-4457-9a7a-2d7441f1dfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379a62b7-4145-45dc-96b9-71447ba1a14a",
        "cursor": {
          "ref": "545ab607-6c41-4049-9108-64c745591f33",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "15e7f0ed-c364-4752-ba91-eb50cd206aa9"
        },
        "item": {
          "id": "379a62b7-4145-45dc-96b9-71447ba1a14a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "40544bf6-6032-4ace-b898-eb484672af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6725db-d63f-43b9-81e1-e25ea87a8d29",
        "cursor": {
          "ref": "b6585aa5-472b-48e6-a57f-74f90aa91b69",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d9ef0ced-406e-4d9f-a808-a66f3e41c65c"
        },
        "item": {
          "id": "6a6725db-d63f-43b9-81e1-e25ea87a8d29",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bb535ef2-cb4b-4931-b92e-fca85c080b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce13993-57ce-461c-bdb1-fcc020cb711f",
        "cursor": {
          "ref": "4664bb6c-a0ec-456a-b170-d209a61a6714",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c7d0d32-415b-4020-bf6f-10bda2b9c4ea"
        },
        "item": {
          "id": "4ce13993-57ce-461c-bdb1-fcc020cb711f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8dfa6dcc-1102-4c9b-ae5b-d5acbc0587f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0b714-3bf3-4369-85c0-1f3c1c7820dd",
        "cursor": {
          "ref": "b2d83cbc-3341-42e7-b84a-ff3a17767641",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "062adbc4-6da3-4807-b8f5-6aad49b8e308"
        },
        "item": {
          "id": "d4b0b714-3bf3-4369-85c0-1f3c1c7820dd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8c2ccf5b-ce79-49f4-b528-89facf2a5ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227d24f5-d9b7-43e1-be97-843c3c60ddf1",
        "cursor": {
          "ref": "0d41a660-f21a-4778-8ef2-fb204350793f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ce40290-fc79-4ed4-b899-d4ab0806cfab"
        },
        "item": {
          "id": "227d24f5-d9b7-43e1-be97-843c3c60ddf1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "79a7cded-93bb-49e5-a62b-46853eabcf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80cb7cf-b39f-49b7-8ae9-cad8f11b36e9",
        "cursor": {
          "ref": "4f28a27c-450a-4bb0-8f01-87d3e770c4ce",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9936e3be-fa52-44a1-a62b-8fd014ed74d0"
        },
        "item": {
          "id": "a80cb7cf-b39f-49b7-8ae9-cad8f11b36e9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9da53c13-97b6-4bb2-b014-c409124c4343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67edcf72-393c-4760-93db-5a0fcff4cc4a",
        "cursor": {
          "ref": "f8f95dd5-da84-41ee-9722-160377c7977b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "686bf374-0ba0-4215-8f63-072c0784f6e8"
        },
        "item": {
          "id": "67edcf72-393c-4760-93db-5a0fcff4cc4a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "42bbaf12-fa48-4dab-8623-854c76c7013f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e868a3d3-d2a3-492d-9348-04f6efa48ad1",
        "cursor": {
          "ref": "c4951af3-d0d7-42ca-9fbb-30fe6c2975c0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd1516f2-b499-4475-8fdd-784fab60e4f3"
        },
        "item": {
          "id": "e868a3d3-d2a3-492d-9348-04f6efa48ad1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7cf9d2e1-e347-4460-ba9e-38b8770d094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa2000-3298-49eb-959b-fc0629b9aba6",
        "cursor": {
          "ref": "e903e08a-0a04-40c4-ba10-6fac2bfaf503",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f9ee826-7cdd-46e4-98e0-a406f496b182"
        },
        "item": {
          "id": "b3fa2000-3298-49eb-959b-fc0629b9aba6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8bee1de9-f476-4c08-9023-ab8666438fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63391fd8-b901-4ee4-a1da-bb965732578a",
        "cursor": {
          "ref": "080d6f01-3248-4791-ac06-0c132d1311a0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9060b910-51a5-46cf-abc9-d8119af5c69b"
        },
        "item": {
          "id": "63391fd8-b901-4ee4-a1da-bb965732578a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fbe91c33-5e12-48b0-ab89-7ac41f56ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d6ef5b-2816-4fa8-a4fa-558eaa677533",
        "cursor": {
          "ref": "64f0108b-33ac-4ea3-8250-78482bd61661",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "212dadf8-b219-41aa-93b3-2b7ec7ee31b1"
        },
        "item": {
          "id": "c6d6ef5b-2816-4fa8-a4fa-558eaa677533",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35e7d558-e00e-4f3f-b929-0f59f173f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab1ce87-e4db-469e-b2a7-19647b3d41c5",
        "cursor": {
          "ref": "35419a0b-de37-45b8-a5ae-e0361ef42e7c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a49a27a2-4cbc-485d-a13b-562cf50c4e22"
        },
        "item": {
          "id": "1ab1ce87-e4db-469e-b2a7-19647b3d41c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "af474473-e330-4a15-9408-ee2c9f08d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5168f0c-5d8d-4f68-a4bd-a2b541a5495a",
        "cursor": {
          "ref": "03753779-f721-4fad-8817-2c1a224e87fb",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "595530ae-b923-4e41-a071-04c89da6c57e"
        },
        "item": {
          "id": "d5168f0c-5d8d-4f68-a4bd-a2b541a5495a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ec8aa9f1-89aa-404f-9296-7b3d9f4e709d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abedc6e-e274-4885-81e6-4aea03c5bfb5",
        "cursor": {
          "ref": "6f76fb9c-7c75-4d11-b943-7f2e882becd5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "313ca45c-3382-4b40-b079-fbc75e12197e"
        },
        "item": {
          "id": "4abedc6e-e274-4885-81e6-4aea03c5bfb5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1aaabdc1-6b8b-49a8-b6eb-66e857697dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271299fa-7eee-400b-9266-5265ce27ec77",
        "cursor": {
          "ref": "43de462c-5e3b-44a0-8ead-6fdf11d7ce55",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4ed83154-ebc7-4b1f-9531-d1699b9dca5f"
        },
        "item": {
          "id": "271299fa-7eee-400b-9266-5265ce27ec77",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6d0c98d7-437e-4ab8-a534-264fddfc0218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0873c630-1264-43a9-aa8c-24851b457272",
        "cursor": {
          "ref": "30245e09-7d38-4703-b073-c7f2457b6819",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "30efed42-9d91-4cb8-965a-5ea80ca4d5e4"
        },
        "item": {
          "id": "0873c630-1264-43a9-aa8c-24851b457272",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "74feba12-6494-40f2-98bb-2f0461a0d421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f297074-5ffb-456d-b412-276d025276ed",
        "cursor": {
          "ref": "93b843c8-4053-418e-b6bc-758131e16114",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3220a22c-fba5-41aa-a42c-9382ea12293f"
        },
        "item": {
          "id": "5f297074-5ffb-456d-b412-276d025276ed",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "149b4921-d4f9-4a1e-937a-0a0951b1d362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5820183a-17e7-47bf-9902-7a0dbca1f365",
        "cursor": {
          "ref": "de07fc08-3531-4a0e-a7fd-f75d7011632c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78658349-5dfe-40a9-9c51-b32a4aeb3b0a"
        },
        "item": {
          "id": "5820183a-17e7-47bf-9902-7a0dbca1f365",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e35836cd-f02b-45e6-aa3a-0fe008845e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1343589-b299-4370-8a3c-ff99a6bec923",
        "cursor": {
          "ref": "34d69297-6ae8-4b29-97f7-1c121f55b7eb",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06afcada-b17f-4a07-b4ac-80063f7382ad"
        },
        "item": {
          "id": "e1343589-b299-4370-8a3c-ff99a6bec923",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e7776e56-3eb3-4874-90c7-4f69d7963e04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1c2d10-9883-409f-a63a-b44cd6b01294",
        "cursor": {
          "ref": "9ac3acdf-5d93-4dbf-af9a-93fcc2e26068",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "38982069-decb-4632-bf74-b248250a6e01"
        },
        "item": {
          "id": "be1c2d10-9883-409f-a63a-b44cd6b01294",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5f3f10b5-2a79-431d-aaa2-7e99f7823129",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce1056-0904-47a3-9d5a-1ffc9deae2f6",
        "cursor": {
          "ref": "9cdcbfb4-0b1c-482d-950b-54ecd357af9c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "521b05dc-7ed9-4eb4-9a85-c1b08cd25a27"
        },
        "item": {
          "id": "69ce1056-0904-47a3-9d5a-1ffc9deae2f6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9394322c-0156-49cb-ba40-40eaa7202311",
          "status": "Created",
          "code": 201,
          "responseTime": 2150,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b743ff-84fd-4779-acb1-12e98b3c9ef1",
        "cursor": {
          "ref": "a745d8b2-b4b5-4cc7-8698-d2fd4204128e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2a05ba64-8580-4ecf-b1e4-4483a04dace3"
        },
        "item": {
          "id": "c4b743ff-84fd-4779-acb1-12e98b3c9ef1",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "4367d275-c960-49a9-90b7-d02a69810fd9",
          "status": "Created",
          "code": 201,
          "responseTime": 4855,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285f46f2-b4e4-488f-a362-a4a2f5b65941",
        "cursor": {
          "ref": "03114dd3-5a25-43a8-b893-1696fa93d6c5",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6902c199-44fd-4c48-9dd9-7f3310b2f070"
        },
        "item": {
          "id": "285f46f2-b4e4-488f-a362-a4a2f5b65941",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "64013b40-1aad-428f-8603-2f3c0df5fea7",
          "status": "Created",
          "code": 201,
          "responseTime": 2904,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "503e5764-6652-4436-90cf-e3bafd0040c0",
        "cursor": {
          "ref": "ca488303-567a-42ae-8c76-9915bc4ded17",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a09339e5-320a-4b94-bc18-80ac6559d085"
        },
        "item": {
          "id": "503e5764-6652-4436-90cf-e3bafd0040c0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6b3d4bb5-59e3-4168-8ce5-8e457bf940e6",
          "status": "Created",
          "code": 201,
          "responseTime": 1922,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62dd5e3-9a28-4006-909e-c2913e68f25f",
        "cursor": {
          "ref": "96c054c2-ac86-4a0d-8777-b0e68acb3ca4",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0d6a42ed-eb1e-4b00-a122-2d665edb4c3a"
        },
        "item": {
          "id": "a62dd5e3-9a28-4006-909e-c2913e68f25f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd91561f-f66f-4dc2-9490-cfdc428dbcbf",
          "status": "Created",
          "code": 201,
          "responseTime": 1979,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f421b0-5400-422f-89e5-6849ad73328b",
        "cursor": {
          "ref": "13095aee-b479-462d-9e2a-ab06c227b12b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6af133d8-7c9b-455b-943c-93872d5ae1ac"
        },
        "item": {
          "id": "03f421b0-5400-422f-89e5-6849ad73328b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "968d2230-fd0b-478c-890b-b449e16a669e",
          "status": "Created",
          "code": 201,
          "responseTime": 2584,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd5a0f8-928c-4680-9149-da64da6a0d1b",
        "cursor": {
          "ref": "6d715d6a-8a88-4f8e-9a1a-c615ee61ba4d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c4b2716-879f-485a-994a-67cb0b4bc2b2"
        },
        "item": {
          "id": "7cd5a0f8-928c-4680-9149-da64da6a0d1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e2c06f4-ff5f-42c2-95c9-99e08b25772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd5a0f8-928c-4680-9149-da64da6a0d1b",
        "cursor": {
          "ref": "6d715d6a-8a88-4f8e-9a1a-c615ee61ba4d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c4b2716-879f-485a-994a-67cb0b4bc2b2"
        },
        "item": {
          "id": "7cd5a0f8-928c-4680-9149-da64da6a0d1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e2c06f4-ff5f-42c2-95c9-99e08b25772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c11938-bda6-4ba8-bfb7-55cd444f68bd",
        "cursor": {
          "ref": "6e8ed651-6574-4ffc-a115-265f8ae4201b",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "af912adf-0ce6-4961-9cbb-37839d278b96"
        },
        "item": {
          "id": "a4c11938-bda6-4ba8-bfb7-55cd444f68bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3bc3094d-e2f5-4d13-b3bd-ccc727ce5457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db0babe-edf3-425e-a9c5-df5e8dd2b25a",
        "cursor": {
          "ref": "65007b5f-e67c-4610-b6d2-df6990573ee7",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf263050-6e63-4451-a310-5fa429861560"
        },
        "item": {
          "id": "0db0babe-edf3-425e-a9c5-df5e8dd2b25a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ba7ea07-2b71-40d7-8f1e-935a1a4a9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c9ad5c-9b07-4c19-a8c5-e248b6ceed17",
        "cursor": {
          "ref": "581d0f5a-0401-416a-8a2b-aa7a01cc4675",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bee79f37-e821-4c9d-8924-fd59580a57db"
        },
        "item": {
          "id": "d6c9ad5c-9b07-4c19-a8c5-e248b6ceed17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dff9d26a-c77b-4b94-a18d-04df3634e304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66582ed-2ebc-4b08-b605-127d3ddc003b",
        "cursor": {
          "ref": "2ccdcb48-f7a2-49cc-8c70-c062b3570700",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5089b403-e99a-4047-95a0-1989d1ffda85"
        },
        "item": {
          "id": "f66582ed-2ebc-4b08-b605-127d3ddc003b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "17735a1d-e132-4f2f-afd8-5496df12cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d3dba2-1bb2-4f1e-a7eb-b88a0d33f941",
        "cursor": {
          "ref": "b54d047b-3efc-43db-ac94-d134a99d7cb1",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f61222d7-ac76-4bcd-851a-c39d387e086f"
        },
        "item": {
          "id": "16d3dba2-1bb2-4f1e-a7eb-b88a0d33f941",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8add06b5-3b9b-4307-95f6-165356878045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3a05dd-2297-4b55-9126-1cac08bc146d",
        "cursor": {
          "ref": "96ccc528-f578-41c9-8421-5fb934094276",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae96d563-5304-4963-bf4c-689d81714711"
        },
        "item": {
          "id": "dc3a05dd-2297-4b55-9126-1cac08bc146d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c67e7402-b17e-47dd-8a23-86aee4081b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d223792-955c-4fc5-a10c-5ff904ec9579",
        "cursor": {
          "ref": "04bb573e-ce09-43c0-9eac-04eb8c590f2d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab177526-8d40-4699-a417-644cbfc5a8ba"
        },
        "item": {
          "id": "3d223792-955c-4fc5-a10c-5ff904ec9579",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "71dae0e7-a3a6-47c4-8d95-b772782e5167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a75214-d440-4126-9179-e169c2848bb4",
        "cursor": {
          "ref": "a481a890-43d8-4ecc-9504-333194509de2",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7cd43018-9f38-4f44-9bae-45c7d64bcb72"
        },
        "item": {
          "id": "f2a75214-d440-4126-9179-e169c2848bb4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80740086-69fa-4e18-8d6f-c611f0795163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1576ed2b-9130-4a04-a9ab-17a32f275b30",
        "cursor": {
          "ref": "c0a65b84-e88a-45f4-ad1d-d1d224e24413",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "915439cf-fffe-4d0f-b692-b0b84c79c2c8"
        },
        "item": {
          "id": "1576ed2b-9130-4a04-a9ab-17a32f275b30",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "049fc1e8-a9e1-4ff8-bebb-eb9fc91fea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf039a94-7458-4e29-9a5f-968449932526",
        "cursor": {
          "ref": "d6d9aec1-c99f-4381-b6a4-fd0880302e17",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "81dbdb5d-7620-44d6-be56-344095cb3f6d"
        },
        "item": {
          "id": "cf039a94-7458-4e29-9a5f-968449932526",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c76bd8d2-fe5e-49f6-bfa7-33a8f342ec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df229721-7221-440f-a3da-836963063053",
        "cursor": {
          "ref": "08b4af14-a43d-4f6f-a269-ebbdc4985075",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3dfb1d53-0695-4199-b976-6145e3757404"
        },
        "item": {
          "id": "df229721-7221-440f-a3da-836963063053",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de8c1904-262d-4a50-9dfb-fceb500652ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4c1c55-2046-44eb-a840-ffd045ea5891",
        "cursor": {
          "ref": "6283fda7-1749-4670-b725-ab2009d91ea7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3a22ba0c-f1ec-414f-9e60-38b307239918"
        },
        "item": {
          "id": "ca4c1c55-2046-44eb-a840-ffd045ea5891",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "013722f5-49eb-4a1c-a8c6-8ded0090c0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bff872-6db1-4e7e-8ded-3a775216db67",
        "cursor": {
          "ref": "c0360aa6-111c-45f9-8d24-ec8dcaa20a85",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c3b14be4-eb68-44ee-9a4f-5132df2ac11f"
        },
        "item": {
          "id": "08bff872-6db1-4e7e-8ded-3a775216db67",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8894d0f8-029e-4852-9c9d-bf538a28ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c1cd12-788d-4d5c-b89b-8c59d35a1112",
        "cursor": {
          "ref": "e03a225f-0642-4ee0-8007-6e1553d1e2cd",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ec0df332-c27e-4be7-ab46-416eaf7ed87b"
        },
        "item": {
          "id": "03c1cd12-788d-4d5c-b89b-8c59d35a1112",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "861482cf-bf9a-46d3-9072-d03ca07056d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43508308-9fbf-4576-b8b5-8378e565828b",
        "cursor": {
          "ref": "b05e6cc6-d520-4da5-927b-2f35347a4b8e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4694730-6718-45ac-bc69-b4bfa4f52e9b"
        },
        "item": {
          "id": "43508308-9fbf-4576-b8b5-8378e565828b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "00f088e1-2af8-4c15-83ee-85c7a8d240e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce93dc15-f913-48a5-b77f-369d6eadc74f",
        "cursor": {
          "ref": "c35b43a7-b168-43a1-8935-49e2098a790f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69a42074-b70f-4740-804a-161b882ff416"
        },
        "item": {
          "id": "ce93dc15-f913-48a5-b77f-369d6eadc74f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81935ea1-7a0d-44d2-a5b3-24a2a2bab316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b541521-09e5-463c-bb3d-17bc86e7203d",
        "cursor": {
          "ref": "de49cc33-5b6a-4eac-b55d-6283bcf709cb",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c837212f-3fee-40c5-9882-2ebd138b4b59"
        },
        "item": {
          "id": "3b541521-09e5-463c-bb3d-17bc86e7203d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e1e6aadf-8d09-40ce-a613-0b9c4cec4dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6edbdbf-324a-466d-b07b-0c11a33d001a",
        "cursor": {
          "ref": "66c2f02b-efd2-4215-8057-8dfdbb99efe6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3218d646-de42-4267-9011-ee90ae6bb1b6"
        },
        "item": {
          "id": "b6edbdbf-324a-466d-b07b-0c11a33d001a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1cda4a11-1fca-4aee-b945-464dda8d0f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5343dcf7-e766-4acb-87a8-a7444284f58b",
        "cursor": {
          "ref": "b4bd62f0-6fb5-4e99-a7dd-11a56d7e89d6",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "07e5d65a-d42d-4e94-a5e2-3a8db5f69967"
        },
        "item": {
          "id": "5343dcf7-e766-4acb-87a8-a7444284f58b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12263408-a903-47b6-84d3-c2a8c9a870d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab80976-8d9a-49f1-89e2-7ca625c4ef5c",
        "cursor": {
          "ref": "ac62d287-956e-4617-b35c-bcb626f607e1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0ae52d94-f529-49cf-9021-2ff9302c6528"
        },
        "item": {
          "id": "7ab80976-8d9a-49f1-89e2-7ca625c4ef5c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d0b9751b-dd48-4def-93eb-38dcdb527427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ede5936-92ba-44ab-bf15-b101e92c439d",
        "cursor": {
          "ref": "a0ababcb-d768-4934-850f-fd36f7c5e351",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f24a7d88-ef8e-4f13-a417-46acc827c0c8"
        },
        "item": {
          "id": "2ede5936-92ba-44ab-bf15-b101e92c439d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a0cd2368-8b56-446b-bcf3-b43cf8757525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a608a0ab-e5b1-45b6-ae77-eaf49f12c733",
        "cursor": {
          "ref": "eee6581d-6199-437d-95fb-246181e1f120",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "523e82b2-8177-41e7-bb34-47b2bb2aeb9b"
        },
        "item": {
          "id": "a608a0ab-e5b1-45b6-ae77-eaf49f12c733",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5263a82f-3eee-4308-8c46-636e350335e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0de9a2-7be9-4e75-85d0-17f545c99169",
        "cursor": {
          "ref": "6301942a-331a-46b1-b222-aee502336c9b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "559a1183-99f3-4f34-b8d7-35bc6c9aeb74"
        },
        "item": {
          "id": "5d0de9a2-7be9-4e75-85d0-17f545c99169",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e61bf0d-adba-4a6e-b62b-e086a835ef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5211bf55-be5c-4d38-b4f1-d163f392ca72",
        "cursor": {
          "ref": "56ddf642-e966-4dda-9ff7-7eb4b002f068",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e310ab25-2e89-407f-8f6c-23dfc30dcd0c"
        },
        "item": {
          "id": "5211bf55-be5c-4d38-b4f1-d163f392ca72",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bfac67ce-b265-47f9-b901-acac5d7bde71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d42f8c9-4104-46d7-9340-fba8d6d59442",
        "cursor": {
          "ref": "5ec6f35b-1444-4945-b5ff-f33d334538d5",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7c44db64-9587-4d64-bc47-fef42c9c098d"
        },
        "item": {
          "id": "7d42f8c9-4104-46d7-9340-fba8d6d59442",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4db25a0c-7a2c-42c9-8d44-3041b77ca592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b89a9b-4045-40a5-8b05-e12134a2c6ee",
        "cursor": {
          "ref": "a6d2749b-4b0b-4e3c-a3df-c5efaf9e036d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3ebcf801-b093-4445-96af-5bbf0bd474a2"
        },
        "item": {
          "id": "96b89a9b-4045-40a5-8b05-e12134a2c6ee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6fc7f94d-6247-45cc-925c-5c212b2a0d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f66bb9d-f230-4ce8-8915-93d985f8e385",
        "cursor": {
          "ref": "51448952-8488-4f50-8fa1-48800721d133",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "916b9266-0dff-44a4-bc91-b062e5dbd8f6"
        },
        "item": {
          "id": "2f66bb9d-f230-4ce8-8915-93d985f8e385",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c7cefca9-5d21-4d4a-a263-47060c27ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f837b3f-c3ea-4fce-a5a7-37c8047fa6d4",
        "cursor": {
          "ref": "a4d5b976-ff0f-4e06-93d8-735d6a129f0e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cc8dfaf5-7d79-4c6d-a9c7-abe57e4f7398"
        },
        "item": {
          "id": "6f837b3f-c3ea-4fce-a5a7-37c8047fa6d4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "702e5bb8-ac47-43a9-a2f2-32e25cffb4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0480248-36a5-4caf-a411-78dd11bc9eb8",
        "cursor": {
          "ref": "32dbc77c-2557-4c9b-b827-7a7556566339",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c939ec81-5412-4718-9357-145d8223a307"
        },
        "item": {
          "id": "c0480248-36a5-4caf-a411-78dd11bc9eb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "071a6690-4d9b-49fd-8f2e-f7d1e2effe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57219d-b2f5-40ef-89e5-28ea46bbf862",
        "cursor": {
          "ref": "b45f165f-3039-4b81-bbde-769b7440dbda",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "91fe0d8a-7fab-4203-bb2c-fabe89019581"
        },
        "item": {
          "id": "7d57219d-b2f5-40ef-89e5-28ea46bbf862",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a15740fa-25ac-48ad-ab37-f46f9fec53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787a5ab1-8e8d-4c83-acbc-e3d7f1529390",
        "cursor": {
          "ref": "d6909d81-6bae-4aa1-afa2-e02594d3b9b6",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8eb7255a-c4a8-41f8-abb9-63607c807bea"
        },
        "item": {
          "id": "787a5ab1-8e8d-4c83-acbc-e3d7f1529390",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ca555cd9-1380-43e3-a263-2b399084b6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145fa22d-ff80-4c34-8429-6c56c065c50e",
        "cursor": {
          "ref": "323c6b38-d8f8-4ad7-a4f3-c90930918a6a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99bc2a48-db4f-4217-907b-34e103ac0b86"
        },
        "item": {
          "id": "145fa22d-ff80-4c34-8429-6c56c065c50e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ac619f5d-d454-4cda-8099-97e934728230",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee7a14-388a-4d41-9c70-c6dc6d2d1245",
        "cursor": {
          "ref": "efa0cbf8-c8ff-47b0-b2b1-a9ee349739ea",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4b64a2b2-8fe2-4b32-bdef-a19e6277c67d"
        },
        "item": {
          "id": "f9ee7a14-388a-4d41-9c70-c6dc6d2d1245",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c0aeaab1-bd91-45c5-b2a5-3fc29b4f49bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 484,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9bcc58-e463-420f-a16b-41b7ae72e7ef",
        "cursor": {
          "ref": "9bf1059f-b7e6-4dd3-a387-292cf6d14070",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e090ac4-b26d-456a-bf2e-a24470d114af"
        },
        "item": {
          "id": "0d9bcc58-e463-420f-a16b-41b7ae72e7ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "56dce8ce-6ca1-4d18-8577-a28a25f05987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9bcc58-e463-420f-a16b-41b7ae72e7ef",
        "cursor": {
          "ref": "9bf1059f-b7e6-4dd3-a387-292cf6d14070",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e090ac4-b26d-456a-bf2e-a24470d114af"
        },
        "item": {
          "id": "0d9bcc58-e463-420f-a16b-41b7ae72e7ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "56dce8ce-6ca1-4d18-8577-a28a25f05987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6e35e0-c2f1-4a85-ad7c-90f730dc3fce",
        "cursor": {
          "ref": "7332b3fe-2505-4fc5-90e4-65a560adc030",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4b0e97b0-a2b5-416a-b430-ef66945ea730"
        },
        "item": {
          "id": "5d6e35e0-c2f1-4a85-ad7c-90f730dc3fce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6a44a42d-88b8-4cb1-9d89-2647664c2c15",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 322,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "dd1c563d-142c-489c-858c-5c7f4683757a",
        "cursor": {
          "ref": "6e984011-db9f-4209-9b6b-f8ee242d26e2",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "001ae024-65e4-4b02-9444-3e288c5f3493"
        },
        "item": {
          "id": "dd1c563d-142c-489c-858c-5c7f4683757a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3c5e8301-dd94-4a1b-88be-4a1ae240edb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e76ca-db47-4738-a504-f2a769b86445",
        "cursor": {
          "ref": "d0711efd-9402-4005-8813-16ce8b4f4780",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8c38e14e-8000-4278-b24e-def31a9335e9"
        },
        "item": {
          "id": "dc8e76ca-db47-4738-a504-f2a769b86445",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ca4ea5f-b787-4ee0-8bde-294424b5119c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6563a1e1-0c02-4352-9a1b-26da851f24c7",
        "cursor": {
          "ref": "efd08c2e-574b-47ea-9777-48c23f330439",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fe406535-87eb-4433-ace6-ba44d68c23ab"
        },
        "item": {
          "id": "6563a1e1-0c02-4352-9a1b-26da851f24c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5082f614-ede1-4495-b171-9b1806b197b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745124b6-b1a5-447b-b413-14db7f05d364",
        "cursor": {
          "ref": "834e9daa-31df-4fe2-b683-d95b75df3879",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4cd20ae5-e3dc-4a9b-a577-d33a01839261"
        },
        "item": {
          "id": "745124b6-b1a5-447b-b413-14db7f05d364",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e85d92b-51ac-4467-878c-87ee1af35977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b149409-8abd-4a0a-bcdb-c7be56153a65",
        "cursor": {
          "ref": "928245f1-e09b-46df-accc-1956ec9c3d98",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5deaa579-f52a-45b6-b0f3-b62e8ced22ee"
        },
        "item": {
          "id": "4b149409-8abd-4a0a-bcdb-c7be56153a65",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5f9093c3-a0e4-47d0-94a6-f33ac2bb8013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fd3c5e-e705-4d07-a70f-c33370c8a714",
        "cursor": {
          "ref": "4d287cdf-3336-45b6-a05e-e712cfbf650a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3b719288-86a2-4163-b111-20e84d5db787"
        },
        "item": {
          "id": "85fd3c5e-e705-4d07-a70f-c33370c8a714",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e5fe2cc-017f-4eb1-af15-19884466d93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f9db3-41ee-4a79-a2b9-3af7c6579a49",
        "cursor": {
          "ref": "bf3b8610-96f7-4a0a-ae44-d606ec221852",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9e8b1bd8-f0e4-4dee-a5e5-796d707b6b62"
        },
        "item": {
          "id": "4f0f9db3-41ee-4a79-a2b9-3af7c6579a49",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "944e2a41-39c4-438e-9842-70a11bb7e821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ded5cbc-9316-4059-b81c-502e714b344a",
        "cursor": {
          "ref": "6a5bc051-ea10-48db-a48d-d771f990e1c3",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4774a9eb-9103-496e-9035-4b1719828f03"
        },
        "item": {
          "id": "6ded5cbc-9316-4059-b81c-502e714b344a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "acfcd94d-3a06-427e-95f4-5504cd58d9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350133d4-b17b-4eee-b3a5-2acdd57a4163",
        "cursor": {
          "ref": "1d3a9747-c719-42c3-8687-9d38b08bd293",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70faa5af-9761-49c0-9264-964437804fd0"
        },
        "item": {
          "id": "350133d4-b17b-4eee-b3a5-2acdd57a4163",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2aea2ca5-33be-410d-930a-db1c3c5d253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06500fc9-d51f-49df-805b-2f3592e26753",
        "cursor": {
          "ref": "1966c5bc-e769-434a-85e4-b2eee98cb280",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "520a38e5-cb50-4fc4-abbc-f384b431b699"
        },
        "item": {
          "id": "06500fc9-d51f-49df-805b-2f3592e26753",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f4c19a0b-5b14-4641-b24d-327395c339ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0913fb53-9628-4325-b39e-1af37b775023",
        "cursor": {
          "ref": "e95df56e-0542-4c7e-a0a2-75a093718445",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "888b5b1f-4111-44a8-9474-9af43aa372c7"
        },
        "item": {
          "id": "0913fb53-9628-4325-b39e-1af37b775023",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "988f886d-427d-4198-893a-c86fe5fcf333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cd023d-e3b6-46b5-b74e-883954998d18",
        "cursor": {
          "ref": "79d07706-101b-4bea-88c1-0a9b22a3bfba",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e819f6ee-06ac-4b7f-8c32-ba2ded937c86"
        },
        "item": {
          "id": "20cd023d-e3b6-46b5-b74e-883954998d18",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7d69ded5-d478-44bc-a1b4-ca92e792d253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2c442c-43ba-49b4-81af-3f40c5dd0409",
        "cursor": {
          "ref": "8016cc99-81cc-47ef-b4b0-7dbc20984359",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f59dc689-8c4b-4fb9-83dd-9d8532e75eab"
        },
        "item": {
          "id": "2b2c442c-43ba-49b4-81af-3f40c5dd0409",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "33ee3080-a53e-4e31-9e9d-0a4265834e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8724c863-57a7-4afd-8c58-c614b35cbf01",
        "cursor": {
          "ref": "1ba9e92a-8d72-411d-b995-b47220d8c3de",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6039a1f3-b38f-4f1a-b0ef-365fe0cc8a57"
        },
        "item": {
          "id": "8724c863-57a7-4afd-8c58-c614b35cbf01",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "22fa78f5-502c-45e1-a6ea-0b9c267ca181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b365f0-c1c8-4cb2-b4bb-d69392189c2b",
        "cursor": {
          "ref": "c420bc8b-7ad8-48c1-87bb-f17a2b9cbbc3",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ce742830-1643-47ec-bc48-9188414fca2b"
        },
        "item": {
          "id": "c2b365f0-c1c8-4cb2-b4bb-d69392189c2b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "efeea7a8-1371-4bb8-84ad-53eba9ac74d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f05121-ac06-4d33-b4e1-54bdef5c31af",
        "cursor": {
          "ref": "4edbe9d8-b1d6-4f71-91be-d3e9ec458f79",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b2296c13-956d-4960-a6bf-98537ba2fef1"
        },
        "item": {
          "id": "d5f05121-ac06-4d33-b4e1-54bdef5c31af",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "958a9140-ab75-46e5-94bc-7ef6e2039f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f086b6-5dd7-4c96-86e4-5deae6705276",
        "cursor": {
          "ref": "fc6a8487-dda2-4691-88f6-d0aeec6f76f0",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8a63b57-4992-414b-867d-bae19e692320"
        },
        "item": {
          "id": "02f086b6-5dd7-4c96-86e4-5deae6705276",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d65a807f-e4fd-463d-9d47-26ce4709c307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc934e32-7d00-44b1-ae28-43596934739e",
        "cursor": {
          "ref": "1656dfdc-15eb-48fb-9ed9-2dd2f51d5bab",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "65e3ff9d-a288-48fb-96f8-f51d360fafad"
        },
        "item": {
          "id": "bc934e32-7d00-44b1-ae28-43596934739e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8a3b360f-c74d-4a0b-9be8-e0fafb79190c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc54ffa0-8289-4997-9a48-51ad9f042a06",
        "cursor": {
          "ref": "546e2f4f-40c2-4ae1-a3bb-367bb67abe52",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a48f6453-52e0-49a9-95a3-536b14937f10"
        },
        "item": {
          "id": "dc54ffa0-8289-4997-9a48-51ad9f042a06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2663c07c-2338-4e8c-9fe2-4bb1c8f563a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bad261-532a-43be-bddf-a384a805a0fa",
        "cursor": {
          "ref": "79e6f7f8-58c4-49c9-a20e-18116cf6ebdd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "06c78bbe-e76e-42c7-bb98-8c1cef27916a"
        },
        "item": {
          "id": "a6bad261-532a-43be-bddf-a384a805a0fa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1f822af2-fb30-4614-9523-f3c3c328fbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6d1999-664a-4a8d-9301-f316b03e8ec7",
        "cursor": {
          "ref": "c03fa50d-2a57-4da8-b57a-2724e12644f5",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f7b9e070-8c4a-49e2-90e7-154186451813"
        },
        "item": {
          "id": "1d6d1999-664a-4a8d-9301-f316b03e8ec7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cf61f53c-f687-4a52-a930-7e5999a55fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc6b31b-eb34-4b50-b9a4-9cba5c8e06bd",
        "cursor": {
          "ref": "bf2ea691-8120-4615-9815-382bf34d034c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "51ad4514-fb59-4ee6-822b-3264a0fc9c41"
        },
        "item": {
          "id": "afc6b31b-eb34-4b50-b9a4-9cba5c8e06bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6dc28006-6ff6-43e3-bc56-13e317841b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5ead1d-243c-48a3-8365-87acd90d5dc3",
        "cursor": {
          "ref": "918ad0c3-933a-4d74-be17-c5d164a354b5",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "047014e0-bd62-43ce-9238-cc64ab8ef989"
        },
        "item": {
          "id": "1e5ead1d-243c-48a3-8365-87acd90d5dc3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "75e6f824-3289-4896-9f9f-b2a23c71fcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a24715-4729-44ca-bb3f-f06163bea10a",
        "cursor": {
          "ref": "a7623078-2a00-41cd-afcd-dfa8574e0130",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "efe0219e-db92-402c-9e90-d3dfcf0c1b98"
        },
        "item": {
          "id": "08a24715-4729-44ca-bb3f-f06163bea10a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "702db95e-92a1-4a14-a59c-eec7422cc936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a987f5-e598-47e7-a2e1-37051029c546",
        "cursor": {
          "ref": "c08b01ae-a6a3-4f8e-8c21-dcc7dfd5ddf1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d4cfc2f1-20f9-4705-8cce-4b9ef83846aa"
        },
        "item": {
          "id": "c5a987f5-e598-47e7-a2e1-37051029c546",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "24c09401-9342-4408-840b-28c744b86e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834d35a-0b56-4ce0-b4b2-f0d562c3442e",
        "cursor": {
          "ref": "a8f119c2-417a-4289-ba65-0e4ee1958f45",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "87c3c761-42bd-495c-ad54-bb028203b1eb"
        },
        "item": {
          "id": "3834d35a-0b56-4ce0-b4b2-f0d562c3442e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a73f5eb-ecf7-40a2-bc32-a052a0d8f7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32038320-bafe-483c-94aa-7cc0227169c1",
        "cursor": {
          "ref": "5ded06b0-3071-41f9-bcb5-17afdcac5275",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "014b2540-604e-463d-bc97-ed023ae160f0"
        },
        "item": {
          "id": "32038320-bafe-483c-94aa-7cc0227169c1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "218c500b-6666-4245-b62b-a7854541f0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71590d9f-c145-4b60-92dc-41427a607d89",
        "cursor": {
          "ref": "f3f21220-d4bb-447d-84e1-81aa6b936009",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "239bfb2c-9e9b-4cdd-9dcc-a89f98fa0af3"
        },
        "item": {
          "id": "71590d9f-c145-4b60-92dc-41427a607d89",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b6fa4c22-926b-48f9-8917-164438b6e0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2b989-1f8d-45a7-8eef-f9e96247da9c",
        "cursor": {
          "ref": "ad1be83d-aca4-4679-8633-79bca1658574",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8527d74-229a-44bd-804f-e0e53fda5de3"
        },
        "item": {
          "id": "99a2b989-1f8d-45a7-8eef-f9e96247da9c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0f218407-f213-4cb9-a7c3-4a980bbebffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07acfd4-7480-4ad3-9bcb-06e5a511bd92",
        "cursor": {
          "ref": "280b65bd-77dc-42a7-bca1-0a4c14f52e7f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "10291dd6-3904-4509-80e2-f9ba9cf263b8"
        },
        "item": {
          "id": "b07acfd4-7480-4ad3-9bcb-06e5a511bd92",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d355a76b-b17f-45f9-9216-b5384705470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1636e0-813f-4604-b08d-e725113138ce",
        "cursor": {
          "ref": "40db7333-a6c9-4368-a720-011b92157a33",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "603fb51b-ddac-41af-ae19-1fb0991359ef"
        },
        "item": {
          "id": "cc1636e0-813f-4604-b08d-e725113138ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "15ca1dbc-44b3-4879-8405-aee631be8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e35046-466b-46e0-aa92-cb1610a2b8fa",
        "cursor": {
          "ref": "3d634d3e-814c-499d-987b-a52c51becb32",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7675a765-1c09-4554-b64e-13fca2c29b41"
        },
        "item": {
          "id": "92e35046-466b-46e0-aa92-cb1610a2b8fa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9225242-dbbf-4e07-92ca-e84c91afcd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f47f6-c30b-45d0-9540-6b26860ec480",
        "cursor": {
          "ref": "536d1946-c1cf-4f24-8c04-1fc488e61aaf",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "291ee59b-6287-4a50-947f-55b9c688b9f5"
        },
        "item": {
          "id": "432f47f6-c30b-45d0-9540-6b26860ec480",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fc384b82-5716-4473-9e1c-14def0a0b290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dbef98-35cf-4796-9cb9-094bf390e181",
        "cursor": {
          "ref": "978cbcf3-8085-468f-a1bc-35236ecfdcc8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "eb37395f-5670-4093-828f-937a70843e50"
        },
        "item": {
          "id": "00dbef98-35cf-4796-9cb9-094bf390e181",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fa7b121a-446a-4f36-9bf6-5aa997eb4118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c10f38c-abd5-44ad-875e-e3312998a122",
        "cursor": {
          "ref": "9b6d8df1-5561-4b8d-a550-9f9a5d64ba55",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "955bb490-6c64-4e2c-b6a6-be0e0cef2e19"
        },
        "item": {
          "id": "4c10f38c-abd5-44ad-875e-e3312998a122",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "63a6b6dd-8805-4c0c-98c2-99aa8d65b4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79ab61e-50eb-44e8-a4ff-b2efacaa1570",
        "cursor": {
          "ref": "4817c225-34c0-4561-a976-b9deb896c6d9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b5e91cda-a782-4fa4-bb2d-01ec82193f84"
        },
        "item": {
          "id": "f79ab61e-50eb-44e8-a4ff-b2efacaa1570",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9a0f7f2-d963-4c28-add2-58b8349fca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d7a2c6-8b96-40b2-9935-a2ecf876fdf0",
        "cursor": {
          "ref": "65acbc7d-edd0-4fed-8351-a82b1ca1fed2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5d1b2524-e1a2-49b6-96c3-b83c526ee2e9"
        },
        "item": {
          "id": "32d7a2c6-8b96-40b2-9935-a2ecf876fdf0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "19a1e3fb-6332-42f2-9a54-4b212c4cf2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b0d8f5-92dc-49ed-adf5-e1eca35b2100",
        "cursor": {
          "ref": "219ea7f4-fabc-4b5e-9f5b-2928863ac64f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "035bbb13-e9b0-4ccb-a1d1-2ce064c530b8"
        },
        "item": {
          "id": "61b0d8f5-92dc-49ed-adf5-e1eca35b2100",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d44982c-f5b9-4350-81f1-dc2ffb32f9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd66d07-e656-4bcc-986b-b7bf373da07b",
        "cursor": {
          "ref": "b008030f-852e-4e7c-86a0-e1c8b773f027",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa163354-5d03-438e-b534-88182fd64557"
        },
        "item": {
          "id": "4dd66d07-e656-4bcc-986b-b7bf373da07b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "58ddbdcc-4ab9-4ec3-8abe-b652028e91af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85a2312-d264-4796-80de-9ba95850efbd",
        "cursor": {
          "ref": "59d773c6-b517-4cea-a8aa-b8b75913f54a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "595fef0c-8432-452c-a2b8-aa36ef456134"
        },
        "item": {
          "id": "c85a2312-d264-4796-80de-9ba95850efbd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "06be6463-5f4b-4148-8c5e-afe810d2fe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c55179-e961-4b55-8a82-530835347c30",
        "cursor": {
          "ref": "a2caafb3-f58c-4973-b0a0-ece698a49864",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1e97418a-0a8b-43d5-87c8-acdb8f664dcf"
        },
        "item": {
          "id": "36c55179-e961-4b55-8a82-530835347c30",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9c0397de-c460-435a-81c5-3e917aef950f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b00609-0f3b-4843-84d7-a5ecc0419902",
        "cursor": {
          "ref": "65680730-937e-4918-87d3-2e53e92e907f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9cb7f5b9-e233-4332-be85-518357018a8e"
        },
        "item": {
          "id": "83b00609-0f3b-4843-84d7-a5ecc0419902",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9b609d31-d177-4b7b-9580-2792f244f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bc9c36-030d-4571-bfe0-080f662c2ff2",
        "cursor": {
          "ref": "255ecd33-b177-43d5-8066-26d6c601c614",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "68e9300e-005e-4599-8b55-cdf408e9202f"
        },
        "item": {
          "id": "d1bc9c36-030d-4571-bfe0-080f662c2ff2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04f1b095-d90a-46c3-ab43-98859550fe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd0c558-ae04-4bf5-ac5e-8e4e6b4637f8",
        "cursor": {
          "ref": "6084c1d1-af9c-4797-8d5b-d2c444716169",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3b4e18b0-a65a-4ecc-903a-7575a66f9e15"
        },
        "item": {
          "id": "0bd0c558-ae04-4bf5-ac5e-8e4e6b4637f8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "96791eed-0691-4819-b893-b3513acc1615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf3929e-3e92-4d11-9a5d-18083fc8c852",
        "cursor": {
          "ref": "aefa45be-129d-43d9-aa47-da8ad744c17f",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ec8d0e08-c4c5-4345-ae23-b20f99810eda"
        },
        "item": {
          "id": "5bf3929e-3e92-4d11-9a5d-18083fc8c852",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9ec3926d-6eea-4e2d-9e3a-b690bf57dcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122899aa-d04f-4e17-83ac-c68e2af7dd34",
        "cursor": {
          "ref": "435c01e7-ae1d-4f80-9f4e-5fda4e85c38e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0fb93b2b-6325-463d-bf9c-179c972c12e7"
        },
        "item": {
          "id": "122899aa-d04f-4e17-83ac-c68e2af7dd34",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "37b47464-f672-4259-8421-7ab84e1b6d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801abc04-3b77-4f2a-aed6-585921722758",
        "cursor": {
          "ref": "e93bb858-f022-4b60-a2e1-f65779e61cf6",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "103ed981-7993-483b-b1a5-46af34982ae0"
        },
        "item": {
          "id": "801abc04-3b77-4f2a-aed6-585921722758",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c55c4cf5-b8df-4d0f-999c-1b2ff02ac096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61d0e3f-f908-4cc5-af0b-59c89a990efe",
        "cursor": {
          "ref": "45334d6c-5ac3-4d9a-a2db-7830c456f59c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "824fd822-aeeb-4aef-9973-34c34ae2bf84"
        },
        "item": {
          "id": "c61d0e3f-f908-4cc5-af0b-59c89a990efe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "acfe64a3-a8a7-4832-bfa9-4700b498a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93f8881-d38f-4557-8674-84a948e81f5a",
        "cursor": {
          "ref": "540fb335-f620-4549-a3fb-cbbe512cf15e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dc8180a5-d173-4860-83bb-5f1dc0ee535d"
        },
        "item": {
          "id": "e93f8881-d38f-4557-8674-84a948e81f5a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "122e7d62-df35-4400-af29-6a48c56caed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0541d61a-19c2-4010-8b7e-5c09b5225297",
        "cursor": {
          "ref": "398c40d5-bcf9-4489-aa45-24a1ed120375",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "93a6a7eb-750d-4497-984e-8a8053ff3714"
        },
        "item": {
          "id": "0541d61a-19c2-4010-8b7e-5c09b5225297",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a02a9f70-44ad-4ff2-964c-ca6682c9b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e4e214-b45f-4f37-9490-81ba3c0946c9",
        "cursor": {
          "ref": "edc074cb-66cc-44bf-bfe2-c81354e275ec",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "379b6760-346f-4284-ba4a-0e4576dc8964"
        },
        "item": {
          "id": "42e4e214-b45f-4f37-9490-81ba3c0946c9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cebfea19-8474-4a16-a111-4051a7334153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dd1558-daa4-4d85-b930-fecb33d02606",
        "cursor": {
          "ref": "906b9c26-f421-41c5-9ddb-c6b1d5bb1f51",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2de0c198-b9bd-47f1-b525-aa4fe6d93b43"
        },
        "item": {
          "id": "12dd1558-daa4-4d85-b930-fecb33d02606",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eefac135-ca4b-4e09-a8d1-cc10f9efbfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d61248-00db-4c3c-b0ff-1c1643e32c79",
        "cursor": {
          "ref": "08570012-aa5f-4288-b534-a31321304226",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75938cf5-dfc3-41c0-b0c3-dac60d47fba7"
        },
        "item": {
          "id": "06d61248-00db-4c3c-b0ff-1c1643e32c79",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "926f970d-35ea-4e63-bfc7-ae847416f026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4972319e-f9eb-46b7-8df5-20f4879a2129",
        "cursor": {
          "ref": "c2df02aa-7c9c-45cf-a230-fb3cdb364109",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8a7c8ba7-9ed3-4731-8527-fb4ad8546262"
        },
        "item": {
          "id": "4972319e-f9eb-46b7-8df5-20f4879a2129",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "660b0865-cb2e-4f9d-b24c-55a800d8b68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5c5ee6-3c28-440b-b353-3091d9fbd2ab",
        "cursor": {
          "ref": "715c81ad-4012-4354-8b39-5c33541efa53",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3bbde817-1391-4fe1-9a8d-bf755a65c927"
        },
        "item": {
          "id": "1b5c5ee6-3c28-440b-b353-3091d9fbd2ab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7b73b558-8f6c-41c8-ac44-0e259da07e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd674e2f-4b51-4270-87a1-ead2721159fd",
        "cursor": {
          "ref": "0b6a6e76-220a-42eb-b1d9-4e400d02c651",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9750bf71-d292-4c99-abe2-6aa260f01ccd"
        },
        "item": {
          "id": "dd674e2f-4b51-4270-87a1-ead2721159fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7edfcc00-6828-4d9f-a5b9-22367423f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b789d85b-a6f8-4fd8-b37c-42c8189eb057",
        "cursor": {
          "ref": "6e9a6b0b-3b81-46e3-91f5-c8a5fb0279b0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b01132d1-5324-4050-b515-900bff81e7b8"
        },
        "item": {
          "id": "b789d85b-a6f8-4fd8-b37c-42c8189eb057",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5065bc14-866e-47e0-8258-3a707827fab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8a3b22-d485-406f-a336-bc844c596df7",
        "cursor": {
          "ref": "40ebe8b2-c7b7-4d41-9190-ef56acb18d6d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2f350816-679f-4d5e-84e3-97c4ef2a9407"
        },
        "item": {
          "id": "dc8a3b22-d485-406f-a336-bc844c596df7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4d955496-b9a5-4d4a-b0e1-9f882dcbdf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2087ed-59db-4f54-8cce-54e4e25f051e",
        "cursor": {
          "ref": "95c3cba9-2b4a-467a-9146-2aa84a6d72d3",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "754a4f90-9b24-4e4b-ba7a-a03ccaf2e13c"
        },
        "item": {
          "id": "2b2087ed-59db-4f54-8cce-54e4e25f051e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36a41f66-0a20-42df-963a-611fed8d5dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e90256-953e-4189-afbe-cf42a21c6464",
        "cursor": {
          "ref": "a83aa940-6851-42d0-9821-c67eb40c567f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cce6f688-fdbd-4127-9861-388fc2be7fbb"
        },
        "item": {
          "id": "14e90256-953e-4189-afbe-cf42a21c6464",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85132c2a-a6d9-489a-85ea-9fd0fb1a0ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b0e9ff-24d0-47fc-854f-74b0c3a04c01",
        "cursor": {
          "ref": "e2325cf0-2358-4318-bfbd-ac8e038ae152",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9c54a3d9-8b8e-4295-bd82-3abdcacf7d7d"
        },
        "item": {
          "id": "19b0e9ff-24d0-47fc-854f-74b0c3a04c01",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9319cfa0-2dc5-450f-8da9-c5a2751bf700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89017f9-0684-4437-a1b0-5db9b3ed99f3",
        "cursor": {
          "ref": "d2f2e304-e9f3-46b8-a582-4481584a2733",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7b3f580-4c96-4e91-acb2-cc3d5f4e8eb5"
        },
        "item": {
          "id": "b89017f9-0684-4437-a1b0-5db9b3ed99f3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4a1c4fb7-3796-446b-916b-59857f6fb2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd906e1-09e4-4226-bd68-ee86f173b0cc",
        "cursor": {
          "ref": "def1d41a-6d25-4ab6-8557-e4dccba6cd8c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b44cf4e5-7a60-49d0-baae-446ab81adc22"
        },
        "item": {
          "id": "fbd906e1-09e4-4226-bd68-ee86f173b0cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "43be9b3e-4d3a-4dd4-894d-d71b30d632bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f6472-1f96-49c7-ba39-ede6f9bd643d",
        "cursor": {
          "ref": "645a35b3-c9a8-400e-a913-85c2be34ba05",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8714095f-9666-4828-9437-b92b2ffd5098"
        },
        "item": {
          "id": "9f1f6472-1f96-49c7-ba39-ede6f9bd643d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dd6d22d4-779e-4d2c-9178-44f67c93ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b5f9fe-b831-4c05-a8c2-cf7bd73e74e7",
        "cursor": {
          "ref": "d4df7fff-04f7-4614-96f8-c060a05c57bf",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a8bf801e-593c-4d2d-81f7-6d726f045878"
        },
        "item": {
          "id": "d6b5f9fe-b831-4c05-a8c2-cf7bd73e74e7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d20a560-d950-49a1-9a52-8b1b3edde4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e93b6ed-db64-4752-90da-f9a55a18009a",
        "cursor": {
          "ref": "b42ef079-82af-4fc9-9272-a51304d70304",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c23dd6a2-7dd7-4275-ab6b-c962047d13e3"
        },
        "item": {
          "id": "1e93b6ed-db64-4752-90da-f9a55a18009a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e27f97e4-c664-4253-bc00-d61a49b750d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74f21fe-51dd-4b10-a19c-1740ae837b89",
        "cursor": {
          "ref": "e3e22bca-f00c-4c3f-aca3-10d5ae2caf4d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7d70d43f-ef4a-4224-bc3d-aa7a65668938"
        },
        "item": {
          "id": "d74f21fe-51dd-4b10-a19c-1740ae837b89",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5dc2133-c424-4cfc-a41f-da62cd6fef4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac7f784-a16a-4d4a-bb64-bd146e49aa68",
        "cursor": {
          "ref": "883e0af0-2562-4fce-8465-0c3bf4be7a3a",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e1c2bef3-ad52-4a84-82ae-5c07aec7f934"
        },
        "item": {
          "id": "3ac7f784-a16a-4d4a-bb64-bd146e49aa68",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b80832a7-713f-4676-aac7-c9ae95c175ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae29790b-9e7c-4074-8211-fc607e6c3b06",
        "cursor": {
          "ref": "240380cb-e2a6-4dfe-8182-b255175b3263",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dbad2afb-895e-49cc-82c7-b5f52964e838"
        },
        "item": {
          "id": "ae29790b-9e7c-4074-8211-fc607e6c3b06",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1f169c69-689f-43c4-a40e-626226ad1be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae3b857-5a99-475f-b2ad-7d85d54bd9ac",
        "cursor": {
          "ref": "267a2eed-5a8c-43db-b7ac-93bbc3c2938c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bd7fbc11-e086-4a89-89df-35b15e424dc3"
        },
        "item": {
          "id": "bae3b857-5a99-475f-b2ad-7d85d54bd9ac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "91ab8ba7-3ad2-425b-8545-b1dd8cb66dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a79c44-d045-4671-9c65-a2cc003bdba3",
        "cursor": {
          "ref": "071160e6-c746-4c16-9ead-1dc73885d5af",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "95bbe88c-fdc7-492f-a99a-95005691697a"
        },
        "item": {
          "id": "56a79c44-d045-4671-9c65-a2cc003bdba3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d280d280-fc40-4dbc-b20f-ffe9421960cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7b50fb-0e0a-4ffc-986b-0affc5fb7271",
        "cursor": {
          "ref": "c52c6cfc-e9b0-4292-99e3-0e95e079a4ad",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e8012890-bdf1-4fe0-b4a6-6f5d43ae0f4d"
        },
        "item": {
          "id": "ab7b50fb-0e0a-4ffc-986b-0affc5fb7271",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "42cc31ee-2176-413f-8fa9-7949221be5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399bb0e-22ce-444a-bbbb-e914d154b98c",
        "cursor": {
          "ref": "af1edaaf-48e3-4f33-b033-d3c46f0a5b0c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2478a9df-d72a-4a2c-948f-7c13fd9470a4"
        },
        "item": {
          "id": "e399bb0e-22ce-444a-bbbb-e914d154b98c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9021594a-8029-4a47-9198-b0815fd240a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc7b873-6f72-4b14-8702-81d4df47f8f1",
        "cursor": {
          "ref": "16b27d12-7d50-4752-bafc-118dceb7fde6",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "706f3058-84e3-489f-ac02-6dccb9245bc6"
        },
        "item": {
          "id": "7dc7b873-6f72-4b14-8702-81d4df47f8f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4ac1d79b-1dd0-4a3e-a6eb-d56ab536378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814c45b-f207-4811-b4ab-7a125e6b8c10",
        "cursor": {
          "ref": "eb6bbe80-cff9-494c-b4a3-3a86f9695415",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "46a1c841-52d8-479e-8622-c2593f2532f0"
        },
        "item": {
          "id": "f814c45b-f207-4811-b4ab-7a125e6b8c10",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c72dff90-2f82-4e1a-aab7-dd2348eb3171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158b8826-2427-4bb5-8c82-8f06f6b00b39",
        "cursor": {
          "ref": "0bd0499d-f820-475d-8042-b51be107ccfe",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f2e4bf7-52ff-46a5-a72b-65e89e9852c8"
        },
        "item": {
          "id": "158b8826-2427-4bb5-8c82-8f06f6b00b39",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "de21eebb-b9de-432c-a6ed-3a6b9a61dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c244003-a75e-49cb-aec2-9b600b3f5970",
        "cursor": {
          "ref": "1dd2d775-2aa1-4b2f-a07e-c099af9939fd",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f7b7b021-0396-4df7-8ed1-deba1de9e35b"
        },
        "item": {
          "id": "1c244003-a75e-49cb-aec2-9b600b3f5970",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "29fa3dec-013d-4ca9-8838-096f0382e180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878bed1a-50f5-425c-a0ad-f0888c1a86d6",
        "cursor": {
          "ref": "7a3601a0-0fc9-4ce4-a6be-7daa23d8e733",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0a8279f4-ff70-4aa3-bdf6-c86b6c5f3956"
        },
        "item": {
          "id": "878bed1a-50f5-425c-a0ad-f0888c1a86d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e4506d5c-a63b-4d14-8a19-1529ce6c0c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd955551-aa00-4550-9ed0-a03b2148693c",
        "cursor": {
          "ref": "05a092b3-7882-41d3-a9a9-7f13deef9c0b",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "53e65ba4-e754-463a-a8b5-7d40c8d22daf"
        },
        "item": {
          "id": "cd955551-aa00-4550-9ed0-a03b2148693c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "09742cb3-be05-4283-b7f4-2e8fc75e1ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ff3ce-f3ad-4745-b71f-a6a08ab67ad5",
        "cursor": {
          "ref": "2e9568bc-f1f5-4a74-ac84-1b5f2c073af5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a64496d5-9681-4266-8916-a2b3b18b42ea"
        },
        "item": {
          "id": "183ff3ce-f3ad-4745-b71f-a6a08ab67ad5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "933a16b6-82de-46e6-9315-3c10ed90705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70fd3b8-c6fe-48fb-b8c7-2a8a5102a9a6",
        "cursor": {
          "ref": "ab431c6e-7605-4358-a6b8-4aa2b8412b12",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a40edc1c-8d0d-4e22-9274-1deb72babf3f"
        },
        "item": {
          "id": "d70fd3b8-c6fe-48fb-b8c7-2a8a5102a9a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "276a0525-4302-4017-9e33-3da23f8aa99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a181e-6ed1-4553-b2d7-25201c42c8d5",
        "cursor": {
          "ref": "c3bd7d5f-006d-4650-b2e7-5e27adcf254d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6d16290c-65f8-4615-973f-a36f7ba2cd08"
        },
        "item": {
          "id": "fd9a181e-6ed1-4553-b2d7-25201c42c8d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "939c7038-0f84-4c36-9bca-42c0d3ca7785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f5469-db68-47db-bc9a-c5edf96cf9d8",
        "cursor": {
          "ref": "73c1c676-7ce5-496c-9bd0-fd465ba40c38",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2635f6c-942f-4478-8664-bb9fb10117d1"
        },
        "item": {
          "id": "432f5469-db68-47db-bc9a-c5edf96cf9d8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "902eb60d-f659-4990-9f20-3f6694094e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e8f5e0-a6df-4e44-95ed-289556082bd8",
        "cursor": {
          "ref": "2ddb8fc1-7be0-48fa-88a7-7edb01fb7499",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f9bf268-da78-402c-a1c8-b92aa782d07a"
        },
        "item": {
          "id": "17e8f5e0-a6df-4e44-95ed-289556082bd8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c9afb73-e39c-4499-9e13-39aa1b96d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110985a5-867d-4899-8ef4-8188b026d541",
        "cursor": {
          "ref": "c44ad02d-6422-4326-80a8-9d6a5527eb9a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f2acb64b-8a48-40a1-9ef7-383560f4832f"
        },
        "item": {
          "id": "110985a5-867d-4899-8ef4-8188b026d541",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2dd96acf-c332-49f7-8ca5-d77bfddf17b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72c785a-b0ea-4aa1-9a11-310fadae1e3a",
        "cursor": {
          "ref": "3ec8f83c-b26c-4033-bc56-a045c9ab752c",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "19a4c20b-319a-404f-83a4-672c282aeb94"
        },
        "item": {
          "id": "d72c785a-b0ea-4aa1-9a11-310fadae1e3a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1f6ca08c-2cdd-4a95-a973-1d6ff073740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8499ed18-e4a7-4322-aad3-8366f8434fc7",
        "cursor": {
          "ref": "746fdff8-674f-4726-bbb3-6ae90dc96648",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd696f69-cc8a-4f5f-8aee-a14e70959d0c"
        },
        "item": {
          "id": "8499ed18-e4a7-4322-aad3-8366f8434fc7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8e26cfb7-66b6-4897-b9ac-19a6542e84b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b95ee93-879d-4f38-8dfd-c348b9501b6b",
        "cursor": {
          "ref": "9bed8dde-af6d-4384-be5c-00dcb0285d76",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e8ec6e6-c335-4f21-a63e-3f5125dde920"
        },
        "item": {
          "id": "8b95ee93-879d-4f38-8dfd-c348b9501b6b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b95e0fa5-9ef2-4e2c-a3d1-13d3a506a516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb61d08-c40b-4a94-95cb-f921d8011550",
        "cursor": {
          "ref": "256fc073-36a7-4eea-9412-a450e4d9f3f4",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e000e834-67e1-4dd7-951f-1c2983dd5220"
        },
        "item": {
          "id": "afb61d08-c40b-4a94-95cb-f921d8011550",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "00722b80-3205-4b75-a043-30d4abbd0667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38641e0-f7c1-41c3-9d3e-4aaa21a5fdfe",
        "cursor": {
          "ref": "cd14cc34-2b3e-4a99-88ea-1cef2287a919",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd40462b-54f2-47cf-906f-654c25c8410b"
        },
        "item": {
          "id": "a38641e0-f7c1-41c3-9d3e-4aaa21a5fdfe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ac789a8b-58c2-453e-ad30-ba951a34a247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b96e5-7cbf-4950-ba5d-3f9da0ec7b07",
        "cursor": {
          "ref": "161d4479-0119-4977-9361-9ce845ba1021",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1bf22478-246e-4627-836f-b39c0bab802e"
        },
        "item": {
          "id": "b49b96e5-7cbf-4950-ba5d-3f9da0ec7b07",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3a713113-7057-42c7-910b-8d612c97a8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca1b02-1bc1-4967-a2ea-de8e2d314a9d",
        "cursor": {
          "ref": "d558f146-c3c9-43e1-a3da-c3c3b62918ca",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1361e6d9-4a7e-4449-8e1d-1505cea3c53c"
        },
        "item": {
          "id": "c3ca1b02-1bc1-4967-a2ea-de8e2d314a9d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "04dfc964-87ea-4e43-8f32-1884667e636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075e4283-e005-4b3c-b913-ab13e4cdffdd",
        "cursor": {
          "ref": "852bf9e2-5ac7-4f6f-ab56-35d849885918",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee81d72b-a942-4986-9333-82ebd584acf8"
        },
        "item": {
          "id": "075e4283-e005-4b3c-b913-ab13e4cdffdd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ec15388-8f3d-46d7-acc1-50c77fb14580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fab9fd-e298-421c-902c-cd58830106d6",
        "cursor": {
          "ref": "52bcd854-3f40-4594-85c5-115d65253da5",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "07615ed8-89bf-417c-8dd2-dd241deb1f46"
        },
        "item": {
          "id": "89fab9fd-e298-421c-902c-cd58830106d6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "228b91f3-9a41-4e73-9c79-f41560426980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59354b2-dc99-4442-87c4-9eef0500299c",
        "cursor": {
          "ref": "e934ec4a-e638-469f-ac7f-9d169ab3a2c7",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4e3cd1ed-1323-4a42-9f80-02507fa13b3f"
        },
        "item": {
          "id": "d59354b2-dc99-4442-87c4-9eef0500299c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cfc65a60-aaf0-4aa5-8b13-cbbca75192bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b57ee4-3f34-4f4b-8e59-53db3a41d4c4",
        "cursor": {
          "ref": "6bf9903b-25ea-44d7-862a-957c073b9cdb",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a0ac268f-525e-4e64-80e6-8d7cc73603eb"
        },
        "item": {
          "id": "54b57ee4-3f34-4f4b-8e59-53db3a41d4c4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4b68a127-112b-4396-ab41-870f6de8afe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4172f3-214f-49f7-bdf4-9de7922580da",
        "cursor": {
          "ref": "d3b47d05-39f1-439d-8e17-cba99f497e5f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3a1cd47e-0089-4b4b-b37b-e064da2f039b"
        },
        "item": {
          "id": "6a4172f3-214f-49f7-bdf4-9de7922580da",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "42f8bc0e-d783-4358-a51f-61db3b35c2f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 232,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66740f68-d7d5-4d96-964b-ac05bf7a7255",
        "cursor": {
          "ref": "39c5af17-c592-4a82-8065-f06573a110d8",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "27a14a42-0acc-446d-96a6-953b31c9c80e"
        },
        "item": {
          "id": "66740f68-d7d5-4d96-964b-ac05bf7a7255",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0cc34609-e1c9-44c1-a1d3-35d7532f5265",
          "status": "OK",
          "code": 200,
          "responseTime": 489,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327c696b-1a28-4347-a6fd-e6bdd85b1948",
        "cursor": {
          "ref": "3204dcce-ef8f-4145-ad7a-4fa0e4d4b965",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "98918c7a-c196-4da8-af71-e0a64e8e71a9"
        },
        "item": {
          "id": "327c696b-1a28-4347-a6fd-e6bdd85b1948",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "f67dff5a-ddd8-4a24-857d-3eba0e0f45ca",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a73cbf-756e-45b1-b74a-d1e54009d488",
        "cursor": {
          "ref": "351ae266-0824-471b-86f3-8768d7715da0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "25480238-d6b0-4aec-a275-600cca68cdd6"
        },
        "item": {
          "id": "c3a73cbf-756e-45b1-b74a-d1e54009d488",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "37b4afa1-ea75-4dad-8c30-9eb78dc52f6a",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975887e8-ddd5-4426-b992-b54253b27faa",
        "cursor": {
          "ref": "f000207f-b76b-40b6-9a16-06831b58ae92",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fdfbd1bd-3a04-4626-a7da-ef8a14940efa"
        },
        "item": {
          "id": "975887e8-ddd5-4426-b992-b54253b27faa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5797b7b1-93c9-430a-9905-556bf2255183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975887e8-ddd5-4426-b992-b54253b27faa",
        "cursor": {
          "ref": "f000207f-b76b-40b6-9a16-06831b58ae92",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fdfbd1bd-3a04-4626-a7da-ef8a14940efa"
        },
        "item": {
          "id": "975887e8-ddd5-4426-b992-b54253b27faa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5797b7b1-93c9-430a-9905-556bf2255183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975887e8-ddd5-4426-b992-b54253b27faa",
        "cursor": {
          "ref": "f000207f-b76b-40b6-9a16-06831b58ae92",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fdfbd1bd-3a04-4626-a7da-ef8a14940efa"
        },
        "item": {
          "id": "975887e8-ddd5-4426-b992-b54253b27faa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5797b7b1-93c9-430a-9905-556bf2255183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fff03ba-9970-4e26-90a9-77bf48beb506",
        "cursor": {
          "ref": "4edc0a03-68f1-4678-8d85-463e886d151a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "226cf520-5e97-49f8-a05e-2a2e8aa41d70"
        },
        "item": {
          "id": "1fff03ba-9970-4e26-90a9-77bf48beb506",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9666bf25-33fe-4e1b-8047-7af62942573f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 678,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4c0ad-74be-4494-b3ef-2ee0b9dae6df",
        "cursor": {
          "ref": "5d87706c-11cb-425d-80b6-d7aa527d3140",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fca5de37-9a64-4203-a9c6-6c38b3281eb7"
        },
        "item": {
          "id": "8ac4c0ad-74be-4494-b3ef-2ee0b9dae6df",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffc86fe3-7011-46fa-91d5-2841f12477ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4c0ad-74be-4494-b3ef-2ee0b9dae6df",
        "cursor": {
          "ref": "5d87706c-11cb-425d-80b6-d7aa527d3140",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fca5de37-9a64-4203-a9c6-6c38b3281eb7"
        },
        "item": {
          "id": "8ac4c0ad-74be-4494-b3ef-2ee0b9dae6df",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffc86fe3-7011-46fa-91d5-2841f12477ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67d9f99-ca8d-47e0-b835-9c4df2f7654e",
        "cursor": {
          "ref": "ff527358-720e-4cd5-8925-30a12ea05d3b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "382e5d70-37e6-4d4f-8286-02cff75201ba"
        },
        "item": {
          "id": "a67d9f99-ca8d-47e0-b835-9c4df2f7654e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f5e89a47-ad0d-45d7-9de4-095cedbf5ab9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 999,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db460bd3-da46-41ea-ab36-7652d8c206b6",
        "cursor": {
          "ref": "be40090c-96b0-4120-b4f3-925f46835677",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dab7793f-e39f-4006-ae8f-8a92b767378d"
        },
        "item": {
          "id": "db460bd3-da46-41ea-ab36-7652d8c206b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87ad3192-88a8-4a7b-8402-a31190b1bf25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db460bd3-da46-41ea-ab36-7652d8c206b6",
        "cursor": {
          "ref": "be40090c-96b0-4120-b4f3-925f46835677",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dab7793f-e39f-4006-ae8f-8a92b767378d"
        },
        "item": {
          "id": "db460bd3-da46-41ea-ab36-7652d8c206b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87ad3192-88a8-4a7b-8402-a31190b1bf25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c516b3-a92c-4ee2-9558-4e887ff5bf5d",
        "cursor": {
          "ref": "daaa1ba8-0b22-40cf-b4a5-b61c863d74ab",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "39303a2f-5a2f-499e-a919-935ed9a0ec9e"
        },
        "item": {
          "id": "23c516b3-a92c-4ee2-9558-4e887ff5bf5d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "eaaa9209-8270-4587-b7ce-b58cf142efd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1228,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}