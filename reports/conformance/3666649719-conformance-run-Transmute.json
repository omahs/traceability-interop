{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7e2a8735-203a-4a42-8b9d-46fd661d41eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "787483f7-2a82-4d39-b607-b479b27edbc6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e4d3242-97b8-4d77-809d-ea350d2395a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7a1dfa14-23ec-4140-8672-a062debd5822"
                }
              }
            ]
          },
          {
            "id": "a1e3c3fb-bcaf-40cc-9d3d-c274d4531495",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65699c32-c8ad-44be-8842-4f4eedeb1a3d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b73ba626-2b9e-401c-943e-0188eb2dac67"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "827a4493-c220-461c-bd79-45a671611eb9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1f20315e-0bda-4d9d-815d-15488d90aafa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f427edbf-b2b3-47cb-8677-9418d236135f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39f9f2f7-8f21-40e0-9bea-60caad1361cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df29edfc-5b34-41d6-9f6d-b092ede03301"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d7f6126-20b0-41df-98f3-ef92bbce575e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd831690-7b47-4ab6-9ac8-2a3d6f84ae3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26949f21-bc25-4477-a38e-02f4b4481c71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7b8e5ae-3c55-442d-a2d4-c399f3b5e801"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ed1a130-7256-4223-a21d-b69b3a09c648",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96646f6d-efa5-4d7c-b5b4-92e86e9ce1db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "460d0b1f-e479-4873-b35c-9514078c6b72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29f55e0c-790b-4c59-9319-14abdf75f8ea"
            }
          }
        ]
      },
      {
        "id": "5b62af23-0dd6-4a72-8271-f922337a21db",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b537fa53-5883-4cce-804f-123afe6ff658",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0daf5457-511e-404a-99d2-e65c19796913",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d3368ec-9899-45a7-a810-e23756bac598",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7fd0ea-4e54-42ff-bb50-8ad1c685b41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57b612f5-8684-499f-886e-813e346abd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fff22e5-3bec-47f2-b0dc-11a62234946d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f559cdf-ac9a-4639-a94f-d31cd64f4b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1bc3782-6498-413d-8c2d-0b624eeb7bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66465bf7-afe8-40e3-af62-b414f607b1e5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a0684b-0f7b-4e5f-b5ce-d15420ff40ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25705725-a592-4231-95fe-3763a3c55b19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fef512a-0e30-40ee-809d-72261fd4fa62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10a5752d-4537-49bc-9eca-529a794d9e2a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e41a2-3251-4f8c-974c-63b9c7c82e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1390195-ab60-45c9-a7a8-50c23db631b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affdc3f2-07bd-4916-83c9-2b712b8f1b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4601fcb3-3c55-48d2-9691-8c32d25d3e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22fffd-201b-482c-bdc3-02f2bed6b49f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884539a3-22fa-4d25-aa8f-79eda0a159b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8528754f-8a18-4984-a389-c5fd272420ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7b23ba-e58e-4c04-a865-fcafe88bf0aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c4b25c70-3349-488c-8695-bdb4964d9b5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61671bb1-63a3-4e25-ad7d-0857d5f8f95b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "343cf46e-5f93-4e75-9dea-f82d8146129e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4df7081-fe16-4105-ad56-098dff9c530f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "80eb91e6-55e5-47ea-93aa-fac51f9c4e82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2eb84f3c-57ad-4955-a2ef-8757d931d2c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a80548eb-a1f0-4f2d-ac35-be032d2e2959"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a67f376a-1958-4057-9578-d629f61ce5cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e3ef77d-81d8-418a-8923-846623db8c86"
            }
          }
        ]
      },
      {
        "id": "de4d2bcc-aa93-40c5-b0c4-8ed64c1f5d3d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b9223d29-618f-4c75-82a2-686eaabd91de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fec53c76-7cab-4f68-89a7-ed1d1471a293",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9aac619f-3d14-41c7-8a8a-d298f01090aa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c6c65f-4207-41d7-928a-3ea5b0dacb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8469fb5-a1cd-4ddc-8574-b5de79695ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432e68e9-4cb0-42c9-9d9b-f361c9813556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87092850-ab9c-4c16-80ca-afedfb15c0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f8fea7-0a12-467d-8c2c-0f077099adb2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b951059-f766-4793-9878-50f1d82e0c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe1a579-c51b-42b0-9813-5bef5ee44fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd23026-9d7d-4c9f-878b-fa6be9b6384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "431181bd-572e-45cc-9450-051e99b260d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aec14c-a418-4ff8-8a30-924dbb35ae81",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af0bce1-b0a0-42bf-b1fd-46fb5ba78109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af43178-7016-4640-9958-25356f6724cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80acf033-f5c6-4575-98fe-095b07be0580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d95840-ee93-4ab8-a1a8-744d65e84673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa87027-9d76-4d4f-b62c-9a9a9f243215",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bce433-c674-4ed0-a4d3-a6f03c4aa298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af987dea-3181-4474-9787-481d52d46ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35395d-4fd1-4376-b56c-31241396ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c61c239b-8ed2-4a86-8efc-3015a961bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ed2f89-a5d7-4ead-938f-7c81b07f619a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac0e59-c8b7-4c82-9171-02f5bc87fe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a795fb1e-aebd-4ac7-a04f-407fdeb0619b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb9887c-ed24-4249-9af8-e5801f71ef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cd805c1-49d7-4158-b78a-2292aea82515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8708903d-3f3e-428d-85f9-798924378016",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fe1f46-c2bf-4bb5-a60b-f187ab2efd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5054051e-99f1-48dc-9c1b-736f867e5a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7029e54c-c0ea-4e1a-ba3c-1b7e719ec1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e9f2305-b9fc-4aaa-990f-4f2476cd87fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972691aa-537a-4b4a-9217-d85fe9a695f2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b6f897-d1db-4eb7-b102-14e5f2912558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b58ee4-c12a-44ad-b95e-4fbbe5b4b1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0099604-ce98-47ec-b03b-f68bcf9cbcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a355e5-5eff-46ba-ac93-2340bddcb260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650856c9-2844-4661-8320-6199cd6053ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0114fe70-33ed-4b30-bcdf-53b53edd379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d37845-3cc8-47e2-b8db-5abbaea9e813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511eb429-161f-490b-a422-5f2d0fb2c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65548394-4c45-4691-9237-cc7a96600500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad90803-a4ea-43f0-9420-bf34cdcb504b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c93198f-6e32-4506-afa0-b500d4318e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31f691c-eb92-45ef-a499-c03fbb35c836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc1ae40-00fb-403e-b510-55f5f6ea443e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b783d1dc-0739-487d-af7a-b72d3e545ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721b319-f291-4e00-8d64-bcb2f41c6ed9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f0bb70-4945-4912-9828-68ac285b4374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7306d607-aeb8-4242-9382-b879b330b9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86536ac5-6a38-4584-ae11-a14013441f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf6384ef-08e3-4d6a-b675-ee3b022dbfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78653d40-9629-454f-9cf5-0ed0355560c7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e24bcd-9213-44f9-bd2a-976bd6ec9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cddab73-32e8-4842-b7f1-46bc0131b85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8da9d7c-c74c-4d40-ba28-663ef529b7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6353fa5-881a-4bf3-934a-37fc478a2064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012ef412-fc24-4acf-ae9e-c35ab788188a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50ad6d-a7cc-4704-8886-ca15e2841793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61fc719-0bff-4be0-84fd-901eb5148967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b2a27f-542e-4b87-8db8-d9714da83ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ff91fcf-6aa5-4532-8bdf-e425bcaecf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ab10c5-9ade-4b9e-9eac-758aae4cfd4c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7d7c1-f176-4adc-aaf9-9b594acd1447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e531f19-605c-42ec-9f5f-545a30b7e470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6580c1f1-b32a-462a-b9f6-a3ab7d6f0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdddfb12-bed2-4fc8-acc9-c7bcf55ec4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41bfb41-af43-4c8a-917d-ca60a90c1677",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27d06f-fed1-444e-993b-9d1e1a2078ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631966b8-3f95-4b1a-b776-464e9134dd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911c2a8f-ea9a-4bf3-a401-3e0df690b2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e680720b-af63-42f0-8d6b-0cd33e7bd6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a00218-d9d6-4c28-b834-1bedd671936c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e554d5-e618-4e4e-b035-fe3793b2fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d90f8f-20fe-4988-a7c3-fd8a35aa49dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457d4d23-575a-4318-b770-fe144d7f7919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0584bdbd-d7ee-4a08-958c-e3348769d438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac13959-3047-468d-8885-9084aee53600",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ac5046-3465-47c7-b191-d6a49f6d8257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060194e0-493d-4a2f-b92c-4c0a567fa268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda6ab28-8282-4d71-99b9-453c562374ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3eaeef-34d0-4b13-a268-07d68bc6b362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e31768b-57af-4dac-8d70-448e85bb9833",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028bd951-fd42-498b-89a7-c508cdf46649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03f9384-39f1-47bc-a096-a52081371f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa50ab09-5d84-48ed-956d-85b949536c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b34cb8a9-dedf-42da-b6ca-64250424ffde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09aaff5-24d7-41b8-be1b-a821658f3d76",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6027d11-35ff-4ace-930d-91806a3f7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb51908c-d10e-4e92-8129-fdb1f0a1f0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da48946-ffac-4d15-8194-4ab720d00807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba94112-fabb-4f79-93cf-deadd4069085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416c5113-d198-47cf-a821-6019859f7ef4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e83286-c80f-4fb6-a110-63922336258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad747313-250d-4bcf-a4dd-4ba9e2fe1ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c2e496-9712-424d-a94b-8f95372e9a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "342ba8aa-dba8-4c3b-984e-975ca537c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13200c5-2623-4ef9-85c9-a61ef80beebc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcb04da-68fb-4c48-90a0-f374f823a48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a9ad1-0649-42b5-ba1f-bef075d44db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad2a3bc-f666-409a-a663-9da394d015bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc63231b-c6cd-44dc-bf18-8c28efda5591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af28250-46a0-4281-8ba6-69485e6dbb9c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db66af12-20ef-486e-8c45-783eb05490bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b338a54f-b4ec-40f1-9078-b6a6166c68cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147d69b-f37e-4bd2-b74d-3213abf7efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb2609f-8508-466c-9e1e-43aa950163e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495af77c-4fdd-404f-b452-9d1762ec22d6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c371a-7a54-48da-9a6d-b974e95691a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729c1bda-3ffb-4ce5-b660-1b2a24583aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a56aa7-f0c5-4557-8128-f794b0e516d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6a61e5-8940-4860-8eec-404c7667b0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e5cc1c-45a8-4a42-933c-959835b46ee6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d939fb4-36a4-49e4-9190-7d6f04a33277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7a734a-5130-4094-9a30-4ead2f8fbe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0407154-c29d-4db2-a531-3869eecdf3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07d29a0c-d9a4-4145-b163-52851133a25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be884c-1b08-47f0-a09e-08d968d11678",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981f5412-8157-47b3-ae45-5c9283b1042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2dca23-4e43-420a-9dd2-ef248373c89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec7defa-8af1-4f39-beb0-eade267a922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edf6d38-e6d1-4758-90c5-4a72d3ad25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80afcdf9-88c7-442b-b997-fafe6fc820c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b5eefd-663b-4c36-9e01-affdd3d8f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a93458-1153-4109-9674-41c26cb4afba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6bf965-c0ce-4157-981f-b2cb6a8c9492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "669e0a0c-1a15-4b3c-ab7b-34b160ae9ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78430e5e-9fa2-44bf-8498-187199275766",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78acdefa-565b-4265-9ae3-8e0827fc540c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b5688c-02d5-4825-9186-122af718e86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26195f-717e-4cc2-98ae-f07f8be7d400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0efc60-81ad-4227-ac38-093fb19810bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052e8661-5df1-47d7-b04e-38bc27d2fbb5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe7d16-2d04-4f20-9440-d254ae70e621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3577970-7ba2-41fa-96a4-34a1a8133579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec3d8af-0997-4f04-813a-56f9bb9c2258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ac2b81-2359-4215-af64-c05ef0ba18d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2e4c43-b3d0-4d44-93ad-c2c43f281b1d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe06961-8009-4f14-a78e-11e12e43238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af3a075-7681-4e5e-80b2-e7cefcc25877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6635a7c6-7b6b-41ac-ad3a-4b75cbe3c52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dba3a4-1acc-4902-b25e-e99233c64cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252b80a5-dbcb-485b-8f52-742fa92f8337",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5edaa8-2d0d-407b-84d4-bf2178ba9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3260229-c615-4314-9539-ff379ffcc826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22200a3c-5856-495f-b1d2-7133ca672040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fafb6a-c9f7-4901-9240-4d8cdbf4c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523017d-672c-491e-99e9-c5745e6cc51f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520a69e0-d085-4477-84e2-97d391b7de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d47a75-a5ec-4eeb-b071-713b6eb3833f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4cc0b-b971-4676-89d4-116e67a45bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f004e904-44d5-422b-8e7c-3524f73b0180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaabecdb-edc2-408e-884b-1618b1c2889d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600f4de0-ca4e-4994-9759-eacfa31d7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c800d6-41b0-4732-924a-af13d512dfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87539103-c705-45c2-a5f0-f2a654e7ccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dee20fe-ed17-4e35-baba-3a23c17aae32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b4a065-3af6-4798-ac92-7b6dfcf382c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf33665a-5998-4da9-ae8e-6416d619cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb1736a-6102-4d4b-8267-e86e719fa97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4103d40-b8c1-48ed-a271-2c0d700abfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabb39b7-c601-44bb-b448-78bec84daac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d718412e-0464-408f-8f2c-a6a86925fb44",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d86927-6f6c-4a05-9bd1-1d7a78b0686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9ec73b-eba4-4fdb-804b-ae42fdcc38f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1168ad3a-1bdb-40ba-baab-faa8b4cd7dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcc784f-605d-4cc8-9d60-e76fef5ae3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8192d52e-329e-4772-8ceb-a141c05713b0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9133af-edcf-401e-924d-191f4b0b633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1204b865-4b06-4e83-94f7-58da6de55222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7214bae1-0566-4c2f-a0fb-19afa37e4289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61337137-7752-4e08-a2ab-a7eca5dd8694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6057c4b4-fa3b-40bf-874b-d91a59bd5198",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faca1750-62ba-4c56-bdfe-0fd2c38964e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095fb300-6392-4d38-8b9c-84cc72403255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8b6826-d296-4b18-847a-296a59bd67b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8209e5-f88b-4baa-aa48-c7f8b49a19d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeb5f7b-f5f1-4fa4-9884-4760c52a1866",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c0c73-d92c-4108-ae48-0b16a5183af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfe2a810-4ca3-4dd0-b0f3-ff0cc470e6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0deac6-c5d3-47bd-9ede-4fc257fc3db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fff8425c-6139-4ecf-befd-a3484fa7a7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cada91c-2fec-4a7d-a5b8-f690254a17f7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3572d3cf-0992-4caa-ae57-e3cb0a045e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903d5a30-65b0-4d76-8c95-9b66e7f5acbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331d191a-5d53-49c9-8a0d-ecd1a6eb0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c825ae7-0140-4372-bac9-a113abd899ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49172c3c-ae72-4c61-91f4-bd1fbf1447a7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08cd006-73e9-443e-ad75-e56ef9b0f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48e3653-b8e5-4efb-8959-080f4bc6ab01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b71c6b-b537-41bd-b9ef-9d904ebb224c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d377b10-ba19-4b00-8fe3-dfdc3d9e0a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e9dc5f-262c-4a87-a73c-d9173cf45d7a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4734d0c2-fcf5-4116-aef8-d6a60a8728c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c575a8d-96c8-402f-a57f-fe644521255b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a275d05c-442e-4c8c-a3e3-bbde4a8a89a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e64c68-8bb2-40b2-8174-46f4091ab551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f020a269-0538-4d8a-aba2-c155783de3dc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631dfdb-29ba-4858-87c8-1c98bc2525f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a200d1-fca8-408d-8f1a-92e189e9fc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5349783-9000-4407-bf4f-1cb7e74f0262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b8abdb-7339-4ddb-ae03-2a03e0db1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b30903-b58f-41ba-b37b-e1963d74b7d4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d2f50d-461d-463b-aa5e-0d59277b0288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaf941e-c6d2-477a-ac0b-69720f0077c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09f5089-e8e8-44be-ad5c-4d15523a06b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "737fbcf4-0473-4962-8f7c-5b8c658160ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d02b3c-6177-4352-a269-c5ec2eb9b94f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2de120-46e2-4397-b3cc-a5ec875c2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da3427c-8364-4f3c-a505-8e6d14e917bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c114cfac-1f0e-4e7a-9460-2a558f99ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7ccfb8-3347-42ea-a03b-c3651d0981c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2f9e4-fc7a-49bb-b74f-fad8fc648426",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2e7c9f-3a8c-4a5b-b3a6-dc79a6cc228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acd7833-5c3f-4536-b6d7-a6d4c2f594a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab47312-7398-4b8e-a67a-8154846b4bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4df2f9-6cfa-4230-beca-2da2bdb77aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580cf3f2-f0f4-40be-b50b-1bea24f4ff82",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651447e7-ab5b-49bb-a8e6-3a31546f3bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efea32d4-d78e-4aa1-90a6-083f4f8423ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063fe897-c4dc-484e-8a82-82d5c1d6534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda0357b-6bcc-40da-84be-28e0c65a80bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041a6a47-9901-48bc-bef5-3c4bb97b21d8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f453cb-762f-4e0f-884d-39cbaecd15ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a6f5b2-a56c-451d-88fc-069aaec89b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e76d00b-3d57-473f-b1d8-9cb301ab25a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa335e8e-fd4a-4668-88db-16523d2900b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c73e12-1b3f-4e8e-8c18-e10e9933dc41",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7225ccb-459a-49e9-a58d-ea9f6de15f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a970bf84-4716-4a3d-b6f5-cb1ba057592e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4750c391-fe13-4052-8cb4-fdf049713a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7975741e-fab9-4f6b-b894-5c28594b322a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f7314-48b3-446b-b626-73f95f361a60",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ccd790-dce9-4e24-ae31-e23382873c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ec37b1-5691-4e43-ba46-61142d8a47ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a9e2f1-f803-4e4d-8a9e-fa9d92fca9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17602059-7f94-42d4-aac7-d0b94d664ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a747ff99-b17f-497c-8fb7-543656db0a87",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4344f5ec-a89f-426c-b0f9-a9e66cc83a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b14ed6-4485-436b-96e5-37e28bc95a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6f048c-e567-430f-b4a0-764ab56a921a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b669af-d367-4303-aa58-a4aafda1cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a993da1d-7e2b-41a6-b85f-83e1dd96ff06",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863bad22-2655-40f2-8925-21958dfcab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa175cc2-3409-4742-b8d1-dec493d15d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640f7aa9-a6ff-4707-9f2b-ca478765f532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60269390-acf8-4124-9de3-a5df92e937e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9a3430-ee6c-4284-a325-4112aa86ede7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f64c4ba-87b3-468d-8155-03c230b7f1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ddd630-5278-45e8-beae-1db7ee136a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978a627-17df-46b3-a8c9-24091ef432a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "368b94e2-c526-486e-90f3-f3571e4a77d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e27b38e-7502-4ed3-a367-48553fef419b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a581b8-d6f0-497c-b4bc-1a20c1e27c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9fdc25-f243-4c8b-afd7-e83a60baf06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9353b765-2987-441a-b5cd-1fd9875cb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "04196665-e022-4d18-991c-ada60fa4f32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e978cef9-a442-4f62-b166-891b277ec73b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d344573e-f2bc-4f05-a74b-02d65fbf54cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78897a49-0091-47f3-9bfe-903d4d341949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0585a7-3c98-4b85-bc1b-554a6f958642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18de4327-9d3c-4621-a3e9-6a64a920bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db28b2f3-613e-462d-996c-073567d3d7d7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5508d-953d-43a2-b9d8-7c29432961d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe371295-8fbb-4820-93bc-68a1c2cda6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f093e4a-f543-4f5d-a502-abd2a7aa3f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a790696-f908-42d7-8486-e8bebccdb070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b9c61c-90f4-480b-bbff-ee846baa34d5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947867cf-6ac3-4309-a6f1-5afc3b76e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2b097f-6337-492c-91ba-6dd5a9afdc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54515837-f2e5-4f83-9d62-6dcbe0c0d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ac2dd9-b849-4db4-9835-c0c7d67a35ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd01729-d4a1-4061-ac02-4d8e9d9c1265",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2781922-a440-4eda-8923-0fbbc466e8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4257aa-41b3-4049-bcb5-5deca010c8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae1d9f2-a09a-4522-9b36-3615b546449c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d410929d-b80c-4e79-9a24-1fe725b33c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc5e92b-6713-4ff7-8c35-cce981e8d8f5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f8a3f4-55b9-4706-8402-e43c51047cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3659a0-c347-4d57-88db-9ee82c071d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84278806-4a41-4167-b501-c5e08fe8bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "495ed606-0915-43a4-841d-7974772a6208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac672b31-2430-48d5-9472-9ce0c0658c5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b90a11-7cfb-45e9-9834-1fdccc1d3521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6efaf45-fcfb-4ed7-8dd8-fe4c9ad5c61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3cf38d-9acb-43b4-9726-c3532f199620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87787115-8e57-4795-ae83-52bba0b785f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ce93af-e356-4156-8625-ebc93c062ffb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9dae43-cb80-4227-8268-9a50f43823c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37aca84-34ca-4c0f-af6e-b3ad352fa23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043628e7-e3d9-4e1b-a5fa-7e02ce360461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6278235d-d3ec-4ed7-a75b-a44f8908cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8915e3bf-45c6-4350-af8c-331f5ad8bc3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fcead1-104e-4f20-ab24-946bacf0101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761529a5-e8fd-4037-90ac-84d886089b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1be6d06-2f16-4055-8ce1-d0dfde7e71e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e484663-b242-49e0-af95-264d246d2fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dfd656-b2ec-4db4-9ccb-46127692154b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec01f5ed-e304-4703-9efe-d2267f57e0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c7bb17-4662-4bba-957a-7b8aa51db943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4515cabf-bbf5-4784-8209-f10276da705b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b65b95f3-5f09-43f5-bef6-d25998204ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1dfc8c-990d-4295-ae26-bfa68c69b6d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3da22f5-d835-48fd-85a1-f028cddf1e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe17405-2362-4114-836b-949711aebb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d930953-773d-402e-a8c4-848f2d340a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2205d077-43b6-4f6c-805d-cb18c4ae55e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dfa713-aa26-4e36-b280-38f740c4a289",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aecab56-749e-46f8-a29f-6b68c1715b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8fd545-ce00-4be7-9969-8b91673dd5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9345210-f65a-47ea-8232-49a761c55780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde71d74-e8ea-45ed-a28a-b5bbac43c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422f480a-bdf8-4c1b-9788-7ea04ae12a0d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4d2ada-4e62-4134-b07a-5a6f30c237f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58094908-b71e-44fe-a5bf-21bf7651e309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30deec-bb46-4780-9342-30080d66d020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff49115-0e52-49c8-8aae-749d33e77b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51081795-64ca-494b-9d2c-13cfd5b0bf1b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5151c-2f61-47e7-b8e0-7327473247ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc67dbc8-49e4-4b21-aa31-42a021d58d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dbb770-276f-4db7-a3d6-b726a354a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ae8122-a5de-4836-a696-03b75aed308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98af3ac-8fff-460f-957a-eff9267990b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe73f3a-bacd-47bb-8dd1-b443bf7a2b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fffabbe-84a4-4798-a810-fe563d306d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9e7439-c9f4-4da8-b78c-d9556cb422f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef99a650-7964-4958-8945-7ff39a2486f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badda0da-0f43-4894-b026-9946b99097e0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf782fca-a40e-4f04-86e6-417e86f9627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e212c84f-57e1-483b-b1a8-799cbb6b3dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0ea055-e15e-4897-88c9-cb991dfb7e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3095fc-f2bd-470f-8c49-749f8b3328d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0155c2-99b6-45c4-8469-9519b43a460c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e634f6c-a0cb-40bf-802a-d144f589a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeaf846-3933-4141-828c-3df887a23390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d896557d-8357-4936-aed0-2a24a95a1177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0adda47b-df65-4547-bb79-38df3af3e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1a5691-ae7d-4f9f-bb80-2cad18fc3e81",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0acd97-84af-4943-863c-b3f0a4365ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80aaa892-54dd-4545-9258-40221ab6750b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868f72b3-02bd-4fd2-829e-457d48dcea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cf781e-0d07-48d7-ab6e-60a5f01497d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4343df70-a1be-49be-8876-6ecc3074d1ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc384db-3f62-434e-8ccf-a0bc0a2fcd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a415bfd5-957a-4fc0-8cde-e202a0408537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed1f324-307a-40e0-b287-8c939abd647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43befd1-9178-4236-835d-4044a0d67dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faf92a0-36c0-42fa-95c3-df7d5ef501f1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a18e63-978e-4ea8-8851-2f6ba658c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e6cfaf-2642-4397-ba95-e0aed19aca4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da4b46b-53d4-4a8c-bf20-a34eb389c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6b3d2c-a27b-46ff-8aa1-8d49a686dd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d522c3f-41d0-4057-9579-71e9423cc7ae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3960c1-0768-42e1-8c0d-0de51b134e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a003c3-7f91-4f86-9f39-23a29d8cc2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ea76b6-0cfc-4899-8a23-eeab582ebbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fd8151-18ce-4fdb-a688-376a3900bac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c3686-01cf-4cba-8c60-d15aa75f3e6f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eca80a6-9e77-4f93-923b-0eee65ca054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32103f4d-415f-489d-b1ea-bd53254c5a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba753c-879e-4021-9a86-86b73e7ebb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1d3fd6-3ab8-46cd-9ca1-a7979ce66a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49441508-9464-4dfb-88d6-92b369eb3073",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713a2afb-94b8-44ef-8475-69ec94e8378c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be11704-e70f-496c-9db5-2c279646d5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931cfdb7-ff38-47d4-bd9d-2d892d663672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47b10712-228e-4a31-befe-842a1dae4a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d295bd6-c181-4474-910f-7ac71e2e68a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66bf84b-8e82-4204-a38b-d91f8bd5b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a220c6f7-c6bf-4d20-8f04-c351f6272a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5876d1-d0c6-4a56-9257-d710af211b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "351248fe-4cde-4653-a9c3-7902bbd9f76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfb3262-c40c-4900-86ee-6f4988186468",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac1077-34e9-4025-b055-5e6983a7f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6118b0db-c45a-4229-9c86-1729e7592852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9961375f-76eb-4917-afa0-60fcb7e53646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffaa53b-6fdd-4f21-9ed2-c8045274846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37300ff1-b03f-4efa-a1c0-2a80594fb1b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e645121b-8a71-4d6e-b792-5ad20985f965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621b0304-863a-4f20-beb6-51721c7c8e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2ef49-ab34-4e66-bc0c-7ca1075020b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e253935-db0c-46e7-9de7-8b78d6c0cc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc589a9-e440-4d9e-ae73-eedecaa5fd43",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b340959-eca2-4076-b0b2-f11e2583cb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304fd74f-fa00-4ee5-bf97-d780fea22fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bea0324-a5e7-4b6f-aaf1-7ccb81a5c64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdc31a1-01a9-498c-906f-8fd2f1f692f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3579352-d48a-4f6e-9a63-a219a8a1a152",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d7c80f-42c8-43b3-ae4d-4e59f86370a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ea5cb8-b5a6-4565-8d14-ad1e2177d4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8291c4f6-6b6d-4c00-afab-57112cbd1d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5b7f5b-8dd9-4f19-9812-382503a1e90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeea384-a46a-452f-8197-6d43fc9dff6a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2b1819-26c8-49fc-afa9-817f7b635a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e2a5f7-fa08-4c69-940f-3521242b9dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f56d82-5c5f-4f73-9ac8-935990652be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e17526-a58a-4aca-8423-27942db51aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b7cde1-800b-47ff-8701-b94605390330",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee507f08-0426-4f03-8790-07c2a6b47a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ec695f-4710-441d-bc99-e1db2fbfcf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6df8e8-845c-42fc-8f59-26c213c1b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23008f2f-ba21-409a-b331-3f580b10215c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093a4e64-578d-4008-bea7-a6bfef1c3efd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7346df54-19e5-42a3-b52d-0a5c97db5b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56073a9-89a4-4be3-ab50-12af5a707d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a36d55-e53a-4abf-9ac2-a62c9a0e57fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce85d1fc-0b20-4f2c-bab6-2be4e27bd43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e81cb2-01f7-416b-b96b-63135f148945",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c00b75-4311-4e44-ad3d-89b05ca031b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff8cbda-6f22-41c1-90e7-618237075749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1356d5-3d30-41f1-b60b-3ed26ec6cf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9cdd0-9b57-49e0-ab25-67dee09a3911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c9d16-4cc6-40d7-a2ab-e960d4fec33a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d842c1-460c-4e76-ab3c-e6dd701ebf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72d992b-ad90-45c3-b93d-60f825b1fbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838803f-da98-4ace-900b-e22a909090ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4186e993-971a-45a3-9fac-7a159be41003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a72306-5a07-44c7-9058-646904617bc7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a35b07c-ac6d-443f-ac46-e05d3444f87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216dd924-6600-4351-921a-e39473cab0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a35e0c-8b47-442d-91f0-0618be6f9299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6fc32c-28ab-44b5-a8a6-699636460803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04660f67-5274-4bc4-90d2-cd9c9707d682",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2348b13a-cd6a-4ea4-b8d2-b9c936f4cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2d7cfb-7fc6-4708-b504-1ad777ac3867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcec4332-97cd-4970-a74f-1278d3c73b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37fbcb78-2c50-4472-bd19-a50fd2582812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05e0855-50db-4b67-8d68-9e4814981192",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d815ab-0b97-407e-9573-2a3186d74a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884dd018-60ac-4b5a-bd5b-17690d04df19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f060e2d-251d-4a3d-9df7-235cc233ff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "584e9730-475b-422d-b772-52464b1d8e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1ac155-4cc2-4c9a-a5ab-f842a87c6fc8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3865e735-da23-4e8e-b7f6-05faa8095d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444f3a0-4f8d-43d0-9e65-a3fa87ae51e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a670ed2-c255-49bf-b926-4f86ea0dff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da26696-c653-4b64-ba7c-3d887b13898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0901f46d-253e-4edf-b659-ffb92f7f7b91",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22c2420-2cd4-4e1d-bd75-54676535ab49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1535113d-a935-43b4-ad21-bc5d6f56702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e028cda9-7be0-4f4a-a7a5-f178b3eecfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28cd5997-ed93-4fa0-b832-63de6542565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b50bd08-0f07-4c61-aff9-c8c0753a48b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e68528-9082-4ab6-b18f-e8ec9ffd57bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4867ef-1c22-495d-bf90-f3acf0b25858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157475c1-3888-4310-8e68-c84615282fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8116c8eb-cc26-4f06-875e-0b63a3723958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9222d4a-c8bf-4672-84db-447230a9596f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f07538a-00e4-41e4-9332-ef95d4587ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f3f2c4-de38-43f5-833c-9a0b7e0aa0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5fc26-c6ef-4b2d-ae3c-81474daf11b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8a7a6c-18ca-42bc-88dd-8d58c3fed6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79962799-8bb2-40b0-8e7f-9d904597116e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83e13ed-717e-48f4-8fbf-18404dbfdd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6c0388-5d25-4321-a18d-bf2e78939fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd48560-256c-430f-a447-f5feb3254cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9e0a03-866c-49bd-a75d-0675fccb0188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c881e9-1da5-4ec9-9751-1d8be58c6a8b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55952f97-e34b-47f4-a3ec-0011560ab6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "813efed3-a0e9-45d6-bdb4-ba70dcc35759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae08aa0-6f4b-4147-8ef3-c70eb5d9673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0e72dd-f3c1-4d46-b758-b54ad3144969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4864d653-f63b-4515-8e23-d01f630b04fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e304f2d-bd50-4034-9796-ed474added2e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5a8d31-a2db-49d7-8a2e-2e96045e6c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f8d4a81-8122-473d-a81d-1d955b6e232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557f083e-0280-4d85-9d2c-29e66c122266",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b7eac1d9-c48e-4c52-b2a2-36463678a709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737db1a7-37ff-4cc0-8b83-ccdcb44e12be",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14c1790-ff0d-4a89-8560-bf576345f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "065d12ed-aae0-470e-81e0-524c88af9436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870d3c45-4d0c-437b-a19c-9a089cb5148f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8931668f-7264-46f5-a876-09582a253993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14b25188-7dff-4706-8a90-62dd8330026c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3191d83e-2e59-4873-9c02-ea415307f83f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4a2d179-f36c-42ed-aa6e-aafdd9ae3547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "552675db-8418-4084-acc9-7a17b5eaab85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6ac4bb3-fc9d-4e4e-b9af-f26cd478af27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a91b4a71-bd4e-461a-b333-dcd7800e9566"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6fa6bf7-8cca-46c4-9625-010ecbd8a41b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce83e330-b527-4c00-8a47-d17760a78de6"
                }
              }
            ]
          },
          {
            "id": "40f73102-4fc1-45ef-989d-ea32147554f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ab23d41-40f6-40b6-a49d-f17a61138ab5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cd6fb62-763a-4dc1-b530-64161db89367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85768cff-9af8-4d56-bc41-bc7d2c3696e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "879e00f6-0278-4f85-a9db-ad54fbeaff56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a5017ba-d113-4ab5-9bfb-18dd712ac895"
                    }
                  }
                ]
              },
              {
                "id": "6dec3273-2b00-450b-9343-6fdbec5f30e8",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "973df830-7880-4f51-91f3-d84c488469d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b77d9663-7143-4461-a024-76d434d4acbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a857ce7-62b1-4191-b0b5-300163a960ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19f87892-5ec3-44bf-bd1c-433656156c13"
                    }
                  }
                ]
              },
              {
                "id": "d8082cf4-a214-4a50-84e4-cb69be7756a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d0bc9d-4c78-4d2f-8b22-262d134f06b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7cebb0-419c-4a69-991c-ea4a1992f7b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "998e7077-60a6-4047-9987-4d33916a79c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7225b63-1537-462e-ab72-3f472b5fda73"
                    }
                  }
                ]
              },
              {
                "id": "b8d1dd9c-343d-4c0a-a6d2-6822f732f90d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b692124-b3df-4c65-a162-3d1362b11c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32105ef0-782c-451d-be99-2565a4b721aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ed83ad3-d77b-4536-922f-9f10d84c86b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a7db8501-d80c-4d43-9d75-01509c30feef"
                    }
                  }
                ]
              },
              {
                "id": "a92a2414-264b-48e2-ac3f-883e3b51ec78",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef56841f-00d4-4634-ae3f-f43e803fe62a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c40d43e3-ca99-45fc-8631-f38131f92ea8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec9066a-0ae1-4d58-a03f-3c4b3529cd82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ed5cd76b-d956-452e-8d59-900d0074c037"
                    }
                  }
                ]
              },
              {
                "id": "3e537e5e-e3dd-49b6-8bf2-75a93a1a9608",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03d496b0-6d55-449a-8d21-c763976d48b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43da67ac-2f29-4522-832f-6025e345a6d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce65a812-d896-4262-9f64-0d9459802be7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f90b2dd0-01ad-473a-a4a2-906fadbf03fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05793210-7fe4-4242-886f-5369e720f8f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d630776c-b0f6-4eb3-8560-efedc4505d53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "086fe538-31b1-4bc9-8046-de260a02639a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3014392-f3b4-46b3-91e3-f2aadebec80a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d1f530e-47b8-42e0-bbd4-178c99110c52",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f53f661e-d640-46e8-879b-d3531b75b964"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15ee0d9c-a86e-4d17-acb5-7159e7edbd23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a11830b-629e-43e9-b4ef-f24d92888089"
            }
          }
        ]
      },
      {
        "id": "13023881-141e-4884-84b9-2ea9449e981b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "93fb8f29-a1b5-49d4-84a3-e6b3415377c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d880a2ee-2c18-445d-8420-d97efc7c8073",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea11e495-c9e6-4aa0-a865-b7c7315c6b94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a61c69-3bd0-46bd-8fca-7ae7f7342751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7609c5-e0bd-4b89-8235-471d8cfd80d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0c12af-d58c-4a74-b8cd-5272878c2d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b4b6d2-86c3-4fe0-9f0a-870f3919ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9d9420-e8e8-4c43-a741-305a76cdce28",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d64a47f-3e3e-4c5f-a136-8d177de3c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db15a914-9d9c-4d3d-8c26-6298e42c6b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d3bf8-5f6a-4c38-8ca3-268594f3c2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebb8e7f-5c8b-4e45-b0c6-86be07236b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98eb7b4-7530-4d45-ab0b-b55616e59d16",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487673fc-1093-4f22-bfa6-c34c60b61ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9c38fa-a323-415c-8ee6-a993b150cca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b1647-3d60-4cf2-8be5-77a429830bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed759e4-5860-4643-aff9-b714ad7e91fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86642543-caf7-4dac-bd48-b012327f2b10",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2369307a-16cf-4a03-bb44-1a3d4cba431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb4bf6c-996e-4fda-90a7-8a5575bc79b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba66a6-b772-42df-a9db-c44ebbf8dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61e2b5b-c9e3-48b8-a769-3ebad748ac5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd39885-e18a-4dd6-8b04-8295f7ef3aef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be3cf55-8733-4f17-be3e-a1062bb5e09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fabf71-1d1d-4267-bd8c-12e017e5269d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4a3f07-752d-4434-8ed2-bfbc29d48b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f2be7a-3a45-4c3f-87b5-e61c56859edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d7f362-5b80-4212-a664-b663352aedeb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f035c292-7156-471d-9d78-65a04b8c9ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc230e03-4bf4-4032-af10-c6366f7b2377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655f596f-212d-4408-9d5c-9eb7cb22cd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c45f298a-e305-4e0a-982d-1725a7e9b953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e266f9e6-ad8d-4525-8e5f-6fbc725e8607",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3535fa66-975d-4678-b2c8-9e39745b2405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf58951b-6f5a-4c2f-8ad6-9c12c2617833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d0601b-1bc7-47ba-bd7e-fa3db476c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "57dc42f1-c351-44bc-9a17-4d2746bd9642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1223192-dd6e-4e81-ba26-52a18085acc8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f911083e-00ba-491f-9fbd-836729decc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7f10f7-e591-4a8c-9b4b-e12aa5abe3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60321f1b-5a8f-44df-8983-0e78b7406aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ceaa58-6d2d-4e49-bf19-69f8e4ffdfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8081b013-bcfd-45a0-8f7a-5c8ce4c63f7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2044fe0d-cf55-4888-8422-903cdb281f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1d9c2d-7bbb-42da-9f88-745be42d043c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56097777-e73f-4d82-918e-e23396c0e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc154ab5-a8af-497a-87d3-f6a2115039bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7e84b2-b258-4773-ab02-0c890e1d8b41",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782ae175-26d0-47a3-8005-a581a2180319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fcbe81-8a16-44d2-89f6-725196295f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c342cdd5-1945-48bc-94ba-ea81aa78cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0728d4a2-1363-4fcf-b564-45e83d3abded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c779280d-fe8e-4f63-b8bf-250b9cb9f01a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c4c65b-2deb-4971-9a8e-245cbcda8674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e52ce18-08b2-4d05-bdd4-7d3180e3080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce9f516-5784-4ad5-b1df-7c6e6666560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3cdaaf-4aec-4222-825e-a8011c20de8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638445d-014e-423b-99f9-aecb99db4371",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07ef1d2-8018-4d7f-8f8c-fef785456a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83027af-1e33-47a3-b169-85a96ae17481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ff00c-e3f0-4590-8950-4f42af6c4837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cec3720-0bab-4394-8368-879c9eeb7fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61091636-dc45-4b17-8739-d80f19358e09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b11eac-cb51-43db-b1cf-addb29693a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c789ebb7-3d09-4768-b478-2f856091b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39fcea8-b587-4a94-b447-06c0e7b20793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bd7e94-5060-4512-8791-a18bacf833ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921134b3-9e9e-4237-8a9d-5d07d80b1003",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292a619b-e460-4d6c-84d8-42c7329e47fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5a8cd3-1610-4b19-8925-9711e1d95226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31000238-a20f-4f88-a021-39982f184829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "745d8228-0366-434c-83a6-3d238dba2e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db073157-259b-421c-85cb-20af5c9d99fa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4592742-2064-4215-82a9-423eb8007c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089f4a01-7a34-41c0-bdd6-62c51f108f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ae9add-ec79-4c24-8b83-636729188138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be9803b-beda-42e7-a14d-72a3a7a1b2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433921e7-f76c-4097-aa0e-4c26247eb5b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bece05-2540-441a-8399-21f131624661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce4217a-e85e-4fcb-a260-6adffb4c6835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9adad75-2fc7-4ece-ac15-4fef7ac59a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eddf0798-f0a1-489c-bf42-3f30590d61ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fe1280-18f2-47e4-bdf2-d4c7634aab94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa65ade7-1cfd-4fea-906b-2dd103e6de94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd2107d-56c8-4f54-997f-65a0fd05c6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b90fce-dbb9-4052-b871-ed7bc8306fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d1f059-f44b-4a86-b366-b81cce23b726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3411bd04-4a52-4b1d-9dbf-390f7216e021",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d21029-dae3-4d12-8d4b-ac6d95e19158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ead65ca-e5a6-4a5b-85d3-4d9715ec755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ed0daf-23c4-4ba8-85df-7dcfe57e516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c93d6ce-e2ab-4e1f-8607-a73b1d4c22b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aabcd8-9bf0-4160-a383-e2be1e3ae010",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c309ab-a777-414d-a67a-d40e3b478fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82d5a22-005a-4c08-9185-1c55c06697aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc51aa3-4d92-409c-b9bc-7147aecb829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e0c3b7-e9e5-4707-bdb2-61fd784310c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968f1df3-f3f9-4057-86fe-423967632024",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f87d7fd-df6c-4d5d-a869-59b93f961154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e91c9c8-c1e8-440d-b658-eb5c7edc24a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2341c0e-9652-49a0-a6bc-8b9555ba3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c289c9dd-db5d-4f9c-8848-78c6dfb7690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a20d02-b3fc-429f-a95b-217df5ef9b5d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6eff54-d58d-4a7c-b3a1-341ab4132362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3cdbf2-8784-49af-a9d0-0c0d228957b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac33594-ba5a-47ab-b6b5-d288ff108f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb505bc-5baa-46d4-86cd-0c3787d1bed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142a7aa-feee-4f05-9b44-e96dcfeef30b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2a6e6e-c4b4-42c1-b97d-a5275ea1e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddd9f02-9896-4921-93d9-bcb9d45832f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b623b6-3aa8-4e99-935f-a8fa4e13dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "944863e3-4433-4626-bfd3-61c53784d025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00327067-dced-4265-88e6-8af7616e37d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924df2d3-3e53-4dfd-b221-394e11cc057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da92a7d0-2eec-4d16-b215-b4e1b959cc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7548e0c-cc4e-45ad-8b54-666275c3c384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7af0a5c-5ac4-4db3-8f20-2471c6e47040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d212e70f-3578-4983-a8b6-e7687a2a1602",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b176286-49ac-4fea-9607-8f2afe5f5391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32240876-0e53-49e5-92a1-cf4c2e9f0aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462a22b5-7222-4497-ac01-d86a832706dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37827259-9723-48b0-83ab-d53dfe4039bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1094038a-c818-4b38-9b8b-8d72ce23020b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff36ad12-6cd8-4b17-8223-7def518448ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe02155-6115-489b-b0a3-e413ef34abdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7fd0b5-65c5-4ec4-9fe0-97858907487f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4979198-ed32-4475-8462-336282400700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb85d71d-a586-4edf-8022-b1b696fa1242",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bab450-4d37-40ff-ab7c-2452f9880e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55590edb-e00e-4760-aeed-2826b2f9effc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b918b4-290c-4da4-b1ac-0ae65e809381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba60e9f4-066e-4041-834b-c338def07040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef0e000-da54-4299-8a8c-81684a7c8bbb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3ff74f-5a1a-4497-86ee-25a425e96a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001f3cea-cd97-4003-ab50-2b99fdc6225f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8bdfe-88d6-45ef-8641-74b97a3b2707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c2c2f1-8f34-4bc9-aa86-59230fcf5227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da5422a-b13e-4cc5-9553-ac3f4864b8f9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36ac9c3-999d-4077-abca-b0c8a01eaadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc354de4-1b40-45b1-8d2d-bf4db88fda3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd00f1b5-6494-4480-b735-054ad3c4099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a221e93-65ad-4e24-a090-2ba32c8f05c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad729f5-d774-45d0-b5f2-5c8fccdc6685",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16cdd7a-0e52-4339-82cf-c143b47e2c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e81b83-1810-4fda-ac4a-19a475112e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6573c587-1d3e-48f9-8709-031e84e327f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c8d419-2bfb-4ee5-b493-fda70768d669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba147c82-2d57-4de8-83cf-7dd76dcc76d0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ca6dc2-b70d-47ee-aed0-1bbc3b790347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d9da3b-d198-4b45-b1b9-08eda01cd6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48871bf-6d63-4af0-879f-4a9be2be0c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08d5d2b-77ca-4f02-8da1-991c8407a28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89e5be-2293-49b4-9bc1-c19c2d80ac7c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd76e81-ec4f-4c85-bc7d-1f72cb20d032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18868ec9-e505-4bae-96b3-a334008dde4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a0ec9-c996-44f6-9d69-b813bd36ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da1b469-0152-41f2-b866-cee660b05a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dffe06-bc31-4666-b137-6d268208fc61",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3c618-2ad1-4d69-be14-3255094afea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b45387-ac39-4c31-823e-0147e285588c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5423b875-85e5-4f4b-9262-e78d49eefb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a11b831-3c55-41b3-80d4-9ea64878281f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a8fb1e6-3489-4d3a-9ce7-37744d00e2bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b53ac2a-0f6b-4127-a296-bb38975f5bda",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2190ce53-4607-40d7-9276-f443ce1f78e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8151d5e-270e-4ce8-9b1b-68c020cd8555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5cf77e-5af1-4708-ba19-f0cef63743dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a19da153-cce7-4dd5-9532-23de6abe8c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a09827b-922c-42cd-8281-5b3ff9474475",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30102471-90ce-44d3-bc8f-e39ce2beb395",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "04883e2d-a8f1-4462-8c63-1783b526c9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f34daf-8cdf-4968-b820-70c76865fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf9b982e-329f-49e9-912d-8f96431b8dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c3ce405-1da2-4b85-98a6-a7b26268bf0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "838c38f0-5591-4be8-9f75-52387977499f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e16175e-657a-400c-acf3-808d27288abd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b7abc01-22c6-4362-bc67-e6ad61ea123c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c864a5aa-cebe-4585-ab5e-1eac95580fcc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0bb53cf5-17b6-46f4-a28e-80ad213dfe2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f8cb5f5-ff7c-490a-9cd1-8f8208523203",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5b55d78-941a-41a7-8ec9-fb72c693b495"
            }
          }
        ]
      },
      {
        "id": "157d5797-6714-436b-a64a-142328b149e3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d8a6dd2-acad-4f5d-a209-79770fd20f9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1c900ad-1da9-4ee6-acf2-0ba0e138f5c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12e5c553-8d79-4f25-89d7-f4cd99186323",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece2ef18-45eb-46f4-b717-f76a5f3fc1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96498b9-21db-4594-8f48-2983f227030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52c72d1-7cc7-4730-819b-79a0d0ef9a57",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03053cd-d1b9-4b92-908a-f4d7e203f178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d6e5bb-94ab-47b4-8a40-2fd3de3246c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b366177-8c48-4a21-8e7d-8ed3bd5673ef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1281469-606a-4ed5-94eb-79a11ea252a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efda618e-d082-4edf-a01c-1daddb68a197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246c65c4-bf2e-449f-be52-885197f26bae",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98222fa-c816-4268-870a-03e558762a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72992e7-2a49-4a43-ab16-95b185031cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443b1d7-52da-44a2-a70c-d73899398755",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3711380a-2da9-4ac9-842f-f113b76f2933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862ea748-ca29-4911-9029-b6e24c743da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c64c25-a059-45d5-aa7c-de5a3a38dcd1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eac9b0b-58a5-4a86-8a5a-259ede5ac166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f25cceb-a8f0-4e31-91b8-c5d275af919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa08db9-bdb4-45d0-a3eb-69e273c5cb25",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73731001-2ff2-496c-967e-d671ce8e3be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb1d336-7520-4786-a7a9-e6bd5b612db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394b74f-081a-4897-bdf8-d6d79cb936ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95bc253-f0f3-475e-a69e-b53f647e8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccc9b0b-da0d-4066-8c79-1febdad53339",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb03b0cf-117c-4e7b-8412-59ed61da1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8b1d78-41aa-456e-9c76-890f39a8e6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091aa93a-88f3-4e28-8790-ef30e2a549b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf895aa5-1e63-46e8-8123-a0b8ad2e66d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba3ce6-59c5-41f5-8fc7-a2c3524fa5b9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d33c89b-585d-43ad-a26e-8b4b040d613d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1504bf-dc18-438c-a5c6-e0702d13ea4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aacb82-e807-4d12-be5a-3936fae8a00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5514139-5585-4e57-ae01-85a9ae1512dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934fd9e8-db77-48d4-b790-f7ccd00a3d4a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac3ea02-ca14-414b-a882-94cbb7682bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bcad14-841d-4425-8457-f0fc53810705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f4d63f-3e8c-4160-934f-6ffb161f302f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bdfe4e-9f59-4a98-b21f-45ba5e20ac3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9d8096-111f-44c0-9fa7-6ba75e54f03c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a48788f-334d-4950-b674-2d010c9d409b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dee7937-66f1-4017-bb7f-c144de49a164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2dde07-fbd2-4181-ab1f-b8dd344c977b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc090fb9-f496-44ea-b9c1-e34a30a37c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b4052-6780-48ed-b694-c4ef62692745",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299ebf63-b3c4-4026-a609-befb5c9491b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd86b871-3b52-473e-8341-878bf5dd04bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a29358-ff53-482b-bf17-4a25cb60e75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec341096-7806-404d-bbc4-472d648ab2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85e8ab9-bcbc-4f7c-9df7-da90a9a871f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ec4fe-b121-49c3-b949-c13eb13313be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615ecd39-5c84-46dc-a357-f117268ca0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161c8286-2e8e-466e-83bb-1f8b2799c222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba8dd51-ae2c-49a3-8c95-1ed8a74ea4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deceebe-d86a-4295-84af-0cda3a643ca6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c15ac0-5863-4e09-aff3-bdcdfdc029e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff10aff4-f8b9-495a-b443-ef4eafc05862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5701852b-dd00-4a83-9b76-ee7cd79e0b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f90ccf-5e11-4f19-b9f1-299b5043d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13675b-4fbb-42c2-9918-ed4847ac7469",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6ae1a-8c28-4882-966c-75cc29c90a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591a6422-39b5-4aa0-bde0-502cfadfdc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f1072-5426-4c2b-b57b-8e534259d556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd9c0ce-940e-44eb-b07c-692fd263412e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6f0229-f727-4be6-ac86-9fb7106d1304",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1534d72c-5c00-4484-9704-ff4c33d74ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d80d27-60a1-4346-b8b8-b41da57a71de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d34a231-b428-4fdb-916b-134d841fcde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd95bdbf-463d-413e-8195-2c0473cf0d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00811d4b-1183-4e98-b984-a344f4402bc8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef34149e-ab4a-47a3-9c78-4037480598c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3991ccb2-6ff5-43c6-a670-f8178abeefcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686f1c9f-da61-4ff8-9c54-7bbfa478c2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a55e06-4486-44df-af4d-9db6658f4900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc2c810-a1de-4e84-bf5c-fbc34618ef01",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5f5b18-4628-4d90-8ad6-b9187b3e3b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89debd7d-62d2-4042-bcf9-dbeffac5df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe466b04-c434-4f58-b5db-e1c8efbe9fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03060ab4-1275-489a-8032-2d525736ba5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f500a3d5-6b78-4239-9805-586a2e700aef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e43eef-c075-4668-b0fc-f812869b08f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ca55f6-976c-4201-9629-1c66d96b1160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debf03f1-ffa5-4868-a58c-2decb054bfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2fa74a-5dcb-45eb-b70f-be9f4cbceb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e803e17-13ba-4c54-96be-7b8b470aef0e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabacda5-76ad-4cbd-a4bc-dfceba703fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0916cee6-5462-4fd0-a699-eb6b90a55039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8157c160-284b-45e8-bea6-a9cbcaf7977e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4696e1-d242-4881-875b-9772fa9da77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945bba1d-69dc-4256-a5a9-04913f0046fd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d1959e-4c39-48f9-9812-7a4afcc32061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018bd19d-4984-45e9-aa20-fdd6541f3089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbfbfe8-c2fb-416d-af3e-add20b286886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b05f32-c855-4a7b-9b07-a3986d4e2305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6039f1e4-5d6c-4529-bc6e-3a6b5b2cc324",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c73bd6-339a-435a-923a-621404fe5f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ad4584-e365-4842-86a3-973f102511a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e868f244-534a-4a0e-9f96-7878646b41ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec9351e-a662-4e88-a0de-718e7a896c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4ec06e-9b59-4147-9b16-9f52497256ba",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6387e8-912f-423e-b047-85e414334cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edeb90d4-76aa-4f71-aa0a-cc1c1edadaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbb24e4-537c-4d4f-b016-42e4059808f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc36b8-e8a8-41c9-9d44-ac2e67611428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f704fec1-f633-45a7-8a22-6545ffa4533c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79064065-4b5a-45db-a706-e4e10afa7253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77eee895-de5e-4a4d-960a-3d042cb66961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bdca19-60db-4290-8c41-e4fbfc324767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a45ae6a-c02d-469c-9c55-516f61dbac7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7305b597-bd1f-4641-b5da-b8dbfa6d2324",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eb1a01-256d-493e-ade3-4d1499506a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b986617-1e3c-464a-ad93-d2ba9f905689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79628e64-1a0b-4590-9de3-74d9b71eafaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68a29ef-c3dd-4103-9061-09a5bcaa4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a463a1-b74c-49ed-94d1-4968b639af72",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55a6583-b002-418c-a9bb-5af9b9c9ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdfa24b4-313b-4f51-92ca-6caf44e6308e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9a92c-6774-4758-8ba5-1f0dfe422ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1af577c-c121-417f-b093-85ec67b12ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc668e-fa17-434f-8d93-6b9499af8abf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb527334-b741-4526-a263-a7b785428ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd00ce77-6d9a-48fa-9631-44115c2ace2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6207f5a1-cb1c-4241-9045-90c9afed41aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cc621c-045b-47aa-bea6-358691f1baec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f13bc-8d72-4715-8ec4-5ee3bf6fb266",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e1b597-2f2b-4b25-b843-d6a669768a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c9f119-e8ba-46b2-a82b-74381a86fb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b43514-40d9-4031-9e30-71d3814a6452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce575bd-e230-46a6-8c63-c6fe7c0a671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a57a1a3-2fd4-4007-a0c8-89d295c7211d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de712ea-b7e9-4a11-b063-d4001249d93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa4f1b6c-98ad-436d-bc70-5db0744daec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f18282d-9920-4bdb-ac79-1a2064c6a969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662673ce-e4d0-4efd-9bc5-62d92a5bc49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d2f7fb-0126-48a4-a246-9f201b901ea6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c6e3e-ac17-4e31-ae76-3309d0a0f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0218807-98a3-4201-bb3f-5f91de869ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d294ca30-fdd8-4c07-bb6a-f9dad33b2899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6784a0ec-1407-4a40-ad13-64f63ea3a50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025c4ef2-342b-448e-afce-c8cebcacf1e4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722d08cf-e362-4a36-bc8a-391373b13870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac5387f-3e8d-409d-b598-599fc8a989a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5b99c-38b0-47bc-94dc-3c450fe080ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837204cf-332b-4de3-862f-f12248c6898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33191b9-38c8-4963-8c25-85c86260ce80",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec74a89d-84e7-47ac-ae89-14b5c3800d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb61433-9bd9-4aa4-bbb6-5dc23ee971ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f41e243-44e9-4da4-b3f8-bc36c1e4af48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f78e7c-097e-4148-b233-ef3b12f56ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e904003-2f7e-4da3-af3c-8a357b670513",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4298e11f-9ba9-4794-8775-bb846fbeebb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ad3025-fd25-4d69-bc8a-6ec146919ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bc8d3e-e3da-4f4b-8ec2-52b859101cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617e47f-106f-4884-ba9a-2b4e1652f852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e4e5e7-d473-422f-af2a-4d7f2cc7a042",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06131d16-fc68-424e-908e-b4e45a8f28ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8789e6-10c7-4685-be5f-24ff2045a613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef0b90-6b1e-42f7-aa72-2ed529364333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11013fab-e8d7-4267-813a-01ec23f215a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4e8637-7b5b-46a6-bf99-4c67d5a6a1d1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbb3a42-763c-41fd-a2f0-0f520700b12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a51336-ef8e-4a6b-ad3c-9341d6da77e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1711db-bced-4eb4-b6dc-7cd506448002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230edd5b-3b7d-460b-b1ad-aa0daa2e27d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbcdc54-e5e1-4c8f-82ef-066220142065",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd4142-ae77-46ad-9e85-b1dfa5cd5b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2d7ac7-0af8-43dc-b499-3b803a59edc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09741573-7ed0-49a9-ba8a-ea60385e348c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0888b91e-afbb-4b00-b491-2d6e80323766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55aa9c7-a8f2-497e-8905-c846f32e2fd7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638d95c9-7c23-4fbf-a869-5456d48fe542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a57bb36-3c84-4748-a6c0-b6c71e92a023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc0b94d-7878-42fa-a7e2-c4c72d4a67a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fc38dc-2d2a-4672-aae4-261dca4449ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759dc663-810c-495e-92f8-8406f775e6fa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb61389f-7b85-44c9-a3b6-88fc95a8b2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e4a822-7ef8-4e80-91f1-79afa450b709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137090e1-a220-49cb-8337-07d877d910be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bf74b4-edea-4b1f-b32d-653de6f9b597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35808255-4f33-44d6-960e-c344f84c3b29",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d7cd8c-31ea-4892-ad3f-85571b274399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961f43ac-16f0-48c7-8fa7-3ec43f234194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ecee39-4083-4d13-b23b-c98bb4ab7d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9cc737-0fc8-4632-bd93-5ab258c02d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd3f50-f48c-4e07-b7f9-c07e0f6a3eaa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023a1642-5f49-48ab-bdbc-84f74acc2e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ac8612-0ddd-47d4-bccc-59c7e93fd94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4427c30f-4451-4783-aa1d-a37990000f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a981795d-fe82-44eb-88c4-013a1ee353a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d489041-c6dd-4be9-ba06-3150d2936543",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5202a3-46e0-4466-8c98-7975da00e70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d017cd-cae6-47dc-9e29-fc58effc2774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e82ae7f-66e4-43f5-b2d6-c5ad7dea851a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c0e611-f50c-4234-841f-b70477a8863a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bf8ad1-b8c5-4588-8c74-7dc0fddf0a6d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8faa2f-e709-49c2-8e5f-a9a7a45c201f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b59eea-e1db-4f28-81b2-4d2f11d735c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0664d3f-aa39-4936-b529-11c1d31e7268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a048abe-bded-4b8e-bbff-948407b2da28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50c9c46-2862-4585-9c72-0117a48de8c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423890f4-dc39-4924-b0f9-24f97212b595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af11bc8-0173-4fe2-8dc7-dc577d68b2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eb5b1-3de2-4693-ba68-e1f907713685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1ec01e-4706-412e-891f-dc7a00a23fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b915a04-76da-4e22-9348-b25f2a639cef",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1236acf4-8f41-45b7-af80-2c8cb6fb428b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e296f8-ad5a-422e-ab2b-5364044e7ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c71e904-fbdb-4c8a-869d-024c509601fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa250cc-2f8c-425d-bd35-348e8c1cab99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6a2ca3-f237-46c8-b010-a6832de07ef8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc17600-8c96-47a3-aba8-85d6d888d7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8876da-7119-4572-a0d2-005b81b216ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e0b815-8cb2-4dfe-bb70-66a10741dfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9220660-3ce2-4164-b0b7-dc2acaa31fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2ba50f-d740-4ff6-856e-4d984eac07a2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453c59d9-5282-4837-9b77-dc74046857c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314fa635-79b5-4d37-80d9-33d265154ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf046e31-032f-4ce3-8d59-afaef34a1a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c056402-a792-4ff9-8ae8-11983fac6554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64195ebc-f2a0-4745-ab73-ee0987631176",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589b8398-c13c-49b0-ae61-96a885e8df66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278c4566-053f-4731-8af0-2b01ea14856d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d600144d-3590-4b8c-92bd-60511ca7707e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb814c28-59b0-492d-b6b1-58531bb09753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51093323-fb34-4503-b55c-f7ec45e74cd9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56851805-ae2e-439f-a6ef-59fdcc02c5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5e0c31-39d8-49ac-8775-3a6b848a1017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a182bfa-5d9f-4af7-8016-e60c51833bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc0e92e-35fa-44f3-898a-b953edb0adbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92977f55-b2f1-4cee-8de2-7fa109ef084f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac71c3b-6ad4-4a7c-bf9c-848ea75da8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa64c9f-1b86-4454-a64b-b3c852e67479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b5e0d5-6dae-431b-ba07-34bdb42ed57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe2c665-22b4-4006-9802-8892c4b8e230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee441d7-3b35-40e7-9b4e-6a1e34d8745f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28183663-af91-4026-8470-69c485ff87bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7021bfc-f45e-4119-915b-8f47630f7ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f652b9-4084-4527-9582-b47b373c7b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc35ae4-d1fe-43e9-af5c-52dcbe680a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7f17be-e2b5-45e7-9b05-22dabadf70df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67065bf-11f3-4ad1-bbae-4d588cdd8d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f3d6a0-5c32-4d8c-9bf4-5cc2a399ed1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd89853-f62f-4ef1-80ef-2c1d2b3228d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63748484-5f66-414b-abcb-f7a5ea633d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62c2f7b-a2bc-41d3-8349-e3a2e38fd18e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a6ae02-d049-4224-9b07-beda2881dc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8176a8-7186-496c-9b7e-407d897248fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dcd393-dbfb-45e0-a130-c4aca94e408d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a8acbf-8cff-47ff-be1c-af34622fe8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf666d7-1540-4b3a-b2ae-ceffc665ebbd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b20d83-8f26-44b9-9ea8-98156f1c8917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35da303-a9d3-48e6-8b61-3d8298ffd18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f3228-bd81-4e5e-ae73-cb28fd4b0daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a64a0b-255f-4d7b-bd17-66d8d613e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a5c4db-014c-4ddd-babd-620f5c782559",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b724a-e1ef-4405-ab37-8df55a493a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc0fe13-e590-42a5-8909-64789b7bd1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f9d31b-eaa9-4f43-a225-ac19f55c0e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1214037c-5321-40cc-b7fa-05afba7d85e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d0c06e-2cff-4281-b673-469001b9a926",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb13a56f-1508-4120-b69a-5ee036d6e70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b70681-c85e-4a2b-804b-c15ffaeeae79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77bda1-cfeb-48f4-ae0f-d7042e16d1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f7645d-3c84-437a-a435-89d2b7ace42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b5b347-8f29-40e5-9a2e-ca88fcdf7040",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be702dc3-bd5b-4a39-9c08-f50bb3118c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad209ddc-788f-4ae7-8461-37c6992cbde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774307e4-0444-44af-ba8c-d0cf3f50af2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199ce151-6b7c-4e30-8f61-0db2a7940916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92567f2a-6a22-41ee-947a-d1fe67ea0c53",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7765e165-82de-4ee7-a26a-fddfbad77b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5704ab6e-1f35-4ce8-8f4f-1ebbed151cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5596f290-e20b-42f5-9f35-1debbbe8af42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb99949-4a81-41e2-8dcb-01b2202449df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d6076-9e4f-4570-8890-2829a325f0c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab807ab6-f159-450a-b249-64739b5600c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f9111b-c6e1-4944-b739-cee533d424b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cde4d68-44bc-421b-b8b7-469fec2b80e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4626f-267f-4a80-a880-2706e4326b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce707b4-2250-4fcc-bdf9-c296e72775f8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4276d927-7580-40f1-aaf3-5f3227a39ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9bc15c-a559-4147-996f-c7950a08e269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a46d77-db97-46ff-8827-fc8a418356eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9dd374-1904-4994-a307-ce174d9b274f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f38cf70-544a-4148-86d7-193966f8412c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97dedfe-4cd4-4e92-85e1-444ddabd318d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7558b8e-172b-482e-b3f4-d3ac7aa790b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f8571f-8a2c-4232-97ff-10bc30ad57e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e328797-e1e0-4ef9-b661-3bf8c922bdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b325584-139e-4a19-a969-b06299dac30d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aefa4ec-0acc-4104-9f06-f0d7e5159379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc6aba1-ce17-4357-abcd-fb1f99f27897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9401e9f-6dce-4bdb-83e4-ae011b28b045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7a4fa7-8d65-48be-ab8f-7408373efde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1130a475-7d36-432e-976b-568d062410a4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5532f3-9f0d-4487-91de-eb90cc38576c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122751f5-b91a-4c46-ab65-ebf71dba746c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb9b447-54f4-493e-acfc-5db49ada6bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b92d665-430c-48f4-8ca3-52c81e99b5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05ecd87-6615-4e5b-93e7-b8bd57d7b9a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a81cad-b26b-4dfc-bdb9-994f87c44e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75eb88c7-88bb-4d26-a7bd-6c7d6f7c9141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cdbdc0-7ebd-48a5-89fa-73dc9765fe27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9c2043-3c26-4b06-a3df-885530b3bca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc800b0-33cf-4c23-8ab3-e034f52b78f9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfad85a-95f3-4a47-9f01-0a4256c33fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d995b8-0259-4277-bb23-3fac1583da32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa99049-a764-4881-b590-af8094d7c32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecfae98-62cd-4682-a10e-7751f0275bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82b85d3-46fc-4718-ae68-6cc81ea57f43",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4481012-09b8-4e50-8793-eb683ac34e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0b21fa-4bec-4fea-ae8c-5e0b4e47b5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7148fe-1180-440d-bfa7-705826ab2734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934e4bfc-6668-47d0-b04d-64a49b1bf0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b0db5-9470-4c5b-8e96-983d00ba43aa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f980d7fc-a437-4c9b-8d0c-6f7b04d731b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edada5f6-5c43-4bde-ac9c-1e38bde6fb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ac4d78-68e5-4bb6-b396-de39dacde1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25db9d71-27de-4c5a-a3e0-4f0f0504d8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d7856-106b-49bd-a1ae-71945baf6dd5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f4700a-883f-4e9b-98c6-8cd76e1bb992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2933db6a-d60e-4a7c-98b3-8a5f8e6beb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23586f2d-c46f-4d2d-8741-9c69020814d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e452f6-5ca2-4738-a041-bb5c51b23a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b122a-757b-436e-8f4a-8be3c8a8a5fb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc7c8f4-0bcc-485b-b156-a68c31f5d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5772dbee-df73-40ae-8146-992b833d8684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf683238-b511-4091-9032-f751b7e65213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6b1245-6eef-4839-8c19-939b4c52a789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b265f9-6886-4cd9-949b-af102d351de1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7a16e9-3f0e-459f-84ea-6606f7f03199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec9505d-16ab-49b3-b6d2-363994a766ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb75a37-dcb6-4ba5-834a-1ad92cb9beae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cbcaf3-2e09-48bf-b128-5642e2cada22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3fdf4b-da36-431b-8d77-0382d2f748f0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6a4980-5c02-41ea-a5d8-2c55275e6061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd283d82-8131-4b3d-8688-1da0da492da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360fd7ed-8332-4dab-a302-f3f71f4a16e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11cbb9a-1322-483a-bd76-c238e9a1754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d612dbc6-a9a8-4277-b634-435a7b81c45a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb47fb3-3c53-42ac-8bb1-bce1d90c4d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9372f7e0-c3bd-4101-a172-03abf4ece1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06d01e9-50df-43b7-a8ee-35b5033a849e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68d7a85-18db-451c-8063-0f79c5298641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd61710e-ccda-41c3-95e9-9dc03f20fc15",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b3f291-47b8-444d-ab3d-9a87a34b44b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a060bdde-bda2-473d-8489-672ac4a8fd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bc4bb4-6d23-46ed-8c10-993faa396a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd6f4f4-0382-4523-bb7d-923aa14ed9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78368ce6-2190-47c8-bd2a-ca255a8ebbe9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae38f683-057b-4eca-8d1b-7e71866b2267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e896914-398f-4c2c-845b-8a80c2fb56cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cfd749-2164-42d0-b08f-c038e73c490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e633c14b-b404-4240-9cf0-bc9b69cd1c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537404ef-81f0-48ed-9c76-041e238e8413",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c61d703-f52a-4b0e-9c29-c684c027eceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb91f174-cb56-457f-b0df-c240b6239e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db43843-a54a-46d0-9a7c-58182ecf69ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77983788-c162-49a6-8528-cf8b077a9f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cfd4a6-a050-4e73-98b7-bd356af6be00",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f138be3b-5d58-4b1e-9c3c-fbe5fbb604db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ef61f1-9915-4bfd-ae59-626cf8e67946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfc5f73-046e-468b-a987-ab87db31673b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10860434-0f07-438b-a04a-9f27ae206a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28583781-153d-43de-bcfa-9a99fb32990e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c6d66c-597f-4926-8d29-3f76380c7491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6ea2cf-ad9f-449c-9522-9bbe2c3ecd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a37c16-a920-48db-9097-08c5a72d9765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f569746e-4c22-4a9b-93b1-f295c7612568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5498fe73-7219-44eb-8f91-f1dad8c2d792",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7793522f-a408-4416-9513-f4a222120729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4738b8c8-4dcd-41d5-8d30-cca17a955b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abeacb1-b033-476a-bdd8-7a390d18cc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225f657e-215f-41c9-b6c1-716fa7d59080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22983fec-177a-4982-8f5b-c4738565f629",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b48d6f-80ef-4d9e-9192-5f6c6f940f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba89352e-6d50-4706-b051-dd5a4b4b6de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c338bf4-84a0-455d-b597-c5e09d4bf61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e9405c-99eb-48a5-b6cf-fc7a82441b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f19f1c0-cda0-43b5-83fa-2826db58d52a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a4a1ce-f5dd-485a-ad69-8467d2405973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e43596-e423-41a3-80d1-eb9b67017eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523004f8-e3f1-4a71-8f86-fe7b9a01608f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3274b7-19dc-416b-930b-2b9517d7e8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63a6636-0b4c-42ff-a6cb-6103fe2be09a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b46aa2-9465-451e-8ad3-af8a0b2f07f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ea1c3e-5de0-4c5e-a0d9-72eafe5aee21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2dfb9d-4bd0-48a3-96f6-08f817449b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6415a2b1-e256-484f-a7fb-8a0bf92917ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6a6f06-699b-45c5-8ccc-9e6d536c763b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ad8cb0-66ba-42bc-8ad9-422e37c8d12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b268fb1-a231-439d-bf11-3cf974cd7975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab4d948-8e18-4fb7-90b6-5c475f036ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6070c1e8-c22b-4063-a900-097f2fffc369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9495cb-afe0-4afd-b26a-b59c20530f27",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d360f962-b549-4513-912d-a9b762b9a3ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafae2d3-7dd5-4311-80fb-cfa0a71afa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f65650-c414-40a4-b444-52333c729123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaf7126-aa46-498e-8957-6f42b58435db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18b4a9a-c360-4d5b-b540-014d621a000d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae833f9-92e9-41e0-b375-d52feed2cf6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7081d556-9354-408c-8f9e-46f3afbc30cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69777c55-9d39-4d22-893b-991f3b996de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c144d946-76b2-4e5d-8cd1-d4901a9fc8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f35df96-44be-485a-9fa1-c67d69d60166",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8c5b5b-088e-46f9-8c12-0a100f8b7883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcb86f4-f7c5-480b-b295-0580ee3dd977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dc8a03-6476-46b6-9ec2-16c5f8b1180d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bb2f87-9c63-4f06-9eaf-b934f52f6b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2a96f4-d981-4341-b4c3-864db5a1267b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41d5806-5c9f-493b-be7f-8cba5850dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7798affe-2675-417f-9546-9df46c168c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f55182-6eda-4460-878b-aea49b13c9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ccaff6-bfab-4352-b3a2-831b1d6f5c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcea0a1-42fa-4817-9582-12f55fa4eb65",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fe098c-2d14-4990-b647-1663814a8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91cc607-10e1-4a71-bef9-0e95ac0d3d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32fb5cf-02e7-4e1e-9e53-9bb695d65419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eada29-9ad4-4d24-9dd9-09fda1ab938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562ce5b9-7cbc-4e66-93b7-89a33e96c56a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3dacf2-e185-48e3-ac98-34ce595a0af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69fe9e5-06aa-4d76-a79a-e91ade1b87cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd814a3-17e9-4484-b06f-1b5a26d088c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d00d45f-8c54-4fc2-b17f-1ff555722dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef273256-1892-4291-bd3b-13e8c212ff5f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f150b5c8-7b52-4bb1-865d-3ad9a613d7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a10558-2c63-4319-9e5a-adc458aa2af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f10c241-264f-4026-bf96-c6696327243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855c8065-7dfa-42c5-b12f-f4447fecb528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf413d-bf90-4595-aa5c-5b1cb4972a52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820e588d-17ac-4c34-ae02-53687cfd2eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89a742e-c6b0-48f3-bef6-2934d7bb547e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aefd79a-5d09-4751-adde-e1fffaac6774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41021651-f34c-409f-8378-0163edc540f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4199701-a1b3-43a3-8fcf-8d378162073a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca5bdbc-acd8-4646-be0c-aa27450bbdff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0219f876-b50f-42a0-a871-bbe6f32ae6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae39e4ae-0fc5-4b03-8c52-cb66e9797fc6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42568928-62b0-484a-81e2-672fa155bc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986ae483-40bb-444b-81fb-400fecc1b3c3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1bb80-6593-44eb-92de-83a2262531b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e9caf0-e1c8-4e73-bafb-f8d0e8cdcdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7646f32b-7093-45ad-90a2-46282387c283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f187f28-ce78-484e-a54a-ad44a9091967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e78e4d-7e50-474c-a1b5-46385273c524",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352e87c7-df6b-48ea-90a4-4bfb4f44798e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61d1684-8012-4722-9f73-eb80a2a035d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5799264a-383c-40f6-b636-8a2593d18d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b88ef5-d0fa-4c16-976e-fa2bcf801120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92e7271-19e8-4510-b79e-a11cb717ccff",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c091668e-e19a-49cf-ac2e-79f946d7552c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915f3767-0172-4f44-84ce-3cefad25d2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53816966-0918-433b-bc12-8e6b3f5b9bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cac022-46f0-48ab-978c-e92b90806397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daee150-99f2-4845-8fe1-5c034d726cc4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9307e0c8-0b6e-4dbb-bfcb-bc0b4c3bde1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8c4ebc-7718-43f6-8bfb-8a234a0f11f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd580b-afa0-41c8-90f6-8be2f50138d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2665cb43-62e4-40ef-aa8e-d7ee25d42220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3b6b9e-8aa9-44fb-af50-13824f08a2f0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1007cb4c-f750-4519-838b-e00f5baa3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21801a32-fef4-4e20-92b5-d948c1884a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27b5634-8052-4290-a0f8-45c6ac3f229c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdeb3d1-d91f-427c-8808-1a235e1324b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a77da6-9eff-4502-845c-2c7b9fd1b0c8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab6c902-3901-4bc5-a986-a3656d627ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eadfe27-2417-4030-a0fb-b43200de569e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a08514a-d502-47f2-af96-5e0fa0db4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccf2f34-e1a4-4795-9300-fa46f17dea38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97374776-2f7a-42b8-a459-2d9a8c7c7d2e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a090ac54-a445-49da-809f-78dbf714a962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5ec65e-428a-4610-b889-cc63a98e7b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287eb4be-1fb9-402c-aa50-583b84913f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e510d15a-e319-407d-a354-6c6c22edde99"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd650410-a46d-4b93-89ad-955b345065c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5b8da33-4b32-4955-a055-a383b84edee1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31cd6822-9436-4f36-a097-41443d367944",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6559d4e3-e54d-4abe-ba2f-5c9dc81782d0"
                    }
                  }
                ]
              },
              {
                "id": "ff685ec7-7683-4c9c-bbe5-bf5b5f864b48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7452f30f-767e-4ffc-abd8-8ce16e0d3144",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dce515-34b3-4139-b986-c8b1ae6aece8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dfc4fe8a-7fb4-4c18-b60e-5d35487bbd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d0af7e-615e-46c8-80a5-63d18e620614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ed40eb0-4b72-44a7-bbd7-03e08e7f8a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec86a512-aef8-419b-ac75-e7801030cbb6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c68ae0-5a1e-45f7-9bfc-0b5511162736",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "36877116-7936-4bd2-aa15-63dd8602891b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90286463-42f7-4899-a53a-a09b29662012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf9c6e90-f3c9-4093-a007-d6e71e5053cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "253dc71f-c02f-4358-9ade-e99b63b6e8ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a2ab29-de86-4dad-8260-0bb276cd4bb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d39b28-4e94-46b0-8097-d477a364cc5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60be845-dab3-4c7f-8fbb-f910cbb8654e"
                    }
                  }
                ]
              },
              {
                "id": "44ab1ad0-572b-43d0-88d4-53189ecc14a5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f1e46d6-f5bf-44a2-a2f8-05a5a28488e1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3ac661-936c-43f2-8781-7902675581c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "32a999e1-608c-4606-ad02-6a1584aee6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b530c1-3363-45f1-a34c-056ac28b7332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b41f15-e676-41b9-ae9e-9e776f179b17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "00fc404f-3b93-4241-af7c-832beb5e797d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8fd53b4-7c10-41da-8b6f-359c124478bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f4fe769-8849-4674-93fc-d1a500bedd30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e636746-f3ce-4bcb-ae7d-e9df3629dc48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac47e3f2-7032-4012-8d3f-92f2e2262ab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d37c8a7-c0f1-46ea-aaad-c6caf8746a89"
                    }
                  }
                ]
              },
              {
                "id": "578e8693-8478-43e6-a8f0-48bb0400f3be",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "543d13de-a922-4a5e-afe9-188bf9582ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfda2a4e-f788-4baa-981c-8eadc549abd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0581ce6e-db1a-4947-8e80-4872bdd88791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86b6e971-1db3-490b-bf21-2dce68ccf81f"
                    }
                  }
                ]
              },
              {
                "id": "61607841-7725-4f63-b061-140cbc32131f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9c0be9-2532-4502-b1d9-431c90096b38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7072b690-0193-4074-8e67-004b14d14b25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a597f91-d46f-45c0-bba1-65e993c30e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eff80c85-582e-4c7b-b230-6d6cc1a73d0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d101c02-bfcb-47fb-92df-396205d18e84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1f615a0e-6b2d-4384-a4e5-cbf0dbecb90a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6518811-0231-4512-bea2-432ee3e4dae8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dccd5a87-d305-495d-89d4-cff341d52390"
            }
          }
        ]
      },
      {
        "id": "992b557e-661b-4772-917c-3beb614ba7e5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b51e0eb6-6c3d-4cb4-8135-e5defbf867f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa5da959-5085-40c5-b01f-bb4fc07d702a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11da1e50-5d30-4120-a91a-093f00b4e87f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "239393e8-8f9e-4734-84f4-b47765643b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972915a4-c880-48f3-88fc-cc36c899641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cba785a-b73f-479f-8f1c-882a938cc488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab7699f-0267-4316-b2da-5b9d33ea8aa8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8172b027-fbf4-4a9c-ba73-2ad5f299c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "31f3a932-d6b0-435a-b7a5-fb9bd19a67ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6859c93c-76ce-4d27-95ab-e97b6588d00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a62183f7-7c4a-4b49-9ab5-092de889cba8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a221571-421b-40b0-9a36-b23476770a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f5cb5f-d377-4560-938f-fa786cd6d702"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67fc3f7d-fe28-46ac-a980-9059d3354d42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d8e4c8f-2363-45cd-a884-3c6c16c5d936"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46801294-6cb3-40c7-bd44-69aff20a3771",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "19ac969f-7542-4e11-a342-884ec299d8f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15f83864-b9d7-4958-b8b4-2d2e664664c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa96ada6-16fb-4d7c-930f-0e152d4261e3"
            }
          }
        ]
      },
      {
        "id": "7d2c1e57-25f7-474a-b9e3-6d2358b8c915",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf07396a-4624-4531-ab48-652b8267d9df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48f9db26-d825-4d44-9bce-9838f5927308",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "958cecb5-bf52-4ee5-bcb7-a868d90bedd7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb549d87-e96a-4ce7-b113-f3cfb116d0c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5e806da-7f37-4044-ab88-dc68e71bed4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd24ec10-66ca-40e5-851c-e97b7c004810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f81418e-7c14-41e5-8791-419dd874cf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b5c0ea-a621-43f6-bce5-74b7cded6563",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f08b76-686c-483e-bfb6-f4ef58f016bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e9f0e6cc-b652-4c2f-bec3-7913f9b0eee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c109a996-44c8-445b-8b9c-20aa0521d522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "950d96b5-16d4-4f6e-94f1-630ebaf72018"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fae2130-38a8-4735-bfec-e434f1d1887c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0f6c97a-911a-420f-8180-394d651b8028"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31eaf8b0-2dd5-41fd-b801-6670546b4cbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c48ebfc0-b01b-4205-8be2-bff9e5a59cf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a00c7b-3608-42d1-8129-c94aca39cb1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a358f66d-ef25-4f59-b97b-21fe0f61cf51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e501eb7-5c00-459b-8ac4-9688b20ba517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fb6fcbe-9446-41d0-b0a0-ee51a1da8e4c"
            }
          }
        ]
      },
      {
        "id": "92a22fc6-dd4c-4689-9d6a-7095b1352587",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9e2eb709-5596-4b6d-9e25-74fc4c8cf199",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e94fc2a-3e10-4e29-99ec-5c7638b6b95e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28783aee-303b-4e1f-950c-2c94d0ecd7c8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e66f6-457e-44c5-bf5d-74a4a8b6f186",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "166a9d0e-5fe8-4502-895d-1097b4b76184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dfd31b-d147-4a90-9d64-f7ca9c4026ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd9460c2-9197-4354-b586-d2493b84b948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaf2ba5-4ab0-488e-a717-834ff1fe2063",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7bbef4-c9f4-4ba4-829a-ba67c312d2a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "26ac9e15-61b2-4c43-8241-ce3deb1bc020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd2b135-94d3-46c5-aabb-d266cacf3564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2d94d9-e1db-4892-ab97-9f80f7014a4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ea6e545-b58e-40d1-85e1-87b460c7b28e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2edaa7e5-8f9e-4979-9885-16aedc154875"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9c8663-97a7-40e7-99d2-72067194b14a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfe21325-1f99-4767-a8a3-3494ec84c97b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f4e7da3-00c4-4118-96bc-9d46449b4d35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57e1c9bc-7db3-4c79-8e8a-f1d61ace16d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af625ce2-67b7-4f9d-aab4-0207f7840c81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ddfbc06-7549-4493-a0fc-7b833359344d"
            }
          }
        ]
      },
      {
        "id": "fa88e9aa-e40f-46d4-9bcd-759d0b4a6f3a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70bf0145-49d1-4d69-b526-867fba762385",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b17a23bd-aef2-4882-a421-878727349f9a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "caeef3cb-2e09-4eaa-9fdd-d945a1654221",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb760032-37a7-499c-938b-b1dd63571b20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca6da14d-db19-40e8-92de-8ae55601c183",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 416.9540229885057,
      "responseMin": 8,
      "responseMax": 2723,
      "responseSd": 309.9059395569958,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670719372316,
      "completed": 1670719491664
    },
    "executions": [
      {
        "id": "787483f7-2a82-4d39-b607-b479b27edbc6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a74489fb-5c22-4adb-97d3-3837a35c3f63",
          "httpRequestId": "433d2a7c-5fd2-4f98-8b1f-c4c5dd70655a"
        },
        "item": {
          "id": "787483f7-2a82-4d39-b607-b479b27edbc6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "894cdabd-78c8-4287-a5f1-56a575425e57",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "a1e3c3fb-bcaf-40cc-9d3d-c274d4531495",
        "cursor": {
          "ref": "2c0e494b-58db-4663-99fc-4eb60b1963bf",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "88ed2ffa-cd26-4bba-a742-bdd789925714"
        },
        "item": {
          "id": "a1e3c3fb-bcaf-40cc-9d3d-c274d4531495",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b7f60d31-be2b-4cc9-8a5e-3133aa6e9a79",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "f427edbf-b2b3-47cb-8677-9418d236135f",
        "cursor": {
          "ref": "e43b7a1c-6cfc-48c2-bb3f-98cab5f8d0fb",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f4343274-3ea5-43f3-8aed-ca3fdd35e3eb"
        },
        "item": {
          "id": "f427edbf-b2b3-47cb-8677-9418d236135f",
          "name": "did_json"
        },
        "response": {
          "id": "6569c403-6ff9-455d-a66f-5c5b5c9f3daa",
          "status": "OK",
          "code": 200,
          "responseTime": 776,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3368ec-9899-45a7-a810-e23756bac598",
        "cursor": {
          "ref": "b1c7b955-e89b-4d0f-8c4a-bdad242b53be",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a30e585-e38c-4c08-b4ab-70e955e03824"
        },
        "item": {
          "id": "3d3368ec-9899-45a7-a810-e23756bac598",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0d155cb-9083-4ebc-a428-cc743d986cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3368ec-9899-45a7-a810-e23756bac598",
        "cursor": {
          "ref": "b1c7b955-e89b-4d0f-8c4a-bdad242b53be",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a30e585-e38c-4c08-b4ab-70e955e03824"
        },
        "item": {
          "id": "3d3368ec-9899-45a7-a810-e23756bac598",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0d155cb-9083-4ebc-a428-cc743d986cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fff22e5-3bec-47f2-b0dc-11a62234946d",
        "cursor": {
          "ref": "e295f0ad-f716-4d53-9723-eee18a3cddee",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b845bb38-4631-4aac-80a6-bf893f1416fd"
        },
        "item": {
          "id": "6fff22e5-3bec-47f2-b0dc-11a62234946d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5a170dff-9e27-4f92-ba15-e8857291bf11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 547,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66465bf7-afe8-40e3-af62-b414f607b1e5",
        "cursor": {
          "ref": "e154d2e6-c86d-42ed-a555-3f969bbbe99c",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "45808802-db56-41c4-bac6-611ea76b9fd9"
        },
        "item": {
          "id": "66465bf7-afe8-40e3-af62-b414f607b1e5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3a53a3e-28f9-4c93-86d3-47b0c79a8e87",
          "status": "Not Found",
          "code": 404,
          "responseTime": 418,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a5752d-4537-49bc-9eca-529a794d9e2a",
        "cursor": {
          "ref": "e1cdc1fc-7044-4b46-ab1e-8cdd6864a723",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c997dac7-2ed6-4cb3-8733-50e2320af00d"
        },
        "item": {
          "id": "10a5752d-4537-49bc-9eca-529a794d9e2a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8926fe5a-fcbb-4fe0-988d-ba77b90b2cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22fffd-201b-482c-bdc3-02f2bed6b49f",
        "cursor": {
          "ref": "95b8d585-e068-49ea-b69e-c0ff457ebeff",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a563f50e-a7d8-4f90-97b7-54ac15510630"
        },
        "item": {
          "id": "0a22fffd-201b-482c-bdc3-02f2bed6b49f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2748af10-9daf-4e4a-8bbb-2a400914b25f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 432,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22fffd-201b-482c-bdc3-02f2bed6b49f",
        "cursor": {
          "ref": "95b8d585-e068-49ea-b69e-c0ff457ebeff",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a563f50e-a7d8-4f90-97b7-54ac15510630"
        },
        "item": {
          "id": "0a22fffd-201b-482c-bdc3-02f2bed6b49f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2748af10-9daf-4e4a-8bbb-2a400914b25f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 432,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343cf46e-5f93-4e75-9dea-f82d8146129e",
        "cursor": {
          "ref": "e4dd7c8a-5548-46a8-84f7-45fb5727a48d",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ef77b412-36a4-47f8-bb4b-0a6835c00d62"
        },
        "item": {
          "id": "343cf46e-5f93-4e75-9dea-f82d8146129e",
          "name": "identifiers"
        },
        "response": {
          "id": "2f45a9cf-8e2d-44f4-82be-eebb2fe7ad60",
          "status": "OK",
          "code": 200,
          "responseTime": 664,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac619f-3d14-41c7-8a8a-d298f01090aa",
        "cursor": {
          "ref": "c9ccf76f-3e3d-4e88-9410-83207d4394f4",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9dca5e4b-5004-4a36-8c4a-0fbf8cae3b55"
        },
        "item": {
          "id": "9aac619f-3d14-41c7-8a8a-d298f01090aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1540efdd-07c0-4fbd-97f5-32a4b4d52f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac619f-3d14-41c7-8a8a-d298f01090aa",
        "cursor": {
          "ref": "c9ccf76f-3e3d-4e88-9410-83207d4394f4",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9dca5e4b-5004-4a36-8c4a-0fbf8cae3b55"
        },
        "item": {
          "id": "9aac619f-3d14-41c7-8a8a-d298f01090aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1540efdd-07c0-4fbd-97f5-32a4b4d52f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f8fea7-0a12-467d-8c2c-0f077099adb2",
        "cursor": {
          "ref": "f806688e-f0be-4ed1-a968-b93e65bd4413",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63754959-7328-424b-8f85-518e8e55fd2a"
        },
        "item": {
          "id": "a6f8fea7-0a12-467d-8c2c-0f077099adb2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2c716240-05db-47a4-99b6-707889a37d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aec14c-a418-4ff8-8a30-924dbb35ae81",
        "cursor": {
          "ref": "e2231003-541b-4894-98f6-80dd9b5e64f0",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e6e18106-45b4-44ea-aeda-26ef451d3ec2"
        },
        "item": {
          "id": "a8aec14c-a418-4ff8-8a30-924dbb35ae81",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "146360b5-bda3-43c0-8cc0-ed1a00222d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa87027-9d76-4d4f-b62c-9a9a9f243215",
        "cursor": {
          "ref": "b8b7c3d3-e712-40a5-a335-f464746510e6",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ffb317e2-a40b-4440-989f-236544c42661"
        },
        "item": {
          "id": "4aa87027-9d76-4d4f-b62c-9a9a9f243215",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b15598b1-1cf7-4cb9-bd4f-f7bf59209741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ed2f89-a5d7-4ead-938f-7c81b07f619a",
        "cursor": {
          "ref": "7452ada5-c65b-43bf-a205-900b0cc818b4",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00e02cd6-f774-46dc-9c81-ac385fc62df1"
        },
        "item": {
          "id": "00ed2f89-a5d7-4ead-938f-7c81b07f619a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "09fae2ca-7c89-455c-bd30-add951e9aa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8708903d-3f3e-428d-85f9-798924378016",
        "cursor": {
          "ref": "fe427b95-aad1-4d58-aefe-1c5904c0a10e",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2fcb6794-b598-42ca-bfa6-1298119e6bd5"
        },
        "item": {
          "id": "8708903d-3f3e-428d-85f9-798924378016",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7ea60d3e-501f-4119-a3d4-684ec4deb89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972691aa-537a-4b4a-9217-d85fe9a695f2",
        "cursor": {
          "ref": "3bcf0ea8-f528-4a44-9fa1-229c9240beed",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3e3da8d-5e1f-45d5-bb3a-51647e73ddfc"
        },
        "item": {
          "id": "972691aa-537a-4b4a-9217-d85fe9a695f2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1055daab-2cb8-4d78-a2ce-a07bd2818f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650856c9-2844-4661-8320-6199cd6053ae",
        "cursor": {
          "ref": "f2441feb-1092-4578-9fa0-fa0ee1d2e2af",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "91c45776-6d05-43cc-9317-faffa0ea4e18"
        },
        "item": {
          "id": "650856c9-2844-4661-8320-6199cd6053ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "043c1e08-99ff-4f6f-baba-b0a8542c04f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad90803-a4ea-43f0-9420-bf34cdcb504b",
        "cursor": {
          "ref": "bb20f938-ac08-4121-b483-a70ddaadabed",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab640c32-01ff-4842-af60-4cc9c4b91b39"
        },
        "item": {
          "id": "6ad90803-a4ea-43f0-9420-bf34cdcb504b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1cee80b8-7c29-4f5f-9a92-aa4ef24b370c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721b319-f291-4e00-8d64-bcb2f41c6ed9",
        "cursor": {
          "ref": "0ca71b1a-5d02-454d-954b-b037ff0d9ef4",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f8ced21a-4328-41f9-b058-550dd4a67b42"
        },
        "item": {
          "id": "5721b319-f291-4e00-8d64-bcb2f41c6ed9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "679647b1-1c9c-4907-9273-90908f20d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78653d40-9629-454f-9cf5-0ed0355560c7",
        "cursor": {
          "ref": "ec247ffa-6a00-4810-b667-a5161b85e732",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8eed0a1c-efd6-44f9-9fb5-d252a6320800"
        },
        "item": {
          "id": "78653d40-9629-454f-9cf5-0ed0355560c7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "27b704b1-740e-43ca-bafa-d0fb1256c96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012ef412-fc24-4acf-ae9e-c35ab788188a",
        "cursor": {
          "ref": "cdb23c17-c77a-4046-a68a-55b126d01783",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "68650b35-2557-4d57-b5cc-0015ec0cde16"
        },
        "item": {
          "id": "012ef412-fc24-4acf-ae9e-c35ab788188a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "662c3ca9-540d-4dda-a5bb-a2761808a1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ab10c5-9ade-4b9e-9eac-758aae4cfd4c",
        "cursor": {
          "ref": "3f7906d0-3f34-4439-9262-04715e107385",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fde8261e-daf8-4dfe-acc1-6e0f42ddcbcd"
        },
        "item": {
          "id": "74ab10c5-9ade-4b9e-9eac-758aae4cfd4c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e9a2c873-4894-4755-a47d-f1091a528f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41bfb41-af43-4c8a-917d-ca60a90c1677",
        "cursor": {
          "ref": "1f7258f0-820d-47c7-beb2-d6e9ad12ff6b",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "051c96e1-8208-40b1-a76b-074a11eb50d5"
        },
        "item": {
          "id": "d41bfb41-af43-4c8a-917d-ca60a90c1677",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4eab83f3-14bb-4768-980b-1a380801bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a00218-d9d6-4c28-b834-1bedd671936c",
        "cursor": {
          "ref": "37f308f5-9ce5-4f82-bc43-263de3b6ae84",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0fc09ba2-5cdb-4755-b8cb-7ca0852a6823"
        },
        "item": {
          "id": "c1a00218-d9d6-4c28-b834-1bedd671936c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4045af1b-c52f-42e3-ba88-a8535e48bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac13959-3047-468d-8885-9084aee53600",
        "cursor": {
          "ref": "7912f390-091e-4890-a329-7f8364c6831a",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d1b618e0-90e6-4eb0-9930-aa9354dc59c3"
        },
        "item": {
          "id": "dac13959-3047-468d-8885-9084aee53600",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd3e6132-173a-4e44-a4ac-45de5608ff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e31768b-57af-4dac-8d70-448e85bb9833",
        "cursor": {
          "ref": "4777b608-b2ef-4f98-9f18-e7fea716f043",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "292d25d3-383a-49bb-a27d-cb743c99a9a2"
        },
        "item": {
          "id": "1e31768b-57af-4dac-8d70-448e85bb9833",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ca681c35-b419-4cb6-b589-4a59dbaafb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09aaff5-24d7-41b8-be1b-a821658f3d76",
        "cursor": {
          "ref": "961afc8c-0504-40f8-bde2-3cbe9a643065",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0a1b1447-46f3-46c6-afa3-0c9b54beca8c"
        },
        "item": {
          "id": "a09aaff5-24d7-41b8-be1b-a821658f3d76",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8fc22b2c-b42b-48e7-a48e-578089201257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416c5113-d198-47cf-a821-6019859f7ef4",
        "cursor": {
          "ref": "cb6b513b-5a61-4679-a3a4-ab3a37708a7d",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0dfd24cc-ed99-4c8f-8f5b-6383d7b645d5"
        },
        "item": {
          "id": "416c5113-d198-47cf-a821-6019859f7ef4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4f33ac8d-651b-49b4-bb8d-4a46770ef63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13200c5-2623-4ef9-85c9-a61ef80beebc",
        "cursor": {
          "ref": "3dffcaea-59f9-4da3-ae3d-943cdc2412b3",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "07a8efe1-df85-48dd-95c0-291f598ab862"
        },
        "item": {
          "id": "a13200c5-2623-4ef9-85c9-a61ef80beebc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "12098449-f342-4956-8a65-9e077132f775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af28250-46a0-4281-8ba6-69485e6dbb9c",
        "cursor": {
          "ref": "81baaf13-85c0-42aa-b576-34dfd790cc05",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5baf5b2d-108f-4d53-9a82-09ad5ea27a71"
        },
        "item": {
          "id": "7af28250-46a0-4281-8ba6-69485e6dbb9c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "def812f9-efba-49af-a5ca-12aa400889ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495af77c-4fdd-404f-b452-9d1762ec22d6",
        "cursor": {
          "ref": "1d0beeaa-80b8-4fd5-94d0-675924a4c918",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0b19af92-afa2-46df-98eb-0f625d00ecff"
        },
        "item": {
          "id": "495af77c-4fdd-404f-b452-9d1762ec22d6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ee6817a0-b2af-4527-bbfc-5ec1aaa6ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e5cc1c-45a8-4a42-933c-959835b46ee6",
        "cursor": {
          "ref": "41b56229-3a16-4c8f-8c59-8d2e2fcdc72f",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "642378ae-26ed-4cec-86bb-66739a66d530"
        },
        "item": {
          "id": "a3e5cc1c-45a8-4a42-933c-959835b46ee6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b07eba3e-56e6-4c33-b229-f9254ccecc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be884c-1b08-47f0-a09e-08d968d11678",
        "cursor": {
          "ref": "bb37dbdb-156b-4d85-9015-022b99762734",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4ffb95a4-bba8-4b01-b3ea-465459d0a7df"
        },
        "item": {
          "id": "f8be884c-1b08-47f0-a09e-08d968d11678",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5ef11d88-2aa0-4ce9-af66-b1b15855051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80afcdf9-88c7-442b-b997-fafe6fc820c7",
        "cursor": {
          "ref": "98ea4d2c-26c7-4c95-b4fa-7ce221517a7b",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7ae2b29-edef-4148-aaf9-efde9e0f48c5"
        },
        "item": {
          "id": "80afcdf9-88c7-442b-b997-fafe6fc820c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1b439bd4-62fc-432c-91d8-423f86a1368a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78430e5e-9fa2-44bf-8498-187199275766",
        "cursor": {
          "ref": "54a863e4-eb52-4b24-916e-6732a294bbc1",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0be80e45-5b63-4d28-835b-8b3cd726b819"
        },
        "item": {
          "id": "78430e5e-9fa2-44bf-8498-187199275766",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "31064ea8-77c3-4d95-9cfb-6983120f3f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052e8661-5df1-47d7-b04e-38bc27d2fbb5",
        "cursor": {
          "ref": "2bc293de-2434-4429-a3a0-48a937f9a3da",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "345ca8aa-dd0f-4bfe-8cd4-71bc7fd9deb4"
        },
        "item": {
          "id": "052e8661-5df1-47d7-b04e-38bc27d2fbb5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "08a4db0a-26f2-4e0d-ab52-ca29886b56b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2e4c43-b3d0-4d44-93ad-c2c43f281b1d",
        "cursor": {
          "ref": "85fafd88-683f-465f-8882-60d5d7885db7",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "422751d3-b3db-4b74-a220-ac4e1ce9aa2a"
        },
        "item": {
          "id": "4a2e4c43-b3d0-4d44-93ad-c2c43f281b1d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8b96448-b221-4722-8f3d-82a1314c879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252b80a5-dbcb-485b-8f52-742fa92f8337",
        "cursor": {
          "ref": "0760ba7a-ac64-4ce3-959e-305cb2b2b99d",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "092df843-a7ad-4a9d-9e64-44655e362801"
        },
        "item": {
          "id": "252b80a5-dbcb-485b-8f52-742fa92f8337",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a86d9439-1600-4b19-b183-fc712ca34e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523017d-672c-491e-99e9-c5745e6cc51f",
        "cursor": {
          "ref": "0de3c827-300f-4101-8257-9c7769930f54",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7437cf0d-d6d6-4ccb-84a8-eb7c979b59a5"
        },
        "item": {
          "id": "2523017d-672c-491e-99e9-c5745e6cc51f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6939ebc6-45ec-4fc7-b786-641722be5900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaabecdb-edc2-408e-884b-1618b1c2889d",
        "cursor": {
          "ref": "6ab23af8-84a1-4fa0-84c0-8b759c94500a",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4598535a-2345-4f8f-a5a9-52951ad721fa"
        },
        "item": {
          "id": "aaabecdb-edc2-408e-884b-1618b1c2889d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5801c0e1-1cca-46a4-97e3-78a8434a33c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b4a065-3af6-4798-ac92-7b6dfcf382c9",
        "cursor": {
          "ref": "b2c53dfe-8ebf-4b0c-9706-cc592be1986e",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fceb79ae-91d7-4850-82cc-60e4684540d9"
        },
        "item": {
          "id": "b3b4a065-3af6-4798-ac92-7b6dfcf382c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82ddad48-90a6-46d6-8df9-93bf08ea2f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d718412e-0464-408f-8f2c-a6a86925fb44",
        "cursor": {
          "ref": "2198f2b7-16da-44af-9968-6e3f17e3c328",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "60a479f5-6c6a-4148-bb8e-02e5f4eaa0dd"
        },
        "item": {
          "id": "d718412e-0464-408f-8f2c-a6a86925fb44",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d34cd26-b403-4df4-bb5d-051c42eff5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8192d52e-329e-4772-8ceb-a141c05713b0",
        "cursor": {
          "ref": "9b7f346f-08f6-4cff-bfbf-9a2b1895a9fc",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "673218d9-7185-4cff-9076-f5ab9baa862a"
        },
        "item": {
          "id": "8192d52e-329e-4772-8ceb-a141c05713b0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d31f2f7f-00b1-43a8-8298-52d64e51f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6057c4b4-fa3b-40bf-874b-d91a59bd5198",
        "cursor": {
          "ref": "fb604785-8cea-470c-9bba-278184c508f8",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fffd8d92-f41a-4893-8fe3-00d9c1e06aca"
        },
        "item": {
          "id": "6057c4b4-fa3b-40bf-874b-d91a59bd5198",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "592d78ec-034b-49e9-b3d0-08ba174ca7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeb5f7b-f5f1-4fa4-9884-4760c52a1866",
        "cursor": {
          "ref": "aac0459e-3612-4230-8b94-5da98c414d4d",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7537f4ff-4806-4ed6-8af8-44385834eed8"
        },
        "item": {
          "id": "6aeb5f7b-f5f1-4fa4-9884-4760c52a1866",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "902306d8-faf4-48df-af04-6d712f9c816e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cada91c-2fec-4a7d-a5b8-f690254a17f7",
        "cursor": {
          "ref": "cf692fa0-3201-4329-bf2a-7702665361fa",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "684c409e-f1a3-4ce2-8dce-11acdaa15baa"
        },
        "item": {
          "id": "9cada91c-2fec-4a7d-a5b8-f690254a17f7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6f653a5f-0e87-43fd-86e9-68daffe70c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49172c3c-ae72-4c61-91f4-bd1fbf1447a7",
        "cursor": {
          "ref": "077d7652-accb-4b63-a6b7-35469b39f60c",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9c4d46aa-01f8-464a-b684-08e514e10e20"
        },
        "item": {
          "id": "49172c3c-ae72-4c61-91f4-bd1fbf1447a7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "afadc553-62b6-4b01-83c2-b92debb47494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e9dc5f-262c-4a87-a73c-d9173cf45d7a",
        "cursor": {
          "ref": "b0e70343-392d-450e-8059-677679d60327",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "393a5b82-984b-4be7-9ce0-dc909a1e4f90"
        },
        "item": {
          "id": "92e9dc5f-262c-4a87-a73c-d9173cf45d7a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bfb87716-41fe-4fbf-8bd6-c4efdc6598de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f020a269-0538-4d8a-aba2-c155783de3dc",
        "cursor": {
          "ref": "85931449-c2f5-4dc0-a554-31a4ee2643bd",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dfdbab27-f017-4c68-bb5d-db85289abcf2"
        },
        "item": {
          "id": "f020a269-0538-4d8a-aba2-c155783de3dc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fcc5199b-70d6-40ac-8c3a-d5e4fa92740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b30903-b58f-41ba-b37b-e1963d74b7d4",
        "cursor": {
          "ref": "19806533-a98b-4fa0-9a78-fe6def4548e9",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "07e5ec97-3a0f-40d8-9095-d4f011f90ee8"
        },
        "item": {
          "id": "53b30903-b58f-41ba-b37b-e1963d74b7d4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef203f29-5530-4d0a-be4b-76ce7f352493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d02b3c-6177-4352-a269-c5ec2eb9b94f",
        "cursor": {
          "ref": "441ec7b8-ab1b-4901-98d3-205d6c9b30cd",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08e02ec5-738c-41a1-b528-be9802c6149d"
        },
        "item": {
          "id": "e6d02b3c-6177-4352-a269-c5ec2eb9b94f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3d479811-1b1d-47f2-99ff-3181e4045935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2f9e4-fc7a-49bb-b74f-fad8fc648426",
        "cursor": {
          "ref": "d1a158a3-fed6-44c0-b62e-a4726db4770a",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a920d2b2-dd77-47e8-9456-871440f32a74"
        },
        "item": {
          "id": "ccb2f9e4-fc7a-49bb-b74f-fad8fc648426",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3474e2d7-d3e5-425d-92ce-182d1a075ccb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 499,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580cf3f2-f0f4-40be-b50b-1bea24f4ff82",
        "cursor": {
          "ref": "8c744359-db2c-4d9d-a726-25b58f042198",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a73ae598-82e2-4436-a4f5-1237b628df4e"
        },
        "item": {
          "id": "580cf3f2-f0f4-40be-b50b-1bea24f4ff82",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d474ab7-483b-410c-8cc0-987847d6d448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041a6a47-9901-48bc-bef5-3c4bb97b21d8",
        "cursor": {
          "ref": "2b9be89f-568a-4f80-a118-3ff65ce881fe",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "43e5fc00-9f47-48c5-a996-b4f3441ad011"
        },
        "item": {
          "id": "041a6a47-9901-48bc-bef5-3c4bb97b21d8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "387583c4-4545-45c1-8bd2-87c7ea16bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c73e12-1b3f-4e8e-8c18-e10e9933dc41",
        "cursor": {
          "ref": "f0fcf24b-3f0d-49f4-90ce-4df4279d0ef5",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5d369017-d1b6-4f2e-bef7-0323dd24d2dd"
        },
        "item": {
          "id": "51c73e12-1b3f-4e8e-8c18-e10e9933dc41",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "649dcf69-8b7a-4143-bbe0-ed5f6a95ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f7314-48b3-446b-b626-73f95f361a60",
        "cursor": {
          "ref": "3dd7f6d3-4333-4b2f-8ad8-8287fe834623",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "da09d0b2-f090-476d-8635-6fcffb867f43"
        },
        "item": {
          "id": "d37f7314-48b3-446b-b626-73f95f361a60",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e9c679b4-bbfd-416a-ada7-57d0813053df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a747ff99-b17f-497c-8fb7-543656db0a87",
        "cursor": {
          "ref": "1e63d44c-326d-4655-9ef8-705650245eac",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ed3ae852-22ca-4cfb-8bd7-7c820a9e0e3a"
        },
        "item": {
          "id": "a747ff99-b17f-497c-8fb7-543656db0a87",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7f06969e-4c1b-4900-8cba-199bc0439a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a993da1d-7e2b-41a6-b85f-83e1dd96ff06",
        "cursor": {
          "ref": "abea5792-abbb-4169-8f13-dac85086af6d",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6cf47eb4-3014-482a-8947-ccf327bdd6e2"
        },
        "item": {
          "id": "a993da1d-7e2b-41a6-b85f-83e1dd96ff06",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bd06b1a1-5a42-4d7c-b097-5f93340ff923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9a3430-ee6c-4284-a325-4112aa86ede7",
        "cursor": {
          "ref": "ed74427b-1f20-4f2e-8abb-e4592abd6b83",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1de78536-ef74-4e12-ab6e-99fab421d875"
        },
        "item": {
          "id": "cb9a3430-ee6c-4284-a325-4112aa86ede7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "59d2e376-1be0-47a2-8c81-b37145857975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27b38e-7502-4ed3-a367-48553fef419b",
        "cursor": {
          "ref": "1b2d1440-c058-44e2-adb6-c36c0e7960a4",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "336f4f5f-ef46-4921-aca3-20a072444237"
        },
        "item": {
          "id": "7e27b38e-7502-4ed3-a367-48553fef419b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0ece6894-d75a-47ee-895e-4ec7a6f8741d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e978cef9-a442-4f62-b166-891b277ec73b",
        "cursor": {
          "ref": "7556839e-0177-4f17-9922-276befc1a6d2",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "83103790-ab38-462a-99e4-fded2310ae2e"
        },
        "item": {
          "id": "e978cef9-a442-4f62-b166-891b277ec73b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a155c44-3622-46d0-8ba3-b93317faa857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db28b2f3-613e-462d-996c-073567d3d7d7",
        "cursor": {
          "ref": "2751e12c-d4c3-4f30-9e8c-d4119f8da669",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f65dbab-d50d-41e4-bdf4-cdabc00262b5"
        },
        "item": {
          "id": "db28b2f3-613e-462d-996c-073567d3d7d7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7a4b7e0b-1401-4aa9-82ce-91923e346225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b9c61c-90f4-480b-bbff-ee846baa34d5",
        "cursor": {
          "ref": "676a8edb-56a4-411b-8f46-690bdcfbce0c",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "209085d9-1a51-4bca-977a-d48436724e26"
        },
        "item": {
          "id": "19b9c61c-90f4-480b-bbff-ee846baa34d5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cac10b0f-5d27-4f52-9038-5d0df23b137e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd01729-d4a1-4061-ac02-4d8e9d9c1265",
        "cursor": {
          "ref": "8ca9218e-09ca-4f14-86c7-d95f615e226c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3425f480-5e10-4ada-a2b7-df6d547ec050"
        },
        "item": {
          "id": "9cd01729-d4a1-4061-ac02-4d8e9d9c1265",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e93ced70-7243-43b0-a8aa-2f6d061ff3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc5e92b-6713-4ff7-8c35-cce981e8d8f5",
        "cursor": {
          "ref": "c2837457-1839-4991-8194-0f23e8e89f04",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d00c59a1-69c3-47df-a117-4cbbedc588a2"
        },
        "item": {
          "id": "bdc5e92b-6713-4ff7-8c35-cce981e8d8f5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "167db5dd-d8e5-42d6-8d49-4531241d2ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac672b31-2430-48d5-9472-9ce0c0658c5e",
        "cursor": {
          "ref": "9f7ff5f5-0473-48e7-ae3c-fc311c18a04d",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a258d6c3-6695-45ac-8692-0d844f775e24"
        },
        "item": {
          "id": "ac672b31-2430-48d5-9472-9ce0c0658c5e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4de2fae4-6dcd-44bb-9eed-590b9e1ae6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ce93af-e356-4156-8625-ebc93c062ffb",
        "cursor": {
          "ref": "70b77b83-b008-4cf3-90e8-26eeb3ee1e36",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "863c834c-f9c0-4483-b09b-f6f037767c34"
        },
        "item": {
          "id": "20ce93af-e356-4156-8625-ebc93c062ffb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bc362ffd-85f1-4401-a8f1-1ab6d31ceb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8915e3bf-45c6-4350-af8c-331f5ad8bc3c",
        "cursor": {
          "ref": "e3d92029-0f31-4f2e-850c-9240bf040232",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e4b641e0-b565-4466-8d96-8259ef930db5"
        },
        "item": {
          "id": "8915e3bf-45c6-4350-af8c-331f5ad8bc3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6b2b706f-8a1b-407e-bd61-5a09d75b3385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dfd656-b2ec-4db4-9ccb-46127692154b",
        "cursor": {
          "ref": "0b9df059-c940-4c80-abe3-a7b8a46eba02",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56368b67-942a-4d9b-9c91-b85f2bb7f1c1"
        },
        "item": {
          "id": "24dfd656-b2ec-4db4-9ccb-46127692154b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6c0a6cfb-32f5-4c4e-a5f3-eef6ee783f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1dfc8c-990d-4295-ae26-bfa68c69b6d4",
        "cursor": {
          "ref": "698c6997-1534-436d-bbe7-6e05927f46bd",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "368dc13a-a9a7-40c3-aca0-128e49ba675d"
        },
        "item": {
          "id": "8a1dfc8c-990d-4295-ae26-bfa68c69b6d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6b5f4851-812b-4cb5-814d-a192f5c6c6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dfa713-aa26-4e36-b280-38f740c4a289",
        "cursor": {
          "ref": "900d2846-dbae-4f5f-8090-daad0c8c075b",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "35c02d66-7038-4ea2-bf9d-da45b7c864c9"
        },
        "item": {
          "id": "35dfa713-aa26-4e36-b280-38f740c4a289",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a355e2ad-daa8-4555-ae1e-d4d85f585d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422f480a-bdf8-4c1b-9788-7ea04ae12a0d",
        "cursor": {
          "ref": "e9755858-2e20-4c3d-be54-125962722ded",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c6289ab5-ef34-4184-9df9-cb60d6d6471b"
        },
        "item": {
          "id": "422f480a-bdf8-4c1b-9788-7ea04ae12a0d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95f53982-95e2-4d54-9d69-abd6fcc893ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51081795-64ca-494b-9d2c-13cfd5b0bf1b",
        "cursor": {
          "ref": "5e7182ac-83ff-4770-aeb4-bbd07b0465eb",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "63b7fcce-84dc-4821-a3c4-49e65658b1a9"
        },
        "item": {
          "id": "51081795-64ca-494b-9d2c-13cfd5b0bf1b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5c82ef79-f60f-45cf-8e3c-4bbe98cd40de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98af3ac-8fff-460f-957a-eff9267990b2",
        "cursor": {
          "ref": "3741b1cb-2c74-40f1-a6d2-5aac1c0b89c5",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "67103d58-ff19-415b-9bf3-d1fa405c01b4"
        },
        "item": {
          "id": "b98af3ac-8fff-460f-957a-eff9267990b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8d405c3f-62fc-4f21-aacb-bbd4aa014e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badda0da-0f43-4894-b026-9946b99097e0",
        "cursor": {
          "ref": "a90e9b4a-a7b0-48f8-9108-1ab8fe309497",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "db1a0155-5139-4752-9eeb-4422f6b70c32"
        },
        "item": {
          "id": "badda0da-0f43-4894-b026-9946b99097e0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "af6574df-5307-4166-a367-f3451bce38dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0155c2-99b6-45c4-8469-9519b43a460c",
        "cursor": {
          "ref": "09bdcfeb-0fa4-4d3a-abfb-82518ea22162",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "90e696c9-7181-4637-bb54-e61de379a0cb"
        },
        "item": {
          "id": "ec0155c2-99b6-45c4-8469-9519b43a460c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b98eafb3-c6cd-49b6-83fd-abeda12247e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a5691-ae7d-4f9f-bb80-2cad18fc3e81",
        "cursor": {
          "ref": "526de507-c193-4369-a604-804ae235314d",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cde92a13-d039-4237-9d0d-c53438de8900"
        },
        "item": {
          "id": "8a1a5691-ae7d-4f9f-bb80-2cad18fc3e81",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "64a85592-f4ff-4a32-9d13-eaa22a1b5878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4343df70-a1be-49be-8876-6ecc3074d1ec",
        "cursor": {
          "ref": "77f78dbe-24df-4dd5-b341-7152857029ce",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f2570999-010f-4459-9128-68fc99e1a0ba"
        },
        "item": {
          "id": "4343df70-a1be-49be-8876-6ecc3074d1ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a2579668-e3ef-4491-bdc9-57b66a8fcb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faf92a0-36c0-42fa-95c3-df7d5ef501f1",
        "cursor": {
          "ref": "fce803ff-c9e5-480b-a556-93a4a98b0f10",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4beb3c8b-274a-43ca-a803-f486c5d81b41"
        },
        "item": {
          "id": "2faf92a0-36c0-42fa-95c3-df7d5ef501f1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "017dd1da-18c6-4bac-8f7a-4e4df24e1975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d522c3f-41d0-4057-9579-71e9423cc7ae",
        "cursor": {
          "ref": "5a317527-0697-4467-9c1a-a015d980390a",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a47b942f-5d10-4b78-8306-18f8f5a1389d"
        },
        "item": {
          "id": "4d522c3f-41d0-4057-9579-71e9423cc7ae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5c900ee7-b74b-4948-81f4-bcbb857af25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c3686-01cf-4cba-8c60-d15aa75f3e6f",
        "cursor": {
          "ref": "1a323a49-915d-45b6-a7c6-471dd8edaaad",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e86b69a3-a13b-4dea-b388-7b256cc8d19f"
        },
        "item": {
          "id": "798c3686-01cf-4cba-8c60-d15aa75f3e6f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2649e000-78ad-49bc-8dc5-ab55b39949cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49441508-9464-4dfb-88d6-92b369eb3073",
        "cursor": {
          "ref": "0f0b71df-d433-4221-8ff4-94018188c7c4",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "21fa28e3-9fbf-49fc-b17b-3c75bb3db330"
        },
        "item": {
          "id": "49441508-9464-4dfb-88d6-92b369eb3073",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "633a67ce-f669-48a9-affd-ac875bcb0e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d295bd6-c181-4474-910f-7ac71e2e68a7",
        "cursor": {
          "ref": "51444e68-db5c-45ea-8cfc-b8c3ff657d1a",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "75371d4c-f96c-45f8-91d1-a58eb593c901"
        },
        "item": {
          "id": "3d295bd6-c181-4474-910f-7ac71e2e68a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddc4e1c5-2777-4f3a-ab51-2c106cc91b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfb3262-c40c-4900-86ee-6f4988186468",
        "cursor": {
          "ref": "305da867-2bb4-4e5b-9b87-5d84dc917152",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "60f6eee9-5052-4f80-abee-bfc5b0d493d0"
        },
        "item": {
          "id": "0dfb3262-c40c-4900-86ee-6f4988186468",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f2170008-d361-40ae-9b13-2c47d5d009cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37300ff1-b03f-4efa-a1c0-2a80594fb1b6",
        "cursor": {
          "ref": "84141cc5-5ed8-42ce-9c10-2598be1beb7f",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0cb2185c-ae7c-4756-a886-f2a863f1bb14"
        },
        "item": {
          "id": "37300ff1-b03f-4efa-a1c0-2a80594fb1b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ad51b5ac-6f19-4939-8b1c-544549a7ef04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc589a9-e440-4d9e-ae73-eedecaa5fd43",
        "cursor": {
          "ref": "21989820-3161-4746-a63f-88e023f0cb2c",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "55d54654-674d-4376-8b3f-1f5621e89937"
        },
        "item": {
          "id": "ebc589a9-e440-4d9e-ae73-eedecaa5fd43",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54612583-3b14-4b6f-9955-a90cfd1f323b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3579352-d48a-4f6e-9a63-a219a8a1a152",
        "cursor": {
          "ref": "8d653bd9-b64d-4b60-869c-a8a6d16d4c82",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d9ac0806-a490-48c1-a0ba-c8e60477d421"
        },
        "item": {
          "id": "a3579352-d48a-4f6e-9a63-a219a8a1a152",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "55fe2228-aec6-47e8-bf93-030e4dce1127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeea384-a46a-452f-8197-6d43fc9dff6a",
        "cursor": {
          "ref": "b35e453f-3f6e-4947-8413-90946ee58dcf",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ca8f0550-8690-49c0-b144-429e5b50fed7"
        },
        "item": {
          "id": "cdeea384-a46a-452f-8197-6d43fc9dff6a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bc5e3b31-506d-440d-9576-72982cdcf99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b7cde1-800b-47ff-8701-b94605390330",
        "cursor": {
          "ref": "4c947796-d174-4b86-b61c-e7a5fe2813b2",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0c895446-4624-4f6c-937c-caa94f2dd1a7"
        },
        "item": {
          "id": "a7b7cde1-800b-47ff-8701-b94605390330",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7bf52159-e4e5-417e-9238-a53c77a4c732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093a4e64-578d-4008-bea7-a6bfef1c3efd",
        "cursor": {
          "ref": "d6bbcbe7-a1e5-497d-966b-ab48d9c267be",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "800c7971-8bc5-4318-866d-9334798eaa82"
        },
        "item": {
          "id": "093a4e64-578d-4008-bea7-a6bfef1c3efd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0e05bc9-c0da-4c53-90ee-bcd337bde12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e81cb2-01f7-416b-b96b-63135f148945",
        "cursor": {
          "ref": "3d9744fe-0ce9-47cd-ba52-465e3130d17b",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ce22291d-74ae-4d54-b75c-8205ae89f3b8"
        },
        "item": {
          "id": "46e81cb2-01f7-416b-b96b-63135f148945",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dfc8ce4d-2eb5-4f34-85e1-90865a75f0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c9d16-4cc6-40d7-a2ab-e960d4fec33a",
        "cursor": {
          "ref": "6bc8e026-6a35-418a-a872-b285355208db",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a17f7b38-1c36-43f6-aaa3-f7f95c2514de"
        },
        "item": {
          "id": "845c9d16-4cc6-40d7-a2ab-e960d4fec33a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "120bb3af-b3c2-4fc0-a1b6-941c20a87a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a72306-5a07-44c7-9058-646904617bc7",
        "cursor": {
          "ref": "409c1a88-a0c6-4fd0-ad56-a23f29d26a35",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d43128e3-2d59-4659-8cdb-f0d003fc695d"
        },
        "item": {
          "id": "31a72306-5a07-44c7-9058-646904617bc7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "41ec42fc-118f-4212-8bf7-00b739869cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04660f67-5274-4bc4-90d2-cd9c9707d682",
        "cursor": {
          "ref": "68570cc7-ad65-4141-949d-bba863fe01d9",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4944d85b-599f-4cc8-b08e-00e55ea140e1"
        },
        "item": {
          "id": "04660f67-5274-4bc4-90d2-cd9c9707d682",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa130ce2-b689-45b1-b644-b77605b85af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05e0855-50db-4b67-8d68-9e4814981192",
        "cursor": {
          "ref": "8369b4d5-e26d-46f4-ab22-909bf86f2bbe",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6ae98e1a-d782-4200-9eb0-d4c00f26463b"
        },
        "item": {
          "id": "b05e0855-50db-4b67-8d68-9e4814981192",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "93ff41b2-5e4b-4ef3-a995-baf4b8cdd0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1ac155-4cc2-4c9a-a5ab-f842a87c6fc8",
        "cursor": {
          "ref": "89b987ff-5eab-431c-95db-4b17f9b5d8e3",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7919a4af-9f15-4f54-a150-3afefbdd8465"
        },
        "item": {
          "id": "2a1ac155-4cc2-4c9a-a5ab-f842a87c6fc8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d954aef3-2d59-4905-b91b-eaceb8e7db10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0901f46d-253e-4edf-b659-ffb92f7f7b91",
        "cursor": {
          "ref": "702fee01-7c33-4468-92f2-c0bf8eafac43",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "032ed671-46e9-4501-bed2-9d5f89f69b5a"
        },
        "item": {
          "id": "0901f46d-253e-4edf-b659-ffb92f7f7b91",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6a1d3829-b027-4fcc-883c-91e3a197cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b50bd08-0f07-4c61-aff9-c8c0753a48b3",
        "cursor": {
          "ref": "93eafc7e-9db4-4336-a450-bd0e5c1ceed1",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "147aa7c2-b089-4ba8-8a88-35fcce850de1"
        },
        "item": {
          "id": "9b50bd08-0f07-4c61-aff9-c8c0753a48b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7b61c397-5e77-419d-a131-90399e509531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9222d4a-c8bf-4672-84db-447230a9596f",
        "cursor": {
          "ref": "07e464d6-5786-4b27-88be-91f54138dc9a",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3fcee1a6-c508-4737-acf9-eb36ccf8aaf5"
        },
        "item": {
          "id": "b9222d4a-c8bf-4672-84db-447230a9596f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bccf68c2-4dc4-4ab9-b9b1-c0f5f447725a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79962799-8bb2-40b0-8e7f-9d904597116e",
        "cursor": {
          "ref": "2ecc22a2-25c8-4aca-9599-085fd1b28ce6",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae2b3aec-914e-43f7-9517-cf7c27029178"
        },
        "item": {
          "id": "79962799-8bb2-40b0-8e7f-9d904597116e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f3b68f0a-525f-43df-b22f-408848ef2e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c881e9-1da5-4ec9-9751-1d8be58c6a8b",
        "cursor": {
          "ref": "e1ef54f3-66d7-4c38-8937-c1e78da67233",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "96c0250c-fe26-46d0-8a61-0834c7065b33"
        },
        "item": {
          "id": "a7c881e9-1da5-4ec9-9751-1d8be58c6a8b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c00f63bb-3c1c-417b-9c3e-4d4fa9b4ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e304f2d-bd50-4034-9796-ed474added2e",
        "cursor": {
          "ref": "6bf9f5f2-5ee0-469d-81c1-370ca708d672",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "158f2258-bb6c-4059-9339-a3af7bc0789e"
        },
        "item": {
          "id": "4e304f2d-bd50-4034-9796-ed474added2e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37345efa-f5cf-430b-9503-1d69712090b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737db1a7-37ff-4cc0-8b83-ccdcb44e12be",
        "cursor": {
          "ref": "a6f6eb45-5008-45af-8286-574a3d83b234",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "50d6690c-86c5-400b-8b28-f97970a81860"
        },
        "item": {
          "id": "737db1a7-37ff-4cc0-8b83-ccdcb44e12be",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bd28a7d7-a126-4ec7-90ca-36ddae96a45f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 448,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab23d41-40f6-40b6-a49d-f17a61138ab5",
        "cursor": {
          "ref": "fc0d816f-19ef-4464-955e-0989b44dbcd9",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f3e106f1-cc23-4b0b-a64e-f60213b3b3f6"
        },
        "item": {
          "id": "9ab23d41-40f6-40b6-a49d-f17a61138ab5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8f4b3c74-690d-4c59-aae9-bd3d169f46b3",
          "status": "Created",
          "code": 201,
          "responseTime": 2099,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "6dec3273-2b00-450b-9343-6fdbec5f30e8",
        "cursor": {
          "ref": "a7e25710-f6ec-4dd9-b1cd-0987d90ab4a6",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cef3021e-655c-4d89-a67e-f48930d6b7cc"
        },
        "item": {
          "id": "6dec3273-2b00-450b-9343-6fdbec5f30e8",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "5a7993cc-34e7-44b1-a835-798fb97cce88",
          "status": "Created",
          "code": 201,
          "responseTime": 1965,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "d8082cf4-a214-4a50-84e4-cb69be7756a3",
        "cursor": {
          "ref": "d34b4912-1495-45ae-92d8-a97e56caac19",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dcf30603-4555-4918-9473-4b8d4ce6dca0"
        },
        "item": {
          "id": "d8082cf4-a214-4a50-84e4-cb69be7756a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7b0f2fd3-0e1f-4a66-8571-cb501a0820a7",
          "status": "Created",
          "code": 201,
          "responseTime": 2052,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b8d1dd9c-343d-4c0a-a6d2-6822f732f90d",
        "cursor": {
          "ref": "f15c597b-a772-4945-ace2-91d334035866",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "274834c6-b4d4-491d-b1d3-fb13d72ca99c"
        },
        "item": {
          "id": "b8d1dd9c-343d-4c0a-a6d2-6822f732f90d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "92b08322-705d-466f-a71d-939933887bbf",
          "status": "Created",
          "code": 201,
          "responseTime": 2123,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a92a2414-264b-48e2-ac3f-883e3b51ec78",
        "cursor": {
          "ref": "f2f115e3-380d-4e34-b844-d59f6b158ef4",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ae27ba46-ed09-466f-a0df-1ff8053ce1f0"
        },
        "item": {
          "id": "a92a2414-264b-48e2-ac3f-883e3b51ec78",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da3765d0-db91-455d-8d6d-19d27c5617f8",
          "status": "Created",
          "code": 201,
          "responseTime": 2153,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "3e537e5e-e3dd-49b6-8bf2-75a93a1a9608",
        "cursor": {
          "ref": "be9508ab-420f-4d0d-a29f-34ea2e8e859d",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c65edef1-7b4b-4e7e-9f03-6d5951f5959c"
        },
        "item": {
          "id": "3e537e5e-e3dd-49b6-8bf2-75a93a1a9608",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "89b71ef0-a90a-423c-bde2-822d3520449b",
          "status": "Created",
          "code": 201,
          "responseTime": 2723,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "ea11e495-c9e6-4aa0-a865-b7c7315c6b94",
        "cursor": {
          "ref": "5507c482-3d76-4003-99ff-1c511542d010",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cf0fcd58-5312-4270-8bd2-dcbb9a12604d"
        },
        "item": {
          "id": "ea11e495-c9e6-4aa0-a865-b7c7315c6b94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3557481-7cc3-485e-ad3f-011cdd0e0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11e495-c9e6-4aa0-a865-b7c7315c6b94",
        "cursor": {
          "ref": "5507c482-3d76-4003-99ff-1c511542d010",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cf0fcd58-5312-4270-8bd2-dcbb9a12604d"
        },
        "item": {
          "id": "ea11e495-c9e6-4aa0-a865-b7c7315c6b94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3557481-7cc3-485e-ad3f-011cdd0e0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9d9420-e8e8-4c43-a741-305a76cdce28",
        "cursor": {
          "ref": "0069f27b-7908-43c7-a45d-96cedaf8a184",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a3e85745-915f-4f11-9fc3-c62a6263dc57"
        },
        "item": {
          "id": "7b9d9420-e8e8-4c43-a741-305a76cdce28",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3da7ca9-769f-4196-9369-fdc0c1273534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98eb7b4-7530-4d45-ab0b-b55616e59d16",
        "cursor": {
          "ref": "2c93e839-e5a4-450b-8f2b-572a0e0ddf9a",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b87c05d2-0ab1-495c-96c7-4a10601f2984"
        },
        "item": {
          "id": "a98eb7b4-7530-4d45-ab0b-b55616e59d16",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc5e44bd-ba59-4cc3-89cd-e72d96461e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86642543-caf7-4dac-bd48-b012327f2b10",
        "cursor": {
          "ref": "d2f661b3-9fab-4530-9107-aa62e535ed03",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a7b52ad1-f47c-45d6-b4a8-bebdc4659d62"
        },
        "item": {
          "id": "86642543-caf7-4dac-bd48-b012327f2b10",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "47e0586b-b2b2-450d-89af-67b830674d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd39885-e18a-4dd6-8b04-8295f7ef3aef",
        "cursor": {
          "ref": "45402dba-47f9-4712-8d82-86b70bc6a113",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f28f1ba2-c148-4109-9bb1-7980b40325e7"
        },
        "item": {
          "id": "3bd39885-e18a-4dd6-8b04-8295f7ef3aef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d34d1906-2963-41fa-9dd0-687ec7e7375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d7f362-5b80-4212-a664-b663352aedeb",
        "cursor": {
          "ref": "f1575da7-21ff-480f-9a48-42dd9e50fbbc",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5222d08d-d649-4707-8b3e-e39602fcb159"
        },
        "item": {
          "id": "87d7f362-5b80-4212-a664-b663352aedeb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "22ac7ec5-bc8b-453a-8157-a492234ceb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e266f9e6-ad8d-4525-8e5f-6fbc725e8607",
        "cursor": {
          "ref": "f2c0e20d-e9bd-419e-867e-ffb46013442b",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a85534d-34dd-4668-a824-5e0c954ef370"
        },
        "item": {
          "id": "e266f9e6-ad8d-4525-8e5f-6fbc725e8607",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b68f78a-78af-45b7-9418-c0726c16bdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1223192-dd6e-4e81-ba26-52a18085acc8",
        "cursor": {
          "ref": "cc87358f-749d-4b66-a5f2-d79873fee651",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c02335a-1161-40d4-8b5e-3ab67aa8f2f2"
        },
        "item": {
          "id": "f1223192-dd6e-4e81-ba26-52a18085acc8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb208d69-1730-4a3d-a82f-195fcc255ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8081b013-bcfd-45a0-8f7a-5c8ce4c63f7e",
        "cursor": {
          "ref": "1e5d25bd-a025-41c5-8b28-c4a53524a3df",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d5035eec-0c05-42aa-980b-c9210a7c67d6"
        },
        "item": {
          "id": "8081b013-bcfd-45a0-8f7a-5c8ce4c63f7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d855de2d-6ed0-4165-9054-c23b4b110edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7e84b2-b258-4773-ab02-0c890e1d8b41",
        "cursor": {
          "ref": "65c33f15-a4e0-43a5-a50b-62d8fd0d6b46",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0739a7b8-a509-4458-8c72-a4986743e88d"
        },
        "item": {
          "id": "cb7e84b2-b258-4773-ab02-0c890e1d8b41",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d449881b-1c3e-4a4d-93e1-eb3b13abe391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c779280d-fe8e-4f63-b8bf-250b9cb9f01a",
        "cursor": {
          "ref": "33fad6a2-7712-4c05-a83d-7b72a85e009e",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3abe4a53-d88f-4d1d-ba11-5d0d576b4665"
        },
        "item": {
          "id": "c779280d-fe8e-4f63-b8bf-250b9cb9f01a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cd14942c-1567-4073-9676-55065a976195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638445d-014e-423b-99f9-aecb99db4371",
        "cursor": {
          "ref": "ea1a5e1a-1c8d-4797-a9f4-78b5bb9a0e2e",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4e41f891-fc5a-406e-b475-9251b4e6fee3"
        },
        "item": {
          "id": "a638445d-014e-423b-99f9-aecb99db4371",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15809301-fadf-4774-9abe-4563ff82ccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61091636-dc45-4b17-8739-d80f19358e09",
        "cursor": {
          "ref": "918d900f-6557-4062-a519-7443549162c0",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8a6150f3-1cfa-43fb-9c12-560295c7b4c1"
        },
        "item": {
          "id": "61091636-dc45-4b17-8739-d80f19358e09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69f520e5-ac2f-4a86-96b8-632a907f8555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921134b3-9e9e-4237-8a9d-5d07d80b1003",
        "cursor": {
          "ref": "b0153d9c-784c-48fd-8796-f02cf1f39542",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ed8031ce-3ebc-40f1-b9a4-73468be6a25f"
        },
        "item": {
          "id": "921134b3-9e9e-4237-8a9d-5d07d80b1003",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "270cfd7a-714d-4fc5-bb0f-ecd0030e1d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db073157-259b-421c-85cb-20af5c9d99fa",
        "cursor": {
          "ref": "bf2ce550-d9f8-4405-b616-8d10c26cb90a",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3911e69d-63b5-470f-a469-449d0a057b4e"
        },
        "item": {
          "id": "db073157-259b-421c-85cb-20af5c9d99fa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "315418fb-e8c5-42fe-b948-f1075f97b652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433921e7-f76c-4097-aa0e-4c26247eb5b9",
        "cursor": {
          "ref": "bf3e3f42-fd18-425e-b8b2-9eddce12d650",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "167b9b6e-ce34-474a-a334-b19009d14c6b"
        },
        "item": {
          "id": "433921e7-f76c-4097-aa0e-4c26247eb5b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64bb5940-96a4-48c6-84f0-582b69643cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fe1280-18f2-47e4-bdf2-d4c7634aab94",
        "cursor": {
          "ref": "967fad0b-4130-4139-8031-6278c3940071",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "86c92c8c-91a5-4cfa-953c-380050af6f5b"
        },
        "item": {
          "id": "c9fe1280-18f2-47e4-bdf2-d4c7634aab94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa54dfa2-7bc2-44d8-a02f-c5df878f1c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3411bd04-4a52-4b1d-9dbf-390f7216e021",
        "cursor": {
          "ref": "b19d2d9f-1f58-4b96-83de-0d2b8445e811",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "651a2f6c-0f70-4fbd-8491-c43e7477f5a5"
        },
        "item": {
          "id": "3411bd04-4a52-4b1d-9dbf-390f7216e021",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4cc1f254-fc15-4367-be53-9b45aae54898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aabcd8-9bf0-4160-a383-e2be1e3ae010",
        "cursor": {
          "ref": "212aad3b-d817-4b8b-804b-393642383937",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3b35e30d-5423-47e4-9300-2f412a6e9892"
        },
        "item": {
          "id": "e1aabcd8-9bf0-4160-a383-e2be1e3ae010",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "01745b6d-bee1-4dbe-b67d-4d80b71a240f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968f1df3-f3f9-4057-86fe-423967632024",
        "cursor": {
          "ref": "4fb66870-e375-4c48-9bed-a370230504d4",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "413e6dff-b63b-40e2-800a-22395f39a585"
        },
        "item": {
          "id": "968f1df3-f3f9-4057-86fe-423967632024",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd3a0b9f-5cbe-4cb9-8d1c-e537e79182b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a20d02-b3fc-429f-a95b-217df5ef9b5d",
        "cursor": {
          "ref": "92331ffd-4a61-432d-b989-fa1156755cfb",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6f6d6a99-50f9-4c41-a538-ce88ee6eb1f5"
        },
        "item": {
          "id": "15a20d02-b3fc-429f-a95b-217df5ef9b5d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "43ad7e41-c200-4fc8-8e3b-3c52bcb80f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142a7aa-feee-4f05-9b44-e96dcfeef30b",
        "cursor": {
          "ref": "7ede26db-490c-4411-a18e-6d0ca0885d88",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "96176af9-d0f8-45d0-b736-f470930a284a"
        },
        "item": {
          "id": "f142a7aa-feee-4f05-9b44-e96dcfeef30b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "28a0722c-ed04-4703-92d1-dfcde035d4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00327067-dced-4265-88e6-8af7616e37d2",
        "cursor": {
          "ref": "3f0a502e-3933-4d55-9ec8-9e2fbff12202",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "de3e0516-ab77-45b0-a1a3-7b72ef1f5a1f"
        },
        "item": {
          "id": "00327067-dced-4265-88e6-8af7616e37d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9011dbc1-2ccc-41f8-8b9e-65ef1d7770e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d212e70f-3578-4983-a8b6-e7687a2a1602",
        "cursor": {
          "ref": "3eea6ff2-9f58-43af-815c-3c24a6121d50",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0199afa7-98eb-472d-93f6-7a3d488908e0"
        },
        "item": {
          "id": "d212e70f-3578-4983-a8b6-e7687a2a1602",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3ce0cb43-3ab6-47b9-bb0f-379f0a655061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1094038a-c818-4b38-9b8b-8d72ce23020b",
        "cursor": {
          "ref": "8258a848-5afd-43ff-9121-4e1197011fe6",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ddc789c0-f04d-483f-a1da-f71378468c33"
        },
        "item": {
          "id": "1094038a-c818-4b38-9b8b-8d72ce23020b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72c6dc52-5148-451a-b2f7-f750b1121058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb85d71d-a586-4edf-8022-b1b696fa1242",
        "cursor": {
          "ref": "4a02f8d4-9ba9-41a0-818e-df3ca8b97446",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "af646e58-a0d4-473b-af9e-995d36bbe5dc"
        },
        "item": {
          "id": "bb85d71d-a586-4edf-8022-b1b696fa1242",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26b27f54-a112-4c5c-b510-eba83e072f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef0e000-da54-4299-8a8c-81684a7c8bbb",
        "cursor": {
          "ref": "6ee0f8a2-03ba-451c-a1a6-30493b0b2a75",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d59712eb-0438-4cf6-9f2c-5f91e0ab69e1"
        },
        "item": {
          "id": "eef0e000-da54-4299-8a8c-81684a7c8bbb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1662bbd-7abb-45cb-841e-5a921931db03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da5422a-b13e-4cc5-9553-ac3f4864b8f9",
        "cursor": {
          "ref": "b426f5c2-7989-4dc5-89f3-fe183980514e",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "81829069-366e-44cb-b0ae-320c8dd10423"
        },
        "item": {
          "id": "4da5422a-b13e-4cc5-9553-ac3f4864b8f9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b9ffe5ab-7069-498c-84e4-31b939a88d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad729f5-d774-45d0-b5f2-5c8fccdc6685",
        "cursor": {
          "ref": "a28d2417-a491-4e34-9b25-a11e7cfcce22",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "128344a4-2e06-4dec-8f77-8ba6cd6b2e86"
        },
        "item": {
          "id": "7ad729f5-d774-45d0-b5f2-5c8fccdc6685",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "67bb8acf-c903-49d5-a80e-9cdb277a8d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba147c82-2d57-4de8-83cf-7dd76dcc76d0",
        "cursor": {
          "ref": "6dea27f3-409a-456f-8131-d5cabc49a9bb",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "142d3f04-86a5-4016-90cd-f13dcc5e7274"
        },
        "item": {
          "id": "ba147c82-2d57-4de8-83cf-7dd76dcc76d0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fc43f644-b50c-4775-b2a1-1443d7fd14f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b89e5be-2293-49b4-9bc1-c19c2d80ac7c",
        "cursor": {
          "ref": "d72c4161-3767-48f5-b314-5bd4b0e8a9e2",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ffe9aeb2-0c0e-4737-8a8c-ab62a7a82c7e"
        },
        "item": {
          "id": "0b89e5be-2293-49b4-9bc1-c19c2d80ac7c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "589af165-65fa-470b-a398-75372edc4ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dffe06-bc31-4666-b137-6d268208fc61",
        "cursor": {
          "ref": "096c0e76-0a67-4c3d-a446-dc7ea44fffd9",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3c031c38-7497-4705-a615-acf9705fef68"
        },
        "item": {
          "id": "d2dffe06-bc31-4666-b137-6d268208fc61",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1a76f14f-b805-4163-96f0-7788bd64a8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b53ac2a-0f6b-4127-a296-bb38975f5bda",
        "cursor": {
          "ref": "8eaaeed3-b747-4d5e-abd4-5f681acd8955",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "58b2b34f-78ee-46ac-ba73-5c26b6dce307"
        },
        "item": {
          "id": "3b53ac2a-0f6b-4127-a296-bb38975f5bda",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2203d0be-80c5-42ef-bde7-6ff243fe3c74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a09827b-922c-42cd-8281-5b3ff9474475",
        "cursor": {
          "ref": "168d4eb1-fb05-45ae-9851-6e958a4e75e6",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c5adbde8-6cfb-4032-8df4-d9462e79110e"
        },
        "item": {
          "id": "5a09827b-922c-42cd-8281-5b3ff9474475",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "da1034e6-096a-4267-8a28-0c775a6a50af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 495,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5c553-8d79-4f25-89d7-f4cd99186323",
        "cursor": {
          "ref": "f9602a55-b709-41fa-9266-599154d63482",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "267c83fa-5327-4f02-8543-19bb3854184a"
        },
        "item": {
          "id": "12e5c553-8d79-4f25-89d7-f4cd99186323",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d060b41b-5077-479a-982d-4f4ccc15a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5c553-8d79-4f25-89d7-f4cd99186323",
        "cursor": {
          "ref": "f9602a55-b709-41fa-9266-599154d63482",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "267c83fa-5327-4f02-8543-19bb3854184a"
        },
        "item": {
          "id": "12e5c553-8d79-4f25-89d7-f4cd99186323",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d060b41b-5077-479a-982d-4f4ccc15a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52c72d1-7cc7-4730-819b-79a0d0ef9a57",
        "cursor": {
          "ref": "89f7c447-2014-483f-a1a1-d60aae555c2d",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e681c85c-9466-4685-8146-84b5c68773d0"
        },
        "item": {
          "id": "d52c72d1-7cc7-4730-819b-79a0d0ef9a57",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "159a9a91-bdd6-4e32-bdfd-b562133f93fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b366177-8c48-4a21-8e7d-8ed3bd5673ef",
        "cursor": {
          "ref": "1c7bd21e-c7a1-434a-9a40-e908efd89fea",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "09b4bcab-64ef-429d-9c31-f90033fc4cd5"
        },
        "item": {
          "id": "5b366177-8c48-4a21-8e7d-8ed3bd5673ef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "accf285e-833e-45ab-9d25-db9cbe76096c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246c65c4-bf2e-449f-be52-885197f26bae",
        "cursor": {
          "ref": "bbc18908-14d7-4544-b0a7-1ee5fdc544f2",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e49f334c-9132-441e-85ca-c113a793d018"
        },
        "item": {
          "id": "246c65c4-bf2e-449f-be52-885197f26bae",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "835ee9ab-046c-4a8e-ba91-82909e975f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443b1d7-52da-44a2-a70c-d73899398755",
        "cursor": {
          "ref": "a73a17fc-96f6-4d92-9231-0717498f9f6c",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "70d992b8-fe03-4542-b584-a6661171d48b"
        },
        "item": {
          "id": "3443b1d7-52da-44a2-a70c-d73899398755",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6838771f-7d3a-49bf-81dc-2610d4817f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c64c25-a059-45d5-aa7c-de5a3a38dcd1",
        "cursor": {
          "ref": "07f9fca4-b930-48d5-8ca1-19ce10f3328f",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4598fec5-ef93-445a-ab22-01559a4ed8d4"
        },
        "item": {
          "id": "90c64c25-a059-45d5-aa7c-de5a3a38dcd1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "acd5b60b-fdf0-4f03-9fb8-272dccde0ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa08db9-bdb4-45d0-a3eb-69e273c5cb25",
        "cursor": {
          "ref": "b9b3ea2f-b17e-4c98-9b47-ddbac2f9fdbe",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "acc94854-3554-45a9-8271-41e63b0d10c3"
        },
        "item": {
          "id": "7fa08db9-bdb4-45d0-a3eb-69e273c5cb25",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0b4a188d-fe86-4d1f-b8d5-56c813352be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccc9b0b-da0d-4066-8c79-1febdad53339",
        "cursor": {
          "ref": "7987eb0e-c71a-4f39-8c9e-d85d385e5ab8",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "33a09ffc-250c-46d5-8e27-3d5503820a31"
        },
        "item": {
          "id": "0ccc9b0b-da0d-4066-8c79-1febdad53339",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "57d617f9-194e-431c-b33d-1aab8fd9cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba3ce6-59c5-41f5-8fc7-a2c3524fa5b9",
        "cursor": {
          "ref": "06ef8f05-019c-4075-8bab-6a1e5c135655",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd642747-42ca-486b-929f-a8803c96622c"
        },
        "item": {
          "id": "3eba3ce6-59c5-41f5-8fc7-a2c3524fa5b9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a23eaafc-9773-4144-9918-38353d6fa3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934fd9e8-db77-48d4-b790-f7ccd00a3d4a",
        "cursor": {
          "ref": "4114e35d-da70-47fc-bfb0-9a6b5a429ad8",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6d41716c-bfe6-451d-a43c-57639d611cd9"
        },
        "item": {
          "id": "934fd9e8-db77-48d4-b790-f7ccd00a3d4a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e2f7df07-bce3-4f31-8886-e2962d3f0748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9d8096-111f-44c0-9fa7-6ba75e54f03c",
        "cursor": {
          "ref": "62812ce2-d40c-4e33-a53d-c60fc520f62a",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c58f7020-5cf9-44ba-b5fb-b57565d05645"
        },
        "item": {
          "id": "ec9d8096-111f-44c0-9fa7-6ba75e54f03c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d440ba20-fadf-4782-a7cf-aa6f75e7c900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b4052-6780-48ed-b694-c4ef62692745",
        "cursor": {
          "ref": "32d0028e-9b9d-461c-b153-d0a537c5dfaf",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5e7ee65-680a-4b72-b634-816c1f807132"
        },
        "item": {
          "id": "d34b4052-6780-48ed-b694-c4ef62692745",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "26262ecf-d202-400d-934a-133d427995c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85e8ab9-bcbc-4f7c-9df7-da90a9a871f4",
        "cursor": {
          "ref": "d4abde24-961f-417d-a1f1-7e9908786e62",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "417d9368-3d32-46aa-8ec7-7f6400d65022"
        },
        "item": {
          "id": "a85e8ab9-bcbc-4f7c-9df7-da90a9a871f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b8acb68-a32c-4027-8478-8336f14888aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deceebe-d86a-4295-84af-0cda3a643ca6",
        "cursor": {
          "ref": "f824e274-4055-4132-806c-ec5973c83b87",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "41d036f4-1d49-43c1-af3f-ef989b8443a4"
        },
        "item": {
          "id": "4deceebe-d86a-4295-84af-0cda3a643ca6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "40058d26-f7cf-4af4-8323-843354ab873e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13675b-4fbb-42c2-9918-ed4847ac7469",
        "cursor": {
          "ref": "16c4903f-04d2-406f-938b-ab29a6ab2042",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "085398ed-efae-4a0b-876d-13c8b7c9e705"
        },
        "item": {
          "id": "2e13675b-4fbb-42c2-9918-ed4847ac7469",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8e309db8-8adc-42f7-913e-b2921ed6e648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6f0229-f727-4be6-ac86-9fb7106d1304",
        "cursor": {
          "ref": "475e2f70-7c70-44e1-a6a3-e5bb24fb4ef5",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f61233c2-d982-4295-b5bc-9074ac4720dd"
        },
        "item": {
          "id": "2d6f0229-f727-4be6-ac86-9fb7106d1304",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "056c91b4-eb08-42e3-929c-59b338e95138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00811d4b-1183-4e98-b984-a344f4402bc8",
        "cursor": {
          "ref": "e061d785-af6d-4c5f-a8ab-80f49cca4915",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "684dc3e5-e791-48cf-b170-15e7e9fe26de"
        },
        "item": {
          "id": "00811d4b-1183-4e98-b984-a344f4402bc8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f074c1e4-69ea-48ab-bc01-bb1b29947a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc2c810-a1de-4e84-bf5c-fbc34618ef01",
        "cursor": {
          "ref": "a5305009-dbc1-415c-8d77-41c8935071fd",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "79823d92-be31-4c48-8f22-80eff0da7bcf"
        },
        "item": {
          "id": "acc2c810-a1de-4e84-bf5c-fbc34618ef01",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cfd7fbaa-070d-4721-b860-daf91d2ce43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f500a3d5-6b78-4239-9805-586a2e700aef",
        "cursor": {
          "ref": "87cb5b74-8f49-4cac-a4b9-4f6236860dca",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ab1caae6-0888-42b4-8e08-cded90894747"
        },
        "item": {
          "id": "f500a3d5-6b78-4239-9805-586a2e700aef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1dd599d-ea23-44e2-a292-38d0f726ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e803e17-13ba-4c54-96be-7b8b470aef0e",
        "cursor": {
          "ref": "28f19cc8-cbbd-4a32-88da-34eb9fdd0a96",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0687c56-c4ec-41ea-9d1c-60b5149fb714"
        },
        "item": {
          "id": "1e803e17-13ba-4c54-96be-7b8b470aef0e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fb19152c-63d1-4c2b-a938-ea747767d54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945bba1d-69dc-4256-a5a9-04913f0046fd",
        "cursor": {
          "ref": "7b14ef59-7e5e-41da-bc53-c8b77b3e0d6e",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "111479fa-934a-47ba-a882-e2c9b87136e7"
        },
        "item": {
          "id": "945bba1d-69dc-4256-a5a9-04913f0046fd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fec65f5a-6700-42d4-a737-f0fc6840df6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6039f1e4-5d6c-4529-bc6e-3a6b5b2cc324",
        "cursor": {
          "ref": "5412a05a-8a64-4c56-b6f7-bf0ba98f9c92",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "83f3e1e6-0dff-4cd1-b240-015f095e36db"
        },
        "item": {
          "id": "6039f1e4-5d6c-4529-bc6e-3a6b5b2cc324",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e0b98db-7c94-4947-a155-4664cfc90d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4ec06e-9b59-4147-9b16-9f52497256ba",
        "cursor": {
          "ref": "ba46ec47-5a19-45e0-9965-d2f41b1480fa",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "89e7fb7f-803f-4437-b8bb-82f0a82c1d3f"
        },
        "item": {
          "id": "6f4ec06e-9b59-4147-9b16-9f52497256ba",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ee11c1e-c8b4-4e85-b50e-8f6b26bedf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f704fec1-f633-45a7-8a22-6545ffa4533c",
        "cursor": {
          "ref": "e1513791-6e93-4c76-9834-f1c24970d6d1",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "16b050f7-ee62-4d28-bd95-c675efa374ce"
        },
        "item": {
          "id": "f704fec1-f633-45a7-8a22-6545ffa4533c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c43c33c1-60fe-4e7b-8a86-b7d39d3b5dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7305b597-bd1f-4641-b5da-b8dbfa6d2324",
        "cursor": {
          "ref": "4b5d6429-b6d0-4f4a-bcdf-38c49448aedd",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfb5356b-f243-4268-9e7d-b394794fce22"
        },
        "item": {
          "id": "7305b597-bd1f-4641-b5da-b8dbfa6d2324",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0767eeb5-3e29-46c2-831f-0880a264f125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a463a1-b74c-49ed-94d1-4968b639af72",
        "cursor": {
          "ref": "e8052768-d414-4c4a-ac63-fe7e6d10ea26",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "afefdc5a-7024-486b-948d-7e13407d7e45"
        },
        "item": {
          "id": "a2a463a1-b74c-49ed-94d1-4968b639af72",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "78a147af-77a9-44fd-ac57-7b0bab4a1abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc668e-fa17-434f-8d93-6b9499af8abf",
        "cursor": {
          "ref": "6ac684fe-ff76-4285-9704-8aa93aa5fe82",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "abe981e2-a1a8-4855-9bce-bf6f0ecc9216"
        },
        "item": {
          "id": "92cc668e-fa17-434f-8d93-6b9499af8abf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2075e5f0-ef61-417d-af9a-f9d8ee6de199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f13bc-8d72-4715-8ec4-5ee3bf6fb266",
        "cursor": {
          "ref": "95060e35-dd97-4432-99dc-72730efa73d4",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b9ce102b-8390-4bbe-a87a-6e08c14c6852"
        },
        "item": {
          "id": "b44f13bc-8d72-4715-8ec4-5ee3bf6fb266",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6cf8818a-c2ae-4153-8c7e-179185ee6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a57a1a3-2fd4-4007-a0c8-89d295c7211d",
        "cursor": {
          "ref": "592a8947-6ee0-47c2-aa4a-890f8753bc73",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98e6122e-7f3c-4ca6-bca4-71c221e4966b"
        },
        "item": {
          "id": "4a57a1a3-2fd4-4007-a0c8-89d295c7211d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a9d1cb79-4cd0-4ebd-a197-1bba2e8addaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d2f7fb-0126-48a4-a246-9f201b901ea6",
        "cursor": {
          "ref": "2fca85c8-0470-4bc2-9e31-a4e7670a8183",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dd0f367d-9565-4e55-9094-5b6c521cf505"
        },
        "item": {
          "id": "e9d2f7fb-0126-48a4-a246-9f201b901ea6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8b1bcc0-5b37-4eb1-bdf7-1c3da453b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025c4ef2-342b-448e-afce-c8cebcacf1e4",
        "cursor": {
          "ref": "9b580a1c-9645-4adf-9227-c4469282dd77",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b0ca5495-1f88-4ab4-b95c-1c1a2d8dd4fa"
        },
        "item": {
          "id": "025c4ef2-342b-448e-afce-c8cebcacf1e4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "34f547ab-e125-4f57-b68f-452f62d66318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33191b9-38c8-4963-8c25-85c86260ce80",
        "cursor": {
          "ref": "4376d247-bf79-4e14-a9cf-f06b1664ef8e",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dc2bc15e-05e6-40aa-be15-208f14466dba"
        },
        "item": {
          "id": "a33191b9-38c8-4963-8c25-85c86260ce80",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0278982-310b-47a4-a538-05a5532313b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e904003-2f7e-4da3-af3c-8a357b670513",
        "cursor": {
          "ref": "317de864-31a3-4d4d-9c5a-7de7779294d9",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39ba3f75-28f9-4d0e-81ed-da671c6e51da"
        },
        "item": {
          "id": "2e904003-2f7e-4da3-af3c-8a357b670513",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ecc60f51-941e-4a08-a004-827021b7afd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e4e5e7-d473-422f-af2a-4d7f2cc7a042",
        "cursor": {
          "ref": "854dc338-52ed-451f-8489-a932f5799958",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "40b26ab8-5a29-43e4-a3c3-9d50da1815fc"
        },
        "item": {
          "id": "15e4e5e7-d473-422f-af2a-4d7f2cc7a042",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7efd64a9-729c-48ac-8e5e-79c4505230eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4e8637-7b5b-46a6-bf99-4c67d5a6a1d1",
        "cursor": {
          "ref": "e5b64b16-0371-4312-826e-9960de6762a8",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "21ff0806-80f1-4a9e-b78b-fc3da76261c8"
        },
        "item": {
          "id": "3b4e8637-7b5b-46a6-bf99-4c67d5a6a1d1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c8d7503a-e73b-4c6e-b241-482aaf96c915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbcdc54-e5e1-4c8f-82ef-066220142065",
        "cursor": {
          "ref": "ee417812-3a17-4718-a889-f04fe45431ca",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3efeaa2c-ca9c-4bde-a11f-2edce3684ad4"
        },
        "item": {
          "id": "fbbcdc54-e5e1-4c8f-82ef-066220142065",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c96121c-4225-43d4-807e-e01bc9e4f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55aa9c7-a8f2-497e-8905-c846f32e2fd7",
        "cursor": {
          "ref": "8a73fc29-c7dc-498c-bce5-65c19cb85fae",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6f967de5-66f6-4b3c-992d-b1475ea8db72"
        },
        "item": {
          "id": "b55aa9c7-a8f2-497e-8905-c846f32e2fd7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eca0df93-e03d-4a76-a8f5-a43d5c7e5892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759dc663-810c-495e-92f8-8406f775e6fa",
        "cursor": {
          "ref": "5464ea20-cc50-490e-918c-cb182c95bd30",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d7089b36-d4b9-483e-9c47-3c58a892fcc1"
        },
        "item": {
          "id": "759dc663-810c-495e-92f8-8406f775e6fa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "109ce101-88b1-41cc-acca-69f38d2e65f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35808255-4f33-44d6-960e-c344f84c3b29",
        "cursor": {
          "ref": "4d0901b0-f5aa-40eb-a7fd-f64a76a6647a",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "766e9210-e680-4089-b7e6-126642a9ed2e"
        },
        "item": {
          "id": "35808255-4f33-44d6-960e-c344f84c3b29",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6a12d0f4-cdff-4bb5-bea6-09f7e8ca4627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd3f50-f48c-4e07-b7f9-c07e0f6a3eaa",
        "cursor": {
          "ref": "fea76329-319e-4414-9921-6b4435b4e0da",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ab393e6e-92c0-4fcd-a4b9-4cdddf6ec75b"
        },
        "item": {
          "id": "a8cd3f50-f48c-4e07-b7f9-c07e0f6a3eaa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "96452d33-d258-4a91-907f-b1f71f65b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d489041-c6dd-4be9-ba06-3150d2936543",
        "cursor": {
          "ref": "a12b6f68-4d16-48f4-b61d-388f8667d33b",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bec3d082-5537-4aed-968c-c79427e622d4"
        },
        "item": {
          "id": "9d489041-c6dd-4be9-ba06-3150d2936543",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb2c3746-6504-4412-9497-3d18d9d1d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bf8ad1-b8c5-4588-8c74-7dc0fddf0a6d",
        "cursor": {
          "ref": "f8f20744-fa73-4847-b73d-816e6821114f",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "370e4149-4155-4f1f-a132-ef6ef3baef2a"
        },
        "item": {
          "id": "13bf8ad1-b8c5-4588-8c74-7dc0fddf0a6d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a35232bb-9a79-44bf-b22d-26b18724671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50c9c46-2862-4585-9c72-0117a48de8c1",
        "cursor": {
          "ref": "b4672656-a108-466c-b4d3-ec3f4b3810c5",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a1c4dae7-3d26-450d-9f80-a792a857c014"
        },
        "item": {
          "id": "b50c9c46-2862-4585-9c72-0117a48de8c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9d2b8559-bd00-4bbd-80fc-8510d0cc5e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b915a04-76da-4e22-9348-b25f2a639cef",
        "cursor": {
          "ref": "44bb9c33-0972-45ad-b193-90b2650eea60",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8af70def-fd6a-4e12-bb9b-42e1b188ffd6"
        },
        "item": {
          "id": "4b915a04-76da-4e22-9348-b25f2a639cef",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4e82833-06c1-4e38-9dcb-760eb0b5a05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6a2ca3-f237-46c8-b010-a6832de07ef8",
        "cursor": {
          "ref": "14b1f4f2-357d-46ef-9da6-7576fba6e9df",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e2fc0d61-dbbb-4ff8-901a-8cb752469fcf"
        },
        "item": {
          "id": "ca6a2ca3-f237-46c8-b010-a6832de07ef8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cc13aa6c-2f00-426e-a63f-b3fac02884c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2ba50f-d740-4ff6-856e-4d984eac07a2",
        "cursor": {
          "ref": "32719951-0846-43bd-bef6-9acd22ddaf16",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "88ededf1-b024-4ae0-8206-1858f25381e9"
        },
        "item": {
          "id": "2f2ba50f-d740-4ff6-856e-4d984eac07a2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "435871cd-1979-4f6d-9d72-6cc161b39cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64195ebc-f2a0-4745-ab73-ee0987631176",
        "cursor": {
          "ref": "cb86e626-7b1e-4de0-8cfc-3b4498fee59a",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55bcb5f5-7823-48a5-b057-3e6d1a457def"
        },
        "item": {
          "id": "64195ebc-f2a0-4745-ab73-ee0987631176",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4e51678d-c310-4d75-96b9-3526688a8e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51093323-fb34-4503-b55c-f7ec45e74cd9",
        "cursor": {
          "ref": "5548fc71-f4c2-4e5c-b817-1c2da57a7860",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ff171f2f-ccb8-478e-9af3-806f8a7799e6"
        },
        "item": {
          "id": "51093323-fb34-4503-b55c-f7ec45e74cd9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "209d7fbd-6c8b-4ffd-b643-d7d0ffa6c8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92977f55-b2f1-4cee-8de2-7fa109ef084f",
        "cursor": {
          "ref": "89eace72-bb24-4678-9efa-82485d4d92de",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e891629-46d0-4e28-91cc-2eef97f72175"
        },
        "item": {
          "id": "92977f55-b2f1-4cee-8de2-7fa109ef084f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7e2c7074-00f0-4b08-9ca8-b42f63297315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee441d7-3b35-40e7-9b4e-6a1e34d8745f",
        "cursor": {
          "ref": "333b2884-a208-42b6-bc99-fb940072810a",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "994b1036-37e7-45a8-8c52-3c24b41cd211"
        },
        "item": {
          "id": "aee441d7-3b35-40e7-9b4e-6a1e34d8745f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8568644e-4baa-4842-9681-9896e2b969a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7f17be-e2b5-45e7-9b05-22dabadf70df",
        "cursor": {
          "ref": "f5ad1d83-a19b-4e90-84eb-9dd7b487be88",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a62862c3-b115-4e35-9816-5b4e884d5c64"
        },
        "item": {
          "id": "fb7f17be-e2b5-45e7-9b05-22dabadf70df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24530eed-17ca-46ec-97bf-8cb2b3cf5634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62c2f7b-a2bc-41d3-8349-e3a2e38fd18e",
        "cursor": {
          "ref": "c4d17413-9c77-418b-be9d-9835ae2dc1c3",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3314285-6392-4ad0-bf1d-a1326865a6f7"
        },
        "item": {
          "id": "f62c2f7b-a2bc-41d3-8349-e3a2e38fd18e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b713d4bd-d188-4937-b47c-99258d3849ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf666d7-1540-4b3a-b2ae-ceffc665ebbd",
        "cursor": {
          "ref": "28f1f921-b2fb-4b76-a96d-8fe32ccd63b8",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7340f7b6-6ab1-45e0-bee7-89279afec662"
        },
        "item": {
          "id": "ddf666d7-1540-4b3a-b2ae-ceffc665ebbd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db59f1bf-b247-4d8b-9227-704c96c10f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a5c4db-014c-4ddd-babd-620f5c782559",
        "cursor": {
          "ref": "caad8559-95a8-4d1f-b917-e65e70c84965",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8300f0cd-341a-42e0-b1de-59c237377300"
        },
        "item": {
          "id": "08a5c4db-014c-4ddd-babd-620f5c782559",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "14b49bf3-5f2b-48a4-8632-338f615036c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d0c06e-2cff-4281-b673-469001b9a926",
        "cursor": {
          "ref": "a51e1eec-b8a7-4d35-9393-22cda8693983",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "722d03e0-7095-4275-8571-767142dffc00"
        },
        "item": {
          "id": "58d0c06e-2cff-4281-b673-469001b9a926",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9a5ce9b4-c85c-42f1-be72-7ad1ff842303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b5b347-8f29-40e5-9a2e-ca88fcdf7040",
        "cursor": {
          "ref": "b5d05566-57cd-48ec-94e7-cb1ab66d9d1b",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c33c5e8d-e2a8-4d5a-9315-113055e2851b"
        },
        "item": {
          "id": "70b5b347-8f29-40e5-9a2e-ca88fcdf7040",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "09c1292e-0413-402f-947b-16373b90a24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92567f2a-6a22-41ee-947a-d1fe67ea0c53",
        "cursor": {
          "ref": "86b47e17-5f0f-485a-8da6-28ac29d4e356",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2f672d69-7c67-4912-8d81-bd85a4380c3b"
        },
        "item": {
          "id": "92567f2a-6a22-41ee-947a-d1fe67ea0c53",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5493c969-86b1-445f-8770-b2198867e271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d6076-9e4f-4570-8890-2829a325f0c0",
        "cursor": {
          "ref": "f426f846-67a4-4435-87b1-1ee947a86360",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "418a0b12-cedd-4412-b75d-bf01fffa09e1"
        },
        "item": {
          "id": "d59d6076-9e4f-4570-8890-2829a325f0c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e06c64b0-0c5f-4ccb-a832-7d3190bfd43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce707b4-2250-4fcc-bdf9-c296e72775f8",
        "cursor": {
          "ref": "5fc06896-f07b-4270-8a9a-2447764c46e6",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fbfa0b55-5dbd-4844-b26e-139f6f9a9611"
        },
        "item": {
          "id": "fce707b4-2250-4fcc-bdf9-c296e72775f8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f2118a62-3ff9-4714-b529-f899115adf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f38cf70-544a-4148-86d7-193966f8412c",
        "cursor": {
          "ref": "f8d4645c-30e2-4a44-9bb9-b3ec13240f72",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e3b1b5d7-212b-4e06-a430-6e98d2a6d55d"
        },
        "item": {
          "id": "8f38cf70-544a-4148-86d7-193966f8412c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e9f6ff6-95ab-4d9a-93e1-894fcc35ea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b325584-139e-4a19-a969-b06299dac30d",
        "cursor": {
          "ref": "d7ddaf5f-90d7-498b-b526-9f205d90b801",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b645982d-5cb6-4f59-b317-60e3609a061a"
        },
        "item": {
          "id": "4b325584-139e-4a19-a969-b06299dac30d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d02e4e9d-a00b-4466-907f-4ce0e7ba93e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1130a475-7d36-432e-976b-568d062410a4",
        "cursor": {
          "ref": "87002e64-aa9c-4349-b52d-1162e31080d0",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0fbe7ab-971f-4231-9c41-32221750ad72"
        },
        "item": {
          "id": "1130a475-7d36-432e-976b-568d062410a4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "da2103ae-0e04-4a34-87e6-f05ef03517d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05ecd87-6615-4e5b-93e7-b8bd57d7b9a7",
        "cursor": {
          "ref": "8d48f748-39f6-4757-a199-aa65606c2d91",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a2bd0a3e-dbb4-4706-b2dc-d16a2016dc92"
        },
        "item": {
          "id": "f05ecd87-6615-4e5b-93e7-b8bd57d7b9a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e1a6a88d-5446-403f-9c65-4b12987f2384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc800b0-33cf-4c23-8ab3-e034f52b78f9",
        "cursor": {
          "ref": "94f79f1b-8011-4bfd-b2d7-5a9aaab75c7e",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "41270d57-94c6-448d-a1e5-19f9deeec458"
        },
        "item": {
          "id": "fdc800b0-33cf-4c23-8ab3-e034f52b78f9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "def77bb7-18ae-4fe7-adbe-369e0850f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82b85d3-46fc-4718-ae68-6cc81ea57f43",
        "cursor": {
          "ref": "6a761357-6375-4e95-adc4-8a9efa5fba30",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "41495707-6b1c-4394-be37-4361c821cabc"
        },
        "item": {
          "id": "d82b85d3-46fc-4718-ae68-6cc81ea57f43",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0f8a1457-15b0-4382-af84-8ef3d416de2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b0db5-9470-4c5b-8e96-983d00ba43aa",
        "cursor": {
          "ref": "9231d8a4-face-4402-b2fd-d6f3fe2dfed4",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "258baba3-f60f-4f22-a04b-c4ef8be263fb"
        },
        "item": {
          "id": "754b0db5-9470-4c5b-8e96-983d00ba43aa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eccea58a-eedc-47bd-9523-157fc61557dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d7856-106b-49bd-a1ae-71945baf6dd5",
        "cursor": {
          "ref": "63561a55-76d4-42f1-aa41-ab6113dc78b3",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "92602ae8-7f0a-46f2-a5ea-dc2ef115fd20"
        },
        "item": {
          "id": "869d7856-106b-49bd-a1ae-71945baf6dd5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "26892719-a157-416c-992c-4adaf71249bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b122a-757b-436e-8f4a-8be3c8a8a5fb",
        "cursor": {
          "ref": "f32e5c66-229b-4849-a586-7a43fd2dde63",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "84e8e0c8-5e0f-49ee-a8f3-bbb28ab6e0b1"
        },
        "item": {
          "id": "933b122a-757b-436e-8f4a-8be3c8a8a5fb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15309f1b-d0e0-4cd5-9c1a-e46aa14f4b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b265f9-6886-4cd9-949b-af102d351de1",
        "cursor": {
          "ref": "187db63b-c926-4016-afc3-27ffec55cac5",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "00269d12-defa-47cd-ae65-c109441b6703"
        },
        "item": {
          "id": "98b265f9-6886-4cd9-949b-af102d351de1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f1edf5f6-45a0-42e1-b469-e58c1765fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3fdf4b-da36-431b-8d77-0382d2f748f0",
        "cursor": {
          "ref": "752c9419-470e-43d8-bfdb-fa901a7e382e",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6b14259d-68ad-4f7c-bbd8-c6e203206626"
        },
        "item": {
          "id": "7f3fdf4b-da36-431b-8d77-0382d2f748f0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78752c07-ab4d-4b67-9db0-bdbbcfa845b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d612dbc6-a9a8-4277-b634-435a7b81c45a",
        "cursor": {
          "ref": "bad52970-b19c-4b00-a5cc-99edde31d10e",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f5d828ac-b0b2-4c9e-b813-b707a206a6ae"
        },
        "item": {
          "id": "d612dbc6-a9a8-4277-b634-435a7b81c45a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1835a885-25df-4e67-b27e-16c18799df4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd61710e-ccda-41c3-95e9-9dc03f20fc15",
        "cursor": {
          "ref": "66f63a6f-790a-4b26-9954-983470289c81",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7aad0c2f-1016-41ef-8b08-fb5b672a689b"
        },
        "item": {
          "id": "bd61710e-ccda-41c3-95e9-9dc03f20fc15",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dfa6dc9d-7267-4c7a-9544-c9ee43f41eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78368ce6-2190-47c8-bd2a-ca255a8ebbe9",
        "cursor": {
          "ref": "a923f2ea-e592-4347-bd6e-61d40b57c043",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "81f35f89-d22b-4422-b14f-bcd72b1a8f0b"
        },
        "item": {
          "id": "78368ce6-2190-47c8-bd2a-ca255a8ebbe9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb8c4f54-2eef-4d19-9427-d0736fe7a99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537404ef-81f0-48ed-9c76-041e238e8413",
        "cursor": {
          "ref": "77e29128-6564-4400-a0a2-f5b6dbbcaeb8",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f2c4e358-db82-49a2-ac3b-bcfa2a7d6e07"
        },
        "item": {
          "id": "537404ef-81f0-48ed-9c76-041e238e8413",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6569a439-40c4-4ddf-b6f5-f8ebad1e3aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cfd4a6-a050-4e73-98b7-bd356af6be00",
        "cursor": {
          "ref": "f4eb2dea-e618-42f0-ba13-711401f0ad99",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e9d83c4f-9c1d-4345-bd8c-1723f07b9ce0"
        },
        "item": {
          "id": "b0cfd4a6-a050-4e73-98b7-bd356af6be00",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7893cfc9-6a66-4f0c-9fd3-f63b799bcc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28583781-153d-43de-bcfa-9a99fb32990e",
        "cursor": {
          "ref": "afa6c417-f7d2-48e9-8a56-728dd61a1f03",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04011020-91d8-4c68-b92b-ba07ec3af939"
        },
        "item": {
          "id": "28583781-153d-43de-bcfa-9a99fb32990e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "de5cef51-995d-463c-a109-9d46cd4f1ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5498fe73-7219-44eb-8f91-f1dad8c2d792",
        "cursor": {
          "ref": "6e26ff50-58cc-4649-99b8-3648be558c59",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "56ef2d86-1d78-4308-852c-6254e69f4039"
        },
        "item": {
          "id": "5498fe73-7219-44eb-8f91-f1dad8c2d792",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7ba475f3-fc24-436d-8c8c-13cc5e1cff94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22983fec-177a-4982-8f5b-c4738565f629",
        "cursor": {
          "ref": "82b4f19e-8662-4350-b485-f307e8426bf5",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1933e18d-11ea-4c74-b246-ac5f69764d4c"
        },
        "item": {
          "id": "22983fec-177a-4982-8f5b-c4738565f629",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2a605ef7-7b6f-4690-9907-27324a5ec82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f19f1c0-cda0-43b5-83fa-2826db58d52a",
        "cursor": {
          "ref": "0de209a4-3cff-4611-bf68-ea6fe9a46709",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "196cf727-73fd-4828-a19f-7d80b144f3b9"
        },
        "item": {
          "id": "2f19f1c0-cda0-43b5-83fa-2826db58d52a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6c310995-ce48-430f-aa5a-0e65a0dcf758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63a6636-0b4c-42ff-a6cb-6103fe2be09a",
        "cursor": {
          "ref": "0d78252d-9657-4d99-a0e8-c665731f72af",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f50be28f-08f2-4a49-91a1-e65a3795b9fb"
        },
        "item": {
          "id": "e63a6636-0b4c-42ff-a6cb-6103fe2be09a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "16fe4298-cae3-4900-809d-0a232364af59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6a6f06-699b-45c5-8ccc-9e6d536c763b",
        "cursor": {
          "ref": "890ab0da-316e-4a8f-95fe-6caeb8b69197",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ff8c2e2-9ec2-4d91-8fc7-f350fbcfe240"
        },
        "item": {
          "id": "ae6a6f06-699b-45c5-8ccc-9e6d536c763b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5616258a-bc11-449d-818f-3949578cfab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9495cb-afe0-4afd-b26a-b59c20530f27",
        "cursor": {
          "ref": "51afc7a7-9813-4897-9c8c-4dda7153d86e",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "40d93d58-79cd-45de-a391-35f53ef95e21"
        },
        "item": {
          "id": "1d9495cb-afe0-4afd-b26a-b59c20530f27",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0b2cfe49-7add-416c-8229-1f05ac08663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18b4a9a-c360-4d5b-b540-014d621a000d",
        "cursor": {
          "ref": "680a79bd-4005-4c70-b11e-4a7546b37f74",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5471c8ae-500e-4e46-b7af-327a13fbab67"
        },
        "item": {
          "id": "c18b4a9a-c360-4d5b-b540-014d621a000d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "97f07940-012c-4f3f-8632-5d6945d45e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f35df96-44be-485a-9fa1-c67d69d60166",
        "cursor": {
          "ref": "9faa3e74-90aa-4057-a3b5-bbf3ac0d95da",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c1a87186-ec08-42cd-93ca-22b3dc4b3741"
        },
        "item": {
          "id": "5f35df96-44be-485a-9fa1-c67d69d60166",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "08d3b1cf-ebdc-4e6c-abf6-7415fe801aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2a96f4-d981-4341-b4c3-864db5a1267b",
        "cursor": {
          "ref": "c47be8fa-fd27-433f-a931-46671ec03e55",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e42749b6-930b-4c2a-813c-8076a84c547a"
        },
        "item": {
          "id": "0e2a96f4-d981-4341-b4c3-864db5a1267b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1351133b-833d-4ba6-903e-2da4d10e935d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcea0a1-42fa-4817-9582-12f55fa4eb65",
        "cursor": {
          "ref": "ce940f76-37b7-4c7e-8253-a187b68f8fcf",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "74396f3f-ba92-4fb1-844e-4f01a76b1c3b"
        },
        "item": {
          "id": "4fcea0a1-42fa-4817-9582-12f55fa4eb65",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fa5ba292-3410-4193-bd11-a7ddb832a8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562ce5b9-7cbc-4e66-93b7-89a33e96c56a",
        "cursor": {
          "ref": "1d4132b1-d8b8-422a-a127-ca18a1051909",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "91c4a7b9-48fc-47e7-8937-31e48fb1f9db"
        },
        "item": {
          "id": "562ce5b9-7cbc-4e66-93b7-89a33e96c56a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "abe7a4ae-577f-4ed4-891e-4bd745f14fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef273256-1892-4291-bd3b-13e8c212ff5f",
        "cursor": {
          "ref": "76fcff4e-6f64-4b17-b8e4-8d0e0c94e695",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fa3bade2-0e5b-48d4-b650-9a51e09b7d3c"
        },
        "item": {
          "id": "ef273256-1892-4291-bd3b-13e8c212ff5f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "33c6d8e2-ad40-433c-99e4-ef8d2e45aefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf413d-bf90-4595-aa5c-5b1cb4972a52",
        "cursor": {
          "ref": "bb02c62b-1c19-4c6f-a9df-a5cb62dc4cfa",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "33b7d065-7c7e-47ac-83c7-827138ea8ca8"
        },
        "item": {
          "id": "c1bf413d-bf90-4595-aa5c-5b1cb4972a52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b0f953b7-061c-4ed8-b759-9a128eceb74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4199701-a1b3-43a3-8fcf-8d378162073a",
        "cursor": {
          "ref": "3888ff18-89fa-4d79-bd5e-01472c89d072",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "36647cd4-5396-4aea-b666-fc12fd7d6b34"
        },
        "item": {
          "id": "f4199701-a1b3-43a3-8fcf-8d378162073a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "320dcc3f-27da-44fe-8a41-16b8d9887b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986ae483-40bb-444b-81fb-400fecc1b3c3",
        "cursor": {
          "ref": "7385cef4-4d9a-436d-8586-80b86cf0d8c4",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "46da953e-0370-4782-a344-132f24a0da8d"
        },
        "item": {
          "id": "986ae483-40bb-444b-81fb-400fecc1b3c3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4a44bac0-1d30-4f02-8a52-3a76c1fb2f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e78e4d-7e50-474c-a1b5-46385273c524",
        "cursor": {
          "ref": "e6a17a52-23f2-49b4-aa70-2e0eaed01057",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "58749233-7ef8-4140-a6e3-6d6ecaa13f6e"
        },
        "item": {
          "id": "32e78e4d-7e50-474c-a1b5-46385273c524",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3af7ab2a-b1ac-4196-8bda-b5f2d8dcc0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92e7271-19e8-4510-b79e-a11cb717ccff",
        "cursor": {
          "ref": "07fa2db2-b173-43ca-87f3-be9e7a3f7dbf",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8092ec5a-f3fc-49c0-baf1-7bb9f63a6417"
        },
        "item": {
          "id": "e92e7271-19e8-4510-b79e-a11cb717ccff",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f718c8a6-d3b5-4c59-b22d-8a88531ca5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daee150-99f2-4845-8fe1-5c034d726cc4",
        "cursor": {
          "ref": "d920f3a1-bf69-4b55-b8d9-af8dc1a37bce",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79628c8b-e35f-4722-8e17-85add4d8563b"
        },
        "item": {
          "id": "5daee150-99f2-4845-8fe1-5c034d726cc4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7a1e233f-a2ed-4096-ba9c-eeef9ce26b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3b6b9e-8aa9-44fb-af50-13824f08a2f0",
        "cursor": {
          "ref": "d0ac075d-7b7b-4176-8b55-f3c92bb71f63",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b8c0cbd5-5f29-41b8-8d0e-9b63d35f13c8"
        },
        "item": {
          "id": "cd3b6b9e-8aa9-44fb-af50-13824f08a2f0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "767853dd-4ac0-4761-8e5a-a8d4e4da6f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a77da6-9eff-4502-845c-2c7b9fd1b0c8",
        "cursor": {
          "ref": "40d3cb31-f607-40db-83af-2f4c8cba9032",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a7f3d338-4c85-45cb-9b00-4ff59a539b3c"
        },
        "item": {
          "id": "03a77da6-9eff-4502-845c-2c7b9fd1b0c8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b71af91d-8904-4834-9b0e-fa072bfa5b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97374776-2f7a-42b8-a459-2d9a8c7c7d2e",
        "cursor": {
          "ref": "57c67d6d-9e5b-4ce5-b166-2bee59abefb6",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f6ccfd8c-1bdc-46d0-b856-1a5fd6b94fc0"
        },
        "item": {
          "id": "97374776-2f7a-42b8-a459-2d9a8c7c7d2e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e164c3f-6d02-464c-aed4-195af7ec62f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452f30f-767e-4ffc-abd8-8ce16e0d3144",
        "cursor": {
          "ref": "a8256732-263f-456d-a28c-23a20533514f",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a150cac5-8e1c-427e-b020-dd9bf82bca3c"
        },
        "item": {
          "id": "7452f30f-767e-4ffc-abd8-8ce16e0d3144",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f04b6fb9-3d61-4f75-b03f-d2747aae6996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec86a512-aef8-419b-ac75-e7801030cbb6",
        "cursor": {
          "ref": "c4162e72-44ad-4bc2-b0a7-3406a9f54647",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6e9f4557-b862-4341-87b9-908d64a44127"
        },
        "item": {
          "id": "ec86a512-aef8-419b-ac75-e7801030cbb6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "08214738-db1b-4cc9-bb30-74fd849915eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 239,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e46d6-f5bf-44a2-a2f8-05a5a28488e1",
        "cursor": {
          "ref": "477febde-2aed-4759-985c-aafff6942a5b",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8bd9e17f-47dd-4961-b245-362bcb14b2e6"
        },
        "item": {
          "id": "2f1e46d6-f5bf-44a2-a2f8-05a5a28488e1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9f7750a-d20c-4dca-8d98-3bf8a9fa5c15",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fd53b4-7c10-41da-8b6f-359c124478bd",
        "cursor": {
          "ref": "0395ae4b-8fee-46e8-9680-2018a614d8b6",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c6077846-d1af-4231-b471-cab3da0f52cb"
        },
        "item": {
          "id": "c8fd53b4-7c10-41da-8b6f-359c124478bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "12787b8e-34c0-48c8-b51e-ae63bf26d30e",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "578e8693-8478-43e6-a8f0-48bb0400f3be",
        "cursor": {
          "ref": "0ef76a51-c2de-4c54-a449-11df10603b46",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "95eff7c1-65da-4aa9-a4ce-207a8fa1d26b"
        },
        "item": {
          "id": "578e8693-8478-43e6-a8f0-48bb0400f3be",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "39cb8e9a-5038-46d1-937a-d28a7441becb",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "61607841-7725-4f63-b061-140cbc32131f",
        "cursor": {
          "ref": "986f93a8-510c-4a18-a9d8-8ac9effbede4",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ad71ed78-98d1-479f-b7eb-4e0f8963bb16"
        },
        "item": {
          "id": "61607841-7725-4f63-b061-140cbc32131f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6b6a041c-ce4d-47cb-b158-33b2f2fcdeb1",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
        "cursor": {
          "ref": "b38a3a18-ade8-4421-9214-d6f738738e33",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d0eae3e-6288-4300-a19a-54ccd0000e54"
        },
        "item": {
          "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "521fc6a4-ed4e-4ab1-b86f-061a9b6c2527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
        "cursor": {
          "ref": "b38a3a18-ade8-4421-9214-d6f738738e33",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d0eae3e-6288-4300-a19a-54ccd0000e54"
        },
        "item": {
          "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "521fc6a4-ed4e-4ab1-b86f-061a9b6c2527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
        "cursor": {
          "ref": "b38a3a18-ade8-4421-9214-d6f738738e33",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d0eae3e-6288-4300-a19a-54ccd0000e54"
        },
        "item": {
          "id": "ceefa598-79b6-477a-9f8e-83d9919caec0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "521fc6a4-ed4e-4ab1-b86f-061a9b6c2527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab7699f-0267-4316-b2da-5b9d33ea8aa8",
        "cursor": {
          "ref": "cb817571-89d9-42c4-bcdc-77540c7da266",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b97fbe60-9a9f-432f-8bc9-0e7a9fdc16f9"
        },
        "item": {
          "id": "6ab7699f-0267-4316-b2da-5b9d33ea8aa8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9742604f-d578-4142-a8d6-4756d0717c58",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 219,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958cecb5-bf52-4ee5-bcb7-a868d90bedd7",
        "cursor": {
          "ref": "f716321c-15b1-45ee-bf71-03985884fcae",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d33eee7b-9714-4c29-8ee1-ff3c6ecea98d"
        },
        "item": {
          "id": "958cecb5-bf52-4ee5-bcb7-a868d90bedd7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1bb9bd5a-fd42-4f31-8dd9-3439895cc9d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958cecb5-bf52-4ee5-bcb7-a868d90bedd7",
        "cursor": {
          "ref": "f716321c-15b1-45ee-bf71-03985884fcae",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d33eee7b-9714-4c29-8ee1-ff3c6ecea98d"
        },
        "item": {
          "id": "958cecb5-bf52-4ee5-bcb7-a868d90bedd7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1bb9bd5a-fd42-4f31-8dd9-3439895cc9d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b5c0ea-a621-43f6-bce5-74b7cded6563",
        "cursor": {
          "ref": "7b670e92-33bf-4a15-9d33-f9be40fc8cb7",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9da4e71f-c5f5-4a8d-8a38-b9f67af42c60"
        },
        "item": {
          "id": "05b5c0ea-a621-43f6-bce5-74b7cded6563",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f7465708-8455-425c-858c-d14d43fcbb52",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 475,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28783aee-303b-4e1f-950c-2c94d0ecd7c8",
        "cursor": {
          "ref": "1ff4d2c5-de04-4080-9f50-d1153bdd4330",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "028f4bf8-217a-4ab4-8a93-3d5f7403f80f"
        },
        "item": {
          "id": "28783aee-303b-4e1f-950c-2c94d0ecd7c8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93a3612e-0549-4a82-ba49-99eb743eabd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28783aee-303b-4e1f-950c-2c94d0ecd7c8",
        "cursor": {
          "ref": "1ff4d2c5-de04-4080-9f50-d1153bdd4330",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "028f4bf8-217a-4ab4-8a93-3d5f7403f80f"
        },
        "item": {
          "id": "28783aee-303b-4e1f-950c-2c94d0ecd7c8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93a3612e-0549-4a82-ba49-99eb743eabd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaf2ba5-4ab0-488e-a717-834ff1fe2063",
        "cursor": {
          "ref": "21d11f66-5521-40b5-8718-3bc546e2d381",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "22ad919f-b28e-47ea-951e-5ef4ccd52f2d"
        },
        "item": {
          "id": "5aaf2ba5-4ab0-488e-a717-834ff1fe2063",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9f55dc85-53fc-4390-9c60-a2f23d678b1c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 479,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}