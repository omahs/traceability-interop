{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bdb558df-724f-46b0-8018-4c5afed0348a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1dc0eab-3a8c-4aba-9ed2-dfba884560b6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cf4dab4-eb19-4324-8d1c-c5b4f7e8a31a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "029a3536-5679-4679-897c-477dedc84f09"
                }
              }
            ]
          },
          {
            "id": "f57d3a72-71d4-4f5d-b42b-0c8bc9ca292f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6c5527f-2d53-4e75-85e1-d2715abaecf6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee25772c-4212-45d3-b7db-02da0e400097"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8106f07c-6e3e-4219-80a2-c6da451d7be6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90e8093a-a188-4f57-b0ba-b87b24fe4054",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d008279-61b3-4c92-a557-39cb6cb3e2b4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7cd39f8-d015-4cf0-ba1d-3b2f62c97463",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af7df81e-2229-4540-83ba-38c038723c01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82d113ba-3f1d-41ff-a94c-e3946121aa7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8a9ca3d-44a2-42d9-8e92-5bec4c53adc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd926098-4fdb-41d3-891d-c8065c9f828f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1219c78d-8f69-431a-a5fe-f0448cc4bf82"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1e8808a-6901-443f-9010-36ccb9c04ec3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46907d19-594f-4de3-a27a-becd1721efbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db59fd38-840c-4ae2-b331-518ab4821902",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bec4e68c-b1bb-430d-b214-52a82d90261c"
            }
          }
        ]
      },
      {
        "id": "ca3ff244-a2c7-493d-ac30-cc5736c5fb48",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f0fae42b-0f6e-415b-b365-ed05a3d7fa6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10f9d756-f437-4d82-9526-84990783b340",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2ff917f-55cf-4cca-a270-a5620a34b240",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f9bdc-2963-4800-8d09-71d1463010ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f15b79-2924-4998-ac0d-f9dec6e3d80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe09767-98fb-4483-84af-8050d1ab5db5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b36d7-7ce5-4493-88b3-40a806490296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cd4fad4-a033-4bf9-8572-c48bc903a6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407cb21d-278f-4880-a49c-3a614e35c6db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451a25c0-1c81-41dd-b4b9-815939dd164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac4b9df3-d653-46cc-a3df-2160e8b8d07b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "deab2c88-a45c-4ce5-8f85-e755ad837421",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03a9e1fa-80ee-441b-bc42-a2b890cbf662",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f8b804-fe70-4215-b132-451a882b0d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c189cdcc-a1fa-4b29-b26a-b917eb858401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ca0da0-eb0a-42be-b58d-2ca7bc4df2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36279e2d-02ea-48e6-9b99-c8c9fc9872ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56cef42-266f-490c-91b5-98959a120fe8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d376afe-74ff-4908-8e46-9ab99ddd1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "890fcab2-87df-4218-a45f-ad6a9364b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afcf0d4-49e4-42de-8eb5-b16bef16fcf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c5e9fcff-bc27-49b6-9987-677d7fca63b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a23f9bd5-18d8-448d-badd-fc2cfae51fe1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adf984be-b7cc-4949-8437-6587bd2f922b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb5e07e-3d3c-44fa-b3b2-8b9f9e6a0df8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3dea8c13-82aa-42e2-922e-b88603b35bb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f722cbf-4165-4ed5-8de4-a740a7fe3adc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "384e2992-47fe-4d6b-8c65-6f3f4c5eaec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "994f3115-453a-42c4-96c2-d0a2de599cb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54d3ae73-7825-4a12-8eaf-bba95550c6c2"
            }
          }
        ]
      },
      {
        "id": "380e1a9a-596a-4215-9f7c-0efd0a45b665",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5cedeb3e-7927-433e-83f6-b1387384633a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f71f3c8-6c69-4763-8a5e-39a302fee619",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dd6b532a-c0e5-407e-ac1a-f83fc35f53be",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ead4bab-db53-4771-8e00-2086509120b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7370a9-756e-4147-b076-39ffdb96bec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bea59d9-30d3-4d12-8985-0d246e5110af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3de4457-e081-4e78-9c16-cc734bb1264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197fcb2e-95f7-4d99-98de-74438b1e5f7a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77424eb4-0bf8-4607-8efe-455cec62d6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd1a6aa-a7df-44af-9d34-c117eb653c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1eef1e8-2df2-4d55-8a7d-87b9dc4eb19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9da80e1c-6a8d-449f-8593-dcbfe2660763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712cf1bf-45b3-46cc-984f-dc77b68c714f",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d852309-7eea-433e-92d0-880b84755f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdbb0b3-6cf3-4e1c-a66e-cbf580e20af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6626b1d0-e08a-4fb5-ad62-ab342c5d6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a776259a-f99c-485e-a4ff-c146a1e60480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a1b6f-9733-4d92-bc6d-6f7e94c7b39d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e833ac1f-85ee-4293-b4af-22f1a43ec50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fa0275-0a88-4467-9b9d-12996dfbe933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e60f6a-5c87-4370-a4f7-60903ee70c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb653ab-0c03-446a-a108-a8094eedacaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c1d766-5801-4983-86a9-0f4368c29833",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48dd0a1-cf4b-48ff-8aff-e7d46447bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8e9200-2a30-4e11-83ca-71975cbda2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72494e5e-7ca0-4c4f-bae3-9324320d0360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c93223e-adcd-4e62-b108-c89904af24d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b49e2e-b776-43ea-8531-a1b330bdbead",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf4190-8446-4bad-94f6-a69994032f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59b4ac0-058d-4d55-abd9-c685a90e72ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a37f59-2fc6-4194-94de-027b2c411e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dafa436-41ba-4ec2-9b9d-b1e02979b53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3fa0e-3dbf-4306-96d7-df7fddec809a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96fc594-cc0d-4e36-bdf0-8efb2b8ff296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c455800-4f99-41b5-9f26-5288f51dec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb18dc44-83dd-4f76-ac67-3139256c84fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c87667-3df7-441b-b7e2-6a370b6baf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a3dafe-fdcb-4e9c-9bcb-53b7e93ada5a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c11dd0e-9077-41fb-a293-b289930b438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321043c1-42df-4f81-b310-79867b6615cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106e1ab3-efed-4640-8d7c-133835a158b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7d09ee3-1dcd-4d1f-bfdb-dad7b2d3c343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56293ff1-2ead-47c0-9020-666b8ce2e891",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092263d7-aeb4-4687-98b3-1da86b13ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d191bbba-7ffc-4591-9bc8-05627d29b420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58078422-6e9e-45a6-b4ee-a3abb935a970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4da34c96-6d8c-4ff2-a702-52f57ae7127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c5634b-eb2f-4837-80bd-dca5e8f8671b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bf073a-f898-4d50-99cb-b9972eab4191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822c8d42-a098-4a75-8c68-cb4bea823430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fd5c0a-74db-4dcd-a0a9-b44a028b475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30180a99-6cc3-4757-8f7f-20be5742aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f209228b-a873-413a-94a7-7529f7be845c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb450d7-a90e-418b-accd-0124bc56c85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668a1a3b-6e1a-4af7-9da7-fae1d36ed42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82334b0c-4220-49a4-9389-4901fbe9fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e6bd17-7589-4ac5-866b-f9fff2057927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3509bb-75c9-4142-a3dd-b71c94f7badc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb02879-b0f0-47b0-8fd2-b686dabee519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04a4409-cf56-465c-8cd8-28db95a719be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16cc111-0c4b-49e5-ae3e-833c085e160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "258626b8-d26f-44e0-a154-52de947a626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb91b7f-4364-4f89-92e0-371afeb8a17e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3c1297-8b32-42ae-83a0-aa06ebe498dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52c7281-8e80-4c71-ad42-363f79887ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308767fe-fe14-43a7-91cd-c68543fef7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e3fe974-362f-4ddb-9917-722c54f1d6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af97685c-197b-47ad-98d7-3b658bdf246a",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f4f3bf-c3ee-491d-9552-0cb271479364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed9134e-583a-462f-9ab3-10a7a3f1fcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab28a71-2d62-47c7-b5f9-6231aadba272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea138603-3da9-49b6-b764-ece7287ddf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e24ad-ee5e-4528-b676-6ed113c26ed2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b055ae-e226-4c19-87b9-8b4f12c3f07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd07d43-631f-417f-aadb-b5fae113489a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a48a0e-a7df-488d-bc91-a2dcc28af560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf8fe33-848e-408a-aa28-bef2efcf8b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe1a74c-3c15-42cc-8d3b-4b99eb2afd65",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a368eb1f-a981-4b11-9993-35d1679d6515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8426dd-70a6-4c44-9e69-6931e34a376b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740d2b0-71ac-4575-8643-18b7b6628fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43fd5373-6509-4284-9b64-61141174f607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df125fd1-a848-405d-a8bb-1d0094f46509",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db04a6f4-9fa9-4321-ad0d-514415ec2995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3fb29b-53db-45c0-9adc-7337890b3f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f350501-cba6-4398-aa01-7b78110e8357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eecdace9-2163-4145-8f4d-d11e4b5b70d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a177ae9c-2157-45f2-bb24-52077fce7ebc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4d35ef-145f-48c0-8164-f6b7bb0227d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20454bda-cfa6-410d-8e85-a2e7c56d46e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d36632d-34e9-4ec5-be9d-f53994b047f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f13ed3f6-3a2d-4181-bc30-774669118eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912568ff-732e-4222-bfc5-ede825fec384",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b07b7f-99d9-4566-ab79-d1847876176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2db366-d4cf-48cf-a20f-5a7643e01ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83038d3-4838-4a24-88f9-591e80fad461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b812303-1848-48f8-9b8e-9272baab488e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7854dc1-dc18-45e8-86c8-6f58961c20fc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682e6a7d-205c-460d-8530-56dd244d4ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d730e88-fabd-48d5-a095-fef1b50a9940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ad533-17c7-43b7-bdf2-083501c5b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9989d1-5b25-4ec5-bb65-7b88fe7d532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c576e3da-11a1-48cd-b50b-dbaa0ca2ee14",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbddaf74-38bf-4499-a084-681c0a526b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1da119e-a918-458a-9bf3-025c2418e521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c522c113-846f-4fe6-a95e-f3c84356ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acbf65be-c651-4ae6-8eac-ea245a77118e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7300d2bf-d059-4ede-a57a-5189c4d4a3d3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acf229a-a5ed-4f69-9519-99b2a0236525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fccb448-43d7-4518-8e4a-ef1d8c976fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cea9648-3b03-4c1e-b68e-4512a72612e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "282d0631-70b6-470d-9636-314c9e1b1f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2933be04-867e-4f7c-8cb1-00f15d8b542a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76deb1a-8482-42a3-9c98-e0e43137b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2eee41f-75cf-43f6-a506-fdd250bdc5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2ec049-2edd-4cde-a884-cfa6f50389ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eed2902-aa20-44ea-8a52-b8367b42e705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a58a8-9de7-45c3-8fde-1ad6a2b6d74e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54003b5-628e-49a4-9fab-71faa9f1bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96548c01-89a3-41b4-b9df-98f4b776afa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee4037a-47f7-4ee6-b3f4-60de435a8872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6222905-8246-433d-9cee-84faef3d9948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7ec5db-1992-4c39-a1c4-55eb94735033",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a947a-5e7a-465e-979f-0227f324e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54047746-97f6-4312-93f6-259a92fd358b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf0d52-8957-4986-866c-74309dcd73b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "740ec151-937f-4401-822b-89d501641134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b2bf0d-eaa3-4517-b624-d4c99176ce8d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f8284a-d1d7-43a5-9960-3f9435313be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c135aafe-b719-4fa0-b625-acde97ce50db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b8fb01-90d7-48ae-b10a-80a46c4becff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74659a58-a6a4-47ff-a9a7-510ed9c74794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e9e33a-37ca-4eee-bcf8-612db84c637b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f975e67-a613-4686-9746-5619f6482c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cffed9-cd33-425e-bf20-9cd542c7707f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e52d9e-8d2c-48f4-8be8-7f0086779fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22d02ed-0c6c-4386-ba8e-62a5aa9cf277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cd7f91-09ac-4121-b87c-2a5a670881c4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369f7813-09d9-4d40-a07f-03746f6181a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0d509a-a5d1-466e-b08a-893a13a06284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5107a4a4-1681-48e6-96cf-c168661a2a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82108f10-4e19-4c2e-a552-b676bb967b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb503b-0624-476d-a5e3-7e98b0b31ecc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cd7c7-3baa-4336-843d-b10b66e71904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ecaeba-19e7-43d1-b913-9bf150eab691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b85af8-f3f5-4387-a2fb-0f53802edf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7e9a99-f1fc-412a-86cc-9eaa909fbae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e28587-c025-40e5-8e86-e7b7e78ee02e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0783d35-ad07-452e-b849-ace28899e49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350f6742-3010-46ca-a90b-91e4c985782c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1dd91d-a3e4-4dfd-a1be-506f18295125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e02366-dd8a-4d61-b1ff-d05fcc7b8c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a22883b-7b0f-4076-bd6c-9d6d84d24467",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80129ae5-9565-48a6-aa70-a84df597a180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b6d1c1-d2c8-4593-a602-52f015b9ddaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625220ac-7d3d-4331-b771-bf29b30482c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "894a4191-5b78-4483-b6fa-00994791e845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e99f425-30dc-46ea-854f-d766b595e510",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8935d874-3205-43c8-a190-0e1d71259c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc46a29-8dc7-4c79-9f90-881b0478a17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cf1353-ce7c-4830-97cc-769669a9a05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "596b82d1-907a-48c7-842c-820149919b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9187a4-0014-41db-a8ca-fdf90cacebc7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17f87ac-0e78-41b9-ad05-21ad462c4d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84088c05-c9bf-4174-9251-d94ae49e338e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02fa559-d75f-47c5-ae1c-9cbf1cd5b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ecadf9-8e6c-4d7c-8cdb-6c9f942b66bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbb02ca-4148-478c-b5cb-0e6315b7109a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fb1692-4bc8-4beb-93b2-8d53551b49eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388685b-4ae4-4f6b-916f-9e8a3b688ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b713d6c-34c0-495c-99d6-1e80b20f4451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdfb1e8-9db4-4cba-ae14-1ff23ac777a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6eb42e-b0c8-4fb2-b6ba-e272803308ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e283fc3-203f-4b5f-b18c-b97d03e3987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68258054-08d4-4982-bb1f-60e4297dc4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c687e22-a82b-4d38-a170-82cc73345444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "422a9c63-ccd8-41d0-954c-a573c95aba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b0f7a-62d7-47aa-88c3-a9886ab75342",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00893e0-7149-4fb5-95ee-3ca781521f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723a8b0b-6547-4a6f-9293-677a5068c323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7da311-0e4f-40b1-9c23-6b7a55450e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29842b6-953b-45e2-a626-0782fec57207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a25a2b-0a46-4519-9208-d58114ecafe1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa22dc4c-5850-4858-afc0-320512fd5426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5019c1-0f10-4850-a1e7-082098249743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0ba7fd-5780-4185-873c-dced00e02553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cf371395-6daf-4290-b576-f730422ed1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb8bd65-5648-4284-ac18-696a0bf990cd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1615b150-21f8-4bd5-a177-b699bf5f3c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85cfe5b3-af8e-40ce-bd44-7500ea99f83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6aa65-d209-40b0-a74e-c026b3b55885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be041aa2-1cce-4783-a11f-e5caae14a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a46ef3-8214-4f07-8220-346ee56e02a4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2274c9-531a-4906-a1a5-e264b28688ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2934e2-e7d6-4a5b-89a8-e8536a8051cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8ac1d-e04b-4136-bfa8-56097855c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfec14ca-e82a-4e57-ad04-46b43acfea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5793f9f0-f36b-4d05-85fd-4f4c626ac0ff",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2717b1-56ba-4e59-9944-5c87495b336b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d46ad2-3e47-4f2d-a6b7-157b54a3a87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7c90d-9544-424e-85d3-70d8fdd24c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8b17b7-4b78-45ec-b7a5-b87a48c610d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2c3955-a6da-4cee-a189-9d5f12ca092b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f032b9-2fff-4f24-b8da-241af8f35826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7715230a-0d37-4509-bad9-42cf05f82986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700f2af8-083d-42d8-b1dd-7c016d5e7c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f527312-a3ea-499c-a0a4-1b666262e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b175fa-623e-4381-9cbb-a2cca638bfe8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b99464a-5e8c-425a-bae8-4975a23a3f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a5356e-be98-4462-9b6d-f3cdd006ab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1efce-ba0f-4cbe-9a2c-e4b8446037d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8afce92-11c2-4584-9d91-cd3bc4c1be6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ebe0d-abca-41fd-9ac1-62b95a9f3bb3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eeb4ba-0f3c-45f4-805e-30d58782bfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50894a8-29cb-4902-9335-45679d330daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc0a950-6221-4a95-92a4-2fb31616b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f44dfc7e-eb0c-4a52-96f6-f034562d6c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc31b5d-acde-4d11-8df0-4d6d151986e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e133e3e8-6293-4c32-916a-d4eda1c95829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c610ef3a-2bc9-410e-bdb4-25b3e36ac8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d0183-c77a-491a-a635-8e1b757cc39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cc24fb5c-ef04-43ff-aace-58e98da24e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dc5ad7-a468-4b43-9175-f9d3dd3b1603",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2167a8cd-f412-4758-b2b3-57c5ade7974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef20d88-8d96-4f93-8790-04549dbebdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4b4927-c5b2-40a8-9dd6-98534f9198f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c82af1f8-d9f3-4a8a-a5f2-d3b5d91a4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5f2a75-62cb-4061-b9d0-5fd49fce1236",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f480e06-7426-4136-b53c-337efb88c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9689b821-48dc-4254-88cd-df7fb5796c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc019221-c1bf-4d6e-a20c-ba6a4a6f2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3646863-7f16-499f-9e58-e8102cedf8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303cb6f1-fd9a-457d-a57d-37dfa6c716b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa792d3-9c63-4802-978a-ab72eec5e068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c918a1f-3c0a-4db9-83ac-fafb63a4151e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e3016-0a64-4a67-ac87-a0e9e51ac8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9e35d5-5f43-4c48-b435-07d592491bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0425978e-49f0-4605-98fd-085a336d179c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1724aee8-3df0-458b-a784-a009dd871b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c076ae7c-69cc-402c-85e9-631009219944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e594f971-7808-4a0d-80a4-f74b06a4cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2867f3d-b206-45ad-9de4-ca5f15d1c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5206a97-9e80-44ed-bb52-661b5d66e37f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5ceb0e-d165-4099-a9d1-43370017fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c69a83-7a90-4a19-bd3b-ec1d7ac1d8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc4eade-3497-4c3e-a3c0-62798d57caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2937ef26-a208-4af6-97f5-e65dc84a40d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a0322-8ea5-465c-8a36-d8ec1a662d8e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c03a137-ba27-4784-9283-b096ac71685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2280630-766b-4018-b28e-b05bfdd317c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84facde0-80bd-454a-8168-6dbf0dc28b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1784cad-4ee1-414f-b478-2d0b814cd970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac587a23-a012-4be5-b661-b070d7381c7b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcbf69a-b2d4-4cef-8ba8-1fbb0b3b7ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864558be-08a6-46c0-8435-c1a32bcca8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c505de-7c05-41ea-bfe6-ede929289b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f0734f-8397-49a2-8545-5e5068a69a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6832a1c3-add7-434d-b6c6-908b5dc9806b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d81fba-56ea-471b-a7f6-6fcb4592f0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dec50a-eda2-433e-bc05-98a1f2e4c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b575f8cc-a48e-42aa-8718-6125e0822dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d926e7f-ca58-4e9c-9f57-6961e150d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93c42be-3039-4d5a-89dc-49e25dae20e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08da323-6a99-4cd3-b253-34ddbe9d5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7703e06b-ddb9-4d4a-bdc7-46541e92a743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72132559-f255-47d6-b189-0db5a3682720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "19322aad-6f98-4652-8b42-7302104e53d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ec39c-1712-4179-aae4-1fca7f853a48",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c189dfb4-7f15-412b-9b76-257141aceeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101439fb-5209-4863-9da4-6c07a44c7bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4dd37-1bda-4e5c-8969-f05b6db4c272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7df5c29-945e-413b-bd0e-d45a07e1037a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b7974-bde1-481d-b204-3d56eabd6af7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df27446a-af81-4923-8f67-bf6495da5f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94771ae2-bba7-4f46-883a-b1e379da98df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd50aa-16ed-4d77-bdd2-eeb8012c7b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69144bba-5e97-418f-8740-f7f4fb61f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c714f8-909e-4819-99ea-fde4791e52b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679a459f-bd75-4e44-aa25-f406cbc6b34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d34d5b-fe1e-4cbc-a71a-64c22811d14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a2c22d-102f-4178-be20-7c75a8911890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7398d31-3188-45aa-9f20-a7e3cbb173d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ea484d-8a2a-47db-b3fc-deef367781c4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336fa9a4-5daf-49fd-8e12-8d0ac5998990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede2a861-5105-49ef-a665-293068f4bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76182446-9aaf-4473-89f0-c76a41ac42b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93ad1ae-130e-4af3-b97e-339f463d7fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd79e1c-23a5-4ada-acf5-f809db8332f2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2426a-22af-4aa5-b85f-bc47d2f1237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ff2d0a-f451-4d98-bfe4-03ba4014c76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc58fbd0-3741-49cc-9092-0d80fdd024e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "66e392a7-4a6e-4597-a050-d0b588e9367c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fcc291-4890-42e1-89d6-da7112da076b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0720e79a-8a04-4d3b-a3b4-386e885de75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f6a4b0-d55c-488b-ba07-b56a1aca3126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3445d4b-a6d3-499e-b657-be072e0104e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8502a8d7-2460-414e-a42b-6eaf5793be2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41648cb-ad2f-40ac-b4ec-56961f074d8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91318b-eef1-4088-9075-ac1530ba2cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bac054b-8e98-4c15-accd-890d440359e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d406f463-af78-4ef9-8faf-486f94ccb79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccca3b7d-0af9-4b11-92e1-f30ddf0c05a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f9f0a6-307e-4ca3-b833-fe520e5339df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72ba38-0e4d-489f-b020-1a9090fe75d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c82e013-ac7a-48d9-a8b2-fc9f37cc4616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ec1a7e-534a-477c-87dd-92fef6e01ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e02912e-4366-48a1-90f0-3328b05e2f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b60554e-131e-4a42-b60d-598840abfb9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1cc422-bc41-49f6-a4a5-3eb45b5a8fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c847197d-00b6-4035-bdd2-02d55ba9b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df30eb01-608e-44d8-8366-09baad5d1b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8500d806-cd22-4566-9b16-84120ab0a4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bfa0d9-9df9-41f6-b6aa-4f3aad3a0974",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac04b9d7-3a8e-48eb-9ef2-cfa31f24d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e88a93-0de3-486d-bd1a-fed913020ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e81076-d2d3-425e-8fc1-c952a4797d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3108a702-0788-4739-ac35-bec5019875e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dbe49f-c87c-49cb-896c-2e6870f98a32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2123042-cd4e-4c2e-af3c-e5cc39164278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65f6a0d-a902-4dd3-87bf-db8848bd56ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537db23-865a-450b-825b-2466d43f5004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddf978b-efac-4753-9098-8792ca9b4848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a74154-7d3a-4ab6-99ab-3ac39f979571",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd79a45-9fdd-44d5-b4f2-b72b94c0537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3663d7be-0d2f-4859-ae89-32bd34bee192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5631ce-449e-41c0-aa27-5462cfba9f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82168dfd-a041-41b9-8c6d-7b503015b961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d560a5-5597-4535-978c-2b6ba979bf4d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c379e7-ab68-4887-a494-76f70c96270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7f93d9-d98c-4719-b313-cc54f54a8e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a771ba0e-3948-45fe-af81-49151f575921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b369d4c2-a787-42fa-ba67-7a77509af096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c03964-d55a-4ae9-a7b4-e43d3102761a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b24b34-2afa-4e9e-aba7-5a759e5fe8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694a70dc-6e74-4b15-bafa-2f76cbc4281f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dbc41a-e778-4fe7-9d4d-63b7c371a9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7f9f2c-88cb-4bea-a552-9934c7cce998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a259ab-5a82-4534-b5e5-d5e05229470c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213de8ce-bb98-46c1-949d-a994d6824fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89cde43-4ea7-497a-a38f-38d47950d30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6ca14d-b185-46a5-8702-3f4ad544ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbe713c-e728-4825-ac70-32e704473148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dc6115-3f92-41af-a315-3907e3feaec2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f7ea13-618f-4c1b-9c76-42aafc85bce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb37d676-bf37-42d3-af6d-d4a84f551540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f9290-b6b9-43f2-b6be-54d2597a123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a59c31ff-9ae9-4f09-a5da-c0056cb830fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa80ac2-e59a-4a27-9dc8-b1dec015f86e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86b092-9147-48fc-a769-1e2532366e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f652d13c-19c6-4164-a169-f4a1dbe027f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a879d07c-cce5-4ea6-a74f-4d8496c0cd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a08d7f4-1ee4-4c28-b728-c8ffa030b470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2458f880-bd24-4dba-985f-d836d3242447",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076b88d2-0ab3-47e0-9966-785db993cf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2ece59-71a5-437e-8e9a-70d1eccb1f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a7948-ddaa-486b-8364-9a62ff8e3ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a409dffa-58e0-44f9-960f-f250f6704fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4ba46-bab6-4c05-869a-a7abc90df2a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f122bea0-70f2-4111-9a30-474106d81f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eeb7be4-f42e-40d3-b25d-e734001100f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757945b4-7eb6-4e46-8a85-1d7a3313fbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a8997d-00b9-4d90-96cd-630ec0661250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ac969c-1888-4a3f-a4c1-c099e29286c8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3638705-bcc4-49f8-9332-65a0226e4af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104c9018-95a2-4504-b08f-645f2e69928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cf4a16-9c03-449a-93d2-3cb164e50712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c87b61-3a11-4e5b-b776-6a3ccfbaae29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd434485-b549-4663-9c4a-9a955ee42296",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c7cb13-964c-4789-8e56-c6b3d3991917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf0be4a-14e2-404c-96d6-d5caa4443c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed4e06-77ed-4ee9-aad9-237f571a3075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43968530-3b5b-4245-b2a4-133654028c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a44ba1-97f0-4be2-9932-c7808100666c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5de8bd-69ce-4679-b317-a73d1ce4700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eca4696-d9b4-4ea3-9f2c-cc04f0722c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044d50b-85c6-4152-9f75-d0d37857d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d13459b-b988-40f5-a013-eb2cc13dc7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373d0428-dac6-4953-a8d8-a5b4d12d59e0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95093835-9b39-4086-b07c-33d653c646fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d4bdfa-8d20-492a-bfcd-b4de09f8dbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb834ab3-fd6a-4d7d-a1d2-b3c98f39a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f196b4ab-29d0-47f4-b316-4256f124621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252c08e-b9c9-48c9-a0c2-8fa95f1e1746",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5717e199-f04f-4de0-93b3-7d604aa9280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25f8c94-cfe4-4021-9349-63a3d67c7581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159da20-5d33-4e6f-9790-e5722fd60ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d64bd7-c7e7-4260-949c-18e66449eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae4752e-f65f-4920-ac8d-36ae4627b0d9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4f03fb-3e6e-4ff3-bc9c-ea528aabe090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99c80ad-2b65-4a91-8408-fb219bda1b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd07e58f-0fbf-4efd-9919-862e33a77242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac0c19e-e0c0-4ad1-a3ad-dcc88e2cb004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a5665e-7de3-417d-84e9-585bbc13e325",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33024dde-0a37-4b7b-b229-5e783de72ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aebec9e-d5d3-402c-8980-9b7a2988c710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3f6fe1-1680-4403-806f-aa811bb12dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d00422-9baa-454e-b766-1731a413df97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784f5e29-e1e1-4112-b418-36420f1ae861",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4b0adb-203e-468c-b08b-c66350ae6dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781e935f-346f-4231-83e5-cec13bf41ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2aac9a-3c68-4626-9fd2-45051c0cc79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2f41a5-2d9c-412f-bd32-bbf54574b23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cb2155-95c3-42cb-8980-678fabb9094d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8792f55-834a-4ff1-a677-9f3bc5d084eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff780b6-3e5e-4677-a163-72a09538d9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2e60bb-2e68-4e80-9a48-4b1fea8edd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a37c2595-06c7-4983-a466-249a44f6586b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8979c6-9e47-4255-b26a-6342dbe87f8d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc2a8bd-eb2f-4e22-a440-672da1911a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66547953-cf76-40ae-8fd6-8e3cc5d5d0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec891e1a-c246-46db-9b0f-a075671d3a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f274a66-602f-4c81-b586-377bac91c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66928cd9-6c4e-4161-aab3-2168919eea05",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3cd355-e143-41ee-90ab-ca579dd8cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6113c4ad-46e6-43d6-8461-f416421e418b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5150dd6a-4186-406d-89a2-efa0f5b5878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "566090dc-8cfb-4b0e-b611-04944aacb790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c03904-962a-4770-b2d1-1fb8cc3abe6d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4888e38b-0a4b-4d7f-93e0-60001abe5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8db099b-cd9b-4f80-bcdc-9accda6d779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470e3ab1-3e10-4037-8eab-2a07ef5b31f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bff52af-8a07-4d17-81b4-2d57d604906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9047c99-5367-41c6-be23-a2d8e6884bad",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf36261-5aed-4dd9-919b-a3800c3701c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324a3d28-a136-43b8-bf5d-a6ccef7ab358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164a87d0-78a9-489e-9645-75169f9fdc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6396160-b7f5-4ec5-96a4-cd817bd32c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0cd9a8-b4b8-4c62-b4f3-584ef22f01fc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219f443-567e-4861-bfcf-02922e68d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5ff91a-95fb-4ae0-a50c-41dbea1af8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704b268c-d879-42f7-820c-0672182d0a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "780e973e-3a94-49d7-9885-a801139d46f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98a72ff-774f-40fa-900d-eab117a481a8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6edad8f-0213-4fcd-861e-8418cc5c03ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12870703-1c42-4734-aa96-aab0fbf60f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03087992-7628-493e-befa-315bc6dd40c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0d7e0b-54c8-4fcc-b713-9b27d2a78236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df255492-95a5-413e-8e31-2c3e2f7b7cf4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d59b95f-e306-476c-b8e1-072eb3deb440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0949909-27ec-47a5-b3a8-93b5b55ea51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1683b132-3038-4164-9f2a-5d325d95b805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c18bfbc-2b6b-4546-9f52-6a95aa986c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da70eec-76c6-4c37-93d2-9d6f620e8ada",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88821d2a-7095-4e4e-be6d-f49b6fff851f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d83bad-30aa-4f75-8f19-9b6dd6aace83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b028e5a5-42a9-45d7-8ae9-54ce3ffae9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3059360a-a92b-4df9-9700-f118b9d25cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e445ac-f887-4dbc-a4bf-93250258824f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc60193-a782-4942-9774-ba8c9154d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1b1928-b67b-4a22-afa6-181824f29188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1da364a-3052-40cd-afe8-dcf0e48017e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7285bc-2bbf-4b23-8d11-ad1f3c3724f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b67db6-458c-4b1d-8e29-fc3f147b13c8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d64d985-e3b3-4fe6-ac1a-f3925b723ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2478a9c1-a684-4939-a4e8-13f743858ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4bf85f-95a8-4561-85fd-13df9613b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94b335d3-31fc-4775-8568-1d17eb938096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0b1403-f6f2-4c9a-bd8f-1a45786570df",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e041e0b9-4ee1-4f61-80db-b5dd9f31f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c093182d-15c1-4c5d-a554-724769bd2dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af39880-37b9-4032-8841-1fb6f7b57b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3586f3-5bed-4d11-a934-b048030e023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e053b7d6-f167-43ad-9bee-696f5402d67f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1adc31-30fc-4ab0-848a-a0791e8c425a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9f7439-f61a-45a9-b5e1-94644f359fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e50e8-2a28-4a16-83e9-0253fd6e0446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cb2f9c-2112-4035-80ba-ffdd75e1b627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e5fdf4-5b48-4ed4-a80d-badb3af3d012",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb44ebb-d2e2-4d61-a3fd-c32f54eccd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7dfb8d7-f1dc-4ca5-a851-d8adeeda22d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cf1a08-e252-420f-8c63-f96208e819bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d168c55b-af2b-4056-85de-6761b2e0111a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e05c7896-fceb-4581-805a-5dd5aa97d36d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3f95622-53fc-49e0-a6f1-083afaf14795",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb330a94-7cac-45bb-bdc5-66160155dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "250a53a7-5484-4795-bc61-8e19f8642e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e886d-c8be-4aef-9a43-27a9615a7fe3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8838b46b-b251-44f0-8708-b1365c672e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257d2cff-3fdf-45d5-8cf3-8480ba91a193",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30747c7-5c3b-4f95-b5cb-a472f7328974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46e88aa4-94ac-4116-9fc2-04fe1c59a1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41ce3e2-1eda-43de-8815-c59cb5f2ab1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "02f4e03b-6413-4c5f-ac08-9d9f9545a695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8edff723-9389-4601-b5df-463b5e0716ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82e3023c-a7dc-41a7-b87a-cc31dae70220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbbd1c63-edbd-4a4f-b9af-0f07aa85422a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "089bc767-8919-4ee3-8b33-8de9f1da34a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7e0bcb5-be02-4fc8-b184-c7c3efb6b232",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5e7c136-4ef1-4320-8387-8787b384b858"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e1a7181-50ae-47e8-9dcf-d50ed23aa818",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07024fc2-7ca4-45fd-8c3f-04ca00245a9f"
                }
              }
            ]
          },
          {
            "id": "0b39aaca-c94e-4dd0-835f-0b7845d90113",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e3ec7c4-44bd-46d1-bea0-2d88fb90ffa1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f79606de-7e00-4bec-b14f-a9ed6d3c30a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd2d499f-1f9b-4324-ac46-2a70d75cd7b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b55df756-e888-4164-bf32-158c2b18057f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96e941c9-04b0-46fb-b8ce-98e0960beb7a"
                    }
                  }
                ]
              },
              {
                "id": "35a5995d-e975-4f7e-9dd0-76243226776e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0bde8e3-4ae7-4efc-a5e1-68982010ba6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b07b074-ef4f-456b-b78a-f370fca2c547"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5905b49-42d3-458f-880f-262a5ae48b55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8362bfda-a1f6-4316-ac0a-6dbe02bf6583"
                    }
                  }
                ]
              },
              {
                "id": "6a04ed0d-1333-4900-9375-52da6a6e857f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6aeb97a-31c0-4534-aa7a-d004b1a716fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d2ef17c-1c35-4ed4-9dbe-0c5593fb131b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb34454-c9cc-4ee8-8077-7b2a055d6c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8b96a1bd-3ab1-4a68-be5d-32bf28ccaa6d"
                    }
                  }
                ]
              },
              {
                "id": "09b79ec9-504c-47dd-9168-98174a825c1f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13e9b3c9-e677-4945-ac88-d1aec1021032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6ac6e30-def5-4ead-9676-46e0b890745d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f0b5e26-c253-49fd-b7c5-3a2b44ea38a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b108a4af-1ab2-4872-a990-fb60f8c5a485"
                    }
                  }
                ]
              },
              {
                "id": "66c2d8d3-aaef-4c01-8512-4da26ae9b6b9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8626f95e-4bad-4bb9-afe4-d316481e4bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fd2cae7-95b8-450f-baad-de9e2a23ea25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52104019-bc4c-4a8b-8178-9adc0f8ee786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85ed730a-fed7-4913-b1c7-9f856755c34f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf3c84c6-0e66-45e4-a2bb-1093d36f18d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5cdef73-21b9-449d-8298-63efff59fc50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3438540e-29c2-434b-a66a-c49919e66476",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c06c080b-7799-4b3f-b955-e83cbd045e2b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8dcbb03-528b-4946-b303-db816dd224a7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54eabd7a-2121-499b-aef1-ef0bd3cfab33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c588816-aee1-4636-802f-90940d32791d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c38f3a52-8529-48a2-9691-5ff9a13752e4"
            }
          }
        ]
      },
      {
        "id": "dfbd7291-0be2-48cf-828e-8a384f6f79a4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "201ca819-6d3b-4436-9303-a793b104832c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2805b54-60de-456b-8026-fb60116c6667",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57b228b0-725e-4049-94c6-f5b4c1f37278",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e8cb27-5b5a-47aa-82c2-b905f8d1fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b31ac8e-ec2e-4ea8-94bc-072e3cb42af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e2e386-dcde-4071-bd0f-1da2e91616e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9710bfd-8e6b-4aef-ab6c-af278a33d3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176f276f-dc2f-4a94-9e08-720b58f942a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c6e8c7-54ee-43de-be98-23bc1d8eed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57debe90-369a-478d-b96a-b86fef3edf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fb0502-4c5f-435c-98fa-2a7a450a59c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "035d2652-e5b4-4044-b7a5-0b12164ebf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e38524-af08-485d-b436-321d7f452724",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5fcadd-ab66-484c-95c7-c81d391aa845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86973294-0430-4ace-a7a3-35c37097a3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91adeac9-37ef-4792-830a-96a8b3c24142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e8871e-247e-4b19-b74f-9562a8445b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd46c24-9912-42d2-b1a7-a5cf764933a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc8e056-c111-4833-bd77-ef9e1f5d3c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47253d5-f578-4b87-b59a-5d31f7535dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a0f209-ebf5-4548-9a4a-11aaf1636891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0de0e4-a575-4c7b-bda1-e8e6c875d55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c03ce2-75ba-455f-8956-650cc9e8624c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b998ed-4bed-4592-80ad-dbdadf73dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5ef226-ea3a-4628-a58a-8aa4be832d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc7959-11b3-4a53-9bd3-6eef9a9e0564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e174df9-8000-4264-9cb9-9d2f8f91b9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d6ca7d-5e80-4590-92c7-e1230a203bae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2306be1-00ee-45ed-be2b-b94904eeb36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a26a278-f88b-4e3d-b2c7-e2ff7e6e72db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aa2e41-f422-4ac5-a357-db4ebef3ff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66543e0c-60af-4055-825a-85bf1aa942cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1560d1-263d-496f-a6b0-51e2e84ac911",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71160b64-f218-40ed-8712-c5530810a0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f05380f-967b-4eb4-932b-6e0a1470d679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66042984-61e6-4d8f-8052-3dba403bc522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc08bc0-122f-4305-afdc-36452891f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981482a7-168a-4fa3-b2cb-d31ffc291a34",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aacffe3-13d4-4572-8825-81c8106bcc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70c87d0-d480-42a2-b457-71ea71fc8925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd63b858-65a6-4264-9e98-8aa81ab4d87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb40479-a2b7-4a80-bbf1-46a76c8adc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a3358-13f1-40a8-8277-0f3b92fb23b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd51504-571b-4b6c-bcd4-0db3a92ca1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455be917-bf18-4027-8cae-871b32bb4dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7898e39-f029-4d6c-8057-a3cec3262b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "198122b3-1d3c-4f65-ac01-208f788c87a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407ad1d-a2fe-4c21-b772-07e2dd549919",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27b9398-9b94-4a82-b39e-f4674051e9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404f3763-c2df-410e-b918-867b5f1703a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7421607-7b33-4ea5-95f6-ecea5d28c96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4d5dbe-45b9-4d9c-a2ee-d36e4cd0a51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ad1516-2ab7-402b-a561-a5063c08bb47",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b78f8e-342b-47fc-8d97-fdd4f05cdb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e941d3c3-23ab-4083-8bfe-feff8d08a21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339338eb-997d-4fe2-a0de-8106fdc2da05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16ac2ab9-5ad6-4887-9844-c8ccff68ca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb97bdd6-00a3-4672-a4f9-c8ee5f4a67df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2740daea-39ba-4961-9fc8-9cc272bf2315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adf99c8-7500-41aa-a879-ddcc1f57e70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e7f7c8-dbd7-4d70-bdc6-96c9fd732bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58c4c4cb-0eaf-4d60-b233-89a0b846191c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388169e7-7433-4e60-8b69-14409c1a16b2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad1e79-6311-4dca-ac57-f5ef8ed6cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58b4e75-2692-45b0-82be-b1197d81a19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe77454-4b14-4549-a215-503f2d5018a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d21b3c-e5ce-4607-bf21-08dd623d5ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4606e3a-ae2b-4c72-abd5-6fbc24087b56",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f237195-d1ce-4df7-a56a-458842db9826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7880998e-bb26-4f14-bb08-59c262669cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc89c1bc-8fce-417e-b19d-208b0c2d75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "716be938-5f71-4181-bff2-fdbfd08587a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f732b15-8c82-4283-a170-bbec79469800",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f555ff4-0571-4733-920e-cfa7f07f8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060ccf24-fb49-4f7b-8b10-0255e18aa56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a9cfce-10db-4f4a-80d9-ae4672ad021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb50f44-817d-450b-9045-449371ca4f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d582cd2-3fc9-49f1-9a16-b433624ebbbb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e332391c-8e1d-4a14-baab-0f14f1e675f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9097eb09-99e1-46e3-b504-0d5861f1bd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca026a74-d8d3-4a70-a8b4-71ef59c7f7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "020b7e1c-0b58-46ea-a0f0-b7bbdfce9e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e00b474-d719-42a7-85be-fa0f81bc20c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abb304a-7399-44a5-9347-e03244846566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe84f37-c3df-48fd-8776-8f2fac2807a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39558a9a-0c9e-438d-87e1-1b80ac980df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1c0a83-8606-4b5d-9312-616295f9d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde8d01d-6f0c-47c3-b2c4-63511683f1fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdadc18-2f35-4843-9178-887ac9d31518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bad2d4-fd28-4da1-87d4-e25eb5525f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a38be2-d10e-4887-b7f2-716fa70dede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f1b9bb-ecd7-4f25-ae15-18fd2a96a482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cc94ae-940e-4a29-aa60-599249d280f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c87295b-1c5e-4e1b-b5b4-cee021be4ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c708ace-51c8-49cd-9a10-7d9db63fea99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fd3eaa-ecb6-4afa-b824-8df380947965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4088531-3043-4280-ad02-2ce2fcad1eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ae342-a149-479b-9dd7-6e47c29c2ea6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adedf3e7-1529-4e91-8d3a-989e15fc92a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d5922e-c0d8-44ee-a65f-3ce838302cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee77be26-6dbc-4d01-b8ec-0b227db1e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69793ebd-a97e-4e93-b1db-87b505489051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db2ec9-06fd-462a-aaef-21bf07940c2d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0f1297-6d3f-46a9-9103-28ce848cb810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b265ef-8470-4b9b-b945-8d28252cf9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db7146c-b449-4865-9e25-532d027e4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e077490f-3383-4855-8087-4d1571641f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a1b974-42de-4b8d-aca1-b7ad14fbecba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b66dcb-32de-4f3a-b011-87b534920b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5484c6cc-d98b-49d9-bab6-3e5a0237c788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d45350-7f43-4ad2-b9f0-a2017ce2e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e924357-9c75-43eb-a1c7-ae292f50be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d381578-0fe5-4db2-898e-7263bfaa8fcb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1628de37-2c2a-46ff-9699-3d3eaaf142d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d78314-fd24-42fb-aee3-113073a76c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67660b90-2d82-4620-8436-6ac1db0e68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "389d8d2e-792c-428d-a1bc-705a19dcee76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642cf8b8-7bd5-4c27-90a2-684a699688ff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cde1b48-361c-46e1-b9e6-fd9880276843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ba5aa9-e1be-4ea2-9478-61b55830f130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5ac143-3764-4d31-9f67-c97544b56f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32d7b4f-6b48-4fd1-a7dd-e63707c633a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89168b5e-9ca5-4648-af76-bff8b707afe5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948081a-d338-4653-9fb3-b90ce34fde67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551332b3-9860-4e74-b870-286b595bd24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4ce634-e041-4516-889f-315bdfb657b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd2091d-2ebc-4bc7-8548-48c4a1a8111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc5ec87-b9c2-44a9-a13c-aefa47e82c76",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cf31de-cb97-46f1-bec4-85c45ee693fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf592af9-d33a-4f0a-8199-8290ef16c14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5154cd25-7d5b-4393-a4d1-3077a5960c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7617ba36-f4cf-4e3d-b51f-e13ceeefbcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35541d0-a08a-4086-8fd1-0fe064abd004",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cc9acd-0a1c-4b26-ae07-62c33ddea1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323e34ba-5e0d-42c2-9571-9e0721d38348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b276b7ab-5180-4c0a-b59a-8c0a08a6e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fa2d3b-c523-42d1-9dce-72154e2f6402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d505f482-d894-4f3c-b86a-660ef02af9ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c819f62-4004-421f-a72a-f6863d6ae31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eae89a-3fbe-486d-84a8-3a8bf8d48076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d230169-d57b-4534-be2d-01b20653bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fcaab2-ae14-4e10-862f-1303307c1d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d8ec6f-b090-4e8a-bc59-1c5342b585e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4dc7ab-4ccf-4701-8729-9de1087bac36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d91e07-2572-4710-8a9d-81f20e9f246f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488f478-1ebc-447e-bf4f-29c59ebf81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e8f893-5c2f-45ef-8076-362ad9f0b88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56377578-66c6-4536-b873-cca736f901d0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ec95b5-ddc7-4069-a175-d7173d75d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936ddd18-9869-4fd3-8c3d-2bf9af65c9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44628c3b-f5e0-4393-8d6a-40f15e1c575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a65c0d7-cfd1-4e73-a19a-1fca7611eefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc804cf4-c9a2-4235-b753-d3e7596829eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1ec103-fd91-4b20-95a9-086293eccc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b30fd8-44af-413f-b862-b775b1d71174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf3aef7-68dd-4fee-bf3c-685f47af081b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61bac8ba-8fec-4665-a50c-6a71e719212e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fde78a-115c-4790-98e1-9a70498a50c3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3904c1a9-c0f1-4bd8-a70d-30096765f9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7d4935-1034-4a69-95c1-0d71621aab1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afc2351-fc2d-4899-8b83-938ea2aa1942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5cc56e-060e-4027-b63d-8377f2eb0cc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d10c4969-94b0-4169-8136-cb2c488da0cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ae96ed1-d87a-42bc-8694-cc72e496e052",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a1e391-2e2b-41f7-8fe2-4c63dfb4e5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787160c8-2f90-49f5-bc52-250f7a04c303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8b22b9-002b-4901-963c-aac3bf45391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6cd856d-75e1-4545-b13a-4c427f103c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a807b-9117-4632-bba0-4abd5b0f579e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76fc62e-dacd-478b-baf3-da07732b3f50",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7e2ba145-1cf9-44ed-91c5-5597ae02fbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fdce57-2eb2-4ce5-bcf7-1ee91984e177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de4c418b-b08c-48c6-bf3a-b445864c2dc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "230800dd-9676-4927-8301-c9c9d368c447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b781e958-b899-4ab6-9c9b-3b24fb5ebdea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23271735-9146-48e0-a30e-639bcdf61bcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b3e960b-35a8-47cf-93ef-d2b52a6aa910"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "679a1447-1cf7-4d45-963e-4cac5caddf1d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bf666a4-85cb-4c78-82dd-79bd38b6fda4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e172c95-5e95-4222-8e72-f50795fbeb2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ed7eced-32fe-4851-94d5-2a6019070f12"
            }
          }
        ]
      },
      {
        "id": "a83a85f1-6394-4638-975e-9288bacc7555",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "107963e6-03c8-4a02-8e00-81b9656636d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3fa4039-01b6-42ae-ba08-696a43c1bfdd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5e9467a-de48-4bbf-995b-6386a6a306e9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc2047-ee56-4184-8592-a49639d60d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04bb84c-4f3d-4731-930a-e4eee36cc033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c9971b-2ee0-4cff-9c5a-fc7d2df28701",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70add72d-b5d6-4331-8d1f-f3fe16708d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5e9357-038f-43b5-a314-697d4ba58b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b61950-e5f8-440d-bb31-2860f70fa299",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4850cd5b-1b51-4c84-977b-29cbb9b48123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b4763-14ed-4ec0-9599-2bf41a5c968f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88101ed-714a-4bae-9804-3f80e3b48cd4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a130dc9f-3ab1-4610-b100-4dce49dab228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44840ae2-4f5d-4f75-ad18-969aed644977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7baca0c-099f-4ec7-bb31-13d712f370b1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70199e90-0f49-4328-9d22-282a2a69489c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bf8660-579e-4b3f-9c73-70344c8e3b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa2480-ad7d-4404-a52c-faef4a637b4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5270fd2-7e4a-44a5-8b75-de1408759823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e194605c-1f67-400e-b0c2-61d9d821fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e0f3c0-dd7f-401e-a805-aec59f51159b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b686668-684d-472e-91e7-bb1c0e990c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50bfa53-b7b1-40b5-8643-0c8b721878f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce4d084-acbb-4c67-9dd8-21219dbe5b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc418f5-d003-41cd-98b8-5f5d41cf9a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da416f1-b94d-4497-b357-76606ac81590",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2dec63-a8f1-4e00-a3fb-f168d8dca8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b25ced-f938-45cc-8b2c-cf46b4fe0b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4080cbf3-a3f8-4a87-ac3a-41864a40eb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf08d58f-d531-446e-bc18-2599957903cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec53573-ec31-433d-bace-a5a366b444f8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdc7496-055f-446e-a80f-567da3e1c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f53f03-8dc8-4ad7-b7ad-f12c93a9c6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f59eb71-6ae9-449a-a0cc-fbd57a1add8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6708e4cc-50eb-4fbe-b802-cab1105221bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9646d907-e9c0-4f34-bb8c-1d9af224d134",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f6574d-43fb-4be7-b481-03564a2d8a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b7cac7-322a-44a8-a5a9-99374045341c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02562749-54e8-4601-a9b0-0b3ca9d2023c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdda986-c368-4515-ab48-b1d56ff0216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cbfcdd-91eb-4022-b5f7-b0edcac15711",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a1efdf-ced5-4abd-9700-566112d4fb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7be860-d65c-48a8-a6d9-4ce155f92d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397554c6-50a5-403e-92ee-4619ac4d6840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53558aec-233a-4752-9469-da7aab1ea5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baa2324-c0cd-491d-9d79-328f5fc47aaf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99c4b8f-59a0-492f-b2f6-66303383b5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953d29e6-d98f-46fc-9943-3fc2b5b5c0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34547fd7-0e52-4238-b430-c14470ac594c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dc7f9c-c2b5-4c24-9390-6d0ffa240218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9755d5a2-5999-41c8-9025-ca049e7a697b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee6232b-1fff-49a9-94af-5b23097435e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61cc1a6-bb1e-4382-b128-5f4e75202485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8838301-efce-4421-bb7c-8199889a1c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7623355-d5f7-455f-903b-86a00f4ca0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25482f3b-072c-4a49-a15b-0509ef498ea4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e09b9e0-dfb0-4019-a728-ffaae7027b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcc7923-a49d-4171-9f8f-439cef1303fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c97053-077e-4ddb-b97e-3d6babd19c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80daec1-e4b2-45cd-89b9-7a5c45618e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fce6e9a-5977-4cc5-b074-8a8756f21a51",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9950e851-bec9-45e7-a4b5-1c986ce44a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33eb65d0-c317-484d-be4b-8ef9f376192c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3daf4-8475-4d9a-93e0-6a3932ea4b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d45c965-25aa-4473-8abe-2c71c87b226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652df4ee-46e8-4798-88cb-d72f056814a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcf2c1a-2343-4882-918f-4c093f2df5b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903a8537-263c-4c21-ad21-f95ef520b92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119a2651-6c83-4f38-acea-40294528b836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa2c05a-f0bb-4e46-9aff-8729a5ffe5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca8348c-5174-45e1-b59e-c4dd993e404e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0016c05-e8b8-4932-873c-9f8ea8f34327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ab59bf-1f87-447a-aef1-afb3f1de79d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0175c7b-0074-49ac-9395-34dffc07419e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426e27ba-ff85-42f3-a504-055ef0e541bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e21b42-a164-40bb-9508-adec7f24bf50",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb8571a-6657-4e6f-af23-5fe424591fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474f722f-7276-4ee5-bea7-3b556f4152b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36921d48-e879-43ef-ba90-4d20cf00d1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d4728c-2466-4be4-aa64-71769663d381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d466780e-6ea0-49d4-af00-6fda786ec898",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707c953-9036-44ac-aa80-7832f774aeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a18acf7-bac3-4b06-bf1e-c407478b8064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb7d2a7-8765-40a8-93df-4e73f0d445bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b213243e-cc8e-407b-86f8-dfdb965f6396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b85d19e-0010-416a-9eda-0c4597fd7f87",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e39fd80-2a1b-4191-9a5b-bac62cdc4dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed5556e-70c1-47a8-aeb7-1501da4aaa65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18223aa-85be-4ee7-b16c-441fe1a1a48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69c8e5c-0e76-4492-8543-fce5e8e4b76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbaf3d1-a7da-4019-9d18-869309fef89d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cc9530-ea89-40ce-bc98-39c66f680627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f75480-07e4-4eb4-9f0e-dca1ff4aed90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db773146-3aaa-4f66-b315-8ebfad89153e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad06b71-6532-4863-8c39-16c0d882f3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b41ce3-c0b0-4207-94ea-66d381512692",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248532ab-318b-4802-926c-e74f7a274d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ce6d7e-5bdf-4afc-b9f3-551ffd54919c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6172dce0-98e6-4cde-aaad-9e4d13736435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff3f172-90e5-4f96-bc38-dbe8be701839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc35067f-ed33-4aa0-a1d5-62a7d89f10b0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8c6aed-7a38-4051-a313-aaf324c3bf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea4a70a-eba1-4da8-a075-cbaa9e3d8e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc23b91-d864-4e93-a440-52b180c6bb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2d412e-b171-499c-82ed-a87525867487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05d70a-eb8a-4f85-b3ef-494c150094b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf5c73a-3fd7-4f48-b918-20eed1786c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e00ed6-c407-4e71-9d41-b97c3a3468d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79cd060-38f7-4527-9cdc-588139fce350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3177e5-29a9-488e-a428-99b11fbb225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c00a17-e948-466a-9536-b755497024a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04853ef-cf78-45f0-bfc9-0ce8bb31116c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64620422-9fb0-4a44-9244-029af7e2cc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c07021-61fb-492f-a665-8630add6ac4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04a1290-8bbd-4a5c-a16e-35c1b677feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb23869b-4d48-4121-9d18-a573553d3a2c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c83ebc0-9d5f-41b9-be09-2797bbe68a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96d3384-3fe1-49e5-95a7-b24448aad162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e6725e-45c6-43da-aad6-31121cf764f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529d4bec-8d6a-47eb-bf4c-47865b7b7e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51855b0-3da5-4344-9c42-98c49ec07ab7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db6b26-ef56-43ff-a140-b2d3024e094d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e26d86-17ad-4f69-8193-a758c66d0ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d9f1c-8c49-41d5-b2b7-55dc5db2d8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e827f6-e5f7-47e4-9a6b-43e0dd16aa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae28c5a-0ac9-4d3d-9cde-73e784650bac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee432e-c672-44bb-b23a-e703d04f3864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82de1ce-4609-4964-8c0a-c3439808e577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c57678-55f8-4691-9f5a-106b8babf5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f0361d-c4f6-4e3d-8866-d7bce6805cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c2cf7-1423-4b74-a4d6-10f2040fb72b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc73c62-cd19-4105-a56f-ccb30ebd1d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f31a1ec-cb23-4449-8ac1-22cae5b19a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d792df-26e1-4da4-a477-0a42a4ecd321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4584cb76-740f-4ffe-93a2-0272013383c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fec9fac-a1cd-41a0-b839-6a1ac3ad732d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23143d23-0f8c-4f3e-9754-685643639536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fa3b21-fa73-42da-9793-cb7e4b13a2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a66503-44fb-4e2d-80f8-9be17f3d0428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f14093-ede5-4e48-99d9-c3369572cb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9858a0-02d2-461f-926c-05ae0b35bf81",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b129682d-c482-45eb-a3ab-38872256902e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372bd0a0-4a5d-46a0-862e-a65ce8c5c0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47290baf-b37f-48ff-a834-ab60eea1ca77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3c3c40-ccd6-4e8d-a90c-b117a25fbb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ce092-56d2-4b44-b909-6d488ab32e39",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d30992f-18df-456d-a40d-f91b8e7c6a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f80fba9-66a9-4858-b6d1-d4f3122c08c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c37f0d-fc17-4b69-b26e-bd3b0dfe3884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ed0e8f-691b-4db0-a4b6-eafeef1e67c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654417b8-b93d-4bd3-927c-5612d11e155d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb256749-1b41-496b-87a4-68d83fff5d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ce283f-ce4f-47f4-abff-6a65493d18d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db81aee1-ebb9-425a-9f0a-ef63c24e0f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b93c302-452f-4e97-84b1-d645dbc7c6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f4d5c6-b4ec-4b99-aac0-7a46fa333d12",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd2df21-25b6-432c-bb6d-27281bb01bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6ee2ac-dd3b-4aa6-9d42-7206b8987172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d09b49-1686-457f-ae1a-a525cf3fb656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89be56d-3730-4a90-abfb-83b6b7d6524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ffdcd5-925b-4ee2-aa68-c4cc3ea3448d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d58aeba-bc89-488d-89c9-f3f279efc487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04416a1-3441-4071-9976-28bf1455471f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67325e0-21cc-4780-ba25-2004a2493285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5197b46-687a-46d1-ae4e-679921f22b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e964f16-4f02-44d8-8352-4004a0b0fa62",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f26302-d070-4ae6-adff-dd08de7056c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda8d4a7-cb1a-416f-bc50-2fd24da0be45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c2343-d4b8-4160-b0e8-fd81f6307247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46412ad0-1c4c-435c-8d84-3acc27379dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c76084-2461-4f4d-908e-7908f10d4c57",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfa7595-92a2-4d76-a9dd-dbcaa24f9654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99b5d17-e34e-4c17-8006-68c0a76a4f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab52cf3-9aa6-4d99-a765-4e1f9452bb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdaa7d7-eefb-4023-bc42-5773e479d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952dc547-4ba9-4d53-a6bb-30f61f71d8b3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec071da0-6220-4d88-887c-373cdc230989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34a53af-d153-4d5e-8668-c89d525e8198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd5e93a-780b-4107-bc57-1a61f1e47b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b078a8d-1f82-461b-8867-0db6494a464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98115d68-3f97-4c46-94e0-c65f4236cd32",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b63ef4-781a-4102-a74d-e73861623440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79236301-002e-4749-b0f0-37755c05cd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96391691-b610-487f-bcd6-62146688f2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c89e563-1a1d-4c9a-841b-6aa04f8c0d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008df5cb-6433-46ec-8d40-a2ca5dabfd76",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eecb007-0a82-4f2e-91bf-37f045dc18ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984cf9a0-1bf6-4066-b7cd-6bde03037daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2dfa0c-b3bb-4c00-99d2-282b30e78529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194e1ca4-eccd-4f6f-bea6-0b029b167d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c941f-e49d-484f-b0a4-7afae761b9a6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60ae3c1-a453-4b8b-9a98-f9da201286ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ce9a6c-7ea3-4563-a9af-b316486bff9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64adfab9-ad04-4de7-85af-bf1c0ad9661a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c687c6e-2fd5-4f3f-8114-ad1386397365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17231fcc-30db-4a22-b1c6-791d022eb2d6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a1b318-b405-4994-bbad-f6d25e1c808d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fd18d8-54ec-4665-915a-3b7ebb7c47d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58694433-8894-4db6-8696-a569cf510481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce5f720-dd8b-4f82-bc66-c3afdbe207b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e1cd5b-ea6d-4737-b022-7afa2d91523c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63c093e-e6e1-4d7c-b478-844fa1958ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e6afe7-a741-4526-aba7-b34411ccf403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f343adba-54f2-4915-b58f-02ad4e24d13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8010af-1d4c-45d2-b7e2-f1c2da5d0b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d240eb4-4a6b-489f-a7eb-68b71c3ac5fe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860882b0-5ab1-4a11-b9e9-46702c3aadbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff54d5a1-69dd-4b02-a60f-b78550862c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9f47f4-5c65-4293-9df4-7f47758e839d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260ed25-1c44-41fd-9308-16f28f005c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a441f212-cde2-4f55-b12d-8aac76be797c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8894935-5b85-4eae-b736-c4edd4c4d5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86704dbe-f69f-4661-ba18-9a414b1b41b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15e782-06e3-4b33-9d62-643ac7c3c7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb11c0b5-07f9-45b6-b04f-fb43efd7ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9951ce-337b-46e8-9f3b-b66f0ecfc4a3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4d2cb-5731-42e8-9ca2-ef000353d8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370e05ee-dd11-4c45-bf64-1d100e6e25d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11665b-56c1-4b7d-99b3-c1e664c2dcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f679e2-32a0-400b-b4a2-dbf3a714b263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ac339-6ea8-489d-a4fb-fde850fce40a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95ccb60-012b-49f5-9a9a-212208c44a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbc6774-6538-438e-a2c4-7614d90f66d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7be4af-a007-4400-92d6-665a7f201edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddd5249-d244-45cc-95cb-bc351e11aba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb23494-13c8-4f91-9c63-134e0dce196e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e2bc50-97b7-44fa-b9ea-ab38b6a37f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d04c63c-cff3-42f8-8b3f-baa79817f1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04cae2-bc35-4986-b6f4-529b388a695e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89c5b9a-0610-4ff3-b36d-74e5463c172c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772ef193-d1db-490a-bf34-669768820bae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8726e1d6-0eb9-483b-97fc-f088a172f514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66165b87-768a-4e20-ac08-44f535fa8493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c14b8-ea34-4735-ace0-a2f257dfb36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53caa2ba-cd3a-4654-a809-d15042627925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b3515-2718-4d27-9132-f4c32401f44c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3098922f-6268-4f8c-89bc-d9d6453dfc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12d5da4-3b0f-411d-8c5b-8075b57afabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a041c2-71f0-4380-acd9-e28dde7c9117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9349dc8b-1ba9-4dae-8969-06c9c790b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff23f10a-5b83-40dd-8a68-58ad6e6df55e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbde55c-1e5b-4254-9316-f52c03a28441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c6ec06-a138-4d65-99cb-a41fbc636458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f1375f-f060-49a8-b751-0fc1b3009a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fd61e9-2331-40f6-8dad-ca57f317cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5a72a2-f430-4d53-813f-990530998be9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700eaf7d-347c-4f8f-9667-4ec6dc1d4263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667a9ee9-7b32-4cdb-a07d-0d4e02ff47f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8890fe-0353-4d49-82b1-c51ebcb31092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f0f0d7-8b39-4e66-a874-1ccb7f4708f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab7ae55-6875-4fac-afc1-46a4b3687ec2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a000c1-b6d9-4819-a68d-6b480c726c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8f887a-db96-4326-b920-8dd68f29fdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca591d4-f02f-458b-abc5-a250f6c068a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1786e711-4625-410e-8a9d-4850daebff35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ebdd4c-2286-4834-a9cb-1288d2e4e714",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38904a7-89bc-4c0c-a927-4dce9c75d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c3345e-e532-413d-8a26-8274e472b3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf4f18-920c-4860-aa4a-6d76f34b9719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c69ed3b-3fea-4b72-82f6-1ed6ed8fc997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7079ea-b72d-4b4f-8de6-b651a5ba9e21",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af48404f-adf1-499f-8e2e-872dbdb7822f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320ac425-4e60-4854-a3f9-6d6a0e4153e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d80c3-bcb5-4163-9ae5-74822f1c6317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010bf534-4b84-4892-a34f-0490fc3f2ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3393aafc-1c68-4ae7-ab7e-c58ecfee0a10",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3509b2-9d2b-4721-b2a4-7ffb040d2478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a9a57-c192-42dd-91e0-b1acacf423a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3799127e-fe7c-417c-b4ac-ba5943036591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859d70bd-3023-4bde-9297-a0ed9c77b63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a517a7-2578-45af-950b-da9f4a111312",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883044a9-b759-4342-a500-aab27187a79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ae4224-36bb-4176-8502-2e01be0b9d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd094b-6ef2-4bf6-a811-840315af2dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4392dd-8d64-481e-8041-8caf87b57014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46abd2e-b659-4593-8163-b27c8ed6a8dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44049d41-cbdc-42bb-b36c-514bf56abb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0047be-fe6e-4b93-8a1c-0b7d16483baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ef3fd-df33-4fea-8948-9ea04414cfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c724c4-45b0-4626-94e4-44336aa630aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38999dc-c1fe-46a1-b56a-44f972a58b5c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d366f26-08cc-48e0-88e9-9885ff6fa4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cf6126-7023-401c-adf6-423be3e16b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b464855-11f5-4d98-8a46-efea1bce0d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f056d49d-7a4d-486b-9ad0-f7f09126e1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3724460-08f4-48be-a95f-05813450689f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0d40e7-5819-490a-b012-de42fcda1ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420545d8-c079-4a40-bee2-db3342bfca74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6baecd0-098d-4f68-8668-ee15cbcac236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03623979-70e5-4323-b3f1-4e5d6e78c08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b387d2a-fcf0-47b1-bec4-3eff165d32bc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c0aa23-a58c-4316-9883-2cc7ba111c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be870fd-6e6c-4ebd-b824-397503926c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28f93d3-32b4-42ea-bbdc-9f6f53527354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df4168d-cfab-42e1-b607-48dbe037abac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194c170e-0fef-407b-b6ca-8580acd8d3f9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a363090-9e2c-414e-80c2-7971ef804147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37d814d-5ea4-4c51-a612-262be9ee701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed8fe76-9e85-44e9-a8ce-d3d11e655aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfb47c0-e89f-4b22-a1a9-a0ecc67ac28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89ea8d3-b377-48fd-ac8f-7cf42ef51301",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e175d943-61ed-4a70-a0c0-5f60f8b12d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db3c804-9ba2-44e0-9a72-673c5e699636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5b95b6-9129-4cdf-9ad1-611819c2b6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8be249-449b-41fe-be4f-6d6600d3015a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bce566d-e5be-4205-8504-793a389dcfd2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98d6df0-8e6a-47d6-9edf-9faf146e7c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73d5e08-faf7-4db5-a2e1-506c09b92193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eda744-0e59-4e05-be03-de1dc335b039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59e3541-7723-4237-a251-da7815930e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eca848-928e-40fd-adf7-ea3b06a3a04b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0af94b5-e40a-4e9c-8763-10518b80ad93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c560949-63ef-4763-b806-463382c6ba32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4cbb29-b3f1-4f61-af4e-d740a1caf82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e704e4cc-a4c5-4511-b15d-a73b718fefdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2b8590-8bae-4f7b-919f-719a2e8e0c56",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fed0d7-ad0e-4964-9d35-ea0e0f71e515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8efec9c-24f0-48df-8a94-d846eff61307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8c0a46-78bf-49fb-b1a2-6125a7c2de83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158b23a4-06bb-477c-9a16-d25b1d590508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4d84bb-afef-43ab-946b-f261450ad3ff",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f9696-ad64-4daa-9d83-575c7cd76986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b1d755-fed9-4cf0-95ad-2aeedd9f67b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96df2b22-7dbc-49d4-90d5-5f5708467a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d31f3b-ec02-4b66-bf07-d7fd80514f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca9b83f-d503-48a4-9aed-dbc356def431",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f1ad62-ff05-4d86-a246-6e720e2c8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef82a1df-a1df-49f7-9ed3-071aa62b1612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2dd64c-82b6-4458-b993-07ecf27ec7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6f6fe9-b20a-4553-ad28-4c5b9b8f1935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2704b8-a4e6-4ea8-bcca-eecb46388c48",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac55cb51-a6bc-4553-ab64-159d7cb6e961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb85e5d5-5142-4ff8-bef0-f7361f1aea6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6361a6b3-affa-4b65-b336-0fcba5d2794d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4d174a-8a04-49b1-87c3-c18c8575eee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b5deb1-e2a2-4a26-b687-5b82973e4336",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c08b724-2e69-486d-8038-af811c713d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc27a22-5103-44bb-a5c7-927f8a63a8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce22bd4f-964b-4321-8f37-609efe1d032b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be627fd-b0e0-4da1-bb9e-cd7f4da36b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf01890-bb28-40bf-aa22-3148f38ddb9e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98c4fc-c6c6-4a34-b8a1-5a948dd01825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b027d3b1-8a3f-4f7b-9af2-3241d31ea1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8fbb82-3498-42be-9d04-03174550462b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0209bde-a213-4bd6-85b1-3dadbbeba9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3998bc86-2507-4d3a-8146-c2c9c349f923",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505a6930-66c6-495f-ac64-c8c239c1468b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0705b183-8bf7-42e1-97d0-26976169f9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c092d94b-cdc0-4604-865e-cbbf8d2d5c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06795fb6-d8a4-423d-a603-95b060b68929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8040bb0a-4009-4ece-9c47-2e12a5ea702d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f23951-3b89-46ab-bbf4-b20e9240709b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72deb77-7a3e-41b1-9e52-acb56265d7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d07758-a5d9-40d3-8982-943e1c0a2707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd759e4-72e0-49bc-a119-5dbc04d77466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6459bb-04cd-4502-9cb6-4403d94b9fbb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222bec70-5f3f-47aa-b4ed-138d625e09eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d9c9ea-3087-4a58-a452-d765b58bc0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec910714-716f-47e4-b35c-f15f6cafb5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000bc2d8-5207-4b4a-aa6d-ec823f7850d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54f7fc0-2c0d-4285-ae64-a9d9cf62c9eb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f1d6c2-304b-4a65-a013-58b245cc56b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b6b6619-1f36-4d1b-b549-cda33580ef39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77774125-a480-4bea-9aa6-59dbc7d5e649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506e28c5-bcf2-45ed-b984-d0d899ca69a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a1b4f-3f8b-47fc-aa74-3b654b99d8e1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c62c92-fa58-4065-8926-290962dc32bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc724cf7-9afc-4581-95ae-2c803c1b0afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0312668a-1c6d-42d2-8d33-f34937b375a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425172ed-5a41-40e5-945f-bd053589b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759f7dac-8539-4992-86b6-edef110b4dc7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1139c7-045d-414e-9bdf-c291781b87f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dedaad5e-c6f6-4b41-9407-2b0766d49d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1f4542-8676-4b8b-a876-248bc852e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a992f0-1aec-4f1a-8f17-3be1c2cddf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d1db0f-ea38-4678-a707-7845c9636b9b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17d125c-0744-404b-a405-ed6142eebb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a80186b-a676-49d6-a3d2-ff33e156c8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94276304-8fd1-4b49-a275-2be4a60af27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d93a6e-5b87-4b89-9591-a9a281af6b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d378c07-2677-4537-bb49-b51ff19be912",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a8ecb-96c1-4dbc-abee-2feab78d3880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17ee01a-88b7-403e-9da9-34cc7e427542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068abae6-21e7-43f5-b39a-04c2cdd548c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03662eb-20c9-4747-9917-72de6abdbee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab73fb1-6b84-42cf-84c8-5747b32cfa07",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12313ecf-99fb-433b-8ffd-02ac5291a00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e72f082-0323-479e-891b-9ae35a22d5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cdcb7a-caf0-4ee2-82ce-cc3092915daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2275444-7383-4478-841f-73797b3c0a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5250c31-7aa5-45e7-922f-a943e5b16198",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d6544d-f5c2-423e-afe0-05077dfc8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0016542d-a9ab-4261-88d0-1d0273bd5588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48483d15-d064-4a3f-a4c6-9fe8f38f0cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697a763-1b8a-43fc-b0e3-718516641f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2023273-0138-4071-b7e3-6052c565339c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0775b6c4-d61d-412d-afea-10fe90593e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d214f0-6e51-4454-a2dd-479fb9780d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157c862e-97bd-47cd-8e2a-0ea147fafdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc075a0-f485-4e5d-bac6-3784534bc9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a86bed-59d1-4de5-bda0-75a1fb0eea2b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b30b79-4c8e-44c1-910c-b8788a1f6082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af65c41-0c5c-49f4-b600-26d6aecf8a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa30c50d-f492-4b35-9cc3-7063d5b2bb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3a0d68-c2a6-499d-b211-c30eda386b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ab47a4-bc7b-4741-9393-e610ff33c92c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14942274-d33a-4fea-87d2-581e6c7ce793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c91f5a-3216-493c-b9e6-61cbb89daff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163825eb-2dda-4dc4-a329-5e8a29d16aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922dd299-df30-46a0-977e-2eebec264831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9184dca-f631-4b90-b7a8-a33226684c99",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513d1227-15a4-4dfa-8328-f76892a30209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c790726-1dc8-44bc-9fb3-ac221539092f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b40703-a163-4349-9cad-07fcf82f9bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5d71e9-72de-433e-a454-b5e8f4423500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce36cd57-044c-43ec-b534-b8a361aef739",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509dadbf-6678-4f9f-9b79-dd8810bfc27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6dff5d-c5c6-4f22-b020-7de9ce47fa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c514c897-52d3-4153-8f14-24f146048f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae4c139-da0d-4c74-87ac-445668564a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3296e612-ac4e-46ad-9014-04f69dd11d02",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238369bc-f39f-4609-90f0-c19299cf8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999f76e3-844d-4e87-a5bb-881affd4b824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d98eb78-439f-4f73-8147-a2e4217064ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae4165e-5e42-491c-b406-bdbfdbde3a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3ef341-a744-4b3d-b6fc-24882aff7ae7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b801572a-6b69-4f91-addb-f6ba57323b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea16c1d8-90c8-45a0-9b30-ee809e2f22de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1611d2aa-2199-4217-81c7-628139acd730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3decfa64-9dd9-4aed-91bc-21e1108d6d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e97781d-8f86-44a6-8c5d-c689a269a848",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506a8142-10e0-47f5-87dc-9974e7c9b058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf427656-1b29-4406-857a-079955960624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7241d1b-b2df-4149-a057-d14fb3c96bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa6ca78-2d4f-4177-9fc0-92ae2c9014b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f2742c-fe66-4e98-96b1-08fa09f4df89",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad23b70-f7b5-403b-8b07-a8d6f9423c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c46e3d-7eb4-40d7-aa13-fc0c495e3d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c4d42-52ef-4368-af0d-93f0df260432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa68b2c0-1b69-4e43-9d7e-3fd98f6c7e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c33ecca-f9bd-4e1a-b8a7-de3692a86e53",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899fb92a-a73e-4d1d-b57f-48f01cf9f47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1fb0ad-c7f4-4584-996c-513887f6e768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd03a458-2a57-40ce-af7b-103dab076a30",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273775d4-d3f7-4328-bf7f-4dccd2008e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec63529-cf1f-4670-ae0f-44014194338c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6737fd-1edc-4f14-80a5-84f4a4dacb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1c088b-85f5-4379-a42f-3920a9cac3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f98b57e-b24b-4ccb-ae63-d614e4be3063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75b4248-04cb-4bf0-9928-b7f5d17de99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a531fdc-aae4-4298-9b17-68e885c0438e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d4c0d7-ff09-4536-98e1-bd2e206c1b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6b3c14-84d2-4bb3-af58-484bd9c0f84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1275e8d2-670f-4ec8-abc5-3d41622b322c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7079ee50-5be8-4682-b2a7-5104eed08af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca15ece-3214-48e1-bca3-da4528567bd9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a293b11-deb7-45a7-933d-7d50f2847acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ee25d7-10f3-4a69-afa6-7573a98f537f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ad7189-64da-40a3-942e-bf66c7910b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a6119e-41f6-4742-a644-c759851ef6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d96b7-a452-445f-ba98-cddf424590bb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d6b226-4b50-41fc-8751-3e0635303358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7863880-c010-4c6c-8e02-34314b650a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685d079-f152-4d8b-bfc5-4371e9e64b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ca158e-4a81-4b5c-b9bf-43dddae3efb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfdaa13-bb1a-4552-938f-46aaf73cdbca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e09f06-fbd2-4840-a285-601f6a25ec21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3345160-a3f6-42d3-9d74-7034c6b56318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738200c9-e986-4600-aaa0-44a57f5c4eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cc140b-cf5b-4c0c-9f9e-feab38738ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfa87d1-5ade-4bee-a1a1-42d07fc96a44",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c1de63-b250-41cf-851c-0f45afc726d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6eca54a-d0cd-4f9e-97bf-512e50928c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81e89d9-f468-4e6a-ac06-9b57198ace74",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620d4bf7-c932-4303-b506-0249b46baa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b27e379-90d6-4460-865e-8313a07c9907",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b7de8-b259-4ad4-af4b-f0b0962eb3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dcce58-050f-4865-9848-10d2e042d601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac0d593-e2ab-4250-8e87-8ea3d8d1e391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4064e65c-e33f-4059-a4eb-5c6435a410e5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc7e5964-671c-4dbd-95d2-08add95796a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e62e7e2-6da2-41f2-be65-15b2f01e8d20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be54fd96-6cf6-4145-8b4a-fe0c4ec6220b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9de7020c-c68f-4d8a-b643-49535444e69d"
                    }
                  }
                ]
              },
              {
                "id": "dccd1b98-3528-4e2e-b706-a867c91af678",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e5cfd15-c8cf-403b-acc2-e7cc77eda4b7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fafb93c-015b-4257-9cab-c1dafe96f646",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c8e9f842-92e1-45d1-94f2-6247845b3203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148a1a5d-3144-4181-b51c-929cf9f21f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e873292a-1c51-46e0-9b79-4e50785dec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae69de94-92c0-4da0-8569-a9a09d5d2d80",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfef55a-9942-4340-9685-729b7befda5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "665520da-62b7-4d50-8fb5-d83c82d4fc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6abefa4-4e0f-4020-a9ee-4d2a1312e5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffd41ea2-384a-4570-bfd4-e5a0e58c10b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "497a2328-ca4e-4b90-9f8e-8c04d0d6a26e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7ac7316-9b73-4566-8cb9-9b89fc0ff797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d380116-49d9-45a3-aff9-33c7e72bba76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7735e29-3828-487d-9cb5-50df2e2ed97c"
                    }
                  }
                ]
              },
              {
                "id": "c720610e-73fb-4d63-9787-0c2a3267dba9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "de6992b0-e40c-4af2-aa9e-49402b7fbe6c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ceaac0-5439-4e73-b2dc-635684e6b37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b7ced398-1b93-4922-9285-caa416c0960d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c12379-1769-4143-b502-6691065874d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43e5238-a8ef-440c-b825-8b97414bdab1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "30888649-2c31-4692-9778-255ed61f187b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7197e280-e2da-466b-99af-61a78501542a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8598031-7eea-4c3d-9681-e0daaf2bbe3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00485927-0c5b-4e6b-991e-274825547366"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f48bc3-0fed-4d86-ac99-123e299fffc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dc177ff-8980-48b0-bb58-b4da0fb681e3"
                    }
                  }
                ]
              },
              {
                "id": "5aab4ec2-2cac-4532-92d3-90de07ae8829",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "068c38bd-0593-47ca-adca-6f2df5f1d828",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0762ac4-8e21-4317-bdd6-11eea06686f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "809697fc-0d76-41eb-9315-0e2bf9731ea5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ab7e808-6c3d-41a0-8f7b-f01acb31fa5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ab8990-40c3-4dce-92f3-ed9317e80e96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a1ae7c9-e696-4b19-8816-6b6e5a35e64d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136e3030-daf6-4d87-8234-1944112b3f5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0cce41e-ed78-46fd-a6c6-fb9b60e15d74"
            }
          }
        ]
      },
      {
        "id": "3da5cc4f-04fd-451d-a6a2-0f8fdf7a7a85",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d72cf42-75d5-42c7-aef7-4014854b4016",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b352bca-938f-4069-bd58-c57bfe2a3f5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a096ad1-a97d-4f9d-92aa-07f836075b09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "93dbff02-1298-4bd5-a4db-c9d0f1a0bd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc202ca-a78a-44ab-9be0-b8b7990978c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d10a84b-8dcb-4283-9981-56aa3fa19a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef35f2-6a1e-4440-ba7e-b1969bd93e36",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a3a8d-00a1-499c-a9d0-22344ce339aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "da0f7cc2-f59b-4cb5-8b64-6219dfbf01d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e819f7-3207-4cdc-a34f-aa8a25b0d050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dbfdc11-3e9b-494d-99ee-7c5d903a5350"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6081187-16ef-4574-bddd-e1fc2a532508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6110dee2-317f-4587-b51c-5f0c56fcf005"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9039798c-8e01-405e-bce0-663f2a203494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f2e73e6-8735-4742-9caa-b70cacc3a1e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fb23cf7-8215-40c1-9bee-06b4c9bfd1e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "79d0e6d1-273b-49ea-a148-fa82f6ac682a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fb36531-e471-4d49-92ad-7bff32a9bbb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9285d2e8-15ac-4723-b5f1-2e1a021e394c"
            }
          }
        ]
      },
      {
        "id": "4971640c-83e3-4be1-bd8c-58a485f502f5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d34a38e8-688a-4776-8f5c-11e96c1343d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f5bc86f-b718-476e-98fd-afd0fb676ec9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e9fdbbf-f81e-4f8a-95f3-a70d75fd9569",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7235a33a-5202-4e96-9641-4f87d6c0f50d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccb5961c-6db2-4bb6-956e-9cc9044b996c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc4960e-0812-4fa8-9a78-5a1675af0f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c033f2b-0b6e-4bd6-bcfb-328603e37a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e021cf-1503-4198-93e4-ccd51b8a53d6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0656c3-9e97-4680-8202-126e4721a559",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a21e44c4-128b-4f11-97ff-9aa883c63f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f62ac3-e49c-45b8-a9b5-b670b3bc836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "660343d1-a3a3-408a-a12c-4aae2369fdbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b44ed858-56d4-4c71-b584-b4a56ec51022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04d90d17-0b4b-4166-9d62-5f541f922b12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a93ea73a-278c-41e3-b8e2-63f15d385ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d50d3f-0dd1-4128-a80f-897bd8fbe598"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "998f5e13-1c6b-4a88-a124-8aa8ae13de23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "042512f6-dd12-41ed-b979-13b33b1077d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e09264d-b5aa-4c56-b49d-3ec3db9e691f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3acfc5e-cd5a-4073-ba5b-dd7128bdfd1a"
            }
          }
        ]
      },
      {
        "id": "45ee90e6-305c-46a4-8602-9bed6266e639",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d79dcd49-0ce1-4d62-8792-5b9244befcd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a770c422-44a9-43bf-a5f2-ccebf12454c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7159fd26-d788-4e72-83b9-2a1f0c7a1d98",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c420c04-9877-4f1b-aa34-6d3333fa80a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1409608-915c-4fc0-acb9-7b449e9939e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3631cadd-7835-4506-ae2e-43c341aeca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "153d5b7b-22ce-4688-9f59-41f535446b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b8357e-94fa-4e24-9e47-b01c8fd17232",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d624c4-80c0-4d59-81d8-21f19548f74e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b73b6a32-13ff-47c9-acdb-390e7d92ab7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ebd6e7-3c65-4dc2-932a-9b9b2900cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ce0e40-bace-4f9f-8368-77a43bbb2af5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b990177c-d90f-453a-a796-1062a32532ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cd60d2b-a845-48de-b172-17b80417cef4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51737dca-6e55-4c95-97fc-bb2c9817bc66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff4001b-b898-4da2-94b5-818ff0731c0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df18d1b6-94bf-430e-b6dd-61830c104219",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cc6a91b3-fbbf-4f66-aa54-bba5cd0ade60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46fe3114-5b56-4d87-94af-3d81eb26710f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8802f96e-3570-4066-8dfb-2fd4f1c801d5"
            }
          }
        ]
      },
      {
        "id": "75e76f78-2eb3-48da-af85-0c24cebc7089",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc3bf5a5-e7e1-4154-8865-ac04cc322541",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48363e52-0f19-4359-9340-559f9f183be9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8897f094-2d48-4ece-9cca-ee4d8c5c31cf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "139b0f20-0361-4bc6-8565-9d9565e889fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a66419b-6f9e-423e-9351-5db378cd7ec4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 559.2366412213742,
      "responseMin": 7,
      "responseMax": 5765,
      "responseSd": 737.2005727473,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671237350244,
      "completed": 1671237507502
    },
    "executions": [
      {
        "id": "b1dc0eab-3a8c-4aba-9ed2-dfba884560b6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ee7f485-7653-4a98-96aa-c7bc73c20a48",
          "httpRequestId": "b2e80419-3687-4b37-9d86-1f1e1e2118d6"
        },
        "item": {
          "id": "b1dc0eab-3a8c-4aba-9ed2-dfba884560b6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bacd4cc9-27a7-4cf5-8fad-fc4d73e346c9",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "f57d3a72-71d4-4f5d-b42b-0c8bc9ca292f",
        "cursor": {
          "ref": "8cc0af8c-6e8e-41e8-9108-771d1772554f",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7371acf4-38fa-4fad-a8c0-10d07b3e4d2b"
        },
        "item": {
          "id": "f57d3a72-71d4-4f5d-b42b-0c8bc9ca292f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "498fab64-b4e6-41bb-b3d8-461a2c816d65",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8d008279-61b3-4c92-a557-39cb6cb3e2b4",
        "cursor": {
          "ref": "8af3ec3b-e180-43c9-a3f4-cb1938a00a60",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "25f7c11d-6c72-4690-b065-5efb143e7eaf"
        },
        "item": {
          "id": "8d008279-61b3-4c92-a557-39cb6cb3e2b4",
          "name": "did_json"
        },
        "response": {
          "id": "77f5158e-649a-453b-ae49-92d2d9349a08",
          "status": "OK",
          "code": 200,
          "responseTime": 865,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff917f-55cf-4cca-a270-a5620a34b240",
        "cursor": {
          "ref": "b536f863-85f3-4713-9cd2-22329bc3c4b7",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "253af747-c8f3-4ecc-8bd1-0cc1679cee97"
        },
        "item": {
          "id": "e2ff917f-55cf-4cca-a270-a5620a34b240",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9c1de19-90cd-4061-8532-7bd811d70b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff917f-55cf-4cca-a270-a5620a34b240",
        "cursor": {
          "ref": "b536f863-85f3-4713-9cd2-22329bc3c4b7",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "253af747-c8f3-4ecc-8bd1-0cc1679cee97"
        },
        "item": {
          "id": "e2ff917f-55cf-4cca-a270-a5620a34b240",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9c1de19-90cd-4061-8532-7bd811d70b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe09767-98fb-4483-84af-8050d1ab5db5",
        "cursor": {
          "ref": "1a7b254e-8813-41e7-91ec-1e829931d90d",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "26b4a240-eb10-4838-9930-743748c5d558"
        },
        "item": {
          "id": "dbe09767-98fb-4483-84af-8050d1ab5db5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ae07a840-71ce-46d8-857b-670c2f7224b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 564,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407cb21d-278f-4880-a49c-3a614e35c6db",
        "cursor": {
          "ref": "80c0dc15-59bc-477f-b381-e804723446a6",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab100fd0-2b0b-4a38-8034-b8223bdb711b"
        },
        "item": {
          "id": "407cb21d-278f-4880-a49c-3a614e35c6db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f90b4c6e-3ccc-4d67-a529-e7014cef5dc1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 482,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9e1fa-80ee-441b-bc42-a2b890cbf662",
        "cursor": {
          "ref": "b0238f68-cbec-4dac-9625-24b9f1513937",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7240cc81-ff26-4594-b7c5-c41377117daa"
        },
        "item": {
          "id": "03a9e1fa-80ee-441b-bc42-a2b890cbf662",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "efdd1df6-5b8b-46f4-9168-dff718bfc0cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56cef42-266f-490c-91b5-98959a120fe8",
        "cursor": {
          "ref": "450b559f-a6c0-4533-8931-439143858467",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c35076c3-84fd-4b3b-8f3c-6b8c55e478d1"
        },
        "item": {
          "id": "a56cef42-266f-490c-91b5-98959a120fe8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "96759147-a95d-4aa1-9ef8-89097e31a5b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 599,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56cef42-266f-490c-91b5-98959a120fe8",
        "cursor": {
          "ref": "450b559f-a6c0-4533-8931-439143858467",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c35076c3-84fd-4b3b-8f3c-6b8c55e478d1"
        },
        "item": {
          "id": "a56cef42-266f-490c-91b5-98959a120fe8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "96759147-a95d-4aa1-9ef8-89097e31a5b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 599,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf984be-b7cc-4949-8437-6587bd2f922b",
        "cursor": {
          "ref": "ec19308c-ea85-4e20-ad4d-f45ae0aa2c6a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6a891969-bf4d-4480-b8c6-66305b6cc220"
        },
        "item": {
          "id": "adf984be-b7cc-4949-8437-6587bd2f922b",
          "name": "identifiers"
        },
        "response": {
          "id": "a56d590e-a42f-4931-9c99-be7cb0f5572d",
          "status": "OK",
          "code": 200,
          "responseTime": 763,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6b532a-c0e5-407e-ac1a-f83fc35f53be",
        "cursor": {
          "ref": "4f407ec1-0ff1-43c7-9efb-78ac4f169aa9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5869d94e-ea34-4aef-b431-e1a01869dd08"
        },
        "item": {
          "id": "dd6b532a-c0e5-407e-ac1a-f83fc35f53be",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "17a22c3d-f916-4a67-9502-8e3603c1fd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6b532a-c0e5-407e-ac1a-f83fc35f53be",
        "cursor": {
          "ref": "4f407ec1-0ff1-43c7-9efb-78ac4f169aa9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5869d94e-ea34-4aef-b431-e1a01869dd08"
        },
        "item": {
          "id": "dd6b532a-c0e5-407e-ac1a-f83fc35f53be",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "17a22c3d-f916-4a67-9502-8e3603c1fd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197fcb2e-95f7-4d99-98de-74438b1e5f7a",
        "cursor": {
          "ref": "3e13aa4b-2e4e-4571-a37a-c3870ea9b203",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b2ee692d-83d1-4d9d-b219-31de9a79c4ab"
        },
        "item": {
          "id": "197fcb2e-95f7-4d99-98de-74438b1e5f7a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73d6994f-dd91-43b4-9431-6080b3e66658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712cf1bf-45b3-46cc-984f-dc77b68c714f",
        "cursor": {
          "ref": "1c13bff4-63dc-48b1-b10a-11e4bebf6231",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa1f1e93-916b-4021-ab1f-81036701d1cd"
        },
        "item": {
          "id": "712cf1bf-45b3-46cc-984f-dc77b68c714f",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "47e2b018-bbf7-4048-b36b-9ce05a809549",
          "status": "Created",
          "code": 201,
          "responseTime": 2431,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "923a1b6f-9733-4d92-bc6d-6f7e94c7b39d",
        "cursor": {
          "ref": "6fe73080-dc5a-4650-9fea-1fd292410af7",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fee2de5c-fb93-4136-920b-5fdf1bc87e86"
        },
        "item": {
          "id": "923a1b6f-9733-4d92-bc6d-6f7e94c7b39d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a171a7d6-fa15-4e1e-9239-c3b6fa2c616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c1d766-5801-4983-86a9-0f4368c29833",
        "cursor": {
          "ref": "e5d58761-5ae3-4036-845d-5eb662114dc6",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "136a8bda-4b98-46ed-9088-d5bbae7941de"
        },
        "item": {
          "id": "42c1d766-5801-4983-86a9-0f4368c29833",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bcc991e2-d1bb-4f5a-928d-2a1a91d86981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b49e2e-b776-43ea-8531-a1b330bdbead",
        "cursor": {
          "ref": "6475e822-e2b1-4e81-a04c-c69116f22f23",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "98efcee5-7dfa-472a-ad26-61c21d3b5eb6"
        },
        "item": {
          "id": "c8b49e2e-b776-43ea-8531-a1b330bdbead",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ecc0451c-1bcd-470f-be37-25d75befc6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3fa0e-3dbf-4306-96d7-df7fddec809a",
        "cursor": {
          "ref": "5a407880-baca-4e73-b22a-41d299cc563e",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0da88a5d-4db3-4a7c-b32d-e420b74d15ee"
        },
        "item": {
          "id": "90c3fa0e-3dbf-4306-96d7-df7fddec809a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "294e9b8c-4c26-4719-853e-0bc783f22001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a3dafe-fdcb-4e9c-9bcb-53b7e93ada5a",
        "cursor": {
          "ref": "48a70ad9-9eb3-42b1-a206-bdc05c88f7a5",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e54ce8ae-dea7-4d19-864f-caba3971dc6c"
        },
        "item": {
          "id": "a8a3dafe-fdcb-4e9c-9bcb-53b7e93ada5a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3edf0de7-6a27-4035-a257-14b9c7658b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56293ff1-2ead-47c0-9020-666b8ce2e891",
        "cursor": {
          "ref": "f5c8a735-883b-4e7f-bcb7-96f1a8508020",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f375163f-78cb-4699-9560-b3cea981b306"
        },
        "item": {
          "id": "56293ff1-2ead-47c0-9020-666b8ce2e891",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d7d557ec-e8bf-4a4f-b9af-7ef3c714ea9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c5634b-eb2f-4837-80bd-dca5e8f8671b",
        "cursor": {
          "ref": "cc17d8f2-a794-441a-bc6a-d832b56407d8",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bfbfea87-ed5d-44ae-a6c6-5af0002e2e61"
        },
        "item": {
          "id": "81c5634b-eb2f-4837-80bd-dca5e8f8671b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1c76cb0b-f1e3-41c5-bd67-017d12b3a92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f209228b-a873-413a-94a7-7529f7be845c",
        "cursor": {
          "ref": "2a4c0975-3ffd-44d8-9f30-3420d8580582",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5d6fd747-8a59-41d1-8125-7e1c299569f8"
        },
        "item": {
          "id": "f209228b-a873-413a-94a7-7529f7be845c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "77acc64f-4600-461d-90d6-1e88f17e008b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3509bb-75c9-4142-a3dd-b71c94f7badc",
        "cursor": {
          "ref": "85c6440b-57f2-4d89-b382-66a470c34b32",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "577f1607-f4d8-4aea-bc19-0b40504f2134"
        },
        "item": {
          "id": "ea3509bb-75c9-4142-a3dd-b71c94f7badc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4634a908-19f5-45b2-8e28-2d7722406ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb91b7f-4364-4f89-92e0-371afeb8a17e",
        "cursor": {
          "ref": "0cdfffdd-bbab-4284-a5f7-b737e2989ce2",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "13772790-a06e-48e8-85c7-26cc638d6243"
        },
        "item": {
          "id": "dfb91b7f-4364-4f89-92e0-371afeb8a17e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d5ef8123-8f3e-4b6c-8be1-56892383e611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af97685c-197b-47ad-98d7-3b658bdf246a",
        "cursor": {
          "ref": "df83f0d4-ab3b-4ca1-b7ca-1b9c6fa931f3",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6fd1f0bc-ff11-4cc5-a9c7-03f29054dc86"
        },
        "item": {
          "id": "af97685c-197b-47ad-98d7-3b658bdf246a",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "e9cac978-3dc1-497d-8749-cd267ecc29e8",
          "status": "Created",
          "code": 201,
          "responseTime": 5765,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "633e24ad-ee5e-4528-b676-6ed113c26ed2",
        "cursor": {
          "ref": "c74e4324-f6e7-4b1e-be85-d665c91b0a66",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e411e8d8-e120-4da5-bf50-88b0c43aadbc"
        },
        "item": {
          "id": "633e24ad-ee5e-4528-b676-6ed113c26ed2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0f2c884e-12f4-4888-9f4a-0f0ac42b6d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe1a74c-3c15-42cc-8d3b-4b99eb2afd65",
        "cursor": {
          "ref": "ab5a14e8-5ae8-490b-afbf-457ff1ee6cd4",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1c1f98f6-d516-4d37-9b5e-9689927317a5"
        },
        "item": {
          "id": "abe1a74c-3c15-42cc-8d3b-4b99eb2afd65",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b5e32c40-928e-41ce-ad24-580af6d32e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df125fd1-a848-405d-a8bb-1d0094f46509",
        "cursor": {
          "ref": "7384fc28-b3dd-4ab9-8642-99e13376b544",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "24a055b1-bc80-426b-9a34-77710da53418"
        },
        "item": {
          "id": "df125fd1-a848-405d-a8bb-1d0094f46509",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6f030214-1bc7-4278-abf1-4dfaf3627820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a177ae9c-2157-45f2-bb24-52077fce7ebc",
        "cursor": {
          "ref": "cd6ac09d-051e-4647-9b14-809a1ddde579",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5f4192f7-99d0-4c2e-9f77-56e9b30ccff9"
        },
        "item": {
          "id": "a177ae9c-2157-45f2-bb24-52077fce7ebc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "50a1eed9-bc0c-47af-bd28-f2730499e2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912568ff-732e-4222-bfc5-ede825fec384",
        "cursor": {
          "ref": "17f62545-bf26-47a1-bab8-3befeb9c63ba",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a3fff096-bee7-4430-8177-50edaf025d90"
        },
        "item": {
          "id": "912568ff-732e-4222-bfc5-ede825fec384",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1f56843e-3f57-49fa-a692-47327e9f7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7854dc1-dc18-45e8-86c8-6f58961c20fc",
        "cursor": {
          "ref": "62655bd4-d049-44dc-b2d2-7e2451d45697",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7be24c3c-e6e5-4717-91b4-2fcd0cf985d1"
        },
        "item": {
          "id": "d7854dc1-dc18-45e8-86c8-6f58961c20fc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a89afafa-ae13-427b-9656-4eef94695aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c576e3da-11a1-48cd-b50b-dbaa0ca2ee14",
        "cursor": {
          "ref": "97e6dd3d-17f6-4ab5-9a85-ae6a78af7d79",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d227352-ada8-45f9-b990-08169815c47b"
        },
        "item": {
          "id": "c576e3da-11a1-48cd-b50b-dbaa0ca2ee14",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1bbaa25f-4d50-4c0f-8334-ea73f9093e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7300d2bf-d059-4ede-a57a-5189c4d4a3d3",
        "cursor": {
          "ref": "b082bc8a-0e74-47c5-ba21-0e8b9426e0c3",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cfd6d351-494c-43e3-a2fd-4a83b9de1aad"
        },
        "item": {
          "id": "7300d2bf-d059-4ede-a57a-5189c4d4a3d3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a5ce827a-eea5-494c-8849-288395025393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2933be04-867e-4f7c-8cb1-00f15d8b542a",
        "cursor": {
          "ref": "49f9ce2b-0b1e-42ce-bdd9-c8a85108e04b",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cd927e3d-2974-4a07-ae7d-b99818825ee8"
        },
        "item": {
          "id": "2933be04-867e-4f7c-8cb1-00f15d8b542a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad272444-8f7e-40e7-9e6b-4d52910dfb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a58a8-9de7-45c3-8fde-1ad6a2b6d74e",
        "cursor": {
          "ref": "dac98380-51fc-4cff-ac09-c16407eb0567",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "713397d0-b398-4bd6-8e30-b7903d65f313"
        },
        "item": {
          "id": "396a58a8-9de7-45c3-8fde-1ad6a2b6d74e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f1279888-5fd6-499e-9bfe-111dc3ba73c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7ec5db-1992-4c39-a1c4-55eb94735033",
        "cursor": {
          "ref": "7911a759-31a5-4f35-99ff-da22528d8307",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56687e10-808d-4f38-b66f-f36afd6d0eb0"
        },
        "item": {
          "id": "1a7ec5db-1992-4c39-a1c4-55eb94735033",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0f32769f-0477-4e85-8c4f-d90435da24e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b2bf0d-eaa3-4517-b624-d4c99176ce8d",
        "cursor": {
          "ref": "28b56df5-1308-43ad-971e-5ae260b49627",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c9fb1c44-de15-43eb-a538-db59689960db"
        },
        "item": {
          "id": "b2b2bf0d-eaa3-4517-b624-d4c99176ce8d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a40be6ff-d3e7-48d6-9ad1-78cee3ec42de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e9e33a-37ca-4eee-bcf8-612db84c637b",
        "cursor": {
          "ref": "c214c303-69aa-4434-b61d-dd9e02012b7b",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a105cbf1-5ed2-49fb-bad2-a44de3b26cef"
        },
        "item": {
          "id": "d4e9e33a-37ca-4eee-bcf8-612db84c637b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c534d8f-389c-4ae1-a0e9-406f77d53908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cd7f91-09ac-4121-b87c-2a5a670881c4",
        "cursor": {
          "ref": "e35e25f7-8b32-493a-b495-3372daaca154",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "895de9a5-8ca2-4fb9-bf5e-4a681300f360"
        },
        "item": {
          "id": "73cd7f91-09ac-4121-b87c-2a5a670881c4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "843b70e7-7105-4504-886a-02b532c2e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb503b-0624-476d-a5e3-7e98b0b31ecc",
        "cursor": {
          "ref": "1ebdef8f-9328-4cbd-9a88-b96d93e0fa13",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7bbffc5c-ba15-4c15-abd9-cf2a636ad4a5"
        },
        "item": {
          "id": "c4cb503b-0624-476d-a5e3-7e98b0b31ecc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "afbcaaf4-319b-4676-bd60-6a6670a29366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e28587-c025-40e5-8e86-e7b7e78ee02e",
        "cursor": {
          "ref": "c1f6ecc7-f782-4622-b2eb-ab727cf131ff",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e4fc38b8-b152-4bd2-b96d-f3f94de37082"
        },
        "item": {
          "id": "b4e28587-c025-40e5-8e86-e7b7e78ee02e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "66caff1e-71a5-484b-85cf-99d834790044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a22883b-7b0f-4076-bd6c-9d6d84d24467",
        "cursor": {
          "ref": "e5543fe4-670c-454a-9c18-6daefaad753b",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6ed40372-71b9-44c4-a109-38690c407776"
        },
        "item": {
          "id": "6a22883b-7b0f-4076-bd6c-9d6d84d24467",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df12ef52-e430-4181-b059-6f637d9e9474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e99f425-30dc-46ea-854f-d766b595e510",
        "cursor": {
          "ref": "34329e91-7fe8-4e05-98fc-1771ddf887e3",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9f1d085f-f7bd-492f-b78a-5dd23408b16e"
        },
        "item": {
          "id": "5e99f425-30dc-46ea-854f-d766b595e510",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d17412ee-6df8-41a1-8222-cd6d9ffcd3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9187a4-0014-41db-a8ca-fdf90cacebc7",
        "cursor": {
          "ref": "fd0211c8-9132-4521-976d-3924cff448ad",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7f1cf042-c227-4a1d-8b77-154ab06afbc3"
        },
        "item": {
          "id": "ad9187a4-0014-41db-a8ca-fdf90cacebc7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c303f45-66fc-4771-a9ce-06653edcbfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb02ca-4148-478c-b5cb-0e6315b7109a",
        "cursor": {
          "ref": "ac8bea80-55ee-4e8d-968f-6f4212166afb",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d3e56801-d64f-4f52-b2d7-82aa5eaab4d6"
        },
        "item": {
          "id": "1dbb02ca-4148-478c-b5cb-0e6315b7109a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4bf4c8ce-2d1c-427f-9bc5-5a3e782753a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6eb42e-b0c8-4fb2-b6ba-e272803308ae",
        "cursor": {
          "ref": "aa8e3f66-9bde-423e-92a7-818805d7f738",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1fdb1a30-2931-4fc1-b329-e6a6fb21b319"
        },
        "item": {
          "id": "4a6eb42e-b0c8-4fb2-b6ba-e272803308ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88fbfcd2-a5fa-429c-af7f-f7b91653f2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b0f7a-62d7-47aa-88c3-a9886ab75342",
        "cursor": {
          "ref": "6f21b294-869e-462d-9e95-ca7503475890",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0d869553-1cc1-46a2-8126-f33bc89a8d83"
        },
        "item": {
          "id": "fc5b0f7a-62d7-47aa-88c3-a9886ab75342",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "85ef64ff-a38b-4fef-abb8-c07aedb484f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a25a2b-0a46-4519-9208-d58114ecafe1",
        "cursor": {
          "ref": "f7206d65-c193-48df-96e4-4759da2cfe32",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cde552f6-70b8-48cd-a719-efbbaf0ca503"
        },
        "item": {
          "id": "56a25a2b-0a46-4519-9208-d58114ecafe1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d43b04cc-0b31-4bc8-b686-d94740e16565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb8bd65-5648-4284-ac18-696a0bf990cd",
        "cursor": {
          "ref": "63110557-6b55-4160-af22-7977b706f969",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8706394-9983-4e2c-9f49-2ae3da0c05f3"
        },
        "item": {
          "id": "4fb8bd65-5648-4284-ac18-696a0bf990cd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "711f16ef-372d-4854-b871-997f55a0d835",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 546,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a46ef3-8214-4f07-8220-346ee56e02a4",
        "cursor": {
          "ref": "b1134745-3274-4bf2-ada5-91fa6d7a77f6",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a4a5e294-6135-4717-8765-57890ec6e601"
        },
        "item": {
          "id": "41a46ef3-8214-4f07-8220-346ee56e02a4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a6aef534-1816-4cb1-a48e-09138cf14cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5793f9f0-f36b-4d05-85fd-4f4c626ac0ff",
        "cursor": {
          "ref": "93481870-31c1-44ea-831a-537daa022030",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4b2738f4-df43-466f-88f9-dd5cd5cc8a4c"
        },
        "item": {
          "id": "5793f9f0-f36b-4d05-85fd-4f4c626ac0ff",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d269709-9a6d-45d4-8542-0099000f3c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2c3955-a6da-4cee-a189-9d5f12ca092b",
        "cursor": {
          "ref": "43ea78aa-db5d-4009-93c4-aa0bf6c42fac",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "08829729-980f-496e-8b81-f7074339d400"
        },
        "item": {
          "id": "5f2c3955-a6da-4cee-a189-9d5f12ca092b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b4fc458-d684-493c-89e1-da623af28be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b175fa-623e-4381-9cbb-a2cca638bfe8",
        "cursor": {
          "ref": "59f83229-7878-4722-b8f9-64d5ceb2363d",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d7f1a1f2-f5e9-40e3-b51e-5d8d5e9d4847"
        },
        "item": {
          "id": "a8b175fa-623e-4381-9cbb-a2cca638bfe8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bddda061-3df4-4bdb-ac7f-47c742c1cfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2ebe0d-abca-41fd-9ac1-62b95a9f3bb3",
        "cursor": {
          "ref": "c324c809-4862-44c0-bc53-4f8665f09f9e",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "167b83f5-6d83-40b5-802f-a494b32fb204"
        },
        "item": {
          "id": "fb2ebe0d-abca-41fd-9ac1-62b95a9f3bb3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0330f235-3b0a-4cc2-b130-e7106f8561d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc31b5d-acde-4d11-8df0-4d6d151986e0",
        "cursor": {
          "ref": "9adcdd55-8803-487e-a6e9-bc5a40fe8e68",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a662df9-b579-4cc8-a49c-325dfd447ac6"
        },
        "item": {
          "id": "5bc31b5d-acde-4d11-8df0-4d6d151986e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bfaafa41-bea4-4cf3-b9cd-881f2028d863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dc5ad7-a468-4b43-9175-f9d3dd3b1603",
        "cursor": {
          "ref": "e386056a-0022-4b38-ad05-9a55a0d1b443",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "693538e4-fdad-4722-8545-dcf38dafd9d5"
        },
        "item": {
          "id": "25dc5ad7-a468-4b43-9175-f9d3dd3b1603",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8332b916-e278-4248-9325-eba2c335124c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 638,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5f2a75-62cb-4061-b9d0-5fd49fce1236",
        "cursor": {
          "ref": "48381902-dd7a-4228-8924-0fff307b5ed8",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2e66c6af-2e99-4837-985b-3e16cef21f04"
        },
        "item": {
          "id": "9c5f2a75-62cb-4061-b9d0-5fd49fce1236",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "acda799c-58f5-4754-ab52-59558c2a5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303cb6f1-fd9a-457d-a57d-37dfa6c716b6",
        "cursor": {
          "ref": "f23b878c-7e9a-438f-8046-42fb3fa78af0",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eb1006e7-62aa-4866-9591-7177a3d3238f"
        },
        "item": {
          "id": "303cb6f1-fd9a-457d-a57d-37dfa6c716b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "269cfb6b-e6f8-4002-b2a6-1d5cc8794d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0425978e-49f0-4605-98fd-085a336d179c",
        "cursor": {
          "ref": "522c6158-4c6a-4186-9bfd-994e5210ee8a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c92e942-e4b9-44e4-813e-f62d27eb6439"
        },
        "item": {
          "id": "0425978e-49f0-4605-98fd-085a336d179c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "740f47cd-5245-4cde-bbbf-cdba612c1c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5206a97-9e80-44ed-bb52-661b5d66e37f",
        "cursor": {
          "ref": "13d185d2-5b67-4337-9f85-1f76ecd44062",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a345259-acdb-4921-8026-b13b6ca6e193"
        },
        "item": {
          "id": "d5206a97-9e80-44ed-bb52-661b5d66e37f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c3be689d-4ca8-459d-ac0f-fe98fa3475b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a0322-8ea5-465c-8a36-d8ec1a662d8e",
        "cursor": {
          "ref": "ee94243b-6df1-4450-8b98-0f0578af3333",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8abf0be8-dd17-4bbf-9e85-e1bea4035ba2"
        },
        "item": {
          "id": "5c4a0322-8ea5-465c-8a36-d8ec1a662d8e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0f5fff7a-ee11-40f6-ab8d-6f9f372dbf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac587a23-a012-4be5-b661-b070d7381c7b",
        "cursor": {
          "ref": "d20c32d5-65e1-486d-8324-5dfa59837f38",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c5be7bfb-52ac-4697-a3c6-7cfac52160c3"
        },
        "item": {
          "id": "ac587a23-a012-4be5-b661-b070d7381c7b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "739af480-91ec-41ea-b815-9fd9a0ae612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6832a1c3-add7-434d-b6c6-908b5dc9806b",
        "cursor": {
          "ref": "46a53162-0543-4a31-a980-a2ff98a4511e",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1908b8c6-7374-4704-b99e-18a57f7e5fae"
        },
        "item": {
          "id": "6832a1c3-add7-434d-b6c6-908b5dc9806b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d1a4f67-ff5a-4f6f-b70c-11b1f09debd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93c42be-3039-4d5a-89dc-49e25dae20e3",
        "cursor": {
          "ref": "d5318d8d-66a6-4df3-ad20-caa93dac87f3",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0ce2d414-cce5-4bb8-a2ce-ced44b639fe7"
        },
        "item": {
          "id": "a93c42be-3039-4d5a-89dc-49e25dae20e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "316cb361-19b1-4ad8-8c10-5129206c11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ec39c-1712-4179-aae4-1fca7f853a48",
        "cursor": {
          "ref": "5ea0f20e-4bf8-4086-8b02-0982599f8b8b",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e8b97b4e-7aae-4d8b-a7a3-eb92339fa3d4"
        },
        "item": {
          "id": "e21ec39c-1712-4179-aae4-1fca7f853a48",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89839ca6-e372-4d2e-bb55-0891fa84b3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b7974-bde1-481d-b204-3d56eabd6af7",
        "cursor": {
          "ref": "7314d51e-9ddc-4c87-844f-824f5345d0ae",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b1451d7-c43e-418d-aa8f-dfee3882e848"
        },
        "item": {
          "id": "ae4b7974-bde1-481d-b204-3d56eabd6af7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "378e4726-18b4-4378-b00e-c10f1239ec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c714f8-909e-4819-99ea-fde4791e52b9",
        "cursor": {
          "ref": "c11980ee-d670-4c97-887f-339d81d39a8c",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9c20cc5d-2849-4b71-8639-90c6886138ed"
        },
        "item": {
          "id": "64c714f8-909e-4819-99ea-fde4791e52b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0eece96e-50e4-45e8-a3a6-297236e0634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ea484d-8a2a-47db-b3fc-deef367781c4",
        "cursor": {
          "ref": "3544eb15-2de9-4540-a396-04879d5ef78a",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b27a2206-23e6-4963-b2b6-a20533f8049c"
        },
        "item": {
          "id": "e0ea484d-8a2a-47db-b3fc-deef367781c4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d20bd888-1bbf-4f82-b259-c759361288cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd79e1c-23a5-4ada-acf5-f809db8332f2",
        "cursor": {
          "ref": "694e32e4-0c08-4e4d-94dc-bb4ba52b3d75",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "21c591ff-0d96-473d-9928-f03ed79c7ecd"
        },
        "item": {
          "id": "dcd79e1c-23a5-4ada-acf5-f809db8332f2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5790e6e2-caa2-4338-acb4-3d1f14d6937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fcc291-4890-42e1-89d6-da7112da076b",
        "cursor": {
          "ref": "3680af8b-964e-4e50-94df-d6bc1f8d614d",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9c56c3b0-fd49-41c6-bab2-9b0ae4d3efb9"
        },
        "item": {
          "id": "14fcc291-4890-42e1-89d6-da7112da076b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "96a55594-2c06-478b-9529-c62b9df37825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41648cb-ad2f-40ac-b4ec-56961f074d8f",
        "cursor": {
          "ref": "64602783-dd9c-4bd4-a9cb-7497930825df",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "92517593-e844-4f0a-923f-54d0b523f874"
        },
        "item": {
          "id": "f41648cb-ad2f-40ac-b4ec-56961f074d8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b15fe3d5-c4bc-4928-a6c8-b3f6d3ff5adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f9f0a6-307e-4ca3-b833-fe520e5339df",
        "cursor": {
          "ref": "5a74b565-0965-4634-8f07-480655c7093e",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f40bce00-d560-4a83-bb98-d99957e4a404"
        },
        "item": {
          "id": "d6f9f0a6-307e-4ca3-b833-fe520e5339df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3eb4bdfd-4bbb-4251-b963-920c385ebf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b60554e-131e-4a42-b60d-598840abfb9e",
        "cursor": {
          "ref": "7c25d6b9-4f9a-42a3-b9cc-3b9eddaf6f0e",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3cbdb231-ee2d-456a-b476-4151a5d7ab8c"
        },
        "item": {
          "id": "1b60554e-131e-4a42-b60d-598840abfb9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0cb1d28d-e2c8-43e8-a273-ae564542d0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bfa0d9-9df9-41f6-b6aa-4f3aad3a0974",
        "cursor": {
          "ref": "989d84a5-e25a-4da8-8192-df575aeeb60e",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bfb222c7-4a7f-43f3-90b6-761225614d6a"
        },
        "item": {
          "id": "37bfa0d9-9df9-41f6-b6aa-4f3aad3a0974",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "803745ce-fc8b-492f-8928-21f8991b6aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dbe49f-c87c-49cb-896c-2e6870f98a32",
        "cursor": {
          "ref": "e42aecad-ab83-457a-be77-3d5a2465a3d0",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c4327206-474d-4c98-928b-72af5a6aa86c"
        },
        "item": {
          "id": "50dbe49f-c87c-49cb-896c-2e6870f98a32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a6c8545-8c3b-4709-89b1-7bcf9742018c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a74154-7d3a-4ab6-99ab-3ac39f979571",
        "cursor": {
          "ref": "a084d958-8f6c-43bc-a200-962f22dd13d0",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "574d2151-a065-441f-8d67-8d845a6d7e1c"
        },
        "item": {
          "id": "45a74154-7d3a-4ab6-99ab-3ac39f979571",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b784fca-db6e-40f4-95ee-4cba473f15b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d560a5-5597-4535-978c-2b6ba979bf4d",
        "cursor": {
          "ref": "b4891bc2-ed30-48e5-a730-6e90595fc22c",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0b88e9a1-e8d6-4412-91a2-4aac6d2a2022"
        },
        "item": {
          "id": "f0d560a5-5597-4535-978c-2b6ba979bf4d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4a7ce5d8-616e-4668-b53d-ad76f8d070e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c03964-d55a-4ae9-a7b4-e43d3102761a",
        "cursor": {
          "ref": "20332365-5653-46cc-97ac-f8dde5a1ba43",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5ed0930b-6e21-4535-97a2-43ba11e8e986"
        },
        "item": {
          "id": "a4c03964-d55a-4ae9-a7b4-e43d3102761a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9166beef-955f-417f-ba23-e075943024da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a259ab-5a82-4534-b5e5-d5e05229470c",
        "cursor": {
          "ref": "545625fa-c424-405d-9a3c-a25053656f75",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4b415c60-f80c-4cb8-9155-ea50e2b2c35d"
        },
        "item": {
          "id": "b8a259ab-5a82-4534-b5e5-d5e05229470c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "765a6582-698e-454e-ac4f-db1c06ca3b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dc6115-3f92-41af-a315-3907e3feaec2",
        "cursor": {
          "ref": "22b5c76f-7851-4107-9514-0bcf1d500a92",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "06330f0b-0109-4a2b-a7e3-2a677e7faf8a"
        },
        "item": {
          "id": "47dc6115-3f92-41af-a315-3907e3feaec2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd7e8ba4-2445-4c6b-8117-24c5f870ebb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa80ac2-e59a-4a27-9dc8-b1dec015f86e",
        "cursor": {
          "ref": "9b2936cd-5597-4147-9067-9e7091e2a4b8",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a684964b-18d4-46f1-8639-ce94f3b6aa03"
        },
        "item": {
          "id": "2fa80ac2-e59a-4a27-9dc8-b1dec015f86e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ba0f5c91-0257-475a-87fa-6f5e10e3e60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2458f880-bd24-4dba-985f-d836d3242447",
        "cursor": {
          "ref": "86c902ec-9e8b-4a6a-945f-f31762a64c94",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6cf7a3d-be82-4b95-b06c-76c8643955c9"
        },
        "item": {
          "id": "2458f880-bd24-4dba-985f-d836d3242447",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7b2c3701-5665-46d1-88be-50ac5973b7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4ba46-bab6-4c05-869a-a7abc90df2a4",
        "cursor": {
          "ref": "edbbb0c5-7ba3-4b67-8ea4-4a62ef350c64",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2e7dd968-862f-4646-bc6c-fe748d9b8f40"
        },
        "item": {
          "id": "89b4ba46-bab6-4c05-869a-a7abc90df2a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dfd24da3-bcd8-446c-b9e8-96542a08a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ac969c-1888-4a3f-a4c1-c099e29286c8",
        "cursor": {
          "ref": "4ec3c80a-8bc2-4383-a4ee-719c5515eddf",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "06da1174-f275-4977-8a36-cae3ce4c7012"
        },
        "item": {
          "id": "c0ac969c-1888-4a3f-a4c1-c099e29286c8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f61b0aec-d028-42df-a3b7-245f3aa1f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd434485-b549-4663-9c4a-9a955ee42296",
        "cursor": {
          "ref": "48557295-b74d-484a-b3f1-4dec2fdfd938",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d5b18790-329e-49e5-96f0-51465d15d3a0"
        },
        "item": {
          "id": "dd434485-b549-4663-9c4a-9a955ee42296",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f6ae7ea1-df39-4e93-8ad9-879d98c8713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a44ba1-97f0-4be2-9932-c7808100666c",
        "cursor": {
          "ref": "856e8ffb-7d42-46cb-9049-aff9ac94b47d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d41f123b-b143-4020-8c31-175484ce70c2"
        },
        "item": {
          "id": "37a44ba1-97f0-4be2-9932-c7808100666c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dc9dcd6b-1f08-4fc6-a54a-4c05ad545a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373d0428-dac6-4953-a8d8-a5b4d12d59e0",
        "cursor": {
          "ref": "a4bab1f8-8934-4216-b7b4-294a27d597a0",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8e78863c-834c-49f4-b946-9b982cefbe23"
        },
        "item": {
          "id": "373d0428-dac6-4953-a8d8-a5b4d12d59e0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ad0e7a44-afcd-4262-92c2-01f8b847bbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252c08e-b9c9-48c9-a0c2-8fa95f1e1746",
        "cursor": {
          "ref": "06136da0-f0bf-4c9f-b4ec-1e91a9927537",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5c910eed-5408-4950-8dea-9bc5ab51b6fb"
        },
        "item": {
          "id": "a252c08e-b9c9-48c9-a0c2-8fa95f1e1746",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f62baf8d-95ac-4e43-86de-a46ea2c10d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae4752e-f65f-4920-ac8d-36ae4627b0d9",
        "cursor": {
          "ref": "2586f6b0-ae89-4dce-89fb-f6bcb76f1bcd",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a43340c2-23de-4204-80f5-08274a1bd3fa"
        },
        "item": {
          "id": "fae4752e-f65f-4920-ac8d-36ae4627b0d9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "19b0ec9a-af28-4f67-9a4e-f8252238a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5665e-7de3-417d-84e9-585bbc13e325",
        "cursor": {
          "ref": "581c7180-192e-400a-8196-5056efd6feaf",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eba9b3b9-1183-4a8d-8cd5-5986cae56fe7"
        },
        "item": {
          "id": "47a5665e-7de3-417d-84e9-585bbc13e325",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c044ae2-5ce4-47b5-aa16-9470868925a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784f5e29-e1e1-4112-b418-36420f1ae861",
        "cursor": {
          "ref": "4df45c11-3d82-4789-a83e-9a126831619b",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d9914f5-210b-4a45-ad56-2bc301d11c4a"
        },
        "item": {
          "id": "784f5e29-e1e1-4112-b418-36420f1ae861",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69b2f202-15ee-4d53-80b2-7ab190dc9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cb2155-95c3-42cb-8980-678fabb9094d",
        "cursor": {
          "ref": "00a32b31-60b5-4f9a-b60d-8cf488c291a3",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b8e6b7f8-e0eb-4899-b9af-655b92850b2f"
        },
        "item": {
          "id": "a9cb2155-95c3-42cb-8980-678fabb9094d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a548cf2a-fe3f-41cf-a873-8caa44444eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8979c6-9e47-4255-b26a-6342dbe87f8d",
        "cursor": {
          "ref": "1945070c-1619-48ab-a00e-2d88742269ba",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a6d275e8-a699-4e48-aefd-7096f7a15da0"
        },
        "item": {
          "id": "fe8979c6-9e47-4255-b26a-6342dbe87f8d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9c0bf048-9992-47dc-a31a-302289d1dc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66928cd9-6c4e-4161-aab3-2168919eea05",
        "cursor": {
          "ref": "efd63caa-f4b9-489d-b9ac-73e69efbce60",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5897d76d-3837-4797-8fa4-a9d6b64c1cbd"
        },
        "item": {
          "id": "66928cd9-6c4e-4161-aab3-2168919eea05",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a4bd421f-7b42-41a6-bd18-4c3ff4eac4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c03904-962a-4770-b2d1-1fb8cc3abe6d",
        "cursor": {
          "ref": "eb628918-86be-4094-903b-8c6292e674a1",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5a255c1f-6826-4cad-a412-a867d6afde6b"
        },
        "item": {
          "id": "c4c03904-962a-4770-b2d1-1fb8cc3abe6d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5b0bf33b-f75f-4c5e-900e-2ba9e130ccb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9047c99-5367-41c6-be23-a2d8e6884bad",
        "cursor": {
          "ref": "d9f55088-14cf-4ab2-90ac-d9c9669ed550",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fee0105a-5bee-4ff2-9547-759faefaf3f4"
        },
        "item": {
          "id": "e9047c99-5367-41c6-be23-a2d8e6884bad",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "96765bc4-1a07-436c-a104-5ef776029308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0cd9a8-b4b8-4c62-b4f3-584ef22f01fc",
        "cursor": {
          "ref": "61399b88-3c62-46df-b75e-b749fe2f0a8e",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d8485b6e-30db-4340-a278-9389c3b1979e"
        },
        "item": {
          "id": "db0cd9a8-b4b8-4c62-b4f3-584ef22f01fc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "23e757c5-6715-4945-9d15-b7fb47545704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98a72ff-774f-40fa-900d-eab117a481a8",
        "cursor": {
          "ref": "01496790-46db-48ae-976e-578307c92606",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3a72bf3e-21c8-4b4e-8f54-b9a40935d8fc"
        },
        "item": {
          "id": "e98a72ff-774f-40fa-900d-eab117a481a8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c929950e-6819-411d-8b4c-7be8281243c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df255492-95a5-413e-8e31-2c3e2f7b7cf4",
        "cursor": {
          "ref": "424ea393-c58e-4129-9512-2789c2850159",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3723cb9-49ac-4dd9-a6c5-6ff61d79639d"
        },
        "item": {
          "id": "df255492-95a5-413e-8e31-2c3e2f7b7cf4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6d298193-c79a-4b4a-a46d-14041980b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da70eec-76c6-4c37-93d2-9d6f620e8ada",
        "cursor": {
          "ref": "b3751c50-9dbd-433f-b55d-b0a122e20c30",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3125db8b-13ec-42e2-81d7-b834f85302f3"
        },
        "item": {
          "id": "6da70eec-76c6-4c37-93d2-9d6f620e8ada",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cac905e0-9562-48a0-8ede-ca0d72da265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e445ac-f887-4dbc-a4bf-93250258824f",
        "cursor": {
          "ref": "bda21896-fd2b-48bf-9bbb-a3c3df372c55",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3aff1a1-edf7-47e5-87ae-8f7980bacd25"
        },
        "item": {
          "id": "c6e445ac-f887-4dbc-a4bf-93250258824f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "62e7c2ee-607f-4d81-b27d-c1bf467be103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b67db6-458c-4b1d-8e29-fc3f147b13c8",
        "cursor": {
          "ref": "32b8408a-74a8-46fa-b731-4c49814730d2",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "959f51d8-ca8e-468b-8601-a2f4455b1ebf"
        },
        "item": {
          "id": "91b67db6-458c-4b1d-8e29-fc3f147b13c8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76b26388-b27c-467f-8dd2-d2275f78fd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0b1403-f6f2-4c9a-bd8f-1a45786570df",
        "cursor": {
          "ref": "7ea5ecdd-395e-430e-9e29-bace40fc524d",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ae66e4ca-ce68-4cd3-8a0d-0c57a2cec9f8"
        },
        "item": {
          "id": "ca0b1403-f6f2-4c9a-bd8f-1a45786570df",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5db4b2c4-35c1-4619-bb50-30565ae81c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e053b7d6-f167-43ad-9bee-696f5402d67f",
        "cursor": {
          "ref": "8d0b91a8-9d22-4764-ad3a-a50c635835dd",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "76c81a6a-4ef8-412b-9e51-bb8d929c55b2"
        },
        "item": {
          "id": "e053b7d6-f167-43ad-9bee-696f5402d67f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "28a83c27-90fd-4fa8-a4b5-6b65c1a6268c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e5fdf4-5b48-4ed4-a80d-badb3af3d012",
        "cursor": {
          "ref": "4ca68a2d-e049-44f9-8662-51b7a4732437",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "65a3d63a-8a41-4167-aae5-5f13bca40c16"
        },
        "item": {
          "id": "a1e5fdf4-5b48-4ed4-a80d-badb3af3d012",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e6931574-ff04-48ab-81b3-880027f1e59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f95622-53fc-49e0-a6f1-083afaf14795",
        "cursor": {
          "ref": "147bcae4-9693-48bc-a25c-a25bb9b38504",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "605bd6fc-7fb1-4cb8-8871-c3445208c0c6"
        },
        "item": {
          "id": "a3f95622-53fc-49e0-a6f1-083afaf14795",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aa4bfe03-45cf-47e6-99fe-7df5430d71d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257d2cff-3fdf-45d5-8cf3-8480ba91a193",
        "cursor": {
          "ref": "208e85e5-b946-4f84-ae1c-03f382ba2c38",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46313aa0-9f3f-4f55-8466-cd09057d8bf0"
        },
        "item": {
          "id": "257d2cff-3fdf-45d5-8cf3-8480ba91a193",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "36e866ac-3994-455a-a372-bc199f47707f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3ec7c4-44bd-46d1-bea0-2d88fb90ffa1",
        "cursor": {
          "ref": "ce1a9057-043b-4edb-8bcd-0cc5dcb28abb",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d13f39aa-232a-4b45-a96b-c10522e2ce3b"
        },
        "item": {
          "id": "4e3ec7c4-44bd-46d1-bea0-2d88fb90ffa1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "782c8669-b4bb-4953-85fc-8ba36a080bb9",
          "status": "Created",
          "code": 201,
          "responseTime": 3697,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "35a5995d-e975-4f7e-9dd0-76243226776e",
        "cursor": {
          "ref": "1d3559eb-d438-452a-a310-4e3588df1223",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d70e3f91-abc0-44cd-bab4-9d5c915f29a7"
        },
        "item": {
          "id": "35a5995d-e975-4f7e-9dd0-76243226776e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "be8d5026-46da-422a-8a69-46f46d9d382c",
          "status": "Created",
          "code": 201,
          "responseTime": 4235,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "6a04ed0d-1333-4900-9375-52da6a6e857f",
        "cursor": {
          "ref": "b1ea0524-e9a8-4ec2-8461-53695630bac8",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63d1b64f-5067-40b8-9a91-91f7ac643871"
        },
        "item": {
          "id": "6a04ed0d-1333-4900-9375-52da6a6e857f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "263064d3-5ef6-457b-b2d1-29c75d945c59",
          "status": "Created",
          "code": 201,
          "responseTime": 5472,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "09b79ec9-504c-47dd-9168-98174a825c1f",
        "cursor": {
          "ref": "4092090f-4325-4ab9-b3de-f0b80cc3a3fe",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3fd82d95-c5ee-43ba-8a95-6d6ac8cc8687"
        },
        "item": {
          "id": "09b79ec9-504c-47dd-9168-98174a825c1f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d6060345-9f80-4ecd-9f39-cf208c89818d",
          "status": "Created",
          "code": 201,
          "responseTime": 3954,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "66c2d8d3-aaef-4c01-8512-4da26ae9b6b9",
        "cursor": {
          "ref": "b7491564-950c-42c7-bd5e-319cc4a87d7f",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "151c96da-771a-444c-857c-5794adde3bc0"
        },
        "item": {
          "id": "66c2d8d3-aaef-4c01-8512-4da26ae9b6b9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a028326b-c0d6-41ff-aa8b-ed9d8bd6e87d",
          "status": "Created",
          "code": 201,
          "responseTime": 4869,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "57b228b0-725e-4049-94c6-f5b4c1f37278",
        "cursor": {
          "ref": "80a54ced-1275-46de-893f-26a96ddca9d8",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c8bac75-7856-4b34-947f-8a5ed960f613"
        },
        "item": {
          "id": "57b228b0-725e-4049-94c6-f5b4c1f37278",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c9726b8-3a8e-4d2e-90de-6f417b04822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b228b0-725e-4049-94c6-f5b4c1f37278",
        "cursor": {
          "ref": "80a54ced-1275-46de-893f-26a96ddca9d8",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c8bac75-7856-4b34-947f-8a5ed960f613"
        },
        "item": {
          "id": "57b228b0-725e-4049-94c6-f5b4c1f37278",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c9726b8-3a8e-4d2e-90de-6f417b04822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176f276f-dc2f-4a94-9e08-720b58f942a6",
        "cursor": {
          "ref": "eac1069c-92de-45ad-9c8a-c05056ada6eb",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6180a474-4c90-43dc-9534-18fc97978a43"
        },
        "item": {
          "id": "176f276f-dc2f-4a94-9e08-720b58f942a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c2edd4d3-a95c-4a46-8f10-5bd694f4d130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e38524-af08-485d-b436-321d7f452724",
        "cursor": {
          "ref": "167c3a06-2755-4cdc-9c92-4c007c13e6cc",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3541f164-263f-4ef8-b9d8-5140e86f7d4d"
        },
        "item": {
          "id": "a8e38524-af08-485d-b436-321d7f452724",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f127ad2-01e3-4e7c-b09f-8c170c1a0bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd46c24-9912-42d2-b1a7-a5cf764933a0",
        "cursor": {
          "ref": "d527091e-d5a8-41c5-896e-0be9e03bb66d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dfa268fb-d9eb-4151-b8d4-407ff360415a"
        },
        "item": {
          "id": "5cd46c24-9912-42d2-b1a7-a5cf764933a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1942ada9-4c8c-4c12-a4ca-a7c6c565bcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c03ce2-75ba-455f-8956-650cc9e8624c",
        "cursor": {
          "ref": "64d4605e-2da2-418e-8216-0bd74d0aa152",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cc2d4817-9146-4ec6-8555-02e7a18c7c7d"
        },
        "item": {
          "id": "f2c03ce2-75ba-455f-8956-650cc9e8624c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a606f26-e423-4d52-8650-d0ae94ba26e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d6ca7d-5e80-4590-92c7-e1230a203bae",
        "cursor": {
          "ref": "1f92ff67-d1b0-4519-8d89-dfb23ada7220",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c3b977e-c4f0-4bfc-9699-e386d61c73c0"
        },
        "item": {
          "id": "27d6ca7d-5e80-4590-92c7-e1230a203bae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b7ffc474-e030-44ee-8e0f-f94ecb7a6033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1560d1-263d-496f-a6b0-51e2e84ac911",
        "cursor": {
          "ref": "afbac3cf-54a2-43fe-ac54-9d1402ef6020",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32ece0f3-ca2d-4210-a320-d0e92df396ae"
        },
        "item": {
          "id": "de1560d1-263d-496f-a6b0-51e2e84ac911",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7a2def39-db09-4bc7-8304-9578b9157876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981482a7-168a-4fa3-b2cb-d31ffc291a34",
        "cursor": {
          "ref": "10872d75-853d-44b7-9e13-c62d0680d689",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dfb987de-2215-4ae3-a502-37f5cc26c7fe"
        },
        "item": {
          "id": "981482a7-168a-4fa3-b2cb-d31ffc291a34",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2174487c-14ac-481b-a5a1-afd977b36a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a3358-13f1-40a8-8277-0f3b92fb23b6",
        "cursor": {
          "ref": "803363aa-03bb-4542-9762-933a1a64d77e",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80203feb-488b-4266-ba40-256d9c1614fb"
        },
        "item": {
          "id": "355a3358-13f1-40a8-8277-0f3b92fb23b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7febfd15-9ebd-4596-9c04-3d4a01d83f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407ad1d-a2fe-4c21-b772-07e2dd549919",
        "cursor": {
          "ref": "648158ba-b2ab-4d61-954b-c56c003ad62f",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a33b8817-c9bf-40bb-80cb-1bd059c92401"
        },
        "item": {
          "id": "d407ad1d-a2fe-4c21-b772-07e2dd549919",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e94defa0-0838-4739-9ae4-871985a8fa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ad1516-2ab7-402b-a561-a5063c08bb47",
        "cursor": {
          "ref": "785cc3f0-8760-4f0d-96c9-b780f56c4089",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e39c1783-dd9d-4e52-b32d-f7e3e026307c"
        },
        "item": {
          "id": "59ad1516-2ab7-402b-a561-a5063c08bb47",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5047d27b-c8c5-47bf-bb39-85ab04abdb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb97bdd6-00a3-4672-a4f9-c8ee5f4a67df",
        "cursor": {
          "ref": "2be3f7c5-4fc0-424c-bb05-7d50703c69a2",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0058cf58-63c9-4fdc-a8f2-303b7791b04c"
        },
        "item": {
          "id": "fb97bdd6-00a3-4672-a4f9-c8ee5f4a67df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "020a97df-b82c-4015-84f6-a6b3c1f964a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388169e7-7433-4e60-8b69-14409c1a16b2",
        "cursor": {
          "ref": "2fa5cfe9-5156-48a7-ba49-e9ba2dd0b5a4",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "45a01483-115d-45af-a939-d8230a4e041a"
        },
        "item": {
          "id": "388169e7-7433-4e60-8b69-14409c1a16b2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a1baa14-3deb-4a7e-8fdc-3b5966550980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4606e3a-ae2b-4c72-abd5-6fbc24087b56",
        "cursor": {
          "ref": "679b4060-03d9-48fa-afdc-4f23220e5831",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6ea575ad-7da0-41f3-839f-e59defc70378"
        },
        "item": {
          "id": "c4606e3a-ae2b-4c72-abd5-6fbc24087b56",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d54199e-25e8-4138-998b-edd2300e15d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f732b15-8c82-4283-a170-bbec79469800",
        "cursor": {
          "ref": "b9513346-3b81-4c5b-9c6c-0c9bf0449fdb",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "967b71bf-0ccf-47de-aa56-30ec71e29412"
        },
        "item": {
          "id": "6f732b15-8c82-4283-a170-bbec79469800",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e510bb8e-3785-4e1b-9a06-e9b7201577fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d582cd2-3fc9-49f1-9a16-b433624ebbbb",
        "cursor": {
          "ref": "363701d0-89a7-4a88-861f-44716ac013a3",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8837236c-9716-47b6-a102-b420c5c69b2e"
        },
        "item": {
          "id": "2d582cd2-3fc9-49f1-9a16-b433624ebbbb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29ac29c8-1343-493c-ad66-bfb383e1bdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e00b474-d719-42a7-85be-fa0f81bc20c9",
        "cursor": {
          "ref": "91440fb7-9777-4b9b-8976-57ae58d8ecb5",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2f009b74-1f0c-404c-bb45-26e5368163e6"
        },
        "item": {
          "id": "7e00b474-d719-42a7-85be-fa0f81bc20c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "081a1685-f700-48c1-b501-eae41510d41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde8d01d-6f0c-47c3-b2c4-63511683f1fa",
        "cursor": {
          "ref": "e5a2b156-d1b1-4e4c-8951-f85b96ee6814",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7e146f88-be77-4536-9a02-0b766ec69d4f"
        },
        "item": {
          "id": "dde8d01d-6f0c-47c3-b2c4-63511683f1fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f1f5672-51b3-4960-b285-aa5f8c3241b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cc94ae-940e-4a29-aa60-599249d280f7",
        "cursor": {
          "ref": "59231222-7fda-430f-ac68-ea6b13f566a2",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1ab50747-9273-422b-b3d5-9419bc41f87b"
        },
        "item": {
          "id": "86cc94ae-940e-4a29-aa60-599249d280f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "503af618-0119-4b9f-bca2-bfc6342b2ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1019,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ae342-a149-479b-9dd7-6e47c29c2ea6",
        "cursor": {
          "ref": "a271cf5c-567e-4461-b910-e53f8cf2b102",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "45ad9b20-6f01-4a14-92d8-a46e26577c5a"
        },
        "item": {
          "id": "ca1ae342-a149-479b-9dd7-6e47c29c2ea6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3ad1d004-d741-441e-a251-9181d20d8179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db2ec9-06fd-462a-aaef-21bf07940c2d",
        "cursor": {
          "ref": "f98574b4-2d84-425f-9a9d-242c75a74c0b",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56c9dc38-5902-4321-b534-1e2fe239b39c"
        },
        "item": {
          "id": "40db2ec9-06fd-462a-aaef-21bf07940c2d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f0a62deb-7676-44ae-9590-a18dbc1ea738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a1b974-42de-4b8d-aca1-b7ad14fbecba",
        "cursor": {
          "ref": "e0c0a208-73fa-442b-8d11-9b8e6c948968",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1abf9e74-9ef2-431b-88e7-946defe4ad52"
        },
        "item": {
          "id": "91a1b974-42de-4b8d-aca1-b7ad14fbecba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "724a6730-c56e-423d-b6c6-fd056a76d166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d381578-0fe5-4db2-898e-7263bfaa8fcb",
        "cursor": {
          "ref": "36390991-769d-4d2c-a93d-7d5c762d2cfd",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c1dcc39-30c9-47f8-bb2c-49a938dee507"
        },
        "item": {
          "id": "0d381578-0fe5-4db2-898e-7263bfaa8fcb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e5539f79-c193-4d96-a1cd-a3a674a00972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642cf8b8-7bd5-4c27-90a2-684a699688ff",
        "cursor": {
          "ref": "deac3f5b-69b4-44af-ae8b-980171bef6d6",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d5046bee-e39b-4953-ba16-cd53db0dd124"
        },
        "item": {
          "id": "642cf8b8-7bd5-4c27-90a2-684a699688ff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1afa122c-7058-453e-86cd-d3ecf2cac1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89168b5e-9ca5-4648-af76-bff8b707afe5",
        "cursor": {
          "ref": "4b13ee13-cfc1-4a71-8d43-305038240a40",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5b3f0616-1f56-4336-806b-8249aafd711f"
        },
        "item": {
          "id": "89168b5e-9ca5-4648-af76-bff8b707afe5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ad21c8ce-7d57-4111-8429-365f1fd0b16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc5ec87-b9c2-44a9-a13c-aefa47e82c76",
        "cursor": {
          "ref": "963435b8-fdb2-4c32-ae26-0a2566dcdde9",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b8fb1491-83df-4db8-977f-30fa41d204ae"
        },
        "item": {
          "id": "edc5ec87-b9c2-44a9-a13c-aefa47e82c76",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1274b5ee-d949-427d-96f9-c27363ce7d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35541d0-a08a-4086-8fd1-0fe064abd004",
        "cursor": {
          "ref": "e25ebf50-6713-4657-a0f7-36e4c217f817",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ff380c3d-4ba2-4205-aa9c-9f5208c1df96"
        },
        "item": {
          "id": "c35541d0-a08a-4086-8fd1-0fe064abd004",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8b305748-b9ee-44af-8993-204788610359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d505f482-d894-4f3c-b86a-660ef02af9ba",
        "cursor": {
          "ref": "954bdf16-6ebb-424e-acdf-0964b3995bb9",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b9b8839-2383-4859-8fde-2e2e42997a30"
        },
        "item": {
          "id": "d505f482-d894-4f3c-b86a-660ef02af9ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d41ff1d9-cb29-4061-b35c-a3b6b355d104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d8ec6f-b090-4e8a-bc59-1c5342b585e2",
        "cursor": {
          "ref": "3fdc9243-396b-413a-a3e7-4a36418f6e8c",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7e9f8682-033a-48f8-af26-88f33c2e45e4"
        },
        "item": {
          "id": "a4d8ec6f-b090-4e8a-bc59-1c5342b585e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2dae8f9e-29d0-4148-96a5-6a282640a01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56377578-66c6-4536-b873-cca736f901d0",
        "cursor": {
          "ref": "f39099c0-83b0-47d5-abc6-5521de88e7da",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b03ed5e7-ae92-45bc-8444-545f25b51378"
        },
        "item": {
          "id": "56377578-66c6-4536-b873-cca736f901d0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16a45695-5252-49f6-918d-1fc0a9683aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc804cf4-c9a2-4235-b753-d3e7596829eb",
        "cursor": {
          "ref": "fbd71307-f402-4e23-a8ba-a340b2c6eba0",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1466a702-457d-4485-85ae-717c2c5910b9"
        },
        "item": {
          "id": "bc804cf4-c9a2-4235-b753-d3e7596829eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ae8583b-f3cb-4327-94c0-9471233f1756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fde78a-115c-4790-98e1-9a70498a50c3",
        "cursor": {
          "ref": "15181658-7670-49f3-b23c-d3299d4c17ba",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0871070-0d2d-462c-a970-8391d2fc0230"
        },
        "item": {
          "id": "b6fde78a-115c-4790-98e1-9a70498a50c3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f4da9665-6ccf-4056-87cf-59c385838ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae96ed1-d87a-42bc-8694-cc72e496e052",
        "cursor": {
          "ref": "dad4939c-9fb2-41ad-9579-e6985c1e9ee8",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7fcde927-8618-4b78-a5df-49c820f18205"
        },
        "item": {
          "id": "0ae96ed1-d87a-42bc-8694-cc72e496e052",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b285f5d9-6d1a-4d5e-8d55-86a67f95dbb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a807b-9117-4632-bba0-4abd5b0f579e",
        "cursor": {
          "ref": "2c58bd48-b918-4727-b37b-eec1995a5664",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa15fafb-e75d-4f7a-aaaf-0ea23cde3971"
        },
        "item": {
          "id": "e68a807b-9117-4632-bba0-4abd5b0f579e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0cda4eb2-0a15-403a-a7ce-75f72f1cbd1a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 494,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9467a-de48-4bbf-995b-6386a6a306e9",
        "cursor": {
          "ref": "e79b9333-4037-4ccf-940a-01884e6bbe68",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f19ec444-26e4-43b8-9a27-1cb9d9e72a0b"
        },
        "item": {
          "id": "e5e9467a-de48-4bbf-995b-6386a6a306e9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72135a22-4fb9-4680-b3e5-8cba6fd4c8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9467a-de48-4bbf-995b-6386a6a306e9",
        "cursor": {
          "ref": "e79b9333-4037-4ccf-940a-01884e6bbe68",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f19ec444-26e4-43b8-9a27-1cb9d9e72a0b"
        },
        "item": {
          "id": "e5e9467a-de48-4bbf-995b-6386a6a306e9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72135a22-4fb9-4680-b3e5-8cba6fd4c8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c9971b-2ee0-4cff-9c5a-fc7d2df28701",
        "cursor": {
          "ref": "11aadf0c-963c-4ed1-89a6-c5386181f673",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4706ca09-bfbc-4809-8655-c026d32f5d08"
        },
        "item": {
          "id": "20c9971b-2ee0-4cff-9c5a-fc7d2df28701",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d15e0ea9-8fc2-46a2-a725-b85fbb6d8580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b61950-e5f8-440d-bb31-2860f70fa299",
        "cursor": {
          "ref": "5b037d60-5a82-49ea-b9cd-b959ca7daa68",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9b50c4ae-2657-496d-8d20-46d20f8cf45d"
        },
        "item": {
          "id": "b3b61950-e5f8-440d-bb31-2860f70fa299",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a239b09-5296-47cd-b4e4-f510e0c100f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88101ed-714a-4bae-9804-3f80e3b48cd4",
        "cursor": {
          "ref": "cf534876-8b2c-44e9-bbbe-1c405c9d79d2",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8952ab50-013a-4c57-9d7e-ecf2e38fcd34"
        },
        "item": {
          "id": "c88101ed-714a-4bae-9804-3f80e3b48cd4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "690284ea-8c97-4f3c-9481-d6255c99cdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7baca0c-099f-4ec7-bb31-13d712f370b1",
        "cursor": {
          "ref": "29f94880-090e-4fdd-8bf5-cc543cdd1f0d",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4f87aeaa-44f3-4830-9cad-69ffc254a3d0"
        },
        "item": {
          "id": "e7baca0c-099f-4ec7-bb31-13d712f370b1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "030655f0-5aca-485b-b7d2-0c05dff9ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa2480-ad7d-4404-a52c-faef4a637b4b",
        "cursor": {
          "ref": "69169790-fdcd-401c-8402-c2e18cdad033",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fc2ca4ac-fad3-4ae4-9859-cf107bc3c930"
        },
        "item": {
          "id": "cbaa2480-ad7d-4404-a52c-faef4a637b4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a13f6463-786f-42af-9c1c-f32bb6240c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e0f3c0-dd7f-401e-a805-aec59f51159b",
        "cursor": {
          "ref": "9f070551-c8d3-4ab6-a108-d4caef810589",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e3a09834-5e46-430c-99fc-b85e3e5ff220"
        },
        "item": {
          "id": "38e0f3c0-dd7f-401e-a805-aec59f51159b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "621f0ba9-a528-4c4a-9b61-59c3f8e59090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da416f1-b94d-4497-b357-76606ac81590",
        "cursor": {
          "ref": "c50f942a-42ce-4e60-9255-24eca4155511",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "60805008-718c-4090-91e9-85adfcc8e96c"
        },
        "item": {
          "id": "5da416f1-b94d-4497-b357-76606ac81590",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "210bd8c9-7d90-4928-8b23-82a5cd4b5651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec53573-ec31-433d-bace-a5a366b444f8",
        "cursor": {
          "ref": "f3bce84d-1edf-405d-bf0c-6a9ec663c45e",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "669fbf2e-c3cc-4d35-9bdf-5928237664e9"
        },
        "item": {
          "id": "6ec53573-ec31-433d-bace-a5a366b444f8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8855ca3-7ed1-4838-9c1b-173e1a9fbb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9646d907-e9c0-4f34-bb8c-1d9af224d134",
        "cursor": {
          "ref": "824db14a-3887-4704-ac5b-08bfd0821f4d",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8366b465-fffb-47a0-8185-d627060a5886"
        },
        "item": {
          "id": "9646d907-e9c0-4f34-bb8c-1d9af224d134",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8138f6b6-9740-498d-84d5-c650de3dabcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cbfcdd-91eb-4022-b5f7-b0edcac15711",
        "cursor": {
          "ref": "cd5468ae-432b-440d-ad5e-71079ef31296",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93283864-f4d1-4a7b-954a-9003dbd060dc"
        },
        "item": {
          "id": "41cbfcdd-91eb-4022-b5f7-b0edcac15711",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "33349181-1c29-4ce5-b669-d5b946e8fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baa2324-c0cd-491d-9d79-328f5fc47aaf",
        "cursor": {
          "ref": "56003123-6d5a-4807-9592-6fbf9d306f19",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2bd378a5-4073-4d66-994b-a030ac3c80cc"
        },
        "item": {
          "id": "5baa2324-c0cd-491d-9d79-328f5fc47aaf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aa432485-367f-4951-b17b-33bb6efad3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9755d5a2-5999-41c8-9025-ca049e7a697b",
        "cursor": {
          "ref": "9d622955-670c-446d-bc74-b1cbe6205658",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2eb6ccca-79a7-4843-b97e-a79a97d10166"
        },
        "item": {
          "id": "9755d5a2-5999-41c8-9025-ca049e7a697b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b79ce938-d4db-48e7-8575-dd5d7fd324c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25482f3b-072c-4a49-a15b-0509ef498ea4",
        "cursor": {
          "ref": "b97b4aac-7784-4f35-a4d3-f0fabbf75890",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e9e518df-f501-4240-81e2-ee8b1dccc22e"
        },
        "item": {
          "id": "25482f3b-072c-4a49-a15b-0509ef498ea4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "88f04a82-e1f0-4c54-81bc-37f026822819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fce6e9a-5977-4cc5-b074-8a8756f21a51",
        "cursor": {
          "ref": "ed9e9bde-2a8f-4a8f-910f-5dc507a47c57",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1fd73265-9417-49e2-9c4d-3beee7fa96ca"
        },
        "item": {
          "id": "3fce6e9a-5977-4cc5-b074-8a8756f21a51",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "356df3cb-1d20-47e5-9b34-33c05e7ad550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652df4ee-46e8-4798-88cb-d72f056814a4",
        "cursor": {
          "ref": "40b7b65d-ad64-44de-a8ca-74ad0d594c1b",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a52e996b-b413-479a-bc09-2f7d4ed4b45d"
        },
        "item": {
          "id": "652df4ee-46e8-4798-88cb-d72f056814a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "861ca1ef-d758-4283-a727-6bfef9b7eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca8348c-5174-45e1-b59e-c4dd993e404e",
        "cursor": {
          "ref": "c89f7b13-2f7a-42c7-801f-22e0823bf927",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c39e97dd-8c32-4f33-8b1c-a4eeb53c6e68"
        },
        "item": {
          "id": "cca8348c-5174-45e1-b59e-c4dd993e404e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "14893aa3-3ad8-4e68-94a9-2b97d3277b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e21b42-a164-40bb-9508-adec7f24bf50",
        "cursor": {
          "ref": "9c42a7dd-7643-4038-bdcf-31dd72480a7a",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "50b6e238-7ced-4438-b6f5-87b9a3e18170"
        },
        "item": {
          "id": "37e21b42-a164-40bb-9508-adec7f24bf50",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "6d1f1931-b007-492b-a99b-424962b1ac66",
          "status": "OK",
          "code": 200,
          "responseTime": 3428,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "d466780e-6ea0-49d4-af00-6fda786ec898",
        "cursor": {
          "ref": "7b0f8145-cf12-4f68-8da7-62dc1579a51e",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02da6593-c1cf-4167-b2cb-09c8049a4320"
        },
        "item": {
          "id": "d466780e-6ea0-49d4-af00-6fda786ec898",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f1744a6e-ef5c-4f17-a683-e6034eb6f66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b85d19e-0010-416a-9eda-0c4597fd7f87",
        "cursor": {
          "ref": "964ba078-930d-4e67-b567-8a0c4f2fea0a",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0d7e80c2-adb6-45d0-8826-6469df5e7a8e"
        },
        "item": {
          "id": "0b85d19e-0010-416a-9eda-0c4597fd7f87",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dd805f86-bb9f-42fa-9a1e-a843e8872cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbaf3d1-a7da-4019-9d18-869309fef89d",
        "cursor": {
          "ref": "3678610f-d095-4b9d-8c54-17ad42374d16",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1c236b5-b438-4ba6-9efc-4bfcd1fdecca"
        },
        "item": {
          "id": "fbbaf3d1-a7da-4019-9d18-869309fef89d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "609db0c2-733f-4462-9d38-75783e55a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b41ce3-c0b0-4207-94ea-66d381512692",
        "cursor": {
          "ref": "f31d6f4c-bb2f-42fb-bdce-6c9d7f3229a6",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c6ded852-1603-4b73-a135-949fc8752348"
        },
        "item": {
          "id": "11b41ce3-c0b0-4207-94ea-66d381512692",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c3be89a2-6554-4046-a686-a27fe394f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc35067f-ed33-4aa0-a1d5-62a7d89f10b0",
        "cursor": {
          "ref": "4a0e72f0-236e-422e-9878-bd4dedb3e3b9",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ae12053b-c0bf-43d9-bcb8-8a530e2addef"
        },
        "item": {
          "id": "cc35067f-ed33-4aa0-a1d5-62a7d89f10b0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb8ce873-13cc-4200-b146-c1d6579c8a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05d70a-eb8a-4f85-b3ef-494c150094b7",
        "cursor": {
          "ref": "6398982f-8946-48df-8a73-c629a7ba0047",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4abc44ab-4823-4764-9922-aadc3745810b"
        },
        "item": {
          "id": "6f05d70a-eb8a-4f85-b3ef-494c150094b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "31963937-6c5b-4076-b5f6-610cf1b40a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c00a17-e948-466a-9536-b755497024a4",
        "cursor": {
          "ref": "20c55f9b-072f-44b7-bcb7-131f1d4ef455",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a5d19190-45cd-4f7a-9156-9b61be6134ff"
        },
        "item": {
          "id": "67c00a17-e948-466a-9536-b755497024a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0c7f117c-a3f9-4f4a-a6d5-e593376d236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb23869b-4d48-4121-9d18-a573553d3a2c",
        "cursor": {
          "ref": "4071495a-5aba-4005-982e-75479498855b",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "42f19d1a-ace3-4714-8154-d519c4b597ca"
        },
        "item": {
          "id": "cb23869b-4d48-4121-9d18-a573553d3a2c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f5254a8-eaec-428a-b053-f201b72cf4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51855b0-3da5-4344-9c42-98c49ec07ab7",
        "cursor": {
          "ref": "e0f70425-c785-415d-b14a-fadffbd8142d",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a2bbdbe-f446-4dae-9538-30e7251b7139"
        },
        "item": {
          "id": "e51855b0-3da5-4344-9c42-98c49ec07ab7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a9b26360-c7b5-4b0d-a360-11495104551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae28c5a-0ac9-4d3d-9cde-73e784650bac",
        "cursor": {
          "ref": "cf77a8c5-1721-4b70-b4cd-9900d1132279",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "faeb873c-6728-446b-b629-e34b03574718"
        },
        "item": {
          "id": "dae28c5a-0ac9-4d3d-9cde-73e784650bac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0139bf4b-62ff-4dfd-bb47-a07e23b32258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c2cf7-1423-4b74-a4d6-10f2040fb72b",
        "cursor": {
          "ref": "7ff2b7ad-108f-480d-ad6f-bfc61c4b28cb",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "39e25f27-f3aa-4e23-9aa8-78fd7267b62d"
        },
        "item": {
          "id": "d78c2cf7-1423-4b74-a4d6-10f2040fb72b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f41b7a56-1a26-4407-bc40-b494fb24bfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec9fac-a1cd-41a0-b839-6a1ac3ad732d",
        "cursor": {
          "ref": "c64f9a11-d0b7-430a-84b9-c8a4677c0b60",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c9e6136b-b778-46d3-b04c-36387b588eb0"
        },
        "item": {
          "id": "6fec9fac-a1cd-41a0-b839-6a1ac3ad732d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7a8122fd-7fd6-4daf-b861-c4f7a5d26464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9858a0-02d2-461f-926c-05ae0b35bf81",
        "cursor": {
          "ref": "a1846eab-2f0b-4a70-96b7-ff09f09b7cb1",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5cb6a209-fa0f-4ca9-9a88-7d77f4d9a4fb"
        },
        "item": {
          "id": "ee9858a0-02d2-461f-926c-05ae0b35bf81",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4659cdf1-f234-4122-98bd-f7d5b8cb37d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ce092-56d2-4b44-b909-6d488ab32e39",
        "cursor": {
          "ref": "27115aa8-eadd-41c7-b1eb-e18b8511fa70",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6e66852c-7ef5-4138-8330-282d9672c530"
        },
        "item": {
          "id": "b74ce092-56d2-4b44-b909-6d488ab32e39",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1bfcbcc1-67bc-4253-aa72-7ebf2854519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654417b8-b93d-4bd3-927c-5612d11e155d",
        "cursor": {
          "ref": "126a18cf-9beb-4873-85e0-2f24b63b7eeb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "be316fbf-6c5a-48aa-bbff-aa2ccab41865"
        },
        "item": {
          "id": "654417b8-b93d-4bd3-927c-5612d11e155d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bb9249e3-8f88-4a32-b165-47f773597370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f4d5c6-b4ec-4b99-aac0-7a46fa333d12",
        "cursor": {
          "ref": "7764deda-c715-4e9e-833e-e3574ba28841",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "27e47234-a8ff-4590-aeb3-d834cc190d8d"
        },
        "item": {
          "id": "e8f4d5c6-b4ec-4b99-aac0-7a46fa333d12",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "19085365-d476-4be1-93d5-07584fcd7b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ffdcd5-925b-4ee2-aa68-c4cc3ea3448d",
        "cursor": {
          "ref": "04c88227-c3b7-4e37-9ae2-9e389d4be8d3",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "72fca39c-5030-4062-9b89-6c9b96decd51"
        },
        "item": {
          "id": "b7ffdcd5-925b-4ee2-aa68-c4cc3ea3448d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb4a0112-4260-48c8-b92c-17630f9155f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e964f16-4f02-44d8-8352-4004a0b0fa62",
        "cursor": {
          "ref": "c4c74495-22a1-4082-8da8-6a23c91588d2",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "99c7b506-4a03-4b43-a283-74aa5d7a4020"
        },
        "item": {
          "id": "8e964f16-4f02-44d8-8352-4004a0b0fa62",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "47cfdf85-42e4-4302-b8af-8a6a1754ea07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c76084-2461-4f4d-908e-7908f10d4c57",
        "cursor": {
          "ref": "97b78b0d-ddcd-4a77-a685-ec506da5d904",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "283c38b3-1573-4435-b862-cb90827f7c23"
        },
        "item": {
          "id": "70c76084-2461-4f4d-908e-7908f10d4c57",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7d0779ee-daf1-408d-90c5-b7790d7c3e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952dc547-4ba9-4d53-a6bb-30f61f71d8b3",
        "cursor": {
          "ref": "20d1a0a8-22d8-41ec-a1a1-e13daefc846c",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b87e95c6-edd6-4877-bc65-9ef1993bea4e"
        },
        "item": {
          "id": "952dc547-4ba9-4d53-a6bb-30f61f71d8b3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a2a90d65-18b3-4d0f-a6a9-2f89f8b0dbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98115d68-3f97-4c46-94e0-c65f4236cd32",
        "cursor": {
          "ref": "b0425420-66b8-4cb1-b933-115218ce683c",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a4708268-dd47-4317-8c4d-82f8d11511bf"
        },
        "item": {
          "id": "98115d68-3f97-4c46-94e0-c65f4236cd32",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c48d9c7a-81c3-4f1e-b5fd-2f66572179b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008df5cb-6433-46ec-8d40-a2ca5dabfd76",
        "cursor": {
          "ref": "11e3802c-3b09-46b0-b40f-44635a12346d",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "20a66b4e-f26c-40e3-81a1-3086b6ce59d0"
        },
        "item": {
          "id": "008df5cb-6433-46ec-8d40-a2ca5dabfd76",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64e0a8cf-e83c-4974-8a5c-62e835d6e39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c941f-e49d-484f-b0a4-7afae761b9a6",
        "cursor": {
          "ref": "cbf315b7-51cf-4c0d-83d4-a8a2e0a5fa20",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "755b0794-cc10-4568-acb6-6feafbe98642"
        },
        "item": {
          "id": "822c941f-e49d-484f-b0a4-7afae761b9a6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b217a486-b198-4a2f-acc7-87fb7376fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17231fcc-30db-4a22-b1c6-791d022eb2d6",
        "cursor": {
          "ref": "d9b983c9-128e-4c6a-ae38-b18129e0f8ba",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9925be02-d01e-40b6-9efd-30158f43e99d"
        },
        "item": {
          "id": "17231fcc-30db-4a22-b1c6-791d022eb2d6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1bdc47af-8003-41f2-80f9-e809a11d9324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e1cd5b-ea6d-4737-b022-7afa2d91523c",
        "cursor": {
          "ref": "42d83edc-e18f-4429-bbb0-9b1c178cdc3d",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6ecffe5-de41-4c39-b52d-d60abb00202c"
        },
        "item": {
          "id": "55e1cd5b-ea6d-4737-b022-7afa2d91523c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "45a5f0ef-09bb-4732-9a8a-551dbea720d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d240eb4-4a6b-489f-a7eb-68b71c3ac5fe",
        "cursor": {
          "ref": "87914c7a-8a05-4355-9eee-4805ab38b678",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "08c3551f-7199-4ad9-801b-f480ec3de542"
        },
        "item": {
          "id": "5d240eb4-4a6b-489f-a7eb-68b71c3ac5fe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "08ccaf9b-081d-4694-a56c-56b561982cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a441f212-cde2-4f55-b12d-8aac76be797c",
        "cursor": {
          "ref": "7066de63-aede-43e6-9d85-4deb2a42255b",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "47cf851d-500e-45ba-bf49-f08bd42ec99a"
        },
        "item": {
          "id": "a441f212-cde2-4f55-b12d-8aac76be797c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f8d3a299-5c9b-4bce-bc99-b3d971561cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9951ce-337b-46e8-9f3b-b66f0ecfc4a3",
        "cursor": {
          "ref": "08672934-29c0-4e02-9831-0b9618d1236e",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f25b180e-b58b-4fb0-9624-2e371e0ad7d6"
        },
        "item": {
          "id": "ae9951ce-337b-46e8-9f3b-b66f0ecfc4a3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cfc56d40-9ad4-4729-b16b-8a43e6bb2f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ac339-6ea8-489d-a4fb-fde850fce40a",
        "cursor": {
          "ref": "e0814ff8-ad26-49f2-b14f-40c575f6fb90",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3b7f185c-2630-4303-815e-dd1b80ad5155"
        },
        "item": {
          "id": "c69ac339-6ea8-489d-a4fb-fde850fce40a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3db85916-b526-4993-b79c-13cc59458ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb23494-13c8-4f91-9c63-134e0dce196e",
        "cursor": {
          "ref": "75042529-4bf1-4639-b0e8-d83dda841009",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3eece5a4-ce2a-4b0b-9549-fa7ca3b6a6bc"
        },
        "item": {
          "id": "9fb23494-13c8-4f91-9c63-134e0dce196e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b559f37-35cf-4dc0-8103-0676e098f37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772ef193-d1db-490a-bf34-669768820bae",
        "cursor": {
          "ref": "44d89652-8b28-43e3-b58a-d5f12bbdc848",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2e76aad9-235d-4b82-b253-08fdf37afc56"
        },
        "item": {
          "id": "772ef193-d1db-490a-bf34-669768820bae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0bf52e54-77c8-4a8a-912a-e5701e8e9d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b3515-2718-4d27-9132-f4c32401f44c",
        "cursor": {
          "ref": "832d4904-47b3-4f30-97b2-00d7cbf0db0a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fd1e05b8-651a-4802-b46b-9253115d53dd"
        },
        "item": {
          "id": "285b3515-2718-4d27-9132-f4c32401f44c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c9209aaf-f569-4e81-831d-b13fd2c54113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff23f10a-5b83-40dd-8a68-58ad6e6df55e",
        "cursor": {
          "ref": "42228cfd-9e98-44c9-80e0-0d180f36cb4a",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b6bee356-561e-4782-bd99-06106ef4b754"
        },
        "item": {
          "id": "ff23f10a-5b83-40dd-8a68-58ad6e6df55e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "715f051b-3699-4433-afce-6b723add4535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5a72a2-f430-4d53-813f-990530998be9",
        "cursor": {
          "ref": "83ff22e2-a3e4-43ed-af6a-a6f5df086a67",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0f7518cb-77d4-445b-8d6a-caa5c2238659"
        },
        "item": {
          "id": "0d5a72a2-f430-4d53-813f-990530998be9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "84b12694-85e8-43e9-9d31-d3fa52ce7572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab7ae55-6875-4fac-afc1-46a4b3687ec2",
        "cursor": {
          "ref": "e016711f-48df-424b-85e1-67b755e81d15",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f38b0a03-a5f1-4037-a44f-4df2d0083f37"
        },
        "item": {
          "id": "dab7ae55-6875-4fac-afc1-46a4b3687ec2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3df189d3-7d72-44a9-8066-9ef3ec2d744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ebdd4c-2286-4834-a9cb-1288d2e4e714",
        "cursor": {
          "ref": "ef74f58a-6657-4d98-bcd1-4cb78d74d1f7",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b412eedb-ba39-44ac-9f71-5d485b36f27e"
        },
        "item": {
          "id": "14ebdd4c-2286-4834-a9cb-1288d2e4e714",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fd558de7-5681-4be5-be03-90454b0f646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7079ea-b72d-4b4f-8de6-b651a5ba9e21",
        "cursor": {
          "ref": "be40dad0-579f-493d-bda3-21129d734b0c",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4f3c0171-c744-47d9-9795-8b2de1e607ee"
        },
        "item": {
          "id": "9c7079ea-b72d-4b4f-8de6-b651a5ba9e21",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6409a3b2-e9d9-4567-b8bf-fa0b59406fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3393aafc-1c68-4ae7-ab7e-c58ecfee0a10",
        "cursor": {
          "ref": "e1ea31ea-c221-49b4-b00f-72a769e31dac",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "48c019f9-6acf-4017-8942-be7d10531c8e"
        },
        "item": {
          "id": "3393aafc-1c68-4ae7-ab7e-c58ecfee0a10",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "88306c8a-3550-4a77-8cbf-1f62796f8348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a517a7-2578-45af-950b-da9f4a111312",
        "cursor": {
          "ref": "4c6e7a8a-8b40-415b-ad7b-d95dffe563ad",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24d83a28-5501-4cc8-91d7-9209dc1286b1"
        },
        "item": {
          "id": "f5a517a7-2578-45af-950b-da9f4a111312",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85bca354-2395-4206-a718-2fadee036ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46abd2e-b659-4593-8163-b27c8ed6a8dd",
        "cursor": {
          "ref": "13abd8dc-f181-467b-abc9-587b039d7968",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "201a0bff-3731-41a3-9a79-1e1129cfcd53"
        },
        "item": {
          "id": "a46abd2e-b659-4593-8163-b27c8ed6a8dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0565e574-ed83-4365-aabf-b655263a452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38999dc-c1fe-46a1-b56a-44f972a58b5c",
        "cursor": {
          "ref": "6a5f9602-e405-4279-9efa-a42fba8cf050",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2cf8380e-1540-4c10-8007-686faedb1e01"
        },
        "item": {
          "id": "d38999dc-c1fe-46a1-b56a-44f972a58b5c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "78398313-f6e1-4ff9-8115-1ba571726701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3724460-08f4-48be-a95f-05813450689f",
        "cursor": {
          "ref": "4db004c5-3170-4aca-b7c6-da44a42f22f2",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e0090a67-7f5f-4e6d-9025-4d006d5aa2fb"
        },
        "item": {
          "id": "a3724460-08f4-48be-a95f-05813450689f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7391702f-0ebb-405f-a74f-cf8fc7f6aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b387d2a-fcf0-47b1-bec4-3eff165d32bc",
        "cursor": {
          "ref": "3804acdb-9b2f-4bb5-8b8a-59f5aed8b5a5",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9732880c-7fd1-4970-866c-47f529e081d1"
        },
        "item": {
          "id": "0b387d2a-fcf0-47b1-bec4-3eff165d32bc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cbaa5eca-647c-47ae-8b97-5a44c0028a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194c170e-0fef-407b-b6ca-8580acd8d3f9",
        "cursor": {
          "ref": "a36809e8-b951-483a-91f6-70ed29d2b19c",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04b62dd3-533c-4886-a014-591fb98c2446"
        },
        "item": {
          "id": "194c170e-0fef-407b-b6ca-8580acd8d3f9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "37b39b85-d844-4d60-90e9-883a84c2bbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89ea8d3-b377-48fd-ac8f-7cf42ef51301",
        "cursor": {
          "ref": "876b5790-5178-440d-86c8-3a0fe20c60bf",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "08a139a8-5ae3-48cd-9c9b-e8360caa3249"
        },
        "item": {
          "id": "a89ea8d3-b377-48fd-ac8f-7cf42ef51301",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "97e137d4-1f8d-45db-b9fb-c53237e3c053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bce566d-e5be-4205-8504-793a389dcfd2",
        "cursor": {
          "ref": "edd0e75c-6ee0-4da5-988a-65630ae059ec",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d171581b-57df-4369-be23-1d90c5ae878e"
        },
        "item": {
          "id": "3bce566d-e5be-4205-8504-793a389dcfd2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "99d0eec2-5624-411e-8622-d05f8ca3a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eca848-928e-40fd-adf7-ea3b06a3a04b",
        "cursor": {
          "ref": "43b90225-f1ba-4197-ac71-afa712d920e9",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d8e1510f-0556-469c-94ba-d9018c904be7"
        },
        "item": {
          "id": "58eca848-928e-40fd-adf7-ea3b06a3a04b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "09d264ba-62d9-422b-9c47-d5f35ffe2b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2b8590-8bae-4f7b-919f-719a2e8e0c56",
        "cursor": {
          "ref": "ebb1a549-b212-4542-884e-03a16b6ac440",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5080e695-66d4-4740-876c-4a2af2c38aca"
        },
        "item": {
          "id": "0a2b8590-8bae-4f7b-919f-719a2e8e0c56",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dac28e67-48c9-4d31-b0b3-4646823c9180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4d84bb-afef-43ab-946b-f261450ad3ff",
        "cursor": {
          "ref": "56bf6536-2a47-47ff-804a-6d573929f453",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7739c99a-706e-49f4-a142-61c477a8013c"
        },
        "item": {
          "id": "9c4d84bb-afef-43ab-946b-f261450ad3ff",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "43016533-6fbc-42c7-9165-69a29220379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca9b83f-d503-48a4-9aed-dbc356def431",
        "cursor": {
          "ref": "a1b94afd-f464-42a5-8661-6fa48c4a791a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a8456492-6d92-4c54-ac8b-8482f6ff5a43"
        },
        "item": {
          "id": "fca9b83f-d503-48a4-9aed-dbc356def431",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e32acc24-9fe2-452d-a94f-53cabd62b793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2704b8-a4e6-4ea8-bcca-eecb46388c48",
        "cursor": {
          "ref": "23adec3a-b24c-4f1a-8e70-d6b8ac82f333",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "884f1646-b29a-47d6-b038-3c58421f0480"
        },
        "item": {
          "id": "4f2704b8-a4e6-4ea8-bcca-eecb46388c48",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3d8371fe-6f97-420a-8899-e7411853bcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b5deb1-e2a2-4a26-b687-5b82973e4336",
        "cursor": {
          "ref": "98ff1b23-541b-43a2-a5e2-4c7f42fe5d06",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6726a07f-0bb8-4360-a893-12276cf5b5de"
        },
        "item": {
          "id": "d1b5deb1-e2a2-4a26-b687-5b82973e4336",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2c9a9866-1dc4-40e9-8544-921fed06b068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf01890-bb28-40bf-aa22-3148f38ddb9e",
        "cursor": {
          "ref": "b3d9cc83-183e-4446-86f3-1431d9a5ebd6",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "04878283-2166-4168-a350-a3e6e11dad13"
        },
        "item": {
          "id": "9cf01890-bb28-40bf-aa22-3148f38ddb9e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "48b61f2d-bf8c-4307-81e1-ce9d579789ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3998bc86-2507-4d3a-8146-c2c9c349f923",
        "cursor": {
          "ref": "ed3f399d-29d1-4c61-86b5-36ee2ac2daad",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "689eaf06-50b4-4028-b94a-db91222ebeb6"
        },
        "item": {
          "id": "3998bc86-2507-4d3a-8146-c2c9c349f923",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "52e26480-5c81-440b-a683-68b2e9047c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8040bb0a-4009-4ece-9c47-2e12a5ea702d",
        "cursor": {
          "ref": "26d723d8-eb3d-41e0-b737-7893109e2d46",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7d4a2eb7-c66e-4fea-a684-e6ee3b5bdf5e"
        },
        "item": {
          "id": "8040bb0a-4009-4ece-9c47-2e12a5ea702d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8d083e78-8cd8-45c1-8299-d9e5060e65af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6459bb-04cd-4502-9cb6-4403d94b9fbb",
        "cursor": {
          "ref": "1bab98ad-b788-4fc4-a88a-93ca89514141",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7e589fb2-7a8e-487c-bcea-9a6b77fe6c13"
        },
        "item": {
          "id": "ca6459bb-04cd-4502-9cb6-4403d94b9fbb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "88cfcc60-7d1d-4182-9016-3c5a34a43a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54f7fc0-2c0d-4285-ae64-a9d9cf62c9eb",
        "cursor": {
          "ref": "31c08ace-1f7e-486b-b98f-2bd82ca003ad",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e43abcc4-f9b4-48dd-9da5-7d840a6c908d"
        },
        "item": {
          "id": "d54f7fc0-2c0d-4285-ae64-a9d9cf62c9eb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3cf2e96-c43c-4860-a7a6-34058b39b70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a1b4f-3f8b-47fc-aa74-3b654b99d8e1",
        "cursor": {
          "ref": "a02c5d58-b160-4763-b11d-5eb023208553",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a46a242c-5af9-47c6-924c-403434f13fa7"
        },
        "item": {
          "id": "ea8a1b4f-3f8b-47fc-aa74-3b654b99d8e1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0f181f3-3c45-46aa-9341-7d88ed3229d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759f7dac-8539-4992-86b6-edef110b4dc7",
        "cursor": {
          "ref": "9479e4e7-1eae-4151-8418-9693070b57fe",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bc550f72-615a-45a6-b682-50e7882bc5b5"
        },
        "item": {
          "id": "759f7dac-8539-4992-86b6-edef110b4dc7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09e42f6c-2c3f-4503-ac2c-ef7a7af4918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d1db0f-ea38-4678-a707-7845c9636b9b",
        "cursor": {
          "ref": "c87d9d50-15d2-4127-82a1-fb991e7e1247",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b32a9d2c-939e-4f18-b59e-1c5f9ab682d1"
        },
        "item": {
          "id": "91d1db0f-ea38-4678-a707-7845c9636b9b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9c8c3634-45bc-4d23-9483-8e5e7752c280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d378c07-2677-4537-bb49-b51ff19be912",
        "cursor": {
          "ref": "484854a8-1094-4edf-a806-c6c280664e31",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "433a36c5-c22d-4a40-8b37-bcc05005bb09"
        },
        "item": {
          "id": "9d378c07-2677-4537-bb49-b51ff19be912",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b243c5a-7d8e-421b-bbc8-6d4227a90b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab73fb1-6b84-42cf-84c8-5747b32cfa07",
        "cursor": {
          "ref": "b9036d9a-a7ea-4038-827e-61a81e7356a0",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f5cfd35-fddc-4e54-99ae-19a4fee5be78"
        },
        "item": {
          "id": "7ab73fb1-6b84-42cf-84c8-5747b32cfa07",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "11012e64-95f6-4a2c-9117-0849725c02ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5250c31-7aa5-45e7-922f-a943e5b16198",
        "cursor": {
          "ref": "6950463e-c1ba-418d-9955-90430c095baf",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "55d756d2-d263-4ea5-9a4e-298a4d9451a4"
        },
        "item": {
          "id": "b5250c31-7aa5-45e7-922f-a943e5b16198",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fdbf673b-bd25-4255-b8d7-11ed1ceaaff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2023273-0138-4071-b7e3-6052c565339c",
        "cursor": {
          "ref": "70b103ad-9239-4d7d-b2cf-25c4258157a3",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "117ce86e-8089-46c0-a46e-60bdfb5911f3"
        },
        "item": {
          "id": "f2023273-0138-4071-b7e3-6052c565339c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "199e775c-6271-4846-b10b-b79ad7f8987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a86bed-59d1-4de5-bda0-75a1fb0eea2b",
        "cursor": {
          "ref": "4942d9ee-135d-43a4-b503-566c2bde978f",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "133a7e2a-d83a-46b8-ad6f-7d69abe2c0e4"
        },
        "item": {
          "id": "19a86bed-59d1-4de5-bda0-75a1fb0eea2b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ff74f29c-d469-45ab-b98a-fe86559fd6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ab47a4-bc7b-4741-9393-e610ff33c92c",
        "cursor": {
          "ref": "60828085-5b8c-4443-8720-e13ddc95881b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c089cf50-9fee-4973-9677-03faf968b9bd"
        },
        "item": {
          "id": "87ab47a4-bc7b-4741-9393-e610ff33c92c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62f3e17d-1384-4cd2-8d89-fc213a0a43ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9184dca-f631-4b90-b7a8-a33226684c99",
        "cursor": {
          "ref": "7bf35cf7-5016-472a-9c8f-a510e41b5fd4",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d5fb994-f294-4cc7-b087-0e871bdd2e02"
        },
        "item": {
          "id": "d9184dca-f631-4b90-b7a8-a33226684c99",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ac52c98a-46b4-4fd3-89b4-30c86f40fad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce36cd57-044c-43ec-b534-b8a361aef739",
        "cursor": {
          "ref": "3ab5cf45-8dbe-446f-90d4-a30fe8b59c6a",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "86f63cbb-c138-48c7-b075-2e083f422de7"
        },
        "item": {
          "id": "ce36cd57-044c-43ec-b534-b8a361aef739",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3a9f6758-02c6-49b5-b1b7-2f9ee96dd73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3296e612-ac4e-46ad-9014-04f69dd11d02",
        "cursor": {
          "ref": "305dbee1-0e8c-4485-b030-c38a680b9f17",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8c2b4995-77e3-4127-9eb2-b7a1924a2a73"
        },
        "item": {
          "id": "3296e612-ac4e-46ad-9014-04f69dd11d02",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7bdc51a8-6b33-444f-ac11-9ebab1cb9ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ef341-a744-4b3d-b6fc-24882aff7ae7",
        "cursor": {
          "ref": "26217de8-6619-43d4-a865-13d3b9c91f57",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cf5aa82b-b47e-4c24-b31a-6c64e6cc1f0a"
        },
        "item": {
          "id": "6e3ef341-a744-4b3d-b6fc-24882aff7ae7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8d089b99-2921-454f-8179-f0f1df708f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e97781d-8f86-44a6-8c5d-c689a269a848",
        "cursor": {
          "ref": "d2483754-e932-43c9-807e-ed4045c563c6",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ccf060b5-95eb-4631-9308-f6b25bddab64"
        },
        "item": {
          "id": "9e97781d-8f86-44a6-8c5d-c689a269a848",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8f038ea3-11f7-4a57-aaf8-f885bd75591c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f2742c-fe66-4e98-96b1-08fa09f4df89",
        "cursor": {
          "ref": "84b36438-0330-435b-8fc6-92263a9fd577",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26d0eee3-16ba-40ef-87cf-c1f24f92e3b5"
        },
        "item": {
          "id": "11f2742c-fe66-4e98-96b1-08fa09f4df89",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c8dc52d8-dfb3-4849-8172-67357797eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c33ecca-f9bd-4e1a-b8a7-de3692a86e53",
        "cursor": {
          "ref": "4e932b1a-c91f-4b43-a4a1-be2b2821e01b",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1b67f13-48b6-473e-b15f-92f6bd4ec499"
        },
        "item": {
          "id": "2c33ecca-f9bd-4e1a-b8a7-de3692a86e53",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f41155eb-d5af-4fdf-859c-1cfa7f2be3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec63529-cf1f-4670-ae0f-44014194338c",
        "cursor": {
          "ref": "2f3e5568-35d6-4a21-8753-d92f49a1f8ff",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ff9f81be-fa42-41cc-9ccf-a71e47473d22"
        },
        "item": {
          "id": "4ec63529-cf1f-4670-ae0f-44014194338c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fba208c1-9d8b-4533-8479-6a50e0a70809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a531fdc-aae4-4298-9b17-68e885c0438e",
        "cursor": {
          "ref": "afe00e5c-1d61-444a-b256-242f34d3611b",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a1cbb21e-5532-4dd6-be8a-c903884f6d7d"
        },
        "item": {
          "id": "8a531fdc-aae4-4298-9b17-68e885c0438e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fbbbaf04-4c0f-49c4-a0dd-061c0a31515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca15ece-3214-48e1-bca3-da4528567bd9",
        "cursor": {
          "ref": "d33892a6-274c-4e26-9a05-7334a16c1df2",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a016d22e-8aac-476d-8999-20b66536a879"
        },
        "item": {
          "id": "fca15ece-3214-48e1-bca3-da4528567bd9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6ce2e9ba-324a-4464-b028-63798ac29db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d96b7-a452-445f-ba98-cddf424590bb",
        "cursor": {
          "ref": "4a7844bd-0ae2-400b-8516-605a25bea0e9",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d4ac72f8-1ba2-489d-90c6-0347fbba69f9"
        },
        "item": {
          "id": "4f3d96b7-a452-445f-ba98-cddf424590bb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bcd6d043-77e4-423a-b84f-c4b923699b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfdaa13-bb1a-4552-938f-46aaf73cdbca",
        "cursor": {
          "ref": "07d9a429-0e1f-47e0-b394-06c59e0c796e",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fc216482-5726-40a9-9132-7dd13447659d"
        },
        "item": {
          "id": "2cfdaa13-bb1a-4552-938f-46aaf73cdbca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6afc8b7-601f-41a9-9553-262e4bd40e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfa87d1-5ade-4bee-a1a1-42d07fc96a44",
        "cursor": {
          "ref": "de291f9a-e49b-48db-83ce-f4b31e95a9f1",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e700ed4b-c132-44bf-ac2a-6254a4a27d7a"
        },
        "item": {
          "id": "4dfa87d1-5ade-4bee-a1a1-42d07fc96a44",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "da99a345-4b3a-4ef5-8bbd-bcb1c49cdb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27e379-90d6-4460-865e-8313a07c9907",
        "cursor": {
          "ref": "54363b48-4b65-467a-83e9-875064502768",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6eb1c900-91b6-4b3b-8159-a680ecd23841"
        },
        "item": {
          "id": "1b27e379-90d6-4460-865e-8313a07c9907",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26798baf-1ef2-46a5-8811-f96a7f508e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5cfd15-c8cf-403b-acc2-e7cc77eda4b7",
        "cursor": {
          "ref": "f8df315d-a633-40f0-93ba-d15aaf2d7e7c",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "13281bae-9225-44c6-a421-4f8099f795fd"
        },
        "item": {
          "id": "7e5cfd15-c8cf-403b-acc2-e7cc77eda4b7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "39c9feba-1a6e-4eca-a91c-2a193bbebd1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae69de94-92c0-4da0-8569-a9a09d5d2d80",
        "cursor": {
          "ref": "aae42fa4-df66-461b-91b4-6b52d3efb2ae",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f6393a00-bb83-417b-8bf0-500ba143a1af"
        },
        "item": {
          "id": "ae69de94-92c0-4da0-8569-a9a09d5d2d80",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9501e3ad-bc37-4406-ae6d-eef856b78b72",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 286,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6992b0-e40c-4af2-aa9e-49402b7fbe6c",
        "cursor": {
          "ref": "a78f0ede-925d-405b-8ca8-6fbbb077f739",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f6282b34-dd6b-4dce-a7b8-9a7e3b92ce7f"
        },
        "item": {
          "id": "de6992b0-e40c-4af2-aa9e-49402b7fbe6c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dd282271-0442-4226-a7a6-09252e1bc686",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7197e280-e2da-466b-99af-61a78501542a",
        "cursor": {
          "ref": "699189b2-2219-4af9-bb7f-4f71010962bb",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b52fde4c-5813-4b0c-ad68-c6101379bb47"
        },
        "item": {
          "id": "7197e280-e2da-466b-99af-61a78501542a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "40aa99e1-b7ab-409b-abf3-8d3b3e4931b6",
          "status": "OK",
          "code": 200,
          "responseTime": 3425,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aab4ec2-2cac-4532-92d3-90de07ae8829",
        "cursor": {
          "ref": "0800ffe3-2723-4979-a4bf-1b6170d714f7",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2175e615-e296-40a1-9c3f-666805c9b8e5"
        },
        "item": {
          "id": "5aab4ec2-2cac-4532-92d3-90de07ae8829",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5da73c01-9d08-4b2b-a329-e9c40c2eeaef",
          "status": "OK",
          "code": 200,
          "responseTime": 3282,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
        "cursor": {
          "ref": "68c06c9f-ec7d-43ee-950c-3311bbb54aa0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e60cf76c-f3aa-4881-a9f4-add0a392b60b"
        },
        "item": {
          "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c9c494f-1c06-46c7-ba54-abaaa9dd68a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
        "cursor": {
          "ref": "68c06c9f-ec7d-43ee-950c-3311bbb54aa0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e60cf76c-f3aa-4881-a9f4-add0a392b60b"
        },
        "item": {
          "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c9c494f-1c06-46c7-ba54-abaaa9dd68a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
        "cursor": {
          "ref": "68c06c9f-ec7d-43ee-950c-3311bbb54aa0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e60cf76c-f3aa-4881-a9f4-add0a392b60b"
        },
        "item": {
          "id": "46fdcf9d-fa59-41d1-8562-dea499f265dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5c9c494f-1c06-46c7-ba54-abaaa9dd68a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef35f2-6a1e-4440-ba7e-b1969bd93e36",
        "cursor": {
          "ref": "f6b49d3b-c75c-4b25-a4e5-f35f4c284a10",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ccd89f7b-f552-4648-aa15-6f769e202dca"
        },
        "item": {
          "id": "39ef35f2-6a1e-4440-ba7e-b1969bd93e36",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6b88a54b-72e5-4d85-9984-5f9ad300d0e4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 279,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9fdbbf-f81e-4f8a-95f3-a70d75fd9569",
        "cursor": {
          "ref": "544287ab-4c48-4223-8874-30b4e1306d22",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c00f424a-7212-4b4a-b6cb-1812309f4484"
        },
        "item": {
          "id": "3e9fdbbf-f81e-4f8a-95f3-a70d75fd9569",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5557bbc3-0168-4579-95e6-3e4147f9c2d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9fdbbf-f81e-4f8a-95f3-a70d75fd9569",
        "cursor": {
          "ref": "544287ab-4c48-4223-8874-30b4e1306d22",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c00f424a-7212-4b4a-b6cb-1812309f4484"
        },
        "item": {
          "id": "3e9fdbbf-f81e-4f8a-95f3-a70d75fd9569",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5557bbc3-0168-4579-95e6-3e4147f9c2d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e021cf-1503-4198-93e4-ccd51b8a53d6",
        "cursor": {
          "ref": "c4ca1629-e7db-41d3-b7dd-3ac58824b890",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5f25c284-5aac-45d6-82d8-73de782c7048"
        },
        "item": {
          "id": "25e021cf-1503-4198-93e4-ccd51b8a53d6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "09371825-9a35-47e9-b72a-7354abb0b24d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7159fd26-d788-4e72-83b9-2a1f0c7a1d98",
        "cursor": {
          "ref": "77657a31-0ef9-4a39-9fed-5f34f32e7741",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e88564f6-a801-4b7c-b431-84e1dde0b30b"
        },
        "item": {
          "id": "7159fd26-d788-4e72-83b9-2a1f0c7a1d98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66a443bd-1855-44da-89ae-a529ad10f940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7159fd26-d788-4e72-83b9-2a1f0c7a1d98",
        "cursor": {
          "ref": "77657a31-0ef9-4a39-9fed-5f34f32e7741",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e88564f6-a801-4b7c-b431-84e1dde0b30b"
        },
        "item": {
          "id": "7159fd26-d788-4e72-83b9-2a1f0c7a1d98",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66a443bd-1855-44da-89ae-a529ad10f940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b8357e-94fa-4e24-9e47-b01c8fd17232",
        "cursor": {
          "ref": "002283a8-9495-477e-8423-44a5c0126717",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "238db5f0-0f0e-46df-b13e-025df136cffb"
        },
        "item": {
          "id": "24b8357e-94fa-4e24-9e47-b01c8fd17232",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3e7a7320-bc84-430a-a13d-1fb419029552",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 494,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}